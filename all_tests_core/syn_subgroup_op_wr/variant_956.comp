#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))))) ^ ((subgroup_local_id) | (subgroup_local_id))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)) - 0.0))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 38:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       mat2(-95.91, 802.164, -891.906, 368.874);
       case 0:
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 1)), max(int(ivec3(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 1)), int(ivec3(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), 0, 1)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       case 84:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       subgroupAll(true);
       break;
       case 65:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       {
        if(true)
         {
          for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
           {
            for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            mat2(-2.4, -0.2, 707.980, -879.970);
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
           {
            do
             {
              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  bvec2(true, true);
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_DEAD(false))
           barrier();
          while(_GLF_IDENTITY((bvec3(true, false, false) == bvec3(_GLF_IDENTITY(true, true && (true)), false, false)), _GLF_IDENTITY(true, false || (true)) && ((bvec3(true, false, false) == bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
             {
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             barrier();
            vec4 _GLF_SWITCH_0_0v[88], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
            _GLF_IDENTITY(uintBitsToFloat(uvec2(3793u, 52856u)), (uintBitsToFloat(uvec2(3793u, 52856u))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
            uvec2(137413u, 93068u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               barrier();
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
               break;
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    return;
                   }
                  for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), 1 * (_GLF_IDENTITY(1, int(int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    else
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  ;
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               break;
             }
            if(_GLF_DEAD(false))
             continue;
            mat3x2 _GLF_SWITCH_0_3v[25], _GLF_SWITCH_0_4v;
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))))))
             return;
            mat2x3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[70], _GLF_SWITCH_0_7v;
            do
             {
              _GLF_IDENTITY((vec4(-4.3, 2188.7133, -867.108, 542.262) == _GLF_SWITCH_0_2v), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((vec4(-4.3, 2188.7133, -867.108, 542.262) == _GLF_SWITCH_0_2v), ((vec4(-4.3, 2188.7133, -867.108, 542.262) == _GLF_SWITCH_0_2v)) || false), bool(bool((vec4(-4.3, 2188.7133, -867.108, 542.262) == _GLF_SWITCH_0_2v)))))));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
             }
           }
          if(_GLF_DEAD(false))
           barrier();
         }
        ivec3 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << int(_GLF_ZERO(0.0, injectionSwitch.x))))
         {
          _GLF_SWITCH_0_9v;
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(false))
         barrier();
        mat2x3 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
        if(_GLF_DEAD(false))
         barrier();
        do
         {
          if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bool(false)), false, true, true))), ! (! (_GLF_IDENTITY(! (bool(bvec4(bool(bool(false)), false, true, true))), false || (! (bool(bvec4(bool(bool(false)), false, true, true))))))))))))))
           barrier();
         }
        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        do
         {
          if(_GLF_DEAD(false))
           barrier();
         }
        while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
        for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(2)))); _injected_loop_counter --)
         {
          while(true)
           {
            if(_GLF_DEAD(false))
             barrier();
            bvec4(false, false, true, true);
            atan(vec2(-5.1, _GLF_IDENTITY(-422.502, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -422.502 : _GLF_FUZZED((654.898 / pow(-3697.0283, -791.338)))))));
           }
         }
        do
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        while(_GLF_WRAPPED_LOOP(false));
        for(        mat2(50.82, 9.4, -8.3, -4.3);
 (mat2(determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(3593.6551, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(3593.6551, mix(float(_GLF_FUZZED(-3421.2125)), float(_GLF_IDENTITY(3593.6551, max(3593.6551, 3593.6551))), bool(true))), abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.82)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-14.82)), float(mat3x2(float(_GLF_FUZZED(-14.82)), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-14.82)), float(mat3x2(float(_GLF_FUZZED(-14.82)), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-14.82)), float(mat3x2(float(_GLF_FUZZED(-14.82)), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0)), float(mat2(_GLF_IDENTITY(float(_GLF_FUZZED(-14.82)), float(mat3x2(float(_GLF_FUZZED(-14.82)), 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0))))), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))) - 0.0)), (true ? mat3x4(3593.6551, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-8.8, 6069.1180, -7.4, -7.9, _GLF_IDENTITY(4.6, max(4.6, 4.6)), -1575.4139, -0.5, 670.808, -109.553, -5.4, _GLF_IDENTITY(-27.07, _GLF_IDENTITY((-27.07) - 0.0, min(_GLF_IDENTITY(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), max(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), float(vec2(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), 0.0))))), _GLF_IDENTITY((-27.07) - _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5681.2977) : 0.0)), clamp((-27.07) - 0.0, (-27.07) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat2x4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), (-27.07) - 0.0))))), 2803.0816))))))))), -204.854, -3.3, -4450.8509), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(3593.6551, float(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))) - 0.0), 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(0.0))), min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.7), min(_GLF_FUZZED(-7.7), _GLF_FUZZED(-7.7))) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0))), bool(true))))) - 0.0)))), (true ? mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-8.8, _GLF_IDENTITY(6069.1180, float(mat4x2(6069.1180, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), -7.4, -7.9, 4.6, -1575.4139, -0.5, 670.808, -109.553, -5.4, _GLF_IDENTITY(-27.07, _GLF_IDENTITY((-27.07) - 0.0, min(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), sqrt(1.0), 0.0))), _GLF_IDENTITY((-27.07) - 0.0, clamp((-27.07) - 0.0, (-27.07) - 0.0, (-27.07) - 0.0))))), 2803.0816))))))))), -204.854, -3.3, -4450.8509), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(3593.6551, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))), mix(float(_GLF_FUZZED(vec3(-34.21, -56.51, 8043.5423).y)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))), ((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true)))))) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)), (true ? mat3x4(3593.6551, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec2(-8.6, 5.0).r / -351.520))), float(0.0), bool(true))), 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-8.8, 6069.1180, -7.4, -7.9, 4.6, -1575.4139, -0.5, 670.808, -109.553, -5.4, _GLF_IDENTITY(-27.07, _GLF_IDENTITY((-27.07) - 0.0, min(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), sqrt(1.0), 0.0))), _GLF_IDENTITY((-27.07) - 0.0, clamp((-27.07) - 0.0, (-27.07) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(75.53))), 0.0)), (-27.07) - 0.0))))), 2803.0816)))))))), min(float(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))), mix(float(_GLF_FUZZED(vec3(-34.21, -56.51, 8043.5423).y)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))), ((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true)))))) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)), (true ? mat3x4(3593.6551, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec2(-8.6, 5.0).r / -351.520))), float(0.0), bool(true))), 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-8.8, 6069.1180, -7.4, -7.9, 4.6, -1575.4139, -0.5, 670.808, -109.553, -5.4, _GLF_IDENTITY(-27.07, _GLF_IDENTITY((-27.07) - 0.0, min(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), sqrt(1.0), 0.0))), _GLF_IDENTITY((-27.07) - 0.0, clamp((-27.07) - 0.0, (-27.07) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(75.53))), 0.0)), (-27.07) - 0.0))))), 2803.0816)))))))), float(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))), mix(float(_GLF_FUZZED(vec3(-34.21, -56.51, 8043.5423).y)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true))))), ((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), bool(true)))))) + 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - 0.0)), (true ? mat3x4(3593.6551, abs(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec2(-8.6, 5.0).r / -351.520))), float(0.0), bool(true))), 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-8.8, 6069.1180, -7.4, -7.9, 4.6, -1575.4139, -0.5, 670.808, -109.553, -5.4, _GLF_IDENTITY(-27.07, _GLF_IDENTITY((-27.07) - 0.0, min(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x), sqrt(1.0), 0.0))), _GLF_IDENTITY((-27.07) - 0.0, clamp((-27.07) - 0.0, (-27.07) - _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(75.53))), 0.0)), (-27.07) - 0.0))))), 2803.0816))))))))))), -204.854, -3.3, -4450.8509)), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (transpose(mat2(_GLF_IDENTITY(3593.6551, float(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(_GLF_IDENTITY(mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-38.82)), bool(false)))))))), _GLF_IDENTITY(bool(true), (bool(true)) && true))))), ((_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.7) : 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-14.82)), float(float(mat4x3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.8) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-38.82)), bool(false)))))))), _GLF_IDENTITY(bool(true), (bool(true)) && true)))))) - 0.0) - 0.0)), (true ? mat3x4(3593.6551, abs(0.0), 0.0, 1.0, tan(0.0), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-8.8, 6069.1180, -7.4, _GLF_IDENTITY(-7.9, (-7.9) - log(1.0)), 4.6, -1575.4139, -0.5, 670.808, -109.553, -5.4, _GLF_IDENTITY(-27.07, _GLF_IDENTITY((-27.07) - 0.0, min(_GLF_IDENTITY((-27.07) - 0.0, float(mat2x3((-27.07) - 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0))), _GLF_IDENTITY((-27.07) - 0.0, clamp(_GLF_IDENTITY((-27.07) - 0.0, (_GLF_IDENTITY((-27.07) - 0.0, (_GLF_IDENTITY((-27.07) - 0.0, ((-27.07) - 0.0) - 0.0)) * 1.0)) / 1.0), (-27.07) - 0.0, (-27.07) - 0.0))))), 2803.0816))))))))), -204.854, -3.3, -4450.8509))))))) + _GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-9.3)), bool(false))))), 0.0), (true ? _GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-9.3)), bool(false))))), 0.0), (mat2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-9.3)), bool(false))))), 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(-1240.9412, 5.5, -3.1, 5924.7790))))))) == mat2(-796.520, -958.619, -82.67, 53.67)); isinf(vec2(9.3, 577.756)))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          while(false)
           {
            (uvec2(47125u, 133320u) >> (subgroup_id << workgroup_id));
            mat3(_GLF_IDENTITY(-2124.9310, (false ? _GLF_FUZZED(length(5.8)) : -2124.9310)), 8.2, _GLF_IDENTITY(563.545, (563.545) - 0.0), -516.827, -9.2, 643.160, -2.7, -68.53, 7.3);
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             barrier();
            (bvec2(false, true));
            if(_GLF_DEAD(false))
             barrier();
           }
          -218.018;
          if(_GLF_DEAD(false))
           break;
         }
        bitfieldInsert((ivec2(22094, _GLF_IDENTITY(-82736, _GLF_IDENTITY(0 ^ (-82736), (0 ^ (-82736)) | (0 ^ (-82736))))) - _GLF_IDENTITY(ivec2(-84652, -64457), (ivec2(-84652, -64457)) << _GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(0, 0))) << ivec2(0, 0)))), ivec2(-88565, 30140), -11419, -45022);
        mat4x3(3.6, 2.5, -1.3, 6.8, -49.31, 4788.6485, 6.1, 8.1, 4.2, 2303.1690, -6.6, -255.540);
       }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 32:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       for(       (mat4(-40.91, 435.643, -768.817, -7.8, 8.5, -15.99, -13.72, _GLF_IDENTITY(-1642.8153, 1.0 * (-1642.8153)), -80.25, 14.69, 7.8, _GLF_IDENTITY(_GLF_IDENTITY(323.321, float(vec4(_GLF_IDENTITY(323.321, (true ? 323.321 : _GLF_FUZZED(5.5))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-47.33))), 0.0), vec4(vec4(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-47.33))), 0.0), (vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-47.33))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))))))), mix(float(_GLF_FUZZED(6.6)), float(323.321), bool(true))), _GLF_IDENTITY(-301.235, (-301.235) * _GLF_ONE(1.0, injectionSwitch.y)), 7.9, -80.12, 5.7));
 (mat2x4(-7.8, 1.2, 8.9, 7.6, 0.6, -2.8, 20.60, -219.773) != mat2x4(mat3x4(799.001, -402.818, -9736.3171, 8.5, -425.420, _GLF_IDENTITY(-1.2, mix(float(_GLF_FUZZED(8.7)), float(-1.2), bool(true))), 18.38, 5.1, 7.3, 23.74, 7.8, -8136.9879))); _GLF_IDENTITY(-24426, _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-30344) : _GLF_IDENTITY(0, ~ (~ (0))))) | _GLF_IDENTITY((_GLF_IDENTITY(-24426, clamp(-24426, -24426, -24426))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(-24426, clamp(-24426, -24426, -24426))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(-24426, clamp(-24426, -24426, -24426))) : _GLF_FUZZED(-60109))) : _GLF_FUZZED(69380)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         uint _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[88];
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    return;
                   }
                  else
                   {
                   }
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  barrier();
                 }
               }
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))), true, true);
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
            for(mat3x2 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v[94]; false; bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                _GLF_IDENTITY(mod(vec2(6545.0692, 628.831), -28.27), min(mod(vec2(6545.0692, 628.831), -28.27), mod(vec2(6545.0692, 628.831), -28.27)));
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              uvec2 _GLF_SWITCH_0_18v[12], _GLF_SWITCH_0_19v;
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                true;
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
               }
             }
           }
          if(_GLF_DEAD(false))
           barrier();
         }
         for(int _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v; (true != true); (+ mat4(mat2x3(3784.6358, -5.2, -3841.2279, _GLF_IDENTITY(_GLF_IDENTITY(4.4, min(4.4, 4.4)), (4.4) + 0.0), -1.2, _GLF_IDENTITY(-292.563, max(-292.563, -292.563))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), clamp(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             mat3x4(transpose(mat3x2(736.988, 9.7, -700.289, 750.983, _GLF_IDENTITY(4.9, (_GLF_IDENTITY(_GLF_IDENTITY(4.9, (4.9) + 0.0), _GLF_IDENTITY((4.9), min((4.9), _GLF_IDENTITY((4.9), _GLF_IDENTITY(0.0, max(0.0, 0.0)) + ((4.9))))) - 0.0)) * 1.0), -0.8)));
            }
           mat3x2(-22.72, 8.1, 3.8, _GLF_IDENTITY(29.15, max(29.15, _GLF_IDENTITY(29.15, clamp(29.15, 29.15, 29.15)))), _GLF_IDENTITY(-12.32, mix(float(-12.32), float(_GLF_FUZZED(-800.540)), bool(_GLF_IDENTITY(false, (false) && true)))), 6.8);
           if(_GLF_DEAD(false))
            barrier();
           uvec4(50036u, 101734u, 39185u, 23935u);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           bvec2 _GLF_SWITCH_0_22v[36], _GLF_SWITCH_0_23v[72];
           {
            (3.6 - mat2(-653.994, -862.234, -0.9, -9.4));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            mat2 _GLF_SWITCH_0_24v;
            mat2x3 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_GLF_SWITCH_0_21v) : _injected_loop_counter ++)))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
            for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            bvec2 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             barrier();
            mat4 _GLF_SWITCH_0_29v;
            equal(tanh(vec4(-820.206, -9.4, -0.0, _GLF_IDENTITY(-0.3, (true ? _GLF_IDENTITY(-0.3, min(-0.3, -0.3)) : _GLF_FUZZED(-6.3))))), vec4(52.90, _GLF_IDENTITY(-6743.0334, min(-6743.0334, -6743.0334)), -6285.3520, -2.9));
            subgroup_size;
           }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           while(false)
            {
             if(_GLF_DEAD(false))
              barrier();
             vec3 _GLF_SWITCH_0_30v;
             ivec4 _GLF_SWITCH_0_31v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               ;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 for(mat2x3 _GLF_SWITCH_0_32v; false; (ivec2(_GLF_IDENTITY(81386, (true ? 81386 : _GLF_FUZZED(-34180))), -43392) , mat4x3(-7.1, 72.70, 193.870, -19.04, -9598.5955, 905.464, _GLF_IDENTITY(34.56, min(34.56, _GLF_IDENTITY(34.56, (_GLF_IDENTITY(34.56, max(34.56, 34.56))) + sqrt(0.0)))), 57.27, _GLF_IDENTITY(8.9, min(8.9, 8.9)), 0.6, _GLF_IDENTITY(_GLF_IDENTITY(366.246, float(vec2(366.246, 0.0))), exp(0.0) * (366.246)), _GLF_IDENTITY(8755.8468, min(8755.8468, 8755.8468)))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               mat4(3.3, -1842.9747, 4.8, -2145.9372, -3351.8543, -57.66, -5.6, 26.78, 228.507, _GLF_IDENTITY(64.04, (64.04) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(1.0, 1.0, 0.0)))), 1600.9549, -8986.7233, 527.927, 2.6, -9366.1114, 31.83);
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              continue;
             mat2x3(mat4x3(mat4x2(-7405.6711, _GLF_IDENTITY(-19.04, 0.0 + (_GLF_IDENTITY(-19.04, (_GLF_IDENTITY(-19.04, max(-19.04, -19.04))) - determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-8555.9512, clamp(_GLF_IDENTITY(-8555.9512, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -8555.9512 : _GLF_FUZZED(827.588))), _GLF_IDENTITY(-8555.9512, max(-8555.9512, _GLF_IDENTITY(-8555.9512, (-8555.9512) / 1.0))), -8555.9512)), 7.2, -8.6, -29.58, 21.64, -7.8)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(60398))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         {
          do
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
             {
              (mat2(mat4x3(47.62, -3.2, 73.46, -91.21, -4.0, -3961.6787, -7.4, 72.29, 1.2, _GLF_IDENTITY(261.473, float(_GLF_IDENTITY(mat4x2(261.473, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4x2(261.473, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -7.5, -51.51)) * mat2(0.8, 6316.0455, 0.6, 64.26));
             }
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          (mat2x3(65.37, -3.2, -1.9, 5708.2709, -754.146, 1.6) * mat4x2(-90.56, _GLF_IDENTITY(76.08, (76.08) + sin(0.0)), -49.98, -8213.1864, 3.1, -151.977, -4642.8074, 4.6));
          if((ivec2(_GLF_IDENTITY(66056, clamp(66056, _GLF_IDENTITY(_GLF_IDENTITY(66056, (66056) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(66056, 1 * (66056)), (66056) >> 0))), 66056)), 80734) != ivec2(25228, 72483)))
           {
            if(_GLF_DEAD(false))
             break;
            do
             {
              (-5.2 - mat4(-454.516, 4.3, 9.5, 4.3, 9.2, -179.718, 7.9, 786.776, 131.504, -654.175, -6259.9655, 64.73, 7188.3677, -261.896, 608.535, 931.419));
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          bvec3 _GLF_SWITCH_0_33v[29], _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
          do
           {
            do
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))).x > injectionSwitch.y))))
                 barrier();
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
             }
            ((+ subgroup_id) * uvec3(_GLF_IDENTITY(198348u, (198348u) | 0u), 72655u, 126669u));
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))) && true)) || false)); _injected_loop_counter --)
             {
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
           }
          mat2(737.808, _GLF_IDENTITY(_GLF_IDENTITY(2829.9117, float(_GLF_IDENTITY(mat3(2829.9117, sin(0.0), 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? _GLF_FUZZED(mat3(-540.196, 3.6, -0.3, -3609.0850, 759.121, 92.93, 1.4, -64.26, -9.9)) : mat3(2829.9117, sin(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0))))), float(mat4(_GLF_IDENTITY(2829.9117, float(_GLF_IDENTITY(mat3(2829.9117, sin(0.0), 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? _GLF_FUZZED(mat3(-540.196, 3.6, -0.3, -3609.0850, 759.121, 92.93, 1.4, -64.26, -9.9)) : mat3(2829.9117, sin(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0))))), 1.0, length(vec2(0.0, 0.0)), tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0, tan(0.0), 1.0, 1.0))), 3.0, _GLF_IDENTITY(-382.174, (false ? _GLF_FUZZED(-6.6) : -382.174)));
          mat3x4(598.412, -5.0, -486.496, 9.2, 829.148, -74.28, -1.8, _GLF_IDENTITY(-7.0, max(-7.0, -7.0)), -9207.8283, 8710.4406, 7.0, 708.713);
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
           {
            if(_GLF_DEAD(false))
             continue;
            for(            -56789;
 isnan(8977.9953); ivec3(-32562, _GLF_IDENTITY(11787, (11787) | 0), -15832))
             {
              if(_GLF_DEAD(false))
               barrier();
              mat2x3 _GLF_SWITCH_0_36v[9];
              if(_GLF_DEAD(false))
               barrier();
              (+ (_GLF_IDENTITY(_GLF_IDENTITY(-34390 ^ bitfieldReverse(ivec3(-43680, -79113, -25920)), (-34390 ^ bitfieldReverse(ivec3(-43680, -79113, -25920))) / ivec3(1, 1, 1)), ivec3(0, 0, 0) | (-34390 ^ bitfieldReverse(ivec3(-43680, -79113, -25920))))));
              ivec4 _GLF_SWITCH_0_37v;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  bvec4(false, true, false, true);
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   barrier();
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                 }
               }
              else
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              vec4(_GLF_IDENTITY(_GLF_IDENTITY(8.9, mix(float(_GLF_FUZZED(35.72)), float(8.9), bool(true))), (8.9) / 1.0), vec3(9.9, 5.2, 203.341));
             }
           }
          do
           {
            do
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           }
          while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
         }
         while(false)
          {
           if(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))
            {
             vec2 _GLF_SWITCH_0_38v[79];
            }
           else
            {
             uint _GLF_SWITCH_0_39v;
             do
              {
               ivec4(-76614, -43418, -23189, _GLF_IDENTITY(-28984, 0 + (-28984)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             mat3x2 _GLF_SWITCH_0_40v[95], _GLF_SWITCH_0_41v[23];
             (ivec4(-96170, -82448, -97561, 76142) * ivec4(86921, 86201, 47647, -38532));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             int _GLF_SWITCH_0_42v;
            }
           mix((_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-6198, -74748, 48362, 67252), (true ? ivec4(-6198, -74748, 48362, 67252) : _GLF_FUZZED(ivec4(-26298, 6452, 51488, -3626)))) & ivec4(53584, -30389, -86874, -65612), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(-6198, -74748, 48362, 67252) & ivec4(53584, -30389, -86874, -65612), (true ? ivec4(-6198, -74748, 48362, 67252) & ivec4(53584, -30389, -86874, -65612) : _GLF_FUZZED(ivec4(-84515, -38291, 65206, 60872)))), (_GLF_IDENTITY(ivec4(-6198, -74748, 48362, 67252) & ivec4(53584, -30389, -86874, -65612), (true ? ivec4(-6198, _GLF_IDENTITY(-74748, int(int(_GLF_IDENTITY(-74748, (-74748) - 0)))), 48362, 67252) & ivec4(53584, -30389, -86874, -65612) : _GLF_FUZZED(ivec4(-84515, -38291, 65206, 60872))))) - ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1))), (ivec4(ivec2(88092, _GLF_IDENTITY(7085, min(7085, 7085))), 12649, 393)), bvec4(false, bvec3(true, true, true)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec4(72755u, 100380u, 30419u, 190510u);
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             bvec4(true, true, true, false);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, false)), true && (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-354.329, -68.14) + vec2(-916.729, 7075.5840))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true, false)))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
            }
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.1)), vec2(_GLF_FUZZED(vec2(-4.6, 75.38).g), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(mod(53.19, _GLF_IDENTITY(0.7, min(_GLF_IDENTITY(0.7, clamp(0.7, 0.7, 0.7)), 0.7))))))), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))).y))))
             break;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               {
                do
                 {
                  barrier();
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
             }
            else
             {
             }
            do
             {
              if(_GLF_DEAD(false))
               {
                do
                 {
                  barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))))), true, true))));
               }
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ;
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    return;
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                barrier();
               }
              if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))));
            do
             {
              mat3(-466.945, 445.920, -4302.4662, -5799.9091, 185.810, 1080.7127, -968.499, 21.90, -7.4);
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               barrier();
              uvec2(199078u, 134044u);
             }
            (vec4(_GLF_IDENTITY(37.95, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(37.95, max(37.95, 37.95)))), _GLF_IDENTITY(-3.5, 1.0 * (-3.5)), injectionSwitch) / vec4(_GLF_IDENTITY(-293.427, max(-293.427, -293.427)), 28.76, -816.161, 62.25));
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
           }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))); _injected_loop_counter ++)
            {
             (acos(injectionSwitch) * mat2(_GLF_IDENTITY(-9.9, min(_GLF_IDENTITY(-9.9, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mod(degrees(-9.0), 439.008)) : 1.0)) * (-9.9)), -9.9)), -6099.5046, 537.028, -7394.5817));
            }
          }
         ;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       default:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         1;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
