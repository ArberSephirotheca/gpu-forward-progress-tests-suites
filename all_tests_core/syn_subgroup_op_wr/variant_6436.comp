#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_45 {
 mat3x4 _f0;
 ivec4 _f1;
 vec2 _f2;
 ivec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_46 {
 bvec3 _f0;
 _GLF_struct_45 _f1;
 mat2x3 _f2;
 mat3x2 _f3;
 uint num_workgroup;
} ;

struct _GLF_struct_42 {
 mat2x3 _f0;
} ;

struct _GLF_struct_41 {
 vec3 _f0;
 mat2x4 _f1;
 bool _f2;
 uint _f3;
 bvec4 _f4;
 bvec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_40 {
 bvec3 _f0;
 ivec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_39 {
 mat4 _f0;
 mat4x3 _f1;
 vec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_38 {
 mat2x3 _f0;
 uvec3 _f1;
 uint _f2;
 int _f3;
 int _f4;
} ;

struct _GLF_struct_43 {
 _GLF_struct_38 _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_40 _f2;
 _GLF_struct_41 _f3;
 vec2 _f4;
 mat3x4 _f5;
 _GLF_struct_42 _f6;
} ;

struct _GLF_struct_44 {
 float _f0;
 mat4x3 _f1;
 mat3 _f2;
 _GLF_struct_43 _f3;
 uint subgroup_id;
 mat3x4 _f4;
} ;

struct _GLF_struct_35 {
 mat2 _f0;
 mat2x4 _f1;
 float _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_34 {
 uvec2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 ivec4 _f1;
 mat3 _f2;
 mat2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_32 {
 vec4 _f0;
 mat2x3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_31 {
 vec3 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_36 {
 _GLF_struct_31 _f0;
 _GLF_struct_32 _f1;
 vec4 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 mat4x2 _f5;
 _GLF_struct_35 _f6;
} ;

struct _GLF_struct_29 {
 ivec4 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_28 {
 mat3x4 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_27 {
 ivec4 _f0;
 mat2x4 _f1;
 vec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_26 {
 float _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 ivec3 _f3;
 bvec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_30 {
 _GLF_struct_26 _f0;
 uint subgroup_local_id;
 uvec3 _f1;
 _GLF_struct_27 _f2;
 int _f3;
 mat4x3 _f4;
 _GLF_struct_28 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_24 {
 mat2x3 _f0;
 uvec3 _f1;
 mat2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_23 {
 vec3 _f0;
 uint _f1;
 mat2x4 _f2;
 uvec2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 uvec4 _f1;
 bvec3 _f2;
 uvec3 _f3;
 mat3x2 _f4;
 mat2x3 _f5;
 bool _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 mat4 _f3;
 mat2 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_37 {
 vec4 _f0;
 vec4 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_36 _f4;
} ;

struct _GLF_struct_18 {
 vec3 _f0;
 mat2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
 mat2 _f1;
 bool _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
 float _f1;
 mat2x3 _f2;
 float _f3;
 mat3x2 _f4;
 mat3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 ivec4 _f1;
 uvec4 _f2;
 uint _f3;
 int _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 mat2 _f1;
 int _f2;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 mat3x2 _f1;
 float _f2;
 uvec3 _f3;
 mat2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_11 {
 bool _f0;
 bool _f1;
 mat3x2 _f2;
 bool _f3;
 int _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 bvec3 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 bvec3 _f5;
 _GLF_struct_14 _f6;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 ivec3 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_7 {
 int _f0;
 vec3 _f1;
 mat2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 vec3 _f1;
 mat3x4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 vec3 _f1;
 bvec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_4 {
 int _f0;
 ivec4 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 ivec4 _f4;
 mat2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_9 {
 int _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_9 _f0;
 _GLF_struct_15 _f1;
 ivec3 _f2;
 _GLF_struct_17 _f3;
 vec3 _f4;
 _GLF_struct_19 _f5;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 bool _f3;
 mat2 _f4;
 uint _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bool _f1;
 int _f2;
 ivec3 _f3;
 mat4x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 uint _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(1.0, mat4x3(1.0), mat3(1.0), _GLF_struct_43(_GLF_struct_38(mat2x3(1.0), uvec3(1u), 1u, 1, 1), _GLF_struct_39(mat4(1.0), mat4x3(1.0), vec3(1.0), 1u), _GLF_struct_40(bvec3(true), ivec2(1), ivec4(1)), _GLF_struct_41(vec3(1.0), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))), 1u, bvec4(_GLF_IDENTITY(true, false || (true))), bvec4(true), mat4x3(1.0)), vec2(1.0), mat3x4(1.0), _GLF_struct_42(mat2x3(1.0))), gl_SubgroupID, mat3x4(1.0));
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_9(1, _GLF_struct_4(1, ivec4(1), mat3x2(1.0), uvec4(1u), ivec4(1), mat2(1.0), bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))))), true, false, false))))), _GLF_struct_5(vec3(1.0), vec3(1.0), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), mat4x2(1.0)), _GLF_struct_6(mat4x2(1.0), vec3(1.0), mat3x4(1.0), mat4x2(1.0)), _GLF_struct_7(1, vec3(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) / 1.0), max(1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-22.31) : _GLF_IDENTITY(1.0, min(1.0, 1.0))), ((false ? _GLF_FUZZED(-22.31) : 1.0)) - 0.0)), 1.0)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(579.773)))) * 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-22.31) : _GLF_IDENTITY(1.0, min(1.0, 1.0))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(-22.31), 1.0 * (_GLF_FUZZED(-22.31))) : 1.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.4) : _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 1.0))))), mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_8(ivec2(1), ivec3(1), mat3x2(1.0), mat3x2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sin(0.0))))), vec2(_GLF_IDENTITY(mat3x2(vec2(1.0), tan(0.0), abs(0.0), 1.0, abs(1.0)), transpose(transpose(mat3x2(vec2(1.0), tan(0.0), abs(0.0), 1.0, abs(1.0))))))))), _GLF_struct_15(_GLF_struct_10(mat2x4(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0)), (float(mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0))) - 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), abs(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))))), _GLF_struct_11(true, true, mat3x2(1.0), true, 1, uvec4(1u)), bvec3(_GLF_IDENTITY(true, false || (true))), _GLF_struct_12(mat3x2(1.0), mat3x2(1.0), 1.0, _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), mat2(1.0), mat2(1.0)), _GLF_struct_13(mat2x4(1.0), _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3074.9953)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / mat2(1.0, 1.0, 1.0, 1.0)), 1), bvec3(true), _GLF_struct_14(mat2x4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(0.4)))), ivec4(1), uvec4(1u), 1u, 1, mat3x4(1.0))), ivec3(1), _GLF_struct_17(_GLF_struct_16(1, uvec2(1u)), 1.0, mat2x3(1.0), 1.0, mat3x2(1.0), mat3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.9) : 1.0))), bvec4(true)), vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), _GLF_struct_19(_GLF_struct_18(vec3(1.0), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0))), float(_GLF_FUZZED((-646.023 - 8.7))), bool(false))), 0.0, 0.0))))), mat2(mat3(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0)), (_GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0)), (float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0))) + 0.0)) - 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec2(0.0, 1.0)), dot(vec2(log(1.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0)))), vec2(0.0, 1.0))), sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(66.58)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0)))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-646.023 - 8.7))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(555.509, 9748.2033, 5.3, 42.06)) : mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0)), (_GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0)), (float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0))) + 0.0)) - 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), _GLF_IDENTITY(1.0, (1.0) * 1.0)), vec2(0.0, 1.0)), dot(vec2(log(1.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0)))), vec2(0.0, 1.0))), sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(66.58)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0)))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-646.023 - 8.7))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0))))), transpose(transpose(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0)), (_GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), 1.0, 0.0)), (float(mat4(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, log(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(atanh(-47.73))))), 0.0, 1.0)), 1.0, 0.0))) + 0.0)) - 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec3(0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat2(float(mat4x2(0.0, 1.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), vec2(0.0, 1.0))), sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(66.58)), (float(_GLF_FUZZED(66.58))) / _GLF_ONE(1.0, injectionSwitch.y)), bool(false))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0), mat2(mat4x2(mat2(float(mat4x2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-98.26)), float(1.0), bool(true)))), 0.0, _GLF_IDENTITY(dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0)), dot(vec2(log(1.0), 1.0), vec2(0.0, 1.0))), sin(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7.2)), bool(false)))))) * 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0)))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-646.023 - 8.7))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0), (clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-646.023 - 8.7))), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0)) / 1.0))))))))))))), mat2x4(1.0)), mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), uvec3(1u)), gl_SubgroupSize);
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(vec4(1.0), vec4(1.0), _GLF_struct_25(_GLF_struct_21(uvec3(1u), uvec4(1u), bvec3(true), uvec3(1u), mat3x2(1.0), mat2x3(1.0), true), _GLF_struct_22(ivec4(1), mat4x2(1.0), mat2x4(1.0), _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(true, (true) || false) ? ivec2(1) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(37750, 5230)), ivec2(0, 0) + (_GLF_FUZZED(ivec2(37750, 5230)))))), ivec2(1)))))), _GLF_struct_23(vec3(1.0), 1u, mat2x4(1.0), uvec2(1u), vec4(1.0)), mat4(1.0), mat2(1.0), _GLF_struct_24(mat2x3(1.0), uvec3(1u), mat2(1.0), bvec3(true))), _GLF_struct_30(_GLF_struct_26(1.0, mat3x2(1.0), mat2x3(1.0), ivec3(1), bvec2(true), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)) ^ ivec4(0, 0, 0, 0), clamp(_GLF_IDENTITY((ivec4(1)) ^ ivec4(0, 0, 0, 0), clamp((ivec4(1)) ^ ivec4(0, 0, 0, 0), (ivec4(1)) ^ ivec4(0, 0, 0, 0), (ivec4(1)) ^ ivec4(0, 0, 0, 0))), _GLF_IDENTITY((ivec4(1)) ^ ivec4(0, 0, 0, 0), ((ivec4(1)) ^ ivec4(0, 0, 0, 0)) | ((ivec4(1)) ^ ivec4(0, 0, 0, 0))), (ivec4(1)) ^ ivec4(0, 0, 0, 0))))), gl_SubgroupInvocationID, uvec3(_GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_struct_27(ivec4(1), mat2x4(1.0), vec3(1.0), vec4(1.0)), 1, mat4x3(1.0), _GLF_struct_28(mat3x4(1.0), mat2x3(1.0), mat3x2(1.0), mat4x3(1.0)), _GLF_struct_29(ivec4(1), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat4x3(1.0), mat3x2(1.0))), _GLF_struct_36(_GLF_struct_31(vec3(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false)))))))), true)))), mat4x3(1.0), bvec4(true)), _GLF_struct_32(_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), _GLF_IDENTITY(vec4(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0)), max(vec4(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), vec4(_GLF_IDENTITY(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(67.00, -3.0, -5.8, 62.72, 66.46, 367.208, -6.3, 3.8, 152.635)) : mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0)))))))))) : vec4(1.0, 1.0, 1.0, 1.0)))), mat4(1.0) * (sqrt(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-9.0))) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0), (true ? mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat3(-35.42, -1.2, -249.387, 3003.7746, 645.481, -6.1, 2.5, 9749.2987, 283.412))))), (vec4(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0))) + vec4(0.0, 0.0, 0.0, 0.0)), max(vec4(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), (_GLF_IDENTITY(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), (_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307))) / vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) + vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(67.00, -3.0, -5.8, 62.72, 66.46, 367.208, -6.3, 3.8, 152.635)) : mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_FUZZED(vec4(11.63, -8462.2307, -8.5, 1480.4307)), 0.0, 0.0, 1.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(67.00, -3.0, -5.8, 62.72, 66.46, 367.208, -6.3, 3.8, 152.635)) : mat3(_GLF_FUZZED(_GLF_IDENTITY(vec4(11.63, -8462.2307, -8.5, 1480.4307), mix(vec4((vec4(11.63, -8462.2307, -8.5, 1480.4307))[0], _GLF_FUZZED(4.8), (vec4(11.63, -8462.2307, -8.5, 1480.4307))[2], _GLF_FUZZED(0.3)), vec4(_GLF_FUZZED(857.762), (vec4(11.63, -8462.2307, -8.5, 1480.4307))[1], _GLF_FUZZED(-3.3), (vec4(11.63, -8462.2307, -8.5, 1480.4307))[3]), bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, 1.0, 0.0, 0.0))))))))))))) : vec4(1.0, 1.0, 1.0, 1.0)))))) * _GLF_IDENTITY((vec4(1.0)), clamp((vec4(1.0)), (vec4(1.0)), (vec4(1.0))))), vec4(1.0))), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))))) ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), (clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(-329.678))), 1.0)) * 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), (_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), max(clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0)))) * 1.0), max(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), (clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0)) * 1.0), _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0), _GLF_IDENTITY((clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0)) * 1.0, min((clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0)) * 1.0, (clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (true ? 1.0 : _GLF_FUZZED(-329.678))), 1.0)) * 1.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED((false ? 3715.1612 : 1.8)), min(_GLF_FUZZED((false ? 3715.1612 : 1.8)), _GLF_FUZZED((false ? 3715.1612 : 1.8))))), bool(false))), clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-329.678))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-98.24) : 1.0))))))))), vec3(1.0)), vec4(_GLF_IDENTITY(1.0, abs(0.0) + (1.0))), _GLF_struct_33(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-18730)), ~ (~ ((true ? 1 : _GLF_FUZZED(-18730)))))), 1)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-18730))), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-18730, (-18730) ^ 0)))), 1))) >> 0)))), ivec4(1), mat3(1.0), mat2(1.0), bvec4(true)), _GLF_struct_34(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(76159u, 18458u)))), mat4x2(1.0)), mat4x2(1.0), _GLF_struct_35(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2x4(1.0), 1.0, uvec2(1u))));
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(bvec3(true), _GLF_struct_45(mat3x4(1.0), ivec4(1), vec2(1.0), ivec2(1), ivec3(_GLF_IDENTITY(1, 0 ^ (1)))), mat2x3(1.0), mat3x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))) * uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (false ? _GLF_FUZZED(uvec3(50952u, 90792u, 119588u)) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), min((gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))), uvec3(uvec3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (false ? _GLF_FUZZED(uvec3(50952u, 90792u, 119588u)) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), min((gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))))))))), (false ? _GLF_FUZZED(uvec3(59950u, 93642u, 163227u)) : uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))) - uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) - uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)), _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), min(_GLF_IDENTITY((gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u)))))), ((gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3(uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (uvec3(uvec3(uvec3(0u, 0u, 0u))))))) | (uvec3(0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))))), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))))))))), gl_NumWorkGroups)).x);
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(vec2(1.0), mat2x3(1.0), _GLF_struct_2(1, 1u, _GLF_struct_0(bvec2(_GLF_IDENTITY(true, (true) && true)), true, 1, ivec3(1), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(143.276)), bool(false))), min(1.0, 1.0))))), uvec2(1u)), _GLF_struct_1(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(-448.628)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat3x4(1.0), uvec3(1u), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), mat2(1.0), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || ((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) || false), ! (! (! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)))))) || false), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), true, true))))))))), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y)), true)))), _GLF_IDENTITY(! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (_GLF_IDENTITY(! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false)) || false))) || false), (_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true))), ((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true)))) && true)), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), false, false)))))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ vec3(-629.452, -41.08, -35.50)).z)), bool(false))) < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (_GLF_IDENTITY(! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(bvec4(! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, true, false)))))) && true)))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true)))), true), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false)), true, false, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), false, false))))))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(35.59, 8892.9810).y), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-692.733)), bvec2(true, false))).y)), true)))), true), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), bool(bvec2(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))), ! (! ((bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! ((! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))), false))))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))) || false)) || false))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true), bvec2(bvec4(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true), false, false)))))) || false))))), true)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))), true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(-5.5, 0.8, 2.1, 0.3).a)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))), true), bvec2(bvec4(bvec2(! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), true)))), _GLF_IDENTITY(! (! ((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, true))))) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), true)))))), true && (! (! (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false)), false || (bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false)))), false, false)))))), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), true)))), bool(bvec3((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), true))), (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), true)))) || false)), false, true))))))))))), true), false, false))))))), bool(bvec2((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) : injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) : injectionSwitch))) - vec2(0.0, 0.0)), 1.0, exp(0.0), 1.0, 0.0, cos(0.0), 0.0, 0.0)), mat2(1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) : injectionSwitch))) - vec2(0.0, 0.0)), 1.0, exp(0.0), 1.0, 0.0, cos(0.0), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1])))))).y)), true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(_GLF_IDENTITY(bvec2(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.6) : injectionSwitch.y)))), true)))), true), bvec2(bvec4(bvec2(! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))), false, false))) && true), false))))), true)))), ! (! ((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ((! (true))) || false) && true))), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y, false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && ((_GLF_IDENTITY(true, ! (! (true)))))) && true), false))))), true))))))), true), false, false))))))), true))) && true)) && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(42.28), _GLF_FUZZED(9381.7574)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) / vec2(1.0, 1.0)), bvec2(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))))))))))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), true))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, false || (true)), true), bvec2(bvec4(bvec2(true, true), true, true))))), (true) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec3(! ((true)), false, true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec3((true), true, false)))) && true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true))))), false)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true))))), false))) || false), false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec3((true), true, false)))) && true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || ((bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true))))), false)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true))))), false))) || false))))) && true) ? _GLF_FUZZED(_GLF_struct_replacement_46.num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | ((1u))) ^ _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(81964u) : 0u)) : _GLF_FUZZED(179475u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(143753u))), _GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY((1u) ^ 0u, (false ? _GLF_FUZZED(138979u) : _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) << 0u)))) ^ 0u, (((1u) ^ 0u) ^ 0u) - (0u & 34379u))), clamp(_GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u), _GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u), min(_GLF_IDENTITY(((1u) ^ 0u), (((1u) ^ 0u)) | 0u), ((1u) ^ 0u))) ^ 0u), _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u))))), (uint(uint(_GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u)))) >> 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, 0u | ((1u) ^ 0u)), ((1u) ^ 0u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (1u) ^ 0u)), uint(uvec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(143753u))), _GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u) ^ 0u, (((1u) ^ 0u) ^ 0u) - (0u & 34379u))), clamp(_GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u), _GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u), min(_GLF_IDENTITY(((1u) ^ 0u), (((1u) ^ 0u)) | 0u), ((1u) ^ 0u))) ^ 0u), _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ _GLF_IDENTITY(0u, (0u) * 1u)) ^ 0u))))), (uint(uint(_GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u)))) >> 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, 0u | ((1u) ^ 0u)), ((1u) ^ 0u) - 0u)), _GLF_IDENTITY(1u, (1u) ^ 0u)), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(143753u))), _GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u) ^ 0u, (((1u) ^ 0u) ^ 0u) - (0u & 34379u))), (_GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u) ^ 0u, (((1u) ^ 0u) ^ 0u) - (0u & 34379u))), (_GLF_IDENTITY((1u) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u) ^ 0u, (((1u) ^ 0u) ^ 0u) - (0u & 34379u)))) ^ 0u)) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u))) ^ 0u, _GLF_IDENTITY(((1u) ^ 0u), min(_GLF_IDENTITY(((1u) ^ 0u), (((1u) ^ 0u)) | 0u), ((_GLF_IDENTITY(1u, ~ (~ (1u)))) ^ 0u))) ^ 0u), _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u))))), (uint(uint(_GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u)))) >> 0u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u) ^ 0u, 0u | ((1u) ^ 0u)), ((1u) ^ 0u) - 0u)), _GLF_IDENTITY(1u, (1u) ^ 0u)))), 1u, 1u)))))), vec2(1.0)), uvec4(1u)), gl_WorkGroupID.x);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3.workgroup_id, ~ (~ (workgroup_size * _GLF_struct_replacement_3.workgroup_id)));
 uint subgroup_base = _GLF_struct_replacement_44.subgroup_id * _GLF_struct_replacement_20.subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), min(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) | (workgroup_base)), 0u + (workgroup_base)))), max(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base), max(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), workgroup_base))), max(workgroup_base, workgroup_base))))), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base))), max(workgroup_base, workgroup_base)))))), ~ (~ (((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), _GLF_IDENTITY(max(workgroup_base, workgroup_base), _GLF_IDENTITY(uint(uint(max(workgroup_base, workgroup_base))), clamp(uint(uint(max(workgroup_base, workgroup_base))), uint(uint(max(workgroup_base, workgroup_base))), uint(uint(max(workgroup_base, workgroup_base)))))), max(workgroup_base, workgroup_base))), max(workgroup_base, workgroup_base))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(max(workgroup_base, workgroup_base), (max(workgroup_base, workgroup_base)) + 0u), min(_GLF_IDENTITY(max(workgroup_base, workgroup_base), clamp(max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base), max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base))), max(workgroup_base, workgroup_base)))))))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) + 0u)) + subgroup_base + _GLF_struct_replacement_37._f3.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_struct_replacement_37._f3.subgroup_local_id + 1, min(_GLF_struct_replacement_37._f3.subgroup_local_id + 1, _GLF_struct_replacement_37._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_20.subgroup_size);
 uint read = 0;
 do
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if((_GLF_struct_replacement_37._f3.subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) == 0)
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         subgroupAll(false);
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     do
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         do
                          {
                           do
                            {
                             read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 ^ (64)), 2);
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), (_GLF_WRAPPED_IF_FALSE(false)) && true))
                            {
                            }
                           else
                            {
                             do
                              {
                               subgroupAll(false);
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (0 | 0) ^ (_injected_loop_counter))) * 1) < 1); _injected_loop_counter ++)
                        {
                         do
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
                                      }
                                    }
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     subgroupBarrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (1 | _GLF_IDENTITY(0, 0 ^ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ ((1 & 1) & 1))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u) : _GLF_FUZZED(read))))) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), virtual_gid)))))))], read, 4, 64, 4);
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
}
