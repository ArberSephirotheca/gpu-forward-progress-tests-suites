#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), true))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(7))), _GLF_IDENTITY(int(ivec4((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))) ^ 0), int(7))), 0, 1, 1)), _GLF_IDENTITY(max(int(ivec4((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), int(ivec3(int(_GLF_IDENTITY(7, min(7, 7))), 0, 0))))))), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0))))), 1, 1)), int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), (int(7)) ^ 0)))) << 0)))) << 0), 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED((- 76474)) : 1)), _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))), (min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))))) | (min(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))))))))), (_GLF_IDENTITY(max(int(ivec4((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) / (0 | 1)), min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) / 1)), int(7)))) << 0), 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY((- 76474), ~ (~ (_GLF_IDENTITY((- 76474), 0 ^ ((- 76474))))))) : 1)), 1))), ~ (_GLF_IDENTITY(~ (max(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), clamp(int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7))))), int(_GLF_IDENTITY(7, min(7, 7))))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), (int(_GLF_IDENTITY(7, min(7, 7)))) | (int(_GLF_IDENTITY(7, min(7, 7)))))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7))))), int(_GLF_IDENTITY(7, min(7, 7)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), (int(_GLF_IDENTITY(7, min(7, 7)))) | (int(_GLF_IDENTITY(7, min(7, 7)))))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7))))), int(_GLF_IDENTITY(7, min(7, 7))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), (int(_GLF_IDENTITY(7, min(7, 7)))) | (int(_GLF_IDENTITY(7, min(7, 7)))))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(int(_GLF_IDENTITY(7, min(7, 7))), int(_GLF_IDENTITY(7, min(7, 7))))), int(_GLF_IDENTITY(7, min(7, 7)))))))))))) / 1))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)))), ((0 << _GLF_IDENTITY(int(7), int(7)))) << 0), 0, _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), 1)))), (_GLF_IDENTITY(~ (max(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))), 0 ^ (min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) ^ 0))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) + 0), 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, 1 * (7))))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, int(ivec4(7, 0, 0, (1 | 1))))), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) / _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1))))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)), ((0 << _GLF_IDENTITY(int(7), int(7)))) << 0), 0, _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), 1)))), clamp(~ (max(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))) >> 0))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), (int(_GLF_IDENTITY(7, min(7, 7)))) >> 0)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))), 0 + (min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))))) / 1))), 0, 1, 1), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))) >> 0))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), (int(_GLF_IDENTITY(7, min(7, 7)))) >> 0)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))), 0 + (min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))))) / 1))), 0, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))) >> 0))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), (int(_GLF_IDENTITY(7, min(7, 7)))) >> 0)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) ^ 0)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))), 0 + (min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))))) / 1))), 0, 1, 1)))))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(0, (0) - 0))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(ivec4(0 << _GLF_IDENTITY(int(7), int(7)), 1, 0, 1)), (int(ivec4(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) - 0)), int(7)), 1, 0, 1))) ^ 0)))) << 0), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((- 76474)), (_GLF_FUZZED((- 76474))) / 1)))) : 1, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((- 76474)), (_GLF_FUZZED((- 76474))) / 1)))) : 1, false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((- 76474)), (_GLF_FUZZED((- 76474))) / 1)))) : 1, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((- 76474)), (_GLF_FUZZED((- 76474))) / 1)))) : 1, int(ivec3(false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((- 76474)), (_GLF_FUZZED((- 76474))) / 1)))) : 1, 0, 0))))))), 1)))), ~ (max(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, 0 ^ (7)))), min(7, 7))))))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))), (min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))) >> 0)))), 1 * (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))), _GLF_IDENTITY(int(int(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))))), (int(int(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))))))) + 0)))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (_GLF_IDENTITY(7, int(ivec2(7, 1)))) - 0))))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-36705))), min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) / 1))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)), ((0 << _GLF_IDENTITY(int(7), int(7)))) << 0), 0, _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) | (_GLF_IDENTITY(1, max(1, 1)))))))), _GLF_IDENTITY(~ (max(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY(min(7, 7), (false ? _GLF_FUZZED(37421) : min(7, 7))))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) / 1))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7)))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), min((0 << _GLF_IDENTITY(int(7), int(7))), (0 << _GLF_IDENTITY(int(7), int(7)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(((0 << _GLF_IDENTITY(int(7), int(7)))), ((0 << _GLF_IDENTITY(int(7), int(7)))))))) << 0), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)))), _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)))), 1)))), min(~ (max(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) | 0)) + (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))))))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((_GLF_IDENTITY(0, ~ (~ (0))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY(min(7, 7), (_GLF_IDENTITY(min(7, 7), _GLF_IDENTITY((true ? _GLF_IDENTITY(min(7, 7), clamp(min(7, 7), min(7, 7), min(7, 7))) : _GLF_FUZZED(-87363)), clamp((true ? _GLF_IDENTITY(min(7, 7), clamp(min(7, 7), min(7, 7), min(7, 7))) : _GLF_FUZZED(-87363)), (true ? _GLF_IDENTITY(min(7, 7), clamp(min(7, 7), min(7, 7), min(7, 7))) : _GLF_FUZZED(-87363)), _GLF_IDENTITY((true ? _GLF_IDENTITY(min(7, 7), clamp(min(7, 7), min(7, 7), min(7, 7))) : _GLF_FUZZED(-87363)), ~ (~ ((true ? _GLF_IDENTITY(min(7, 7), clamp(min(7, 7), min(7, 7), min(7, 7))) : _GLF_FUZZED(-87363))))))))) | (min(7, 7)))))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, _GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (0 & -87553) ^ (7)), _GLF_IDENTITY(7, (_GLF_IDENTITY(true, ! (! (true))) ? 7 : _GLF_FUZZED(-97770))))))))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) / 1))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(_GLF_IDENTITY(7, (7) | (7))))) << 0)), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) - 0)), int(7)))) << 0), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (false ? _GLF_IDENTITY(_GLF_FUZZED((- 76474)), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)))), 1)))), ~ (max(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY(min(7, 7), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(7, 7) : _GLF_FUZZED(-1311)))))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, _GLF_IDENTITY(min(7, 7), int(ivec2(_GLF_IDENTITY(min(7, 7), (_GLF_IDENTITY(min(7, 7), (min(7, 7)) | (min(7, 7)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, 0 | (7)), 7))), int(_GLF_IDENTITY(7, min(7, 7))))))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), min(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))), _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, min(7, 7)))))))) / 1))), 0, 1, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) / 1)))), ((0 << _GLF_IDENTITY(int(7), int(7)))) << 0), max(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)), ((0 << _GLF_IDENTITY(int(7), int(7)))) << 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))) << 0)), ((0 << _GLF_IDENTITY(int(7), int(7)))) << 0), (_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) << 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0 << _GLF_IDENTITY(int(7), int(7)))))) << 0)) | 0))), 0, _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((- 76474)), int(ivec4(_GLF_FUZZED((- 76474)), 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0))), ~ (~ (_GLF_FUZZED((- 76474))))) : 1)), 1))))))))) | 0)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 | 0, (0 | 0) >> _GLF_IDENTITY(0, (0) | 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(-27.57)), vec2(_GLF_FUZZED(-1.6), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(3906.0372, 889.146)) : (injectionSwitch))))[1]), bvec2(false, true)))).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat3x4(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), cos(0.0)), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, 1.0))))) * (injectionSwitch)).x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
          }
        }
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(uvec4(108066u, 27123u, 13447u, _GLF_IDENTITY(49135u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(49135u, min(49135u, 49135u)))))[3]) : _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))) * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 0, clamp(0 ^ 0, 0 ^ 0, 0 ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0) > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(int(_GLF_IDENTITY(int(6), 0 + (int(6)))))), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | _GLF_IDENTITY((subgroup_local_id), uint(uvec4((subgroup_local_id), 0u, 0u, 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u))));
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-563.701) : injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-563.701) : injectionSwitch.x)) > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-23.01) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(-23.01, max(-23.01, -23.01))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(normalize(injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.4) : injectionSwitch.y)), injectionSwitch.y))) / 1.0)) + 0.0)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) && true)), ! (! (bool(_GLF_IDENTITY((false), ((false)) && true))))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, _GLF_IDENTITY(true, ! (! (true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (_GLF_IDENTITY((0) | 0, (false ? _GLF_IDENTITY(_GLF_FUZZED(62467), 0 | (_GLF_FUZZED(62467))) : _GLF_IDENTITY((0) | 0, (false ? _GLF_FUZZED(_injected_loop_counter) : (0) | 0))))) | 0))) | 0, max((_GLF_IDENTITY(0, (0) | 0)) | 0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) - 0)))) | 0) | ((_GLF_IDENTITY(0, (0) | 0)) | 0)))), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), 0 + (_GLF_IDENTITY(0, (0) << 0))))) | 0)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), (~ _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, 0))), clamp((_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(0, min(0, 0)))))) / 1)))) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, max((_GLF_IDENTITY(0, (0) | 0)) | 0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 ^ ((0))) | 0)) - 0)))) | 0) | ((_GLF_IDENTITY(0, (0) | 0)) | 0)))), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) << 0))) | 0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, max(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, max((_GLF_IDENTITY(0, (0) | 0)) | 0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)) | 0, ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(0, (0) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), ((_GLF_IDENTITY(0, (0) | 0))) ^ 0) - 0)))) | 0) | ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(27323)))))))) | 0)) | 0)))), (_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) << 0))) | 0))))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), max((_GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), 0 | (_GLF_IDENTITY(0, int(int(0))))), (0) | 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), int(int((_GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0)))))), 0, 0)))))))) | 0)), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), ! (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(-49.67)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) * 1.0), 1.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : 0.0)), 1.0))), (false ? _GLF_FUZZED(vec2(-118.796, -997.124)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : 0.0)), 1.0))))), injectionSwitch, injectionSwitch)), 1.0)), vec2(1.0, 1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)), 1.0))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) >> 0))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   subgroupAll(false);
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             for(int _injected_loop_counter = (((_GLF_IDENTITY(1, max(1, 1)) | 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) >> 0))), clamp(0, 0, 0)) | (2), clamp(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) / 1), 0, 0)) | (2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), clamp(0, 0, 0)) | (2), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)) | (2), 0 ^ (_GLF_IDENTITY(0, clamp(0, 0, 0)) | _GLF_IDENTITY((2), int(ivec3(_GLF_IDENTITY((2), (_GLF_IDENTITY((2), ~ (~ ((2))))) / 1), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)), clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(_GLF_IDENTITY(clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (0)))), (clamp(0, 0, 0)) >> 0), clamp(0, 0, 0)))) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)), max(_GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)), _GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2))))) >> 0), _GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)))), _GLF_IDENTITY(2, _GLF_IDENTITY(0, clamp(0, 0, 0)) | (2)))), 2))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 ^ (~ (2)))))), _GLF_IDENTITY(max(int(2), int(2)), 0 | (max(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))))), _GLF_IDENTITY((buf[virtual_gid]), 0u + (_GLF_IDENTITY((buf[virtual_gid]), max((buf[virtual_gid]), (buf[virtual_gid]))))) | (buf[virtual_gid])), 4, 64, 2);
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               do
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 do
                  {
                   subgroupAll(false);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-391.086)))))))
                    barrier();
                   barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))));
                }
              }
             read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, _GLF_IDENTITY(2, (2) >> 0));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
        }
       else
        {
        }
      }
    }
   subgroupBarrier();
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = ((_GLF_IDENTITY(21953, (21953) * 1) & 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 1)))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec2(int(5), 1))))) >> 0)) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), true)), true && (bool(bvec2(! (false), true)))))))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), vec2(vec3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), 1.0))))) - log(vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), vec2(vec3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))))), 1.0))))) - log(vec2(1.0, 1.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)) && true)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) >> 0))), 4)), _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) >> 0), (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)) << 0)), min(~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4)))))))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
}
