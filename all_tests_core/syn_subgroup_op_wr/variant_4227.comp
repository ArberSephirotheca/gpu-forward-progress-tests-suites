#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, false, false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 0u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))) && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))), (injectionSwitch.x > injectionSwitch.y))) && true) || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! ((false)))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), false || (_GLF_IDENTITY(! (! ((false))), bool(bvec3(_GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))), false, false)))))))))), true && (_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), ((! (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))) || false))))))))) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))), bool(bool(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false || (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true))) || false))))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(fract(7.2), 0.7)) : injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-3.2)), max((true ? injectionSwitch.y : _GLF_FUZZED(-3.2)), (true ? injectionSwitch.y : _GLF_FUZZED(-3.2))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-930.245))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true), bvec2(bvec4(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true), true, true))))))))))))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || false))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))))), (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))) || false)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))) * (gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_id * subgroup_size, 1u, 1u), max(uvec3(subgroup_id * subgroup_size, 1u, 1u), uvec3(subgroup_id * subgroup_size, 1u, 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))), true)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), ! (! (! (! (! (_GLF_DEAD(false))))))))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-66.54)), bool(false))), injectionSwitch.x)) < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)))) - 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED((subgroup_base << uint(-3.5))))) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u, (((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) << 0u)) ^ 0u), max(_GLF_IDENTITY(~ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u, (((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) << 0u)) ^ 0u), _GLF_IDENTITY(~ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u, (((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) << 0u)) ^ 0u)))) >> 0u)), 0u + (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), clamp(max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))))), 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))))) | 0u) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u), max((_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u)))))) >> 0u)), ((_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), max((workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) + 0u)) % subgroup_size)), (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))))))), _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))))) | 0u) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), max(uint(uvec4(subgroup_base, 1u, 1u, 0u)), uint(uvec4(subgroup_base, 1u, 1u, 0u))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | _GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, 0u | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u)), 0u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u, 0u | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size)))) | 0u) ^ 0u)), 0u, 0u)))))), _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), ((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base)))) + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)), ((workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))) / 1u))) | 0u) ^ 0u)))) >> 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), max((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), ((workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) - 0u)), max((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) - 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) - 0u))) / 1u))) % subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u)), max(_GLF_IDENTITY(~ (uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u)), (~ (uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u))) / uvec4(1u, 1u, 1u, 1u)), ~ (uvec4(subgroup_base, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 1u, 1u)), clamp(uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u)), uint(uvec4(1u, 1u, 1u, 1u))))), _GLF_IDENTITY(1u, (1u) ^ 0u))), 1u, 0u)))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(0u | ((subgroup_local_id + 1) % subgroup_size), clamp(0u | ((subgroup_local_id + 1) % subgroup_size), 0u | ((subgroup_local_id + 1) % subgroup_size), 0u | ((subgroup_local_id + 1) % subgroup_size))))))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), ((subgroup_local_id + 1) % subgroup_size) << 0u))))) | 0u) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(40108), ~ (~ (_GLF_FUZZED(40108)))) : 1))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)) ^ 0u), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(40108) : 1))) % subgroup_size)))))) | 0u) ^ 0u, min(_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)))) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size))), ~ (~ ((~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))), 1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u)))) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size))))))) | 0u) ^ 0u, _GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), ((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u), (uvec4(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))), 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size)))) | 0u) ^ 0u))) | (_GLF_IDENTITY((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 1u, 0u))) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), (uint(uvec4(subgroup_base, 1u, 1u, 0u))) / 1u), uint(uvec4(subgroup_base, 1u, 1u, 0u))))), (true ? ~ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), (uint(uvec4(subgroup_base, 1u, 1u, 0u))) / 1u), uint(uvec4(subgroup_base, 1u, 1u, 0u))))) : _GLF_FUZZED(workgroup_base)))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size : _GLF_FUZZED(subgroup_size))))))), ~ (~ (((~ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), (uint(uvec4(subgroup_base, 1u, 1u, 0u))) / 1u), uint(uvec4(subgroup_base, 1u, 1u, 0u))))), (true ? ~ (_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_base, 1u, 1u, 0u)), (uint(uvec4(subgroup_base, 1u, 1u, 0u))) / 1u), uint(uvec4(subgroup_base, 1u, 1u, 0u))))) : _GLF_FUZZED(workgroup_base)))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size : _GLF_FUZZED(subgroup_size)))))))))) | 0u) ^ 0u)))) >> 0u)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), true))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y)))) || false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-31.17) : 0.0)), 0.0, 0.0, 0.0, sin(0.0), cos(0.0), 1.0, 0.0, 0.0)), determinant(mat3(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(40.53), clamp(_GLF_FUZZED(40.53), _GLF_FUZZED(40.53), _GLF_FUZZED(40.53)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0))))) / 1.0)), bool(true))), 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0)), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sqrt(0.0)), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, sqrt(0.0)), min(_GLF_IDENTITY(vec3(0.0, 1.0, sqrt(0.0)), max(vec3(0.0, 1.0, sqrt(0.0)), vec3(0.0, 1.0, sqrt(0.0)))), vec3(0.0, 1.0, sqrt(0.0)))), vec3(0.0, 1.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.6)), bool(false)))), min(1.0, 1.0))), (_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0)), min(1.0, 1.0))), (mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, 1.0)))) - mat2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4719.6596)), float(0.0), bool(true))), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sin(86.59)) : 0.0))))) / mat2(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0)))), float(mat3x4((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-31.17) : 0.0)), 0.0, 0.0, 0.0, sin(0.0), cos(0.0), 1.0, 0.0, 0.0)), determinant(mat3(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.53)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)), bool(true))), 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sqrt(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, sqrt(0.0)), vec3(0.0, 1.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), min(1.0, 1.0))), (_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0), max(_GLF_IDENTITY((1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0), 0.0 + ((1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0))), (1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0)))), min(1.0, 1.0))), (mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, 1.0)))) - mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4719.6596)), float(0.0), bool(true))), 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4719.6596)), float(0.0), bool(true))), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4719.6596)), float(0.0), bool(true))), 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4719.6596)), float(0.0), bool(true))), 0.0, 0.0)))), 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0)))), 1.0, abs(0.0), 0.0, exp(0.0), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-1.7 * 411.665))), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-24.47)), float(injectionSwitch[0]), bool(true)))) / 1.0), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (0 ^ 0) ^ (4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | 0), 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     barrier();
    }
   if((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(0, 0, 0)))
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(read) : ~ (~ (virtual_gid))))))), ((_GLF_IDENTITY(~ (virtual_gid), ~ (_GLF_IDENTITY(~ (~ (virtual_gid)), (false ? _GLF_FUZZED(read) : ~ (~ (virtual_gid)))))))) << 0u)))), virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(37608) : 64)), 2);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(sin(vec2(0.0, 0.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) && true), true, false, false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, (false) || false))), ! (! (! (true && (_GLF_IDENTITY(false, (false) || false)))))))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, false, false))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, false, false))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, true, false))))))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false, true))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)))) && true) || false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), (true && (_GLF_IDENTITY(false, (false) || false))) && true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || _GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), ! (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))), (_GLF_IDENTITY(! ((true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))), false || (! ((true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))) && true))))))) || false) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (! (false))))), (! (bool(_GLF_IDENTITY(false, ! (! (false)))))) && true))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false || (true && (_GLF_IDENTITY(false, (false) || false))), false || (false || (true && (_GLF_IDENTITY(false, (false) || false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), (false) || false))))))))) || false) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)), ! (! (bool(bvec3(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))))) && true)))), ((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) || false), false || (bool((false) || false)))), ! (! (bool(_GLF_IDENTITY(bool((false) || false), false || (bool((false) || false))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)))) && true) || false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(true && (_GLF_IDENTITY(false, (false) || false)), false, true)))) || false))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || _GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || false))), ! (! ((true && (_GLF_IDENTITY(false, (false) || false))))))) && true))))) || false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || _GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((true && (_GLF_IDENTITY(false, (false) || false))), ! (! ((true && (_GLF_IDENTITY(false, (false) || false))))))) && true))))) || false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))), ((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false))))))) || false) && true)))))) && true)))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)))) && true) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)))) && true) || false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false))))))), false, true)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))))) && true)))))) && true) || false)))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))))))))) || false) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), bool(bvec3(! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), false, true))))))))), ((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))))) && true))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), true && (true && (_GLF_IDENTITY(false, (false) || false)))))))) && _GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && _GLF_IDENTITY(true, false || (true)))))) && true) || false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), true && (bool(bvec2((false), false)))))))) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true))), (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))) || false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))) && true))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), true && (bool(bvec2((false), false)))))))) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true))), (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))) || false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), true))))), ((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))))) || false) && true))))))))) && true)))), ((! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ((false) || false) || false)))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (false))))), false || (true && (_GLF_IDENTITY(false, (false) || false)))))) && true)))) && true) || false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false || (true && (_GLF_IDENTITY(false, (false) || false))), (false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, bool(bool(false))) || ((false) || false)))))))) && true)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), (bool(bvec4((false), false, false, false))) && true)) || false))))))) || false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(true && (_GLF_IDENTITY(false, (false) || false))), ! (! (bool(true && (_GLF_IDENTITY(false, (false) || false))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(true && (_GLF_IDENTITY(false, (false) || false))), ! (! (bool(true && (_GLF_IDENTITY(false, (false) || false))))))))), (bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(true && (_GLF_IDENTITY(false, (false) || false))), ! (! (bool(true && (_GLF_IDENTITY(false, (false) || false)))))))))) || false), true)))))))))) || false))))) && true) && true)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))), ((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), false || (true && (_GLF_IDENTITY(false, (false) || false))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))) && true)))))) && true))))) && true)))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), true)))) && true), false))))))) && true))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true), true, true))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true, true))), bool(_GLF_IDENTITY(bvec3(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))), false, true, true))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true, true))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true, true))), false, false)), bvec3(bvec3(bvec3(bvec3(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true, true))), false, false))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))))), max(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))))))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec2(int(7), 1)))))))))), _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(2, _GLF_IDENTITY((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(37565) : 2))) | (2))), ~ (~ ((2) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(37565) : 2))) | (2))))))));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, false))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, false))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, false))))), false, false))), true))))))))))), false))))))) || (false))), true && ((_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec3(true && (injectionSwitch.x > injectionSwitch.y), true, true))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, false))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, false))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(true && (injectionSwitch.x > injectionSwitch.y), true), true, false))))), false, false))), true))))))))))), false))))))) || (false))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))), true))), _GLF_IDENTITY((bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.9) : injectionSwitch.y))) - tan(0.0))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), ! (! ((bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.9) : injectionSwitch.y))) - tan(0.0))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))) && true))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false)))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false), (! (((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 1.0)), 0.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.6), _GLF_FUZZED(-998.382)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), max(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))).y)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(abs(vec2(9973.2810, -141.331))) : min(injectionSwitch, injectionSwitch)))).y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(abs(vec2(9973.2810, -141.331))) : min(injectionSwitch, injectionSwitch)))).y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))), false))))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-94.32))))) && true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), clamp(_GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(64, 0 ^ (64))))) - _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-51526), ~ (~ (true ? 0 : _GLF_FUZZED(-51526)))))))))), 4);
}
