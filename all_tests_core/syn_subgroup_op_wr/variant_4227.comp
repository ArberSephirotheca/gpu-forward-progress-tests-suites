#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) && true)); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         do
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(4))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (75646 & 0))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true))))))), false, true)))) || false)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 + (7)))), 0 | ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), (true ? dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)) : _GLF_FUZZED(-6325.9865)))), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, 0.0), mat2x4(mat4(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), (true ? dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)) : _GLF_FUZZED(-6325.9865)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(37.18)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-91.31)), bool(false))) < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))))).y)))))))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             do
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(73279) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-75876) : 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-43.06, -5.3, 547.764, -7.7)) : mat2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-68.61)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.7)), bool(false)))), bool(true))), float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))))) ? _GLF_FUZZED(-9133.9204) : 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-39.13)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (bool(true)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), sqrt(0.0), 1.0, exp(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(48.76)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0), mat2(1.0) * (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), log(1.0), 0.0, 0.0, 1.0, 1.0))), 0.0)), 0.0))))), 0.0, 0.0)), float(vec4(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0), mat2(1.0) * (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0))))), 0.0, 0.0)), sin(0.0), 1.0, sqrt(1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), max(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0), mat2(1.0) * (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), log(1.0), 0.0, 0.0, 1.0, 1.0))), 0.0)), 0.0))))), 0.0, 0.0)), float(vec4(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0), mat2(1.0) * (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0))))), 0.0, 0.0)), sin(0.0), 1.0, sqrt(1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), max(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)))))), log(1.0) + (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0), mat2(1.0) * (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), log(1.0), 0.0, 0.0, 1.0, 1.0))), 0.0)), 0.0))))), 0.0, 0.0)), float(vec4(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, tan(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0)), float(vec4(_GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, tan(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0)), (true ? float(mat3x4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, tan(0.0), abs(1.0), 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(538.018))), 0.0, 1.0, 0.0))))), vec4(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0), mat2(1.0) * (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec2(vec2(0.0, 0.0))))), 0.0))))), 0.0, 0.0)), sin(0.0), 1.0, sqrt(1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), max(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), clamp(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), (vec4(0.0, 0.0, 1.0, 1.0)) * vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(138.848, -5.3, 6920.3752, -357.810)) : vec4(1.0, 1.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))) * _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))))))))))) * 1.0))), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8504.9670)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-9105.9017)), float(mix(float(_GLF_FUZZED(8504.9670)), float(1.0), bool(true))), bool(true)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(vec4(mat3((vec4(1.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0)), (vec4(mat3((vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0))) / vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(2700.7590), (vec4(1.0, 1.0, 0.0, 0.0))[3]), vec4(_GLF_FUZZED(vec4(4.3, 630.862, -0.2, 22.22).g), _GLF_FUZZED((false ? _GLF_IDENTITY(-828.488, min(_GLF_IDENTITY(-828.488, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (_GLF_FUZZED(-9.9)) * _GLF_ONE(1.0, injectionSwitch.y))), float(-828.488), bool(true))), -828.488)) : -2.3)), (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(2444.6657)), bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1236.9195, (true ? 1236.9195 : _GLF_FUZZED(546.241))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-602.114)), float(_GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))), bool(true)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1236.9195, (true ? 1236.9195 : _GLF_FUZZED(546.241))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-602.114)), float(_GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))), bool(true)))), 0.0, 0.0), mix(vec3(_GLF_FUZZED(vec2(0.3, 68.37).g), _GLF_FUZZED(7318.1261), _GLF_FUZZED(0.9)), vec3((vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1236.9195, (true ? 1236.9195 : _GLF_FUZZED(546.241))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-602.114)), float(_GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))), bool(true)))), 0.0, 0.0))[0], (vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1236.9195, (true ? 1236.9195 : _GLF_FUZZED(546.241))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-602.114)), float(_GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))), bool(true)))), 0.0, 0.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1236.9195, (true ? 1236.9195 : _GLF_FUZZED(546.241))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(-602.114)), float(_GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))), bool(true)))), bool(true)))), 0.0, 0.0))[2]), bvec3(true, true, true))))), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(cosh(_GLF_IDENTITY(5.8, mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_IDENTITY(_GLF_FUZZED(3.2), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2)))))) - 0.0)))), float(5.8), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0))), 0.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(0.0), 1.0, exp(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.31), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(958.186)), bvec2(true, false))))).x), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(29.62)), bool(false))), 1.0, 0.0, 0.0)))), mat2(1.0) * (vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(29.62)), bool(false))), 1.0, 0.0, 0.0)))))))), 1.0)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(1683.9978, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1683.9978, mix(float(_GLF_FUZZED(6124.1699)), float(1683.9978), bool(true))), determinant(mat3(abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(1683.9978, mix(float(_GLF_FUZZED(6124.1699)), float(1683.9978), bool(true))), (_GLF_IDENTITY(1683.9978, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6124.1699), max(_GLF_FUZZED(6124.1699), _GLF_FUZZED(6124.1699)))), float(1683.9978), bool(true)))) + 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0), (mat2x3(_GLF_IDENTITY(1683.9978, mix(float(_GLF_FUZZED(6124.1699)), float(1683.9978), bool(true))), 1.0, 1.0, 0.0, 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))))), (sqrt(0.0)) * 1.0), 1.0, exp(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(5.0, 4155.6124, -343.734).p)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x, injectionSwitch.x))), 0.0), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))), min(vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3174.3137)), float(0.0), bool(true))), 0.0))) / 1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(vec4(-13.00, 2659.6127, -740.122, -2651.4280).z)), vec2(_GLF_FUZZED(2126.5173), (vec2(1.0, 0.0))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), true)))))), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-8.2), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-8.2), max(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2)))), (float(_GLF_IDENTITY(_GLF_FUZZED(-8.2), max(_GLF_FUZZED(-8.2), _GLF_FUZZED(-8.2))))) - 0.0))))))), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(26.20)), float(1.0), bool(true))), 1.0))), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))), clamp(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED((-703.904 * 0.5))), float(float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0)))))), bool(true))), float(mat2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0)))))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))), (false ? _GLF_FUZZED(vec3(-3.5, -4.9, -12.14)) : _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0)))))), 1.0, exp(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.6)), float(injectionSwitch.x), bool(true)))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-5431.4250)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), 0.0))), 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * (- -175.971))), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, sqrt(0.0)))), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * (- -175.971))), (vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), float(mat2x4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-16.74)), bool(false)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * (- -175.971))), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), 0.0))))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, tan(0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * (- -175.971))), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)), false, true))))))))), mix(float(_GLF_FUZZED(-5895.6908)), float(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), mix(vec4(_GLF_FUZZED((_GLF_IDENTITY(-5.0 * (- -175.971), min(-5.0 * (- -175.971), -5.0 * (- -175.971))))), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 1.0)), 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], max(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], ((vec4(1.0, 1.0, 0.0, 0.0))[3]) - 0.0), clamp(_GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], ((vec4(1.0, 1.0, 0.0, 0.0))[3]) - 0.0), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], ((vec4(1.0, 1.0, 0.0, 0.0))[3]) - 0.0), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], ((vec4(1.0, 1.0, 0.0, 0.0))[3]) - 0.0))), _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], clamp((vec4(1.0, 1.0, 0.0, 0.0))[3], (vec4(1.0, 1.0, 0.0, 0.0))[3], (vec4(1.0, 1.0, 0.0, 0.0))[3]))))), bvec4(true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), bool(true))), dot(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-91.36, -8352.7330, 429.480, -0.0, 1.2, 1396.1354)) : _GLF_IDENTITY(mat2x3(1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0), mat2x3(mat2x4(mat2x3(1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0)))))))), 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((-8781.5426 * 5.6)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (1.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec4(1.0, 1.0, 0.0, 0.0)))))), 1.0), _GLF_IDENTITY((mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-7666.7362, -746.257, -5.7, -91.66)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(float(float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), injectionSwitch.y), 0.0, sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6)))))), mat3x2(mat4x3(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6))))))))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6)))))), mat3x2(mat4x3(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6))))))))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6)))))), mat3x2(mat4x3(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6))))))))))))))))), 1.0, exp(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8849.3584))), injectionSwitch.x))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), clamp(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * (- _GLF_IDENTITY(-175.971, (_GLF_IDENTITY(-175.971, max(-175.971, -175.971))) / sqrt(1.0))))), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), mix(float(_GLF_FUZZED(-5895.6908)), float(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * _GLF_IDENTITY((- -175.971), float(vec3(_GLF_IDENTITY((- -175.971), clamp((- -175.971), (- -175.971), (- -175.971))), 1.0, 1.0))))), (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), ((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_IDENTITY(_GLF_FUZZED(7091.4946), min(_GLF_FUZZED(7091.4946), _GLF_IDENTITY(_GLF_FUZZED(7091.4946), (_GLF_FUZZED(7091.4946)) - 0.0)))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))))))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-99.35, -4.7)) : vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))), 0.0))), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), ((mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-7666.7362, -746.257, -5.7, -91.66)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(float(float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), injectionSwitch.y), 0.0, sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6)))))), mat3x2(mat4x3(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6))))))))))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6)))))), mat3x2(mat4x3(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6))))))))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), _GLF_IDENTITY(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6)))))), mat3x2(mat4x3(mat3x2(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0), (true ? mat3x2(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), max(float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))), float(mat2x3(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-7.1)), float(sqrt(0.0)), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (_GLF_IDENTITY(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), min(true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)), true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(-31.50, 1.1, 1.2)))))))))), sqrt(1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(abs(0.0)), 0.0) : _GLF_FUZZED(mat3x2(8.1, -55.61, 32.48, -55.84, 893.757, -0.6))))))))))))))))), 1.0, exp(0.0), sqrt(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8849.3584))), injectionSwitch.x))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), clamp(vec4(1.0, 1.0, 0.0, 0.0), vec4(1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), (vec4(1.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * (- _GLF_IDENTITY(-175.971, (_GLF_IDENTITY(-175.971, max(-175.971, -175.971))) / sqrt(1.0))))), (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(7091.4946)), vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), mix(float(_GLF_FUZZED(-5895.6908)), float(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED((-5.0 * _GLF_IDENTITY((- -175.971), float(vec3(_GLF_IDENTITY((- -175.971), clamp((- -175.971), (- -175.971), (- -175.971))), 1.0, 1.0))))), (vec4(1.0, 1.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), ((vec4(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))[2], _GLF_IDENTITY(_GLF_FUZZED(7091.4946), min(_GLF_FUZZED(7091.4946), _GLF_IDENTITY(_GLF_FUZZED(7091.4946), (_GLF_FUZZED(7091.4946)) - 0.0)))), vec4((vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0))[0], _GLF_FUZZED(9.1), _GLF_FUZZED(862.573), (vec4(1.0, 1.0, 0.0, 0.0))[3]), bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))))))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-99.35, -4.7)) : vec2(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), determinant(mat3(sqrt(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))))), 0.0))), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))))));
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2458.4037)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.7)), float(injectionSwitch.y), bool(true)))), bool(true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec2((injectionSwitch.x > injectionSwitch.y) || false, false))))) || false)))))))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true)))) && true)); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -56.67)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))));
    }
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), clamp((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (0u & uvec3(47490u, 180162u, 104899u).y), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) & 1u), 1u), (uvec4(subgroup_size, (0u & uvec3(47490u, 180162u, 104899u).y), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) & 1u), 1u)) + uvec4(0u, 0u, 0u, 0u)))), (subgroup_size) | 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))) + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)))), injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) - 0.0))), (uvec2(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)) - 0.0)))) | uvec2(0u, 0u))), (true ? uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, (1u & (1u & 1u))))), (subgroup_size) | 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.8)), float(0.0), bool(true))), 0.0)), injectionSwitch.x)))) : _GLF_FUZZED(subgroup_id)))) - 0u)), uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | 0u, _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | _GLF_IDENTITY(0u, max(0u, 0u))) >> _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u))), (subgroup_size) | 0u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((min(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) >> 0u), (subgroup_size) | 0u)), ((min(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) >> 0u), (subgroup_size) | 0u))) | ((min(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) >> 0u), (subgroup_size) | 0u)))), (~ (min(_GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) >> 0u), (subgroup_size) | 0u))) >> 0u)))))))))) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) >> 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) >> 0))))), (true ? ~ (_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) >> 0))))) : _GLF_FUZZED(-44102)))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(packHalf2x16(uintBitsToFloat(uvec2(148298u, 193015u)))))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(48255u) : workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(virtual_gid)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u + (workgroup_base + subgroup_id * subgroup_size))))))) / 1u))), workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)) >> 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)), max((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (subgroup_local_id + 1)))) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) + 0u) | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> ((0u & 5402u) & 31870u)), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), max((_GLF_IDENTITY(1u, (1u) ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), min((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))) | ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), uint(uint(1u << _GLF_IDENTITY(uint(7u), uint(7u)))))) * 1u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), max(1u << _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), ~ (~ (1u << _GLF_IDENTITY(uint(7u), uint(7u))))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) - 0u)))))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size), ~ (~ (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) >> 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> (165656u & 0u), 0u + ((workgroup_base + subgroup_id * subgroup_size) >> (165656u & 0u)))))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u, min((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u, ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u) | ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (0u) >> 0u))))), (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)), workgroup_base)), (workgroup_base) | _GLF_IDENTITY(0u, (0u) >> 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)), workgroup_base)), (workgroup_base) | _GLF_IDENTITY(0u, (0u) >> 0u))) : _GLF_FUZZED(num_workgroup)))))) / 1u) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED((true ? subgroup_id : virtual_gid)), (_GLF_FUZZED((true ? subgroup_id : virtual_gid))) | (_GLF_FUZZED((true ? subgroup_id : virtual_gid))))))) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_local_id + 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((23493 * -92770)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | 0))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) | (uvec2(subgroup_local_id, 0u))))) + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u)))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))))) * (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) ^ 1u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) >> 0u)), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (0u) >> 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED((true ? subgroup_id : virtual_gid))))) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), uint(uint(_GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), ~ (~ (max((subgroup_local_id + 1), (subgroup_local_id + 1)))))))))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))), (subgroup_local_id + 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u, 0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(uint(6u), 1u, 0u, 0u)))))))) + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u)))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))))) * (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0)))) ^ 1u)) % _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) >> 0u))), (uint((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (0u) >> 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED((true ? subgroup_id : virtual_gid))))) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-13552) : 1))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u)))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u)))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))))), 1u, 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))), 0u + ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u)))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), min((_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) - 0u) / (1u | 1u))))), 1u, 1u)) >> uvec3(0u, 0u, 0u)))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) ^ 0u))) >> 0u)))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, (0u ^ 0u)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + 1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | _GLF_IDENTITY(1u, (1u) * 1u)))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u, 0u ^ ((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), _GLF_IDENTITY(min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u)), max(_GLF_IDENTITY(min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u)), (min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u))) | (min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u)))), min(uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u), uvec2(_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))), 0u))))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)) % subgroup_size)) >> 0u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED((+ workgroup_base)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u) + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1)))) / (1u | 1u))) * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u, 0u | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / round(length(normalize(vec2(1.0, 1.0)))))) ^ 1u)))) % subgroup_size)) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, false || (false))))), bool(bool((! ((_GLF_IDENTITY(false, false || (false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(0u, (0u) ^ 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : 0u))), uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, clamp(_GLF_IDENTITY((0u) * 1u, (true ? (0u) * 1u : _GLF_FUZZED(194032u))), _GLF_IDENTITY((0u) * 1u, (true ? (0u) * 1u : _GLF_FUZZED(subgroup_id))), (0u) * 1u))))))))) + (next_virtual_gid))], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), clamp(_GLF_IDENTITY(max(64, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1), max(ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1), ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1)))))), max(max(64, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1), max(ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1), ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1)))))), max(64, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1), max(ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1), ivec4(_GLF_IDENTITY(64, (64) | 0), 0, 0, 1)))))))), max(64, 64), max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) << 0))))), 4);
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & _GLF_IDENTITY(int(104455u), _GLF_IDENTITY(min(int(104455u), int(104455u)), min(min(int(104455u), int(104455u)), min(int(104455u), int(104455u))))))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), max(vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.x) - 0.0 : _GLF_FUZZED((-9319.4244 * ldexp(393.748, -12112)))))))) < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.2)), vec2(_GLF_FUZZED((false ? 46.37 : 5464.9756)), (injectionSwitch)[1]), bvec2(false, true))).x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.7, _GLF_IDENTITY(-91.40, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(-91.40, mix(float(-91.40), float(_GLF_FUZZED(9.8)), bool(false)))), bool(true))))) : injectionSwitch)).x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / abs(vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), injectionSwitch))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.7, -91.40)) : injectionSwitch)).x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch))))).y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.2)), vec2(_GLF_FUZZED((false ? 46.37 : 5464.9756)), (injectionSwitch)[1]), bvec2(false, true))).x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), float(float(float(injectionSwitch.x)))))))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.7, _GLF_IDENTITY(-91.40, mix(float(_GLF_FUZZED(-2.9)), float(_GLF_IDENTITY(-91.40, mix(float(-91.40), float(_GLF_FUZZED(9.8)), bool(false)))), bool(true))))) : injectionSwitch)).x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, 1420.5183)) : injectionSwitch)), 0.0, 0.0, 1.0, 0.0))), injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))) / abs(vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), injectionSwitch))))).y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(vec4(62.15, 3481.4272, 269.577, 52.76))))).x < injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5261.2535, -0.2)))), vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).y) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.7, -91.40)) : injectionSwitch)).x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-22.30, -1.9)) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0))), injectionSwitch))))).y) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) || false)) || false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) * vec2(1.0, 1.0)).y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = ((0 ^ 1) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && _GLF_IDENTITY(true, ! (! (true))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.2, mix(float(_GLF_FUZZED(7.6)), float(-1.2), bool(true)))) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) * 1.0))) < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, false, true)))), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5643.6278) : injectionSwitch.x)) < injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5643.6278) : injectionSwitch.x)) < injectionSwitch.y)), true), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), false || (! (bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED((93.55 * -2.6))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))))))) && (true))))))))))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false, true))), false)))))))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = (1 | _GLF_IDENTITY(1, (1) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | (0 ^ 0)) | 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                      barrier();
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
                          barrier();
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(_GLF_IDENTITY(bool((_GLF_DEAD(false)) || false), (_GLF_IDENTITY(bool((_GLF_DEAD(false)) || false), ! (! (bool((_GLF_DEAD(false)) || false))))) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))), true, false, true))))))) || false))
                                        {
                                         if(_GLF_DEAD(false))
                                          {
                                           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                                            {
                                             barrier();
                                            }
                                          }
                                         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                          barrier();
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         do
                                          {
                                           barrier();
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                    }
                                   barrier();
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                    {
                                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                    }
                                  }
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))))))));
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(5550.4374, -9245.4611, -359.886, 7.1))) : injectionSwitch.y)))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
              {
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(74.91), _GLF_FUZZED(7620.1822)), bvec2(false, false))), 0.0, 0.0))).x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)), virtual_gid))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 0)), clamp(int(ivec3(64, 1, 0)), int(ivec3(64, 1, _GLF_IDENTITY(0, (0) >> 0))), int(ivec3(64, 1, 0))))), _GLF_IDENTITY(0, 0 ^ (0)));
 if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(uvec4(read, (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) & 1u), 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(4, (4) >> 0))))), (true ? 4 : _GLF_FUZZED(-44803))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) - 0)), (~ (_GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, max(0, 0))))) | (~ (_GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, 0 + (0))))))))) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64), min((64), (64))) - (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | 0))) ^ 1)))), 4);
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec4(_GLF_IDENTITY(int(3), int(3)), 1, 1, 0)))) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 1)))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0)); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.6, -764.057)) : injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), false || (true))))
      {
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(48712) : int(6)))) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = ((1 ^ 1) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             subgroupAll(false);
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) - 0)))) | (_GLF_IDENTITY(4, min(4, 4)))), 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(false)))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, false))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) || false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0)))); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((_GLF_IDENTITY(32771, (32771) ^ 0) , 6.1)) : injectionSwitch.y)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))))) && true) || false)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + tan(0.0)), injectionSwitch.x))); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false)))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                             barrier();
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
                                barrier();
                              }
                            }
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) || false)))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(min(14.00, -536.969)) : injectionSwitch.x))) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(min(14.00, -536.969)) : injectionSwitch.x))) / 1.0 : _GLF_FUZZED((-6228.4268 * (-7.1)))))) > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                         do
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-4.8)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-4.8), (false ? _GLF_FUZZED(-1018.9601) : _GLF_FUZZED(-4.8)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-4.8))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-4.8))), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-4.8)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-4.8)))))))))) && true), false, false, false)))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true)))))))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1737.5665), _GLF_FUZZED(-1002.2566)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1737.5665), _GLF_FUZZED(-1002.2566)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))), true)))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bool(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))) && true), false))))))), true), true, true))))))) || false))))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(37.10)))))))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) && true)))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 + (int(3)))) >> 0)))); _injected_loop_counter ++)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED((+ float(157392u)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true))), mat2(1.0) * (injectionSwitch)).y))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
}
