#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id;
 GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz = GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.w = subgroup_local_id;
 GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.y = GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.w;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.w = workgroup_id;
 GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.z = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.w;
 uint workgroup_base = workgroup_size * GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.z;
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z = workgroup_base;
 uint virtual_gid = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.y * subgroup_size + GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.y;
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.z + GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.y * subgroup_size + ((GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.y + 1) % subgroup_size);
 GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.x = next_virtual_gid;
 GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.x = GLF_merged4_0_1_16_1_1_11_2_1_14_3_1_12next_virtual_gidsubgroup_idworkgroup_baseworkgroup_id.x;
 atomicStore(buf[GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.x], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(GLF_merged2_0_3_77_3_1_17GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_idsubgroup_local_id.xyz.y + 1 < subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
   subgroupAll(true);
  }
}
