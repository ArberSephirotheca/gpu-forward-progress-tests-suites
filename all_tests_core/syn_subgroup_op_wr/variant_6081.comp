#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), vec2(1.0, 1.0) * (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, float(mat2x4((injectionSwitch.y) / 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), ((injectionSwitch.y) / 1.0) - 0.0))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0), (mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0)) * mat4(1.0)))))) * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) * mat3(1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) * round(length(normalize(1.0)))))), mix(float(_GLF_FUZZED(4.9)), float(float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(6696.0136)), max(float(_GLF_FUZZED(6696.0136)), float(_GLF_FUZZED(6696.0136)))), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))))))), bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), ~ (~ (workgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) ^ 0u)) | 0u, _GLF_IDENTITY(((subgroup_id) | 0u) | (_GLF_IDENTITY((subgroup_id) | 0u, 0u + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | (0u ^ (subgroup_id)))) >> 0u))) | 0u), (((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u)) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (((subgroup_id) | 0u) | (_GLF_IDENTITY((subgroup_id) | 0u, 0u + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | (0u ^ (subgroup_id)))) >> 0u))) | 0u), (((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u)) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (((subgroup_id) | 0u) | (_GLF_IDENTITY((subgroup_id) | 0u, 0u + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (_GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | (0u ^ (subgroup_id)))) >> 0u))) | 0u), (((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | 0u)) | 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(packSnorm4x8(vec4(3.2, 41.35, 4498.5131, 0.1))))))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base)))))) + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size);
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 1u, 1u, 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((subgroup_local_id % 2) == 0, false, true)), ! (! (bool(_GLF_IDENTITY(bvec3((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), int(ivec2(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))))))) == 0, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), int(ivec2(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))))))) == 0, false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), int(ivec2(_GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0)))), int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(2, (2) ^ (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) << 0))))))) == 0, false, true), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0))), 0)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), ! (_GLF_IDENTITY(! (bool(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0))), (false ? _GLF_FUZZED(36202) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0))))), 0)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bool(bvec4(_GLF_IDENTITY(! (bool(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0))), 0)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), ! (! (! (bool(bvec3((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(int((0))), (1 & 1) * (int(int((0)))))) | (0))) << 0))), 0)), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), ! (! (! _GLF_IDENTITY((bool(bvec3((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (2) | (_GLF_IDENTITY(2, (2) / 1)))) == 0, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), _GLF_IDENTITY(bool(bvec2((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), true)), true && (bool(bvec2((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), true)))))), ((_GLF_IDENTITY((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), true)), ! (! (bool(bvec2((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), true))))), true && (bool(bvec2((bool(bvec3((subgroup_local_id % 2) == 0, false, true))), true))))))) || false)))))))))
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-603.197)), float(0.0), bool(true)))) - log(1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(0.0, tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7933.3483)), float(1.0), bool(true))), min(1.0, 1.0)), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2837.7390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(true))), tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) * 1.0), float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-6.7, -1.9, 3.1, -1.4))))), 1.0, 0.0))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-457.559)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))) : _GLF_FUZZED(tan(-7144.8371)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-603.197)), float(0.0), bool(true)))) - log(1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(0.0, tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7933.3483)), float(1.0), bool(true))), min(1.0, 1.0)), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2837.7390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(true))), tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) * 1.0), float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-6.7, -1.9, 3.1, -1.4))))), 1.0, 0.0))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-457.559)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))) : _GLF_FUZZED(tan(-7144.8371)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-603.197)), float(0.0), bool(true)))) - log(1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(0.0, tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7933.3483)), float(1.0), bool(true))), min(1.0, 1.0)), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2837.7390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(true))), tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) * 1.0), float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-6.7, -1.9, 3.1, -1.4))))), 1.0, 0.0))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-457.559)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))) : _GLF_FUZZED(tan(-7144.8371)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-603.197)), float(0.0), bool(true)))) - log(1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(0.0, tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7933.3483)), float(1.0), bool(true))), min(1.0, 1.0)), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2837.7390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(true))), tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) * 1.0), float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-6.7, -1.9, 3.1, -1.4))))), 1.0, 0.0))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-457.559)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))) : _GLF_FUZZED(tan(-7144.8371)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-603.197)), float(0.0), bool(true)))) - log(1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(0.0, tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7933.3483)), float(1.0), bool(true))), min(1.0, 1.0)), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2837.7390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(true))), tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) * 1.0), float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-6.7, -1.9, 3.1, -1.4))))), 1.0, 0.0))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-457.559)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))) : _GLF_FUZZED(tan(-7144.8371)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) / 1.0), 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(0.0) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-603.197)), float(0.0), bool(true)))) - log(1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY(0.0, tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))), abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7933.3483)), float(1.0), bool(true))), min(1.0, 1.0)), abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2837.7390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (0.0)))), mix(float(_GLF_FUZZED((-7.2 - -6208.2435))), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.3)), float(0.0), bool(true))), tan(0.0) + (0.0))))), bool(true))), sqrt(0.0))), (true ? float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))) * 1.0), float(mat3x2(0.0, 0.0, sqrt(1.0), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, false || (true)) ? mat2(1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2(-6.7, -1.9, 3.1, -1.4))))), 1.0, 0.0))), abs(1.0), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-457.559)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.48)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0)), bool(true))), 1.0, abs(0.0), 0.0, sqrt(0.0))) : _GLF_FUZZED(0.1)))) : _GLF_FUZZED(tan(-7144.8371))))))))))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), max(buf[virtual_gid], buf[virtual_gid])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))) | (buf[virtual_gid])))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), max(buf[virtual_gid], buf[virtual_gid])))), 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 0, 0, 0), (ivec4(2, 0, 0, 0)) - ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(2, 0, 0, 0), (ivec4(2, 0, 0, 0)) - ivec4(0, 0, 0, 0)))) >> 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.2))))) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.2))))) * (injectionSwitch), _GLF_IDENTITY(vec2(mat4x2(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.2))))) * (injectionSwitch), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, cos(0.0), 1.0, 1.0)), vec2(mat4x3(vec2(mat4x2(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.2))))) * (injectionSwitch), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, cos(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.2))))) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), true && (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))) || false), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0)))).y)))), true && (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))))))))) || false)))), true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-828.356))), injectionSwitch[1])).x > injectionSwitch.y))) && true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) + vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) + vec2(0.0, 0.0))).x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2(_GLF_FUZZED((-78.93 - 7.4)), _GLF_FUZZED(37.31)), bvec2(false, false))))) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-922.601)), bool(false)))))) - 0.0))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(next_virtual_gid)))], 4, _GLF_IDENTITY(64, (64) - 0), 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(next_virtual_gid)))], 4, _GLF_IDENTITY(64, (64) - 0), 2)) << 0u);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u ^ (virtual_gid), max(0u ^ (virtual_gid), 0u ^ (virtual_gid))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)) >> 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), ((_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))) << 0u)) - 0u), (~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))) - _GLF_IDENTITY(0u, max(0u, 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid)))) >> 0u))), (~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))) - _GLF_IDENTITY(0u, max(0u, 0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, (0u) << 0u))) ^ _GLF_IDENTITY((virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))))))) - _GLF_IDENTITY(0u, max(0u, 0u))))) - 0u) : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))) - _GLF_IDENTITY(0u, max(0u, 0u))))))), _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))) >> 0u)], _GLF_IDENTITY(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) | (read)), read)), ~ (~ (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) | (read)), read))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  barrier();
}
