#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 vec2 _f0;
} ;

struct _GLF_struct_30 {
 mat2x4 _f0;
 bvec3 _f1;
 uint subgroup_id;
 _GLF_struct_29 _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 ivec2 _f1;
 uvec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_25 {
 uvec3 _f0;
 vec4 _f1;
 float _f2;
 uvec4 _f3;
 bvec3 _f4;
 ivec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_24 {
 mat3x4 _f0;
 vec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_23 {
 int _f0;
 vec4 _f1;
 bvec2 _f2;
 ivec3 _f3;
 int _f4;
 vec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_26 {
 mat4x2 _f0;
 _GLF_struct_23 _f1;
 mat4x3 _f2;
 _GLF_struct_24 _f3;
 uint _f4;
 _GLF_struct_25 _f5;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 vec3 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_26 _f2;
 mat2x4 _f3;
 _GLF_struct_27 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_18 {
 bvec2 _f0;
 vec4 _f1;
 uvec4 _f2;
 mat3x2 _f3;
 uvec2 _f4;
 bool _f5;
 vec2 _f6;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 mat4 _f1;
 mat4x2 _f2;
 bvec3 _f3;
 uint _f4;
 bvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 mat2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_13 {
 uint subgroup_size;
 mat4x3 _f0;
 ivec3 _f1;
 int _f2;
 mat2 _f3;
 bvec4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 ivec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 _GLF_struct_15 _f1;
 uvec4 _f2;
 uint _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec4 _f1;
 uvec3 _f2;
 vec2 _f3;
 vec3 _f4;
 bvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat3x4 _f1;
 vec2 _f2;
 ivec4 _f3;
 mat4x2 _f4;
 uvec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 mat2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat2x3 _f4;
 ivec3 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 int _f1;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 bvec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 float _f1;
 bool _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uvec3 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 mat3 _f4;
 mat3x2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_10 _f2;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_30(mat2x4(1.0), bvec3(true), gl_SubgroupID, _GLF_struct_29(vec2(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(mat4x2(1.0), _GLF_struct_15(_GLF_struct_12(bvec3(true), ivec4(1), bvec3(true)), _GLF_struct_13(gl_SubgroupSize, mat4x3(1.0), ivec3(1), 1, mat2(1.0), bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))), mat2(1.0)), _GLF_struct_14(bvec3(true), vec2(1.0))), uvec4(1u), 1u, _GLF_struct_19(_GLF_struct_16(mat4x3(1.0), mat2x4(1.0), ivec2(1), mat2(1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8130.1087)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5194.2391)), float(0.0), bool(true)))), bool(true))), 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-5075.7385))), sin(0.0), 0.0, 1.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3320.9200) : 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat2(0.0, 1.0, 0.0, 0.0))), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, clamp(_GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, (1.0) - 0.0)), _GLF_IDENTITY((1.0) - 0.0, float(mat4((1.0) - 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0))), (1.0) - 0.0))), 1.0, 1.0)), 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-12.50))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(1.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0))))) + mat3(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1747.9636)), float(0.0), bool(true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.9)), bool(false)))))), _GLF_IDENTITY(float(mat4(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, length(0.0) + (1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8291.1704 / -5.6))), float(1.0), bool(true))), 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, length(0.0) + (1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8291.1704 / -5.6))), float(1.0), bool(true))), 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, length(0.0) + (1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8291.1704 / -5.6))), float(1.0), bool(true))), 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat4(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0)))), (_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true)))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(40.31)), float(0.0), bool(true))) : _GLF_FUZZED(4261.7609))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat4(float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), 1.0, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), (determinant(mat3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0))) - 0.0), 1.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0), transpose(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(1.0)), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(1.0)), vec4(1.0, 1.0, 0.0, 0.0)))), 1.0)), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0))))), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0)), mat3(mat4(transpose(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0))))))), (_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(transpose(mat3(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(exp(0.7)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) + 0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)), 1.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat3(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3369.5138) : 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), _GLF_struct_17(mat4x3(1.0), mat4(1.0), mat4x2(1.0), bvec3(true), 1u, bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), uvec3(1u)), _GLF_struct_18(bvec2(true), vec4(1.0), uvec4(1u), mat3x2(1.0), uvec2(1u), true, vec2(1.0)), uvec2(1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + (_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), (float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))) - 0.0)))), _GLF_FUZZED(8.8)), vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  return;
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(mat2x3(1.0), _GLF_struct_22(_GLF_struct_21(uvec2(1u), vec3(1.0), workgroup_size * workgroup_id), vec2(1.0)), _GLF_struct_26(mat4x2(1.0), _GLF_struct_23(1, vec4(1.0), bvec2(true), ivec3(1), 1, vec4(1.0), mat2(1.0)), mat4x3(1.0), _GLF_struct_24(mat3x4(1.0), vec2(1.0), vec4(1.0)), 1u, _GLF_struct_25(uvec3(1u), vec4(1.0), 1.0, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u)), uvec4(1u))) >> _GLF_IDENTITY(uvec4(1u), uvec4(1u)))), bvec3(true), ivec2(1), mat4x3(1.0))), mat2x4(1.0), _GLF_struct_27(vec4(1.0), ivec2(1), uvec4(1u), 1u), bvec3(true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_2(_GLF_struct_0(true), _GLF_struct_1(mat4x3(1.0), uvec3(1u), ivec3(1), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.4) : 1.0))), mat3(1.0), mat3x2(1.0), mat4(_GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_struct_5(ivec3(1), 1.0, true, _GLF_struct_3(mat2x4(1.0), bvec4(true), uvec2(1u)), _GLF_struct_4(uvec2(1u), 1), 1u), _GLF_struct_10(_GLF_struct_6(mat4x3(1.0), mat4x2(1.0)), mat2(1.0), _GLF_struct_7(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), bool(bvec4(_GLF_IDENTITY(true && (true), (true && (true)) || false), false, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), bool(bvec4(_GLF_IDENTITY(true && (true), (true && (true)) || false), false, true, true))))), (_GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true)))))), bool(bvec4(_GLF_IDENTITY(true && (true), (true && (true)) || false), false, true, true)))))) || false)))))), mat3x4(1.0), vec2(1.0), _GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(ivec4(-58962, 57470, 38684, 36823)))), ivec4(1))), mat4x2(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(106532u) : 1u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(106532u) : 1u)))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(106532u) : 1u))))) << 0u), 1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(_GLF_IDENTITY(1u, (1u) ^ (0u | 0u)))))), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(1u), uvec4(1u))), vec4(1.0)), _GLF_struct_8(mat3x2(1.0), uvec4(1u), uvec3(1u), vec2(1.0), vec3(1.0), bvec4(true), 1u), mat2x3(1.0), ivec3(1), _GLF_struct_9(mat4(1.0), mat3x4(1.0), mat4x3(1.0), mat3x4(1.0))), _GLF_struct_replacement_28._f1._f0.workgroup_base + _GLF_struct_replacement_31._f0.subgroup_id * _GLF_struct_replacement_20._f1._f1.subgroup_size + subgroup_local_id);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), mix(float(_GLF_IDENTITY(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), min(_GLF_IDENTITY(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), (asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))) - 0.0), asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), float(_GLF_FUZZED(1.7)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) - 0.0, float(_GLF_IDENTITY(vec2((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) - 0.0, 1.0), mix(vec2(_GLF_FUZZED(-815.719), _GLF_FUZZED((false ? 648.997 : -5.8))), vec2((vec2((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) - 0.0, 1.0))[0], (vec2((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) - 0.0, 1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), mix(float(_GLF_IDENTITY(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), min(_GLF_IDENTITY(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), (asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), clamp(float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), min(float(_GLF_FUZZED(-262.799)), float(_GLF_FUZZED(-262.799)))), float(_GLF_FUZZED(-262.799)))), bool(false))))) - 0.0), asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), float(_GLF_FUZZED(1.7)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(_GLF_IDENTITY(6.9, (true ? 6.9 : _GLF_FUZZED(-30.64))), _GLF_IDENTITY(mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(false, true)))))))) || false)) : _GLF_FUZZED(-1171.9598))))))), _GLF_IDENTITY(_GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), float(_GLF_IDENTITY(vec3(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)), (vec3(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(_GLF_IDENTITY(-262.799, min(_GLF_IDENTITY(-262.799, max(-262.799, _GLF_IDENTITY(-262.799, clamp(-262.799, -262.799, -262.799)))), -262.799)))) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))), mix(float(_GLF_FUZZED(243.935)), float(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))), (_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))) + 0.0)))))))) + 0.0), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)), 0.0 + (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))))) - 0.0, float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0))))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) + 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(_GLF_IDENTITY(-262.799, clamp(-262.799, -262.799, _GLF_IDENTITY(-262.799, clamp(-262.799, -262.799, -262.799)))))), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, _GLF_IDENTITY(mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)), clamp(mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)), mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)), mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(_GLF_IDENTITY(-262.799, float(mat4x2(-262.799, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(_GLF_IDENTITY(6.9, (6.9) - 0.0)), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))) - 0.0, 1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-815.719), _GLF_FUZZED((false ? 648.997 : -5.8))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_FUZZED(-815.719), _GLF_FUZZED((false ? 648.997 : -5.8))))), vec2((vec2((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(_GLF_IDENTITY(6.9, 1.0 * (6.9)), mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), float(mat4(float(6.9), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), sin(length(0.0)), 1.0, 0.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(_GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9)), mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))), mix(float(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))), float(_GLF_FUZZED(-460.272)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) - 0.0, 1.0))[0], (vec2((_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true, true)))))))))) || false)))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8357.3794, 4.1)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), clamp(max((_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), _GLF_IDENTITY(float(_GLF_FUZZED(-262.799)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(8.9)), float(float(injectionSwitch.x)), bool(true)))), (float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(8.9)), float(float(injectionSwitch.x)), bool(true))))) + 0.0)), injectionSwitch.x)) < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(8.9)), float(float(injectionSwitch.x)), bool(true)))), (float(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(8.9)), float(float(injectionSwitch.x)), bool(true))))) + 0.0)), injectionSwitch.x)) < injectionSwitch.y)))) ? float(_GLF_FUZZED(-262.799)) : _GLF_FUZZED(-8.1)) + log(1.0)))), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), _GLF_IDENTITY(max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(_GLF_IDENTITY(float(6.9), (float(6.9)) - 0.0), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))), (max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))) + 0.0), max((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))), 0.0 + (_GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false)))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(678.847, 2.7)))).x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_FUZZED(asin(_GLF_IDENTITY(6.9, mix(float(6.9), float(_GLF_FUZZED(-262.799)), bool(false))))))) - 0.0)))))) - 0.0, 1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, abs(1.0))), min(float(mat2x4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, abs(1.0))), float(mat2x4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, abs(1.0)))))), 1.0)), 0.0, sqrt(abs(_GLF_IDENTITY(0.0, (0.0) * 1.0))), log(1.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_28._f1._f0.workgroup_base + _GLF_struct_replacement_31._f0.subgroup_id * _GLF_struct_replacement_20._f1._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, min(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(674.559)), bool(false))), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(961.349), _GLF_FUZZED(7620.0389)), bvec2(false, false))).x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_11.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_20._f1._f1.subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_20._f1._f1.subgroup_size, ! (! (subgroup_local_id + 1 < _GLF_struct_replacement_20._f1._f1.subgroup_size)))))), (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, clamp(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, max(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size))))), clamp((_GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, clamp(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, max(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size))))), (_GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, clamp(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, max(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size))))), (_GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, clamp(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_20._f1._f1.subgroup_size, max(_GLF_struct_replacement_20._f1._f1.subgroup_size, _GLF_struct_replacement_20._f1._f1.subgroup_size))))))) - _GLF_IDENTITY(0u, (0u) | 0u))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_struct_replacement_11.virtual_gid], read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_11.virtual_gid, ~ (~ (_GLF_struct_replacement_11.virtual_gid)))], read, 4, 64, 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
