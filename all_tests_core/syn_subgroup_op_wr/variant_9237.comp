#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-985.717)), bool(false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-985.717)), bool(false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, exp(0.0), 1.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, sin(0.0), exp(0.0), 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, sin(0.0))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, abs(0.0))), vec2(1.0, 1.0) * (vec2(mat2(injectionSwitch, 0.0, abs(0.0)))))))).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.3, -998.075)) : injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.6, -7.7)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size))))) / 1u)))), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / 1u, ((workgroup_size) / 1u) | 0u)))) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id) / 1u, min((workgroup_id) / 1u, (workgroup_id) / 1u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id) / 1u, min((workgroup_id) / 1u, (workgroup_id) / 1u))), clamp(~ (_GLF_IDENTITY((workgroup_id) / 1u, min((workgroup_id) / 1u, (workgroup_id) / 1u))), ~ (_GLF_IDENTITY((workgroup_id) / 1u, min((workgroup_id) / 1u, (workgroup_id) / 1u))), ~ (_GLF_IDENTITY((workgroup_id) / 1u, min((workgroup_id) / 1u, (workgroup_id) / 1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((workgroup_id) / 1u, 0u, 1u), min(uvec3((workgroup_id) / 1u, 0u, 1u), uvec3((workgroup_id) / 1u, 0u, 1u)))), ~ _GLF_IDENTITY((~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u)))), ~ (~ ((~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((workgroup_id) / 1u, 0u, 1u), (_GLF_IDENTITY(uvec3((workgroup_id) / 1u, 0u, 1u), max(uvec3((workgroup_id) / 1u, 0u, 1u), uvec3((workgroup_id) / 1u, 0u, 1u)))) | uvec3(0u, 0u, 0u))), 0u | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_id), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) - 0u)))))) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, _GLF_IDENTITY(1u, ~ (~ (1u)))))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))))) * 1u), clamp(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u)))))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))) + (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))) * 1u), _GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3((workgroup_id) / 1u, 0u, 1u))), min((uint(uvec3((workgroup_id) / 1u, 0u, 1u))), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))), _GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), uint(uvec2((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), 1u))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u)))))))), ~ (~ (uint(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), uint(uvec2((_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), 1u))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))))))))))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_id) / 1u, (_GLF_IDENTITY((workgroup_id) / 1u, ((workgroup_id) / 1u) >> (0u & 73280u))) / 1u), 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u) * (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) >> 0u)))))), _GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))))) * 1u), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u)))))) >> 0u)))), _GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) / 1u, 0u, 1u)), (uint(uvec3((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))))) * 1u)) | (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))))), (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), max(_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), ~ (~ (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))), _GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec3((workgroup_id) / 1u, 0u, 1u)), (uint(uvec3((workgroup_id) / 1u, 0u, 1u))) | (uint(uvec3((workgroup_id) / 1u, 0u, 1u))))))))) * 1u))))))) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) / 1u, max((subgroup_id * subgroup_size) / 1u, (subgroup_id * subgroup_size) / 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            return;
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-41.29)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(0u, (0u) | 0u) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))), 0u ^ (workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (false)))) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-970.826), min(_GLF_FUZZED(-970.826), _GLF_FUZZED(-970.826)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(tan(vec2(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)))), mix(vec2((tan(vec2(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)))))[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-810.912), (tan(vec2(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), false))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-970.826), min(_GLF_FUZZED(-970.826), _GLF_FUZZED(-970.826)))), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false))), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(tan(vec2(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)))), mix(vec2((tan(vec2(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)))))[0], _GLF_FUZZED(8.4)), vec2(_GLF_FUZZED(-810.912), (tan(vec2(0.0, _GLF_IDENTITY(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (0.0)))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), false))) || false)))) && true), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), 0u | (workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size))), workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size), (workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size)) | (workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) >> 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), ! (! (bool(bool(true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))), (false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))), ! (! (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))) || false)))))))) || false), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))), bool(bvec2(false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))), false)))) || false), true, false))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec4(false, true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(_GLF_IDENTITY(true, true && (true))))))))))))))))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)))) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) << 0u);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) << 0u), 0u | (_GLF_IDENTITY(2u, (2u) | (2u)))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u), clamp(uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) * 1u), 0u | (uint(2u))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << (0u & 27408u))), uint(2u))) * 1u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u))))), 1u, 1u), uvec4(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))) ? _GLF_FUZZED(subgroup_base) : (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), max(1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, max(2u, 2u)), (_GLF_IDENTITY(2u, max(2u, 2u))) - 0u))), 1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))))), 1u, 1u), uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), max(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u ^ (uint(2u)), (0u ^ (uint(2u))) / 1u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u))))), ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (5u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((~ (5u)), 0u | ((~ (5u)))), 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY((~ (_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, (5u) ^ 0u), 5u)))))), 0u | ((~ (5u)))), 0u, 1u))), (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY((~ (_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, (5u) ^ 0u), 5u)))))), 0u | ((~ (5u)))), 0u, 1u))), max((uint(uvec3(_GLF_IDENTITY((~ (_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, (5u) ^ 0u), 5u)))))), 0u | ((~ (5u)))), 0u, 1u))), (uint(uvec3(_GLF_IDENTITY((~ (_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, min(_GLF_IDENTITY(5u, (5u) ^ 0u), 5u)))))), 0u | ((~ (5u)))), 0u, 1u)))))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (5u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((~ (5u)), 0u | ((_GLF_IDENTITY(~ (5u), 0u | (_GLF_IDENTITY(~ (5u), uint(_GLF_IDENTITY(uvec2(~ (5u), 0u), ~ (~ (uvec2(~ (5u), 0u))))))))))), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY((~ (5u)), 0u | ((~ (5u)))), 0u, 1u)))))), 1u * (_GLF_IDENTITY((~ (5u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((~ (5u)), 0u | _GLF_IDENTITY(((~ (5u))), ~ (~ (_GLF_IDENTITY(((~ (5u))), clamp(((~ (5u))), ((~ (5u))), ((~ (5u))))))))), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY((~ (5u)), 0u | ((~ (5u)))), 0u, 1u))))))))) | 0u)), _GLF_IDENTITY(5u, (5u) ^ 0u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(buf[virtual_gid], ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u))))), clamp(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u))))), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u))))), max(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), uint(uvec2(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))), 1u)))))) << 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u), clamp(uvec4(buf[virtual_gid], (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * 1u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(2u, 2u))) ^ 0u), 2u, 2u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (0u | 0u) + (2u))), uint(2u)))), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), uint(2u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u))), uint(2u))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u, 1u))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(subgroup_base)))) / 1u)) | 0u)), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(workgroup_base) : uint(0u))))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) >> 0u)), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), (_GLF_IDENTITY(0u, (0u) | 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(0u))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), (true ? _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))) : _GLF_FUZZED(num_workgroup))))))), uint(2u))))), 0u)) - uvec2(0u, 0u))) ^ uvec2(0u, 0u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), 0u ^ (0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))), uint(2u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u)), (true ? min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u)) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u, 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | 0u), min(uint(2u), uint(2u))))), uint(2u))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), 0u)) - uvec2(0u, 0u))) ^ uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u))))))), ((0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) << 0u)))))))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))), uint(2u))))), 0u)) - uvec2(0u, 0u))) ^ uvec2(0u, 0u)))))), uint(2u)))) | ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u | (uint(2u))), uint(2u)), uint(uvec2(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u | (uint(2u))), uint(2u)), 1u))))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)) : _GLF_FUZZED(workgroup_id))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) << 0u) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? _GLF_IDENTITY(2u, (2u) | 0u) : _GLF_FUZZED(subgroup_id))))), min(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), 1u * (uint(2u)))) >> 0u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u))))), max(1u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)) : _GLF_FUZZED(workgroup_id))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) << 0u) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? _GLF_IDENTITY(2u, (2u) | 0u) : _GLF_FUZZED(subgroup_id))))), min(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), 1u * (uint(2u)))) >> 0u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u))))), max(1u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))), min(~ (((_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)) : _GLF_FUZZED(workgroup_id))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) << 0u) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? _GLF_IDENTITY(2u, (2u) | 0u) : _GLF_FUZZED(subgroup_id))))), min(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), 1u * (uint(2u)))) >> 0u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u))))), max(1u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))), ~ (((_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) << 0u)) : _GLF_FUZZED(workgroup_id))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (2u) << 0u) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) ? _GLF_IDENTITY(2u, (2u) | 0u) : _GLF_FUZZED(subgroup_id))))), min(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), 1u * (uint(2u)))) >> 0u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u))))), max(1u << _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u))))))))))))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))))))) / _GLF_IDENTITY((1u | 1u), min((1u | 1u), _GLF_IDENTITY((1u | 1u), min(_GLF_IDENTITY((1u | 1u), ((1u | 1u)) << 0u), (1u | 1u)))))))) | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)), (2u) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 0u, 0u)), ~ (~ (uint(uvec3(2u, 0u, 0u))))))), uint(_GLF_IDENTITY(2u, (2u) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) << 0u)))), 1u, 1u), uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) | 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(_GLF_IDENTITY(uint(2u), 0u + (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))), uint(2u))), _GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, max(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, ~ (~ (2u)))) - 0u), 2u)))) | 0u))) + 0u)), 1u, 1u), uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (true ? uvec2(1u, 0u) : _GLF_FUZZED(uvec2(36489u, 50094u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (true ? uvec2(1u, 0u) : _GLF_FUZZED(uvec2(36489u, 50094u))))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (true ? uvec2(1u, 0u) : _GLF_FUZZED(uvec2(36489u, 50094u)))))) | (uint(_GLF_IDENTITY(uvec2(1u, 0u), (true ? uvec2(1u, 0u) : _GLF_FUZZED(uvec2(36489u, 50094u)))))))) | (uint(_GLF_IDENTITY(uvec2(1u, 0u), (true ? uvec2(1u, 0u) : _GLF_FUZZED(uvec2(36489u, 50094u)))))))))))), (uint(_GLF_IDENTITY(uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(_GLF_IDENTITY(2u, (2u) << 0u), _GLF_IDENTITY(2u, (2u) >> 0u)), (max(_GLF_IDENTITY(2u, (2u) << 0u), _GLF_IDENTITY(2u, (2u) >> 0u))) ^ 0u))), uint(2u))), 1u, 1u), clamp(uvec4(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 1u, (1u | (1u & 1u)))), 0u ^ (uint(uvec3(2u, 1u, (1u | (1u & 1u)))))))), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(uint(uint(uint(2u))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(uint(uint(uint(2u))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(uint(uint(uint(2u))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(uint(uint(uint(2u))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(uint(uint(uint(2u))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uint(uint(2u))), clamp(uint(uint(uint(2u))), uint(uint(uint(2u))), uint(uint(uint(2u)))))), uint(2u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(num_workgroup)))) / (1u | 1u)))) | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) << 0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) ^ 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(2u, (2u) ^ 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(2u, (2u) ^ 0u), 1u, 1u))) / 1u))), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : uint(2u), ~ (~ (false ? _GLF_FUZZED(subgroup_base) : uint(2u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)) | 0u), _GLF_IDENTITY(uint(2u), 0u + (_GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), _GLF_IDENTITY((uvec3(uint(2u), 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), max((uvec3(uint(2u), 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(uint(2u), 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), ((uvec3(uint(2u), 0u, 0u)) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))))))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uint(uvec3(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, (0u ^ 0u))), (uint(uvec3(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u, (0u ^ 0u)))) / 1u)) | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (true ? _GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) * 1u)) * 1u) : _GLF_FUZZED(workgroup_base)))), uint(2u)))), (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))) | ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(uint(2u), uint(2u)))))) + 0u))))) : _GLF_FUZZED(num_workgroup), ~ (~ (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 0u + (1u << _GLF_IDENTITY(uint(2u), uint(2u)))), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u ^ ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(num_workgroup), (true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(num_workgroup)) | (true ? ((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) | (1u << _GLF_IDENTITY(uint(2u), uint(2u)))), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(num_workgroup))))))))) / (1u | 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), (_GLF_IDENTITY(uvec3(uint(2u), 0u, 0u), max(uvec3(uint(2u), 0u, 0u), uvec3(uint(2u), 0u, 0u)))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uint(uvec3(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), uint(2u)))), 0u, (0u ^ 0u))), (uint(uvec3(((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))))), 0u, (0u ^ 0u)))) / 1u)) | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(workgroup_base))), 0u | (_GLF_IDENTITY(2u, (true ? 2u : _GLF_FUZZED(workgroup_base)))))), uint(2u)))), (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(_GLF_IDENTITY(num_workgroup, uint(uint(num_workgroup))), _GLF_IDENTITY(num_workgroup, min(num_workgroup, _GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)))), num_workgroup))), ~ (~ (_GLF_IDENTITY(true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)))) : _GLF_FUZZED(num_workgroup), (true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, 2u)))))) : _GLF_FUZZED(num_workgroup)) | (true ? ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), min(1u << _GLF_IDENTITY(uint(2u), uint(2u)), 1u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u)))) : _GLF_FUZZED(num_workgroup))))))))) / (1u | 1u)))) >> 0u)) | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) | 0u, ((uint(2u)) | 0u) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, 0u ^ (2u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << 0u)), uint(2u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, 0u ^ (2u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << 0u)), uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, max(2u, _GLF_IDENTITY(2u, 0u ^ (2u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) << 0u)), uint(2u))))))) << 0u)))) - 0u)), 1u, 1u), uvec4(buf[virtual_gid], ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))) | 0u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), ~ (~ ((uint(2u))))) | 0u))), 1u, 1u), uvec4(buf[virtual_gid], _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u ^ (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u))))))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u)))))))) - 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u))))))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u)))))))) - 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u))))))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u)))))))) - 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u))))))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uint(2u)))), 0u ^ (uint(_GLF_IDENTITY(2u, uint(uint(2u)))))), uint(_GLF_IDENTITY(2u, uint(uint(2u)))))))) - 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), 1u, 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), sqrt(1.0), 0.0, sqrt(1.0), 1.0, 0.0, log(1.0), 1.0, 1.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
