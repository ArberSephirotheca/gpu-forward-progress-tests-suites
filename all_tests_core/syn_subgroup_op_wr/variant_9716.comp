#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((true ? 0.2 : (919.933 - -317.313)))), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec3(bvec3(bvec2(false, true), false)))))))))))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter)) : _injected_loop_counter)) < 1), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, false, false))))))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), false || ((true)))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true), ! (! (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true))))), false || ((! _GLF_IDENTITY(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true), ! (! (_GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true))))))), bool(bvec2((! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)), true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(1.0, 0.0, 1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))).x < injectionSwitch.y)))))) || false), false, false, _GLF_IDENTITY(false, bool(bool(false))))))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) ? _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 1u * (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << _GLF_IDENTITY(0u, max(0u, 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << _GLF_IDENTITY(0u, max(0u, 0u)))) | 0u)) | 0u), 1u, 1u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> _GLF_IDENTITY(0u, max(0u, 0u))))), clamp(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> _GLF_IDENTITY(0u, max(0u, 0u))))), 1u * ((_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> _GLF_IDENTITY(0u, max(0u, 0u))))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> _GLF_IDENTITY(0u, max(0u, 0u))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> _GLF_IDENTITY(0u, max(0u, 0u))))))) << 0u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0)) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) | (0 << _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), max(uint(subgroup_local_id), uint(subgroup_local_id))))) + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), 0u | (_GLF_IDENTITY(clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), (clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))) | (_GLF_IDENTITY(clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), max(clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))), clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))))))))))) << 0u), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-72128))), min(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), uint(uvec4(subgroup_size, 0u, 1u, 0u)))) - 0u))));
 uint read = _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ ((0)), (~ ((0))) | (~ ((0))))))) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1)))) << 0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (0));
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true))) && true)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))));
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26349) : _GLF_IDENTITY(0, (0) / 1)))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(38108, -25087, 56084, 17235)) : ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) | 0), 1, 0, 0)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26349) : _GLF_IDENTITY(0, (0) / 1)))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(38108, -25087, 56084, 17235)) : ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) | 0), 1, 0, 0)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26349) : _GLF_IDENTITY(0, (0) / 1)))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(38108, -25087, 56084, 17235)) : ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) | 0), 1, 0, 0)))), 0 ^ (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26349) : _GLF_IDENTITY(0, (0) / 1)))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(38108, -25087, 56084, 17235)) : ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) | 0), 1, 0, 0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26349) : _GLF_IDENTITY(0, (0) / 1)))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(38108, -25087, 56084, 17235)) : ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) | 0), 1, 0, 0)))), (false ? _GLF_FUZZED(-99257) : int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26349) : _GLF_IDENTITY(0, (0) / 1)))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(38108, -25087, 56084, 17235)) : ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) >> 0)) | 0), 1, 0, 0)))))))))))), _GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0))), (_GLF_IDENTITY(0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0))), max(0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0))), 0u ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0))), uint(uvec2((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0))), 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, 0u, 1u)))) + uvec4(0u, 0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, 0u, 1u)))) + uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), (_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, 0u, 1u)))) + uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec4(0u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)), 1u), (_GLF_IDENTITY(uvec4(0u, 1u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 1u, 0u, 1u)))) + uvec4(0u, 0u, 0u, 0u))))))) / (0u ^ 1u))) ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), 1, 1, (0 << _GLF_IDENTITY(int(3), int(3)))))))), (true ? (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), 1, 1, (0 << _GLF_IDENTITY(int(3), int(3)))))))) : _GLF_FUZZED(subgroup_id))), ~ (~ (0u ^ (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0))))))))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_FUZZED(68203))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) | (subgroup_local_id % 2), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), (subgroup_local_id % _GLF_IDENTITY(2, 1 * (2))) ^ 0u), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) | (subgroup_local_id % 2)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u)))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) | 0u)) | (subgroup_local_id % 2), min((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) | (subgroup_local_id % 2), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) | 0) : _GLF_FUZZED(17899))))), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) | (subgroup_local_id % 2))))))) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(~ _GLF_IDENTITY((min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (min(subgroup_local_id % 2, subgroup_local_id % 2)))), clamp(~ _GLF_IDENTITY((min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (min(subgroup_local_id % 2, subgroup_local_id % 2)))), ~ _GLF_IDENTITY((min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (min(subgroup_local_id % 2, subgroup_local_id % 2)))), ~ _GLF_IDENTITY((min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (min(subgroup_local_id % 2, subgroup_local_id % 2))))))) | 0u))))) | (subgroup_local_id % 2), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % _GLF_IDENTITY(2, 0 | (2)))), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) | (subgroup_local_id % 2)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), uint(uvec2(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), 1u)))) | 0u)), ~ (~ (~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2)), (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u)))))))) | (subgroup_local_id % 2), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(1 * (2), (_GLF_IDENTITY(1, (1) ^ 0) * (2)) - 0))) * 1u), _GLF_IDENTITY(min(subgroup_local_id % 2, subgroup_local_id % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), (~ (min(subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))), subgroup_local_id % 2))) | 0u))))) | (subgroup_local_id % 2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u))))))) | 0u)))) << 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u))))))) | 0u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u))))))) | 0u)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u))))))) | 0u)))) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u))))))) | 0u)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u)))))), ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, 1 * (2)), _GLF_IDENTITY(min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (true ? (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) : _GLF_FUZZED(workgroup_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2), ~ (_GLF_IDENTITY(~ (min(subgroup_local_id % 2, subgroup_local_id % 2)), _GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, 0u | (_GLF_IDENTITY((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, max((~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u, (~ (min(subgroup_local_id % 2, subgroup_local_id % 2))) | 0u))))) / 1u))))))) | 0u)))) << 0u)) >> 0u))))) | (subgroup_local_id % 2))))))) == 0) && true))
      {
       subgroupAll(false);
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, _GLF_IDENTITY(false, false || (false))))))))))))
        {
         read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) - (0 | 0))))), 64, 2);
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6241.0364) : injectionSwitch.x))) - _GLF_IDENTITY(length(0.0), (_GLF_IDENTITY(length(0.0), (false ? _GLF_FUZZED(107.491) : length(0.0)))) * 1.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6241.0364) : injectionSwitch.x))) - length(0.0)) > injectionSwitch.y), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6241.0364) : injectionSwitch.x))) - length(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)))) > injectionSwitch.y), true)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6241.0364) : injectionSwitch.x))) - length(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)))) > injectionSwitch.y), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true)))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(false);
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true && _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))))) || false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))))) || false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))))));
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y)))) && true))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) * 1) > 0, true && (_injected_loop_counter > 0)), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), false)))))))))))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0), (~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * 1)))), min(~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0), (~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * 1)))), ~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, ~ (_GLF_IDENTITY(~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0), (~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * 1)))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, min((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), min((1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) | ((1 << _GLF_IDENTITY(int(4), int(4))))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4)))) | ((1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, 0 | (4))))) ^ _GLF_IDENTITY(0, min(0, 0)), 1, 1))) : _GLF_FUZZED(_injected_loop_counter))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | 0)) | (_GLF_IDENTITY(int(4), int(4))))))) ^ 0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(sign(_injected_loop_counter)))), int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4)), (_GLF_IDENTITY(int(4), int(4))) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(50309) : 0))))))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(sign(_injected_loop_counter)))), int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4)), (_GLF_IDENTITY(int(4), int(4))) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(50309) : 0))))))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(sign(_injected_loop_counter)))), int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4)), (_GLF_IDENTITY(int(4), int(4))) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(50309) : 0))))))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter)) | 0), true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(sign(_injected_loop_counter)))), int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), min(int(4), int(4)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4)), (_GLF_IDENTITY(int(4), int(4))) - _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(50309) : 0))))))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) << 0)))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))) - 0))))), 0 ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))) - 0))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))) - 0))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))) - 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))) - 0))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), min(int(4), int(4))), _GLF_IDENTITY(int(4), (int(4)) - 0))))) - 0)))))))) - 0))))) ^ _GLF_IDENTITY(0, (0) ^ 0), 1, 1))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0))))), (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ _GLF_IDENTITY(0, 0 ^ (0)), int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4))), int(4)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | 0))))), (_GLF_IDENTITY(int(4), int(4))) - 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | 0))))), (_GLF_IDENTITY(int(4), int(4))) - 0))))) ^ 0)))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, _GLF_IDENTITY((true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), min(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15669))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), min(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15669))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter)), 1 * ((true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), min(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15669))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), min(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15669))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter)), ((true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), min(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15669))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))) | ((true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) / 1)), _GLF_IDENTITY(int(4), (int(4)) / 1))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), min(_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-15669))))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))))))), _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) + 0)), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))), min(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter))), (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(int(4), int(4)))))) >> 0)) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), max(ivec4(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ivec4(4, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))) ^ 0, (true ? _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), 0 + (1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-56604))), int(4), int(4))), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0))))))) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | (0))), clamp(~ (_GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(0, (0) | (0))), ~ (_GLF_IDENTITY(0, (0) | (0))))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), 1, 1))) : _GLF_FUZZED(_injected_loop_counter))) : _GLF_FUZZED(7945))), _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), min(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))) ^ 0, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0, int(ivec3(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(4), (int(4)) >> 0), 1), min(ivec2(_GLF_IDENTITY(int(4), (int(4)) >> 0), 1), ivec2(_GLF_IDENTITY(int(4), (int(4)) >> 0), 1))))))) - 0))))))) ^ 0, 1, 1))) : _GLF_FUZZED(_injected_loop_counter)))))))))))) && true); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++))) << 0)) * 1))
          {
           _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-79691)))))) | (4))) >> 0)) | (4)), 64, 2), (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) >> 0)) | _GLF_IDENTITY((4), ((4)) - 0)), 64, 2)) | 0u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, true)), bool(bvec3(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true, true)), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, uint(uvec4(0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) / 1u), (0u | 0u), 1u))) ^ (virtual_gid)), 0u)))], read, 4, 64, 4);
}
