#version 460
struct _GLF_struct_4 {
 mat2 _f0;
 vec2 _f1;
 ivec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_3 {
 bool _f0;
 mat3 _f1;
 mat4 _f2;
 bvec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 bvec2 _f1;
 _GLF_struct_4 _f2;
 bvec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 int _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bvec2 _f1;
 mat3x4 _f2;
 ivec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 _GLF_struct_0 _f1;
 vec2 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 bvec2 _f1;
 float _f2;
 _GLF_struct_5 _f3;
 int _f4;
 uvec4 _f5;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(vec4(1.0), _GLF_struct_0(bvec2(true), bvec2(true), mat3x4(1.0), ivec2(1), true), vec2(1.0), _GLF_struct_1(ivec4(1), 1, mat2x3(1.0))), bvec2(true), 1.0, _GLF_struct_5(_GLF_struct_3(true, mat3(1.0), mat4(1.0), bvec2(true), mat2(1.0)), bvec2(true), _GLF_struct_4(mat2(1.0), vec2(1.0), ivec2(1), mat3(1.0)), bvec3(true), mat2(1.0)), 1, uvec4(1u), gl_WorkGroupID.x);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_6.workgroup_id;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base;
 uint subgroup_base = subgroup_id * subgroup_size;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x = subgroup_base;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x + GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.y;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.w + GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x + ((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.y + 1) % subgroup_size);
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.y % 2) == 0)
  {
   subgroupAll(false);
   read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z], read, 4, 64, 4);
}
