#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (bool(bool(bvec2(false, true)))))))))), false || (bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (bool(bool(bvec2(false, true))))))))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (bool(bool(bvec2(false, true)))))))))), false || (bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (bool(bool(bvec2(false, true)))))))))))))))))), (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (bool(bool(bvec2(false, true)))))))))), false || (bool(_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(bool(bool(bvec2(false, true))), ! (! (bool(bool(bvec2(false, true))))))))))))))))))) && true)))))))) && true))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)), (bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), false, true))) || false))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bvec2(bvec2(bvec2(bool(bool(false)), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-197.437)), bool(false))))), min(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sin(0.0), 1.0), max(vec4(injectionSwitch, sin(0.0), 1.0), vec4(injectionSwitch, sin(0.0), 1.0))))).y))))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.6) : 0.0)), 0.0)), 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(bool(bool(false)), true)))), true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), (_GLF_DEAD(false)) && true)))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), false), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))), false), false, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), clamp(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), max(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)))), _GLF_FUZZED(vec2(-0.6, 846.817)))) : injectionSwitch, min(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), clamp(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), clamp(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)))) : injectionSwitch)))).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(82.55) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), clamp(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), max(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)))), _GLF_FUZZED(vec2(-0.6, 846.817)))) : injectionSwitch, min(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), clamp(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)))) : injectionSwitch, false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-0.6, 846.817)), clamp(_GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)), _GLF_FUZZED(vec2(-0.6, 846.817)))) : injectionSwitch)))).x)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch), mix(vec2(_GLF_FUZZED(-9259.1208), ((false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch))[1]), vec2(((false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch))[0], _GLF_FUZZED(3.7)), bvec2(true, false))), min((false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch)))).x, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch)).x, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-0.6, 846.817), min(vec2(-0.6, 846.817), vec2(-0.6, 846.817)))) : injectionSwitch)).x, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.6, 846.817)) : injectionSwitch)).x, 0.0, 0.0, 0.0))))) / 1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(507.554, max(_GLF_IDENTITY(507.554, (507.554) / 1.0), 507.554)))), vec2(_GLF_FUZZED(vec2(0.5, _GLF_IDENTITY(40.69, (_GLF_IDENTITY(40.69, (false ? _GLF_FUZZED(-2.6) : 40.69))) - 0.0)).s), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, uint(uint((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), 0u | ((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))))) >> 0u))), (workgroup_size)))))) ^ 0u, (_GLF_IDENTITY((0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))))) >> 0u)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), (workgroup_size)))))) ^ 0u, 0u ^ ((0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))), _GLF_FUZZED(workgroup_size))) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))))))) ^ _GLF_IDENTITY(0u, (0u) | (0u))))) ^ 0u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), uint(0u))), _GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u), uint(0u)))), (max(_GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), uint(0u))), _GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u), uint(0u))))) | _GLF_IDENTITY(0u, (0u) << 0u))), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u)))) + ((0u | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u)) ^ 0u))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)) ^ 0u)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uint((workgroup_size)), (false ? _GLF_FUZZED(workgroup_id) : uint((workgroup_size))))))))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> _GLF_IDENTITY(0u, 0u | (0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)), ((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))) << 0u))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)) | (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u + (0u))))))), (true ? _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))) - 0u))) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, 0u | ((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))))), (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, 0u | ((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))))), (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, 0u | ((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))))), (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) : _GLF_FUZZED(subgroup_local_id)))))) << 0u), (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)), ((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))) | ((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))))) >> 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), _GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY(true, false || (true)) ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), (true ? _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), uint(uint((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))))) * 1u))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u | (_GLF_IDENTITY((workgroup_size), uint(uvec3(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), 0u, 1u))))), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u | (_GLF_IDENTITY((workgroup_size), uint(uvec3(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), 0u, 1u))))), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))))) ^ 0u) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u, 1u, 1u), min(uvec3((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u, 1u, 1u), uvec3((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u, 1u, 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u) ^ 0u), clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)), uint(uvec2((false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)), 1u))))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u))), (true ? _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> (1u ^ 1u)))))))) >> 0u : _GLF_FUZZED(num_workgroup)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))))) >> 0u))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size))), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) | 0u)) >> 0u, clamp((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u, (_GLF_IDENTITY(true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup), (true ? (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u : _GLF_FUZZED(num_workgroup)) << 0u)))) << 0u), (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size)))) >> 0u)))))) << 0u)) / 1u), _GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))))) ^ 0u)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(1u, (1u) + 0u) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | 0u)));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))))))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(195626u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))))))) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - (_GLF_IDENTITY((120733u & 0u), ((120733u & 0u)) >> 0u) | 0u)) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) * 1u) % subgroup_size), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u))))) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 0, 0, 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id))) << 0u))) + 1), min((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_local_id)) + 1), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u + (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), ~ (~ (_GLF_FUZZED(virtual_gid)))))) : subgroup_local_id)) + 1))) ^ 0u))) * 1u) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) && true)))) && true))), false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_DEAD(false), true)))), (! (! (bool(bvec2(_GLF_DEAD(false), true))))) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(36.79), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.2)), bvec2(true, false))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(36.79), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-4.2)), bvec2(true, false))).y)))) && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, false, true)))))))))) && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)), bool(bvec4(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)), true, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)), bool(bvec4(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)), true, true, true))))) || false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), (true ? subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(atomicAdd(workgroup_base, virtual_gid)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-568.327), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5014.9522)), bvec2(true, false))), injectionSwitch)))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), ! (! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6185.4959)), mix(float(_GLF_FUZZED(-2292.3501)), float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6185.4959))), bool(true)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - 0.0), 0.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) ? injectionSwitch.x : _GLF_FUZZED(6185.4959))), 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-47.22, 88.80, 7.0, 8.6, -1054.6855, -2.6)))))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u ^ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) * 1u))], read, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-94503) : 64)), _GLF_IDENTITY(4, min(4, 4)));
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_IDENTITY(false, (false) || false))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true, false))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, false)))))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(sqrt(0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(sqrt(0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(sqrt(0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) * vec2(1.0, 1.0))))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).y))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(9.4, 932.575).x)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), (false ? _GLF_FUZZED(5.9) : 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) - sin(sin(0.0)))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(sqrt(1.0)), 1.0))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(sqrt(1.0)), 1.0)))), bool(true))), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 1.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-448.660)))) / 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), (false ? _GLF_FUZZED(5.9) : 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) - sin(sin(0.0)))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(sqrt(1.0)), 1.0))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(sqrt(1.0)), 1.0)))), bool(true))), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 1.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-448.660)))) / 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 0.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), (false ? _GLF_FUZZED(5.9) : 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))) - sin(sin(0.0)))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) + (0.0)), sqrt(sqrt(1.0)), 1.0))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(0.0, float(vec3(0.0, sqrt(sqrt(1.0)), 1.0)))), bool(true))), clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 1.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-448.660)))) / 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) || false))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), ! (! (bool(_GLF_IDENTITY(false, (false) || false))))))), (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(320.233) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), _GLF_IDENTITY((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id)), _GLF_IDENTITY(((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id))) ^ 0u, (((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id))) ^ 0u) | _GLF_IDENTITY((((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id))) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id))) ^ 0u), max((((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id))) ^ 0u), (((true ? 0u ^ (read) : _GLF_FUZZED(workgroup_id))) ^ 0u))))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) ? _GLF_FUZZED(-7289) : _GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) / (1 | 1)))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), true, false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
