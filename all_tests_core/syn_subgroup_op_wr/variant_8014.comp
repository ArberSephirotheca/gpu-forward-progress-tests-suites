#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true))))), false)))))))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), true, false))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_IDENTITY(true, (true) && true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), false, true))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (0u) >> 0u));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u ^ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), max(~ (workgroup_id), ~ (workgroup_id)))))) * 1u), uint(_GLF_IDENTITY(uvec2(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u ^ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), max(~ (workgroup_id), ~ (workgroup_id)))))) * 1u), 0u), uvec2(uvec4(uvec2(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u ^ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), max(~ (workgroup_id), ~ (workgroup_id)))))) * 1u), 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u ^ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), max(~ (workgroup_id), ~ (workgroup_id)))))) * 1u), uint(_GLF_IDENTITY(uvec2(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u ^ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), max(~ (workgroup_id), ~ (workgroup_id)))))) * 1u), 0u), uvec2(uvec4(uvec2(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), 0u ^ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) << 0u))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (~ (workgroup_id)))))), max(~ (workgroup_id), ~ (workgroup_id)))))) * 1u), 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))))) >> 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), (true ? workgroup_id : _GLF_FUZZED(uvec2(_GLF_IDENTITY(75593u, (75593u) + 0u), 118391u).t)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (workgroup_id))), 0u ^ ((~ (~ (workgroup_id))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.1)), bool(false))), injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-6.1), (_GLF_FUZZED(-6.1)) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), bool(false))), injectionSwitch.y)) * 1.0)))) ? _GLF_FUZZED(packSnorm2x16(vec2(5301.6003, -58.00))) : ~ (~ (~ (_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))))))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u)), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u)) + uvec2(0u, 0u)))) / 1u)))))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) | (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))) >> 0u))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size))) << 0u), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))), (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))) | (~ (_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))) >> 0u))) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, min(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size))) << 0u), _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size)), 0u | (workgroup_base + subgroup_id * subgroup_size))) >> 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u + (uint(uint(subgroup_id))))) * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, 0u, 1u))), 1u))), 0u | (workgroup_base + subgroup_id * subgroup_size))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) - 0u)), ~ (~ (_GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u + (uint(uint(subgroup_id))))) * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, 0u, 1u))), 1u))), 0u | (workgroup_base + subgroup_id * subgroup_size))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) - 0u)), (max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u + (uint(uint(subgroup_id))))) * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, 0u, 1u))), 1u))), 0u | (workgroup_base + subgroup_id * subgroup_size))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size)))) - 0u))) >> 0u))))) : _GLF_FUZZED(num_workgroup))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u ^ (5u))), uint(5u))), 0u, 0u))) * (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size), ~ (~ (_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), subgroup_size)) - 0u))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-3.6)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-3.6)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))), float(_GLF_FUZZED((7.0))), bool(false)))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) >> 0))))), clamp((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))) : _GLF_FUZZED(-126.100)))))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))), 0 ^ (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), max(int(1), int(1)))))))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(1)), _GLF_IDENTITY(max(0 ^ (int(1)), 0 ^ (int(1))), ~ (~ (max(0 ^ (int(1)), 0 ^ (int(1)))))))) | 0)))), min(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(1)), _GLF_IDENTITY(max(0 ^ (int(1)), 0 ^ (int(1))), ~ (~ (max(0 ^ (int(1)), 0 ^ (int(1)))))))) | 0)))), ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(1)), _GLF_IDENTITY(max(0 ^ (int(1)), 0 ^ (int(1))), ~ (~ (max(0 ^ (int(1)), 0 ^ (int(1)))))))) | 0))))) - 0), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0 ^ (int(1)), (_GLF_IDENTITY(0 ^ (int(1)), _GLF_IDENTITY(max(0 ^ (int(1)), 0 ^ (int(1))), ~ (~ (max(0 ^ (int(1)), 0 ^ (int(1)))))))) | 0)))))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))), (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-4.6 - 7.2))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) - 0)), _GLF_IDENTITY(int(1), 0 ^ (int(1))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), ~ (~ (~ (int(1))))))), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1))), (_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) < 1)))) && true)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (~ (_injected_loop_counter)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((1), min((1), (1))) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((1), min((1), (1))) * 1))), 0 ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((1), min((1), (1))) * 1)))))) << 0), min(1, _GLF_IDENTITY(1, ~ (~ (1)))))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(_GLF_IDENTITY(3, 1 * (3)))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), max(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))) | _GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) << 0), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, (87260 & 0), 1), (ivec3(4, (87260 & 0), 1)) | (ivec3(4, (87260 & 0), 1))))), clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, (87260 & 0), 1), (ivec3(4, (87260 & 0), 1)) | (ivec3(4, (87260 & 0), 1))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, (87260 & 0), 1), (ivec3(4, (87260 & 0), 1)) | (ivec3(4, (87260 & 0), 1))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, (87260 & 0), 1), (ivec3(4, (87260 & 0), 1)) | (ivec3(4, (87260 & 0), 1))))))))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(uvec4(128516u, 3054u, 72080u, 115361u)))))) | 0u))), _GLF_IDENTITY((0u | 0u) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), ((_GLF_IDENTITY(0u | 0u, max(0u | 0u, _GLF_IDENTITY(0u | 0u, 0u ^ (0u | 0u))))) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (1u ^ 1u) ^ (uint(2u)))))), clamp(uvec4(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), (false ? _GLF_FUZZED(uint(true)) : uint(uint(subgroup_local_id)))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(abs(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(abs(0.0), 0.0, 0.0, 0.0)))), injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(_GLF_IDENTITY(uvec2(2u, 1u), uvec2(1u, 1u) * (uvec2(2u, 1u))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) * 1.0)) + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(subgroup_local_id))), uint(2u)))))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u))))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), float(vec4(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0)))), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)), clamp(float(mat3(1.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), float(vec4(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0)))), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)), float(mat3(1.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), float(vec4(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0)))), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0)), float(mat3(1.0, 1.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), float(vec4(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, length(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0)))), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -830.497))), float(injectionSwitch.y), bool(true))))), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))) + 0u))), subgroup_local_id), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))) | 0u))), (0u | 0u) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))), 0u | ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (2u)), ~ (~ (_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (2u)))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), 0u + (uint(2u)))))))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(uvec3(uint(2u), 1u, 0u)), (uint(uvec3(uint(2u), 1u, 0u))) | 0u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))), subgroup_local_id)), ~ (~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(subgroup_local_id, 1u, (_GLF_IDENTITY(1u ^ 0u, ~ (~ (_GLF_IDENTITY(1u ^ 0u, min(1u ^ 0u, 1u ^ 0u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))), (0u | 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) << 0u))), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), 1u * (uint(2u)))))))), clamp(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (2u))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(2u), uint(2u)))))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_IDENTITY(uint((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (uint((1u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (157375u & 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), clamp(max(subgroup_local_id, subgroup_local_id), max(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), (max(subgroup_local_id, subgroup_local_id)) << 0u))), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), 1u * (uint(2u)))))))), clamp(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (2u))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u | (_GLF_IDENTITY(uint(2u), uint(2u)))))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_IDENTITY(uint((1u << _GLF_IDENTITY(uint(2u), uint(2u)))), (uint((1u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (157375u & 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))) >> 0u))), subgroup_local_id)), (~ (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))), clamp(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))))), (0u | 0u) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((2u), 1u * (_GLF_IDENTITY((2u), uint(uvec2((2u), 0u))))))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))), subgroup_local_id))) | (~ (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), abs(1.0)))), 0.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), abs(1.0))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, sin(0.0), abs(1.0)))), 0.0) : _GLF_FUZZED(mat3x2(-3.6, -5.5, -64.45, 29.21, 3.2, -60.84)))))).y)))), (uint(uvec4(subgroup_local_id, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))), (0u | 0u) | (_GLF_IDENTITY(max(subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u), (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)) | (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u), (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)) | (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u), (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)) | (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u), (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)) | (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u), (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)) | (uvec4(_GLF_IDENTITY(2u, (2u) | (2u)), (0u ^ 1u), 0u, 1u)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec4(max(subgroup_local_id, subgroup_local_id), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))), subgroup_local_id)))))))))) + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false, ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false, ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false) && true))), (bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false, ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false) && true)))) && true)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], read, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true), true, false)))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true), true, false))))))) || false)) ? _GLF_FUZZED(30285) : 4)));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(true);
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-36.73)), vec2(_GLF_FUZZED(-448.463), (injectionSwitch)[1]), bvec2(false, true))), vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-36.73)), vec2(_GLF_FUZZED(-448.463), (injectionSwitch)[1]), bvec2(false, true))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-36.73)), vec2(_GLF_FUZZED(-448.463), (injectionSwitch)[1]), bvec2(false, true)))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))))) && true))))) && true), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9059.5841, -9.0)) : injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9059.5841, -9.0)) : injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9059.5841, -9.0)) : injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))))) && true)) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y)), true))), bool(bool(bool(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))) > injectionSwitch.y)), true)))))))))) || false)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
