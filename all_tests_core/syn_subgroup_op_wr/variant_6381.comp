#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, cos(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (true && (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-18.48))), 1.0, 0.0), max(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-18.48))), 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-18.48))), 1.0, 0.0))), clamp(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (true ? injectionSwitch.y : _GLF_FUZZED(-18.48))), 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-18.48))), 1.0, 0.0), vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y : _GLF_FUZZED(-18.48))), 1.0, 0.0))))), injectionSwitch.y))))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 1.0 * (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) / 1.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && _GLF_IDENTITY((false), true && ((false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)) << 0u)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))), (~ (subgroup_size)) >> 0u))), (subgroup_size) << 0u), subgroup_size))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), (subgroup_size) << 0u), subgroup_size))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), (subgroup_size) << 0u), subgroup_size)))))))))), max(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), (subgroup_size) << 0u), subgroup_size))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), (subgroup_size) << 0u), subgroup_size)))))))))), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), (subgroup_size) << 0u), subgroup_size))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), clamp((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_size))), (subgroup_size) << 0u), subgroup_size))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), (uvec3(subgroup_size, 0u, 1u)) >> uvec3(0u, 0u, 0u))))))))) * 1u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3032.3653)))) - sqrt(0.0))))))), subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (subgroup_size)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(33048u, 22820u, 78219u, 133813u)[3]) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) - 0u)) | (subgroup_size)))))), (subgroup_size) << 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)), (subgroup_size) << 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))) << 0u), 1u, 0u, 1u))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 0u))) << 0u), 1u, 0u, 1u)))))) / (1u & 1u)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ 0u), (subgroup_size) << 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u, 0u, 1u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u))) << 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u, 0u, 1u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 1u, 0u, 1u)))))))))) | 0u))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) ^ 0u)))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) - 0u))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) << 0u))), subgroup_size), max(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size))), 1u, 0u)), min(uint(uvec3(_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), max(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size))), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), _GLF_IDENTITY(max(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size)), uint(uvec3(max(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u + (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size)), 0u, 0u)))), 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))))) * 1u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), max(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))), min(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), 0u ^ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u), subgroup_size))))), max((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), 0u ^ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + _GLF_IDENTITY(0u, min(0u, 0u))), subgroup_size))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), 0u ^ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) + 0u), subgroup_size))))))) | 0u)))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), max(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size)))), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)) - 0u)) << 0u)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))))) | 0u))))))) + subgroup_local_id, min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), _GLF_IDENTITY((subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) - 0u)) - 0u)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | 0u)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), (~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) / 1u)) | (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), uint(uvec3((_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))))), 1u, 1u)))))))), max(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(0u, (0u) << 0u) | 0u)), _GLF_IDENTITY((subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(((subgroup_size) << 0u), (((subgroup_size) << 0u)) + 0u) - 0u)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), uint(uvec4(subgroup_size, 1u, 0u, 1u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), uint(uvec4(subgroup_size, 1u, 0u, 1u))))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), _GLF_IDENTITY(uint(uvec3(1u * (subgroup_size), _GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(0u, max(0u, 0u)))), (uint(uvec3(1u * (subgroup_size), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), 0u))) | (uint(uvec3(1u * (subgroup_size), _GLF_IDENTITY(1u, (1u) | 0u), 0u)))))))), uint(uvec3((~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), _GLF_IDENTITY(uint(uvec3(1u * (subgroup_size), _GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(0u, max(0u, 0u)))), (uint(uvec3(1u * (subgroup_size), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), 0u))) | (uint(uvec3(1u * (subgroup_size), _GLF_IDENTITY(1u, (1u) | 0u), 0u)))))))), 1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u | 0u)), _GLF_IDENTITY((subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) - 0u)) - 0u)), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uint(-57394)) : 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) | (_GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), subgroup_size), min(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, (1u ^ 0u)), (uvec4(subgroup_size, 1u, 1u, (1u ^ 0u))) * uvec4(1u, 1u, 1u, 1u))))))))))) | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), uint(uvec2((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), 1u))), ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) | (clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) << 0u), subgroup_size))))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))) ^ 0u)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size), (max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)) << 0u), (max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)) | (max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)))) + 0u)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) >> 0u), subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) << 0u), subgroup_size)))), (((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, 0u ^ (0u))), subgroup_size))))) * 1u) - (0u | 0u)) + _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), min(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), (true ? vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), min((false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, sqrt(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), mat2x3(mat4(mat2x3(0.0, sqrt(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)))))))), 0.0), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0, 0.0))), 1.0)))), mix(vec2(_GLF_FUZZED(8.3), _GLF_FUZZED(-6668.7598)), vec2((_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), min(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), 1.0)), (true ? vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)))))[0], (_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), min(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), (true ? vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true)))))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0)))))[1]), bvec2(true, true)))), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x)), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.2, max(_GLF_IDENTITY(-3.2, float(mat4x2(-3.2, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), -3.2))), _GLF_FUZZED((13.44 + -1568.4825))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))) * vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), min(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), (true ? vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(394.220)), float(0.0), bool(true))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0))))), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)), min(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, log(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0), (mat3x2(1.0, 0.0, log(round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0)) * mat3(1.0)))), 0.0, 0.0))), 1.0)), (true ? vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)) : _GLF_FUZZED(injectionSwitch))), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-83.35, -9.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, sqrt(1.0)), transpose(transpose(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))))), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0))))), (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x))))), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))))) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), subgroup_size))) | _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), ~ (~ (_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 1u), max(uvec2(subgroup_id, 1u), uvec2(subgroup_id, 1u))))) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))))))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, min((subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, clamp(_GLF_IDENTITY((subgroup_size) << 0u, min((subgroup_size) << 0u, (subgroup_size) << 0u)), (subgroup_size) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, 0u ^ ((subgroup_size) << 0u))))))), subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (subgroup_size) << 0u), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) ^ (0u & 33354u)), subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))) - (0u | 0u))) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u, 1u), uvec3(1u, 1u, 1u) * (uvec3(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u, 1u))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, (true ? (subgroup_size) << 0u : _GLF_FUZZED(workgroup_size)))), subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ~ (~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))))), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u), subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size))))), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) << 0u)) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) : _GLF_FUZZED((num_workgroup * 166883u)))), subgroup_size))))))) + 0u))) + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 1u), clamp(uvec4(0u, 1u, 1u, 1u), uvec4(0u, 1u, 1u, 1u), uvec4(0u, 1u, 1u, 1u))), (uvec4(0u, 1u, _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (1u ^ 1u) | (0u)))))) | 0u) | (_GLF_IDENTITY(0u, 0u | (0u))))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)) >> 0u) | (subgroup_local_id), 0u ^ (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)), max((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u)), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u))))) / 1u) >> 0u) | (subgroup_local_id)))) + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), _GLF_IDENTITY((bool(bvec3(! (_GLF_DEAD(false)), false, true))) && true, true && ((bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, true))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), _GLF_IDENTITY((bool(bvec3(! (_GLF_DEAD(false)), false, true))) && true, true && ((bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, true))) && true))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), _GLF_IDENTITY((bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false, true))) && true, true && ((bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, true))) && true)))))) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) | (4)), 64, _GLF_IDENTITY(0, int(ivec3(0, 0, 0))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.3)), vec2(_GLF_FUZZED(-7.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))) - 0u)))), (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(virtual_gid)))) << 0u)), (false ? _GLF_FUZZED(uvec3(173556u, 86500u, 34541u).r) : clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(virtual_gid), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(virtual_gid), (true ? subgroup_size : _GLF_FUZZED(virtual_gid)) >> 0u)), min(~ (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(virtual_gid), (true ? subgroup_size : _GLF_FUZZED(virtual_gid)) >> 0u)), ~ (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(virtual_gid), (true ? subgroup_size : _GLF_FUZZED(virtual_gid)) >> 0u)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), clamp(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) + 0) << 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != (int(_GLF_ZERO(0.0, injectionSwitch.x)) & _GLF_IDENTITY(51045, (true ? 51045 : _GLF_FUZZED(21847))))); _injected_loop_counter --)
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), 0.0 + (float(float(injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.8)), float(injectionSwitch.y), bool(true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9211.0019)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, 0 + (64)), 4);
     subgroupAll(true);
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
