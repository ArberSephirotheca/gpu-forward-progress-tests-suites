#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.5), _GLF_FUZZED(3.9)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | 0u) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), min((((subgroup_local_id + 1) % subgroup_size)), (((subgroup_local_id + 1) % subgroup_size)))) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(true && (! (false)), bool(bvec2(true && (! (false)), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! (! (false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! (! (false))))))), false || (! (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! (! (false))))))))))), false, false))), bool(bvec2(bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), false, false, false)))) || false)))))), bool(bvec2(bool(bool(! (! (false)))), false))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))), false, true, false)), ! (! (bool(bvec4(! ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))))))), false, true, false)))))))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (! (false)))))), false))), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), bool(bvec2(bool(bool(! (! (false)))), false))), false, false, false))), true && (! (bool(bvec4(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false))), false, false, false)))))))) || false))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((false), ((false)) || false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (false))), ! (! (bool(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))))), false)))), true, true), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))), true && (_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(_GLF_IDENTITY(bvec2(bool(bool(! (! (false)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bool(! (! (false)))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bool(bool(! (! (false)))), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bool(bool(! (! (false)))), false)), false)), true, false))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), true)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), ! (! (! (_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false)))))))), ! (! (! (_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false))))))))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))), false)))), true, true), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))))), false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(26.23)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))))), true, true), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))) || false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))) || false)))), false || (bool(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), (! (_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))) || false))))))))), false)))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))))))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), true))))), true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), ! (! (bool((false) || false)))))))) && true))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (bool(bool(! (! (false))))))), true && (_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (_GLF_IDENTITY(bool(bool(! (! (false)))), false || (bool(bool(! (! (false))))))))))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(_GLF_IDENTITY(bvec2(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), true)), false || (bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), true))))), false, true, false)))), ((! (false))) && true)) || false), _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))) || false))), false), bvec2(bvec2(bvec2(bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false)))), ((! (false))) && true)) || false), _GLF_IDENTITY(((! (false))), ! (! (((! (false)))))) || false))), false))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))) && true))))))))), true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false)))))))), ! (! ((! (false))))))))), (_GLF_IDENTITY(bool(! (! (false))), true && (bool(! (! (false)))))) || false)), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false))))), false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(! (! (false)))))), bool(bvec2(bool(bool(! (! (false)))), false))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), bool(bvec2(bool(bool(! (! (false)))), false))), false, false, false)))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, bool(bool((_GLF_IDENTITY((false), true && ((false)))) || false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, bool(bool((_GLF_IDENTITY((false), true && ((false)))) || false)))))), ! (! (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))) || false, bool(bool((_GLF_IDENTITY((false), true && ((false)))) || false)))))))))))))))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))) || false))), (bool(! (! (false)))) && true), true, false, false)))), ! (! (bool(bool(! (! (false))))))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), true)))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))))), false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, exp(0.0)), (vec3(injectionSwitch, exp(0.0))) * mat3(1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (true)), ((! (true))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (true)), ((! (true))) && true), false, true)))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), false || ((! (false)))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), true, true), true))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(bool(bool(! (! (false)))), false)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))))), bool(bvec2((_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))))), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(bool(! (! (false)))), false)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), true && ((! (false)))))), false)))), false))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(bool(! (! (false)))), false)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bvec2(bool(bool(! (! (false)))), false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), false))))))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), true, false, true))), _GLF_IDENTITY(bool(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))))), bool(bvec2(bool(bool(! (! (false)))), false)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false)))), false))))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (false))), true && (_GLF_IDENTITY(bool(! (! (false))), bool(bool(bool(! (! (false))))))))), false)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), true && ((! _GLF_IDENTITY((false), ! (! ((false))))))))))), false)))), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! (! (false)))), false))), ! (! (_GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(bool(! (! (false)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bool(! (! (false)))), false))), bool(bvec3(! (bool(bvec2(bool(bool(! (! (false)))), false))), false, true)))))))))))), false))))))), false))))), true)))))), true, true), true))))), true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)) && true))))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(_GLF_IDENTITY(bool(bool(! (! (false)))), ! (! (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), ! (! (bool(bool(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))), false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec2((! (false)), false))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false)))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))), _GLF_IDENTITY(bool(bool(! (! (false)))), bool(_GLF_IDENTITY(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false), true), bvec3(bvec4(bvec3(bvec2(bool(bool(! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false), true), false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false))))))), true && ((false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(bool(! (! (false)))), false))), false || (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (false))), true && (bool(! (! (false)))))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(bool(! (! (false)))), false))), false || (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (false))), true && (bool(! (! (false)))))), false)))))) && true)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false))))))), true && ((false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(bool(! (! (false)))), false))), false || (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (false))), true && (bool(! (! (false)))))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(bool(! (! (false)))), false))), false || (_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (false))), true && (bool(! (! (false)))))), false)))))) && true)), true, true), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(bool(! (! (false)))), false)), ! (! (bool(bvec2(bool(bool(! (! (false)))), false))))))), true, _GLF_IDENTITY(true, false || (true))), true)))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), false)))))))))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) << 0), 2);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(true, bool(bool(true))), false)))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))), true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
