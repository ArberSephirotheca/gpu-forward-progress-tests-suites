#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(vec2(0.0, 0.0))), vec2(mat4(_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(vec2(0.0, 0.0))), 0.0, sqrt(0.0), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(vec2(0.0, 0.0))))))).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9)))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9))))), min(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9))))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0), (true ? mat3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat3(9293.5580, -8.6, -9.9, -8.3, -87.71, -9338.1529, 2479.4236, -3945.0541, 2.9)))))))))), -888.034)) : injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, mix(vec2(_GLF_FUZZED(6984.5724), _GLF_FUZZED(4.9)), vec2((false ? _GLF_IDENTITY(_GLF_FUZZED(min(injectionSwitch, -888.034)), min(_GLF_FUZZED(min(injectionSwitch, -888.034)), _GLF_FUZZED(min(injectionSwitch, -888.034)))) : _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(9.5, -6.7)))))[0], _GLF_IDENTITY((false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))], _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), min(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), (true ? vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0) : _GLF_FUZZED(asin(injectionSwitch))))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch)[1], (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch)[1], float(_GLF_IDENTITY(float((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch)[1]), (float((_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch)[1])) * 1.0)))) * round(length(normalize(vec2(1.0, 1.0)))))))), bvec2(true, true)))) + abs(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(min(injectionSwitch, -888.034), (false ? _GLF_FUZZED(vec2(0.4, 80.43)) : min(injectionSwitch, -888.034)))) : injectionSwitch, (false ? _GLF_FUZZED(min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), -888.034)) : injectionSwitch) + abs(vec2(0.0, 0.0))))).x) / 1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))) + vec2(0.0, 0.0))))).x, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(min(injectionSwitch, -888.034)), mix(vec2((_GLF_FUZZED(min(injectionSwitch, -888.034)))[0], (_GLF_FUZZED(min(injectionSwitch, -888.034)))[1]), vec2(_GLF_FUZZED(26.01), _GLF_FUZZED(4512.2913)), bvec2(false, false))) : injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), 1.0, 0.0)) : _GLF_FUZZED(919.819)))), 0.0)), mix(vec2(_GLF_FUZZED(4.6), _GLF_FUZZED(float(true))), vec2(((false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), 1.0, 0.0)) : _GLF_FUZZED(919.819)))), 0.0)))[0], ((false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), 1.0, 0.0)), (true ? float(mat3x4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0)), dot(vec3(abs(1.0), 0.0, 0.0), vec3(1.0, abs(0.0), 0.0))), 1.0, 0.0)) : _GLF_FUZZED(919.819)))), 0.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x) / 1.0), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, min(false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch, false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch)), (false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) + abs(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(min(injectionSwitch, -888.034)), vec2(_GLF_IDENTITY(mat2(_GLF_FUZZED(min(injectionSwitch, -888.034)), 0.0, 1.0), mat2(mat4x3(mat2(_GLF_FUZZED(min(injectionSwitch, -888.034)), 0.0, 1.0)))))) : injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(min(injectionSwitch, -888.034)) : injectionSwitch) : _GLF_FUZZED(injectionSwitch))) + abs(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))))).x) / 1.0), 1.0, 0.0, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) && true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (false))))) && true) || false)))
    {
    }
   else
    {
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(7.6, min(7.6, 7.6))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) >> 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u & 192976u)), (~ (subgroup_size)) / 1u), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), ((subgroup_size)) ^ 0u))), (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))), uint(uvec3((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) * ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u | (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) * 1u), 1u))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))))) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 1u), min(uvec3(subgroup_size, 0u, 1u), uvec3(subgroup_size, 0u, 1u)))))), ~ (subgroup_size))), ~ (subgroup_size), ~ (subgroup_size))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)))) | ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), clamp((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), min((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u ^ (workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(1, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y))))) ? 1 : _GLF_FUZZED((63842 << -92306))))) : _GLF_FUZZED(58379)))), 0u | (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(1, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y))))) ? 1 : _GLF_FUZZED((63842 << -92306))))) : _GLF_FUZZED(58379))))))) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), clamp(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), clamp(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size))))), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), clamp(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), clamp(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), clamp(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)), uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(bitfieldReverse((85925 ^ -92677))) : (1))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), max((1), _GLF_IDENTITY((1), ((1)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306)))), (false ? _GLF_FUZZED(-213) : _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(223.737), _GLF_FUZZED(6.8)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((63842 << -92306))))))) : _GLF_FUZZED(58379))))) % subgroup_size)))))))) / 1u))) ^ 0u);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> 0))), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-58004)))), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(findMSB(20514)) : _injected_loop_counter)) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) << 0, 0 | ((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) / 1) | (4))), (~ (_GLF_IDENTITY(4, 0 | (4)))) | (~ (_GLF_IDENTITY(4, 0 | (4)))))))) << 0))), 1, 0, _GLF_IDENTITY(1, max(1, 1)))), max(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) << 0, 0 | ((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) / 1) | (4))), (~ (_GLF_IDENTITY(4, 0 | (4)))) | (~ (_GLF_IDENTITY(4, 0 | (4)))))))) << 0))), 1, 0, _GLF_IDENTITY(1, max(1, 1)))), (false ? _GLF_FUZZED(26783) : int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) << 0, 0 | ((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) / 1) | (4))), (~ (_GLF_IDENTITY(4, 0 | (4)))) | (~ (_GLF_IDENTITY(4, 0 | (4)))))))) << 0))), 1, 0, _GLF_IDENTITY(1, max(1, 1)))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY((4) << 0, 0 | ((_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) / 1) | (4))), (~ (_GLF_IDENTITY(4, 0 | (4)))) | (~ (_GLF_IDENTITY(4, 0 | (4)))))))) << 0))), 1, 0, _GLF_IDENTITY(1, max(1, 1)))))), min(int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), max((4), (4))), (4))), (_GLF_IDENTITY((4), max((4), (4)))) >> 0) << 0), 1, 0, 1))))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2825.4461), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-2.7, 43.46, 8.8, -3295.3556).p)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, true, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, clamp(3, 3, 3))), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ 0)), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), 1), (ivec2(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), 1)) - ivec2(0, 0)))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (true ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), ~ (~ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), ~ (_GLF_IDENTITY(~ (~ (int(3))), min(~ (~ (int(3))), ~ (~ (int(3))))))))))))) - 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))) >> 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter), min(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), false, false, true))))) ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 1 * (_GLF_IDENTITY(int(3), int(3)))), 1, 0)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))) - 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), _GLF_IDENTITY(clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))), 0 | (clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) >> 0))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (true ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), int(ivec3((1 << _GLF_IDENTITY(int(3), int(3))), int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (int(3)), min(~ (int(3)), _GLF_IDENTITY(~ (int(3)), min(~ (int(3)), ~ (int(3)))))))))))) - 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) >> (0 ^ (0 ^ 0)))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), clamp((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) * (1 & 1))), (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), (1 << _GLF_IDENTITY(int(3), int(3))) * (1 & 1)))) / 1)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ (~ (int(3))), max(~ (~ (int(3))), _GLF_IDENTITY(~ (~ (int(3))), (_GLF_IDENTITY(~ (~ (int(3))), (~ (~ (int(3)))) - 0)) | (~ (~ (int(3))))))))), clamp((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (true ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), (true ? _GLF_IDENTITY(int(3), ~ (~ (int(3)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) | 0))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))), (1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) / 1), ~ (~ (int(3)))))))) - 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), mix(float(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), float(_GLF_FUZZED(float(-95257))), bool(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) || false)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))) || false)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))), true))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        return;
       do
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-13.34), mix(float(_GLF_FUZZED(-13.34)), float(_GLF_FUZZED(float(true))), bool(false)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (injectionSwitch.x < injectionSwitch.y), (false || (injectionSwitch.x < injectionSwitch.y)) || false)))))), true, false))))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-3385.9214)), bvec2(false, false))), injectionSwitch)).y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false))))))) && (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-3385.9214)), bvec2(false, false))), injectionSwitch)).y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false))))))) && (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false))))) && (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), mat2(mat2x4(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))))), min(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), mat2(mat2x4(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), mat2(mat2x4(transpose(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))))))))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), false))))))) && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), true && ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) && true)))))) || false), false))))))) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false))))))), false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
        return;
      }
     return;
    }
   do
    {
     return;
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), _GLF_IDENTITY(false, (false) || false)))), true, false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))))))), false || (bool(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), max(int(_GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (false ? _GLF_FUZZED(47671) : int(_GLF_IDENTITY(0, (0) << 0))))))))], (injectionSwitch)[0])), (injectionSwitch)[1]), (true ? vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), max(int(_GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (false ? _GLF_FUZZED(47671) : int(_GLF_IDENTITY(0, (0) << 0))))))))], (injectionSwitch)[0])), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(767.897, -0.2)))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))))))), false || (bool(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), max(int(_GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (false ? _GLF_FUZZED(47671) : int(_GLF_IDENTITY(0, (0) << 0))))))))], (injectionSwitch)[0])), (injectionSwitch)[1]), (true ? vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), max(int(_GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (false ? _GLF_FUZZED(47671) : int(_GLF_IDENTITY(0, (0) << 0))))))))], (injectionSwitch)[0])), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(767.897, -0.2)))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))))))), false || (bool(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true)))))))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, false)), true))))), true))))))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.8), _GLF_FUZZED(-9.6)), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), max(int(_GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (false ? _GLF_FUZZED(47671) : int(_GLF_IDENTITY(0, (0) << 0))))))))], (injectionSwitch)[0])), (injectionSwitch)[1]), (true ? vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), max(int(_GLF_IDENTITY(0, (0) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) << 0)), (false ? _GLF_FUZZED(47671) : int(_GLF_IDENTITY(0, (0) << 0))))))))], (injectionSwitch)[0])), (injectionSwitch)[1]) : _GLF_FUZZED(vec2(767.897, -0.2)))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), _GLF_IDENTITY(false, (false) || false)))), true, false)))))) || false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-57.03), _GLF_FUZZED(5.8)), bvec2(false, false))), injectionSwitch)).x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))) * (injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))) * (injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, cos(0.0) * (injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, log(1.0), 1.0, 0.0))), 1.0, 1.0))), (mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.2))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(0.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, cos(0.0) * (injectionSwitch.y)), false, false, true)))), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (mat4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, length(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.3))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((85.70))), bool(false))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(62.32)))))) + _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))).x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), sqrt(1.0) * (cos(0.0) * (injectionSwitch.y)))))) && true)))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94332))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0)), 1 * (int(ivec2(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))))), max(0, 0))) - (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)))), int(ivec2((int(7)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94332))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0)), 1 * (int(ivec2(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0)))))), max(0, 0))) - (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)))), 1)))), _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY((int(7)), ((int(7))) << 0) + 0, ~ (_GLF_IDENTITY(~ ((int(7)) + 0), min(~ ((int(7)) + 0), ~ ((int(7)) + 0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), ~ (~ (~ (~ ((64)))))))) - 0, (_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), ~ (~ (~ (~ ((64)))))))) - 0, min((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), ~ (~ (~ (~ ((64)))))))) - 0, (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), ~ (~ (~ (~ ((64)))))))) - 0))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), clamp((_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))))) - 0) : _GLF_FUZZED(-5161), int(ivec4(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64)))))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-5161, (-5161) >> 0)), 1, 1, 0)))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), clamp((_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))))) - 0) : _GLF_FUZZED(-5161), int(ivec4(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64)))))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-5161, (-5161) >> 0)), 1, 1, 0))))), (_GLF_IDENTITY(int((_GLF_IDENTITY(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), clamp((_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))))) - 0) : _GLF_FUZZED(-5161), int(ivec4(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64)))))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-5161, (-5161) >> 0)), 1, 1, 0))))), clamp(int((_GLF_IDENTITY(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), clamp((_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))))) - 0) : _GLF_FUZZED(-5161), int(ivec4(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64)))))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-5161, (-5161) >> 0)), 1, 1, 0))))), int((_GLF_IDENTITY(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), clamp((_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))))) - 0) : _GLF_FUZZED(-5161), int(ivec4(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64)))))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-5161, (-5161) >> 0)), 1, 1, 0))))), int((_GLF_IDENTITY(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), clamp((_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))), (_GLF_IDENTITY((64), ~ (~ ((64))))))) - 0) : _GLF_FUZZED(-5161), int(ivec4(true ? _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ~ (~ ((64)))))))) - 0) : _GLF_FUZZED(_GLF_IDENTITY(-5161, (-5161) >> 0)), 1, 1, 0)))))))) >> 0)))) - 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(39712) : int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 ^ (~ ((64))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((64))))), (true ? (_GLF_IDENTITY((64), ~ (~ ((64))))) : _GLF_FUZZED(19971))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))), ((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64)))))))) - 0), (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), 0 + (~ (~ ((64))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-94351) : (64))), ~ (~ ((64)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) - 0) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ~ (~ ((_GLF_IDENTITY(64, (64) >> 0)))))) - 0, max((_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(64, (64) >> 0)))), (true ? ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (false ? _GLF_FUZZED((-17462 & -57686)) : _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (_GLF_IDENTITY(64, (64) >> 0)) + 0)))))) : _GLF_FUZZED(ivec2(80827, -5066)[1]))))) - 0, (_GLF_IDENTITY((64), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(64, (64) >> 0))), clamp(((_GLF_IDENTITY(64, (64) >> 0))), ((_GLF_IDENTITY(64, (64) >> 0))), ((_GLF_IDENTITY(64, (64) >> 0)))))))) - 0))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ~ (~ ((64))))) - 0) - 0)), min(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ~ (~ ((64))))) - 0) - 0)), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ~ (~ ((64))))) - 0) - 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) + 0, max(((64)) + 0, _GLF_IDENTITY(((64)) + 0, (((64)) + 0) / 1)))), (false ? _GLF_FUZZED(-6632) : _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) + 0), ~ (~ (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) + 0, _GLF_IDENTITY((((64)) + _GLF_IDENTITY(0, (0) * 1)), max((((64)) + 0), (((64)) + 0))) ^ 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), (~ (~ ((64)))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (~ ((64))), min(~ (~ ((64))), ~ (~ ((64)))))), 0 | ((_GLF_IDENTITY(~ (~ ((64))), min(~ (~ ((64))), ~ (~ ((64)))))))))), 0 + (_GLF_IDENTITY((64), _GLF_IDENTITY(~ (~ ((64))), (~ (~ ((64)))) | (_GLF_IDENTITY(~ (~ ((64))), _GLF_IDENTITY(min(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((64), (true ? _GLF_IDENTITY((64), (_GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(57925)))) << 0) : _GLF_FUZZED((-36729 % -64699)))))), _GLF_IDENTITY(int(ivec3((~ (_GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-62560))))))), int(ivec4((_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-62560))))))), 1, _GLF_IDENTITY(1, min(1, 1)), 0))))), 1, 1)), (int(ivec3((~ ((64))), _GLF_IDENTITY(1, 0 | (1)), 1))) | (int(ivec3((~ ((64))), 1, 1))))), ~ (~ ((64)))), int(ivec3(min(~ _GLF_IDENTITY((~ ((64))), _GLF_IDENTITY(int(ivec3((~ ((_GLF_IDENTITY(64, (64) << 0)))), 1, 1)), (int(ivec3((~ ((64))), 1, 1))) | (int(_GLF_IDENTITY(ivec3((~ ((64))), 1, 1), (ivec3((~ ((64))), 1, 1)) / ivec3(1, 1, 1)))))), ~ (~ ((64)))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) - 0) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, 0 ^ (64))), (_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((0 | 0), ((0 | 0)) / int(_GLF_ONE(1.0, injectionSwitch.y))) + (_GLF_IDENTITY((64), ((64)) / 1))), ~ (~ ((64))))) - 0) - 0)), (true ? ~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), _GLF_IDENTITY(int(int(~ (_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) | ((64)))) >> 0)))), int(ivec4(int(_GLF_IDENTITY(int(~ _GLF_IDENTITY(((64)), clamp(_GLF_IDENTITY(((64)), max(((64)), ((64)))), ((64)), _GLF_IDENTITY(((64)), 0 ^ (((64))))))), 0 | (int(~ _GLF_IDENTITY(((64)), clamp(_GLF_IDENTITY(((64)), max(((64)), ((64)))), ((64)), _GLF_IDENTITY(((64)), 0 ^ (((64)))))))))), 1, 0, 0))))))) - 0) - 0)) : _GLF_FUZZED(_GLF_IDENTITY(-28858, (-28858) << _GLF_IDENTITY(0, (0) | (0)))))))))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) / 1), 0)); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1 | 0, 0 | (1 | 0))), bool(bvec3(_injected_loop_counter < (_GLF_IDENTITY(1 | 0, 0 | (1 | 0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | 0), (_injected_loop_counter < (1 | 0)) && true)))))), bool(bvec2(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, int(ivec3(0, (0 ^ 1), 0)))))), (true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY((1 | 0), ((1 | 0)) ^ 0), false || _GLF_IDENTITY((_injected_loop_counter < (1 | 0)), (_GLF_IDENTITY((_injected_loop_counter < (1 | 0)), true && ((_injected_loop_counter < (1 | 0))))) && true))))) || false), true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))) && true), true)))) && (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0))))), false))), false))))) || false); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), (subgroup_local_id) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (0 & ivec3(-89106, 81577, -55131).y) | (_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(0 ^ (1), int(_GLF_IDENTITY(int(0 ^ (1)), ~ (~ (int(0 ^ (1))))))))) ^ 0), (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) < subgroup_size)
      {
       atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : virtual_gid)), _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid))], read, 4, 64, 4);
       subgroupAll(false);
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, _GLF_IDENTITY(true, true && (true))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, true && ((! (_GLF_DEAD(false))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, true && ((! (_GLF_DEAD(false))) && true)))))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, true && ((! (_GLF_DEAD(false))) && true))))))))) && true)))), bool(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, true && ((! (_GLF_DEAD(false))) && true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, true && ((! (_GLF_DEAD(false))) && true)))))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, true && ((! (_GLF_DEAD(false))) && true))))))))) && true))))))) || false)), true, true)))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true)))))) || false), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true)))))) || false), true, false, true)))))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(false))), false, false, true))) && true)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)) || false)), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true)))))), (bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))) || false)), true, true)))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           for(int _injected_loop_counter = (0 & 84186); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              continue;
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)))), max(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)))), max(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))))))))).x > injectionSwitch.y))))
              return;
            }
          }
        }
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        break;
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), (bool(bvec4(! (! (false)), false, false, true))) && true)) || false))) || (_GLF_DEAD(false))))
            return;
          }
         else
          {
          }
         return;
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))), false)))), bool(bvec3(_GLF_DEAD(false), true, true))))
  return;
 if(_GLF_DEAD(false))
  return;
}
