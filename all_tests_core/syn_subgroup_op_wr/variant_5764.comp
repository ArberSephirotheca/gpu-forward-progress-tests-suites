#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base;
 uvec4 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup;
 uvec4 GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size, (GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size) ^ uvec3(0u, 0u, 0u))));
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.xyz;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uvec4 GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -92951)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_4_1_1_11readvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.xy = GLF_merged2_0_1_4_1_1_11readvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid.xy = GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.xy;
 GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy = GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid.xy;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * round(length(normalize(1.0)))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * round(length(normalize(1.0)))))))); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.z = subgroup_size;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w = GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.z;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid.z = subgroup_local_id;
  }
 GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y = GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w = GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
      barrier();
     GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.w = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id, ~ (~ (GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id))).x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x = GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.w;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz.y = GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(51904) : 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.z = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz, clamp(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz) << uvec3(0u, 0u, 0u)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz)).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-87.41)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(false), true), true), bvec3(bvec4(bvec3(bvec2(bool(false), true), true), false)))))), bool(bool(bool(bvec2(bool(false), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), true)))))))))));
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), true && (true && (false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz.z = workgroup_size;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     _GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup) ^ uvec4(0u, 0u, 0u, 0u)).xyz.z, (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z = GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz.z) / 1u);
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
  }
 do
  {
   do
    {
     _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y, max(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y, GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y)), (GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y, max(GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y, GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y))) - 0u);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8934.7897)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8934.7897)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), false))) && true), false))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y = GLF_merged3_0_1_13_1_1_17_2_1_12num_workgroupsubgroup_local_idworkgroup_id.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.z * GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-363.981, -6.1)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x = GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.w;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x, 0u + (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x)) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, clamp(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) + uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size), (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)) >> uvec4(0u, 0u, 0u, 0u)))))))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))), clamp(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))), (true ? uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))))))[0], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[1], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[2], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size[3])))).w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, 0u ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) >> 0u)) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) ^ 0u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)))) + GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x, 0u ^ (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x)), 0u + (GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size)).z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, max(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size))))).w) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, 0u ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w), ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)) >> 0u)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, 0u ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w), ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)) >> 0u)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) >> _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(70386u))))) | (1u ^ 1u))) | (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)) + GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w));
 GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid.w = virtual_gid;
 GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y = GLF_merged3_0_2_39_2_1_17_3_1_11GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_local_idvirtual_gid.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(19490)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, cos(0.0), sqrt(1.0), 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, cos(0.0), sqrt(1.0), 1.0))))) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), bool(bvec3(false, true, false))))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false, false)))), bool(bool(bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size.x + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.z * GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w + ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) / uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | 0u), 1u)).w);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz.x = GLF_merged2_0_3_75_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenext_virtual_gid.w;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.x = GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup.xyz.x;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true), false))))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (false ? _GLF_FUZZED(-75382) : _GLF_IDENTITY(int(6), min(int(6), int(6)))))) * 1))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 1, 1))) != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y], clamp(buf[GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y], _GLF_IDENTITY(buf[GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y], (buf[GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y]) ^ (0u & 169408u)), buf[GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.y = read;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.x = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(atan(length(-814.945))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true), ! (! (! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))).w) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true), ! (! (! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))).w) && true))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true, ! (_GLF_IDENTITY(! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true), ! (! (! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))).w) && true)))))))), (! (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true, ! (_GLF_IDENTITY(! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + _GLF_IDENTITY(1, (1) | 0) < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true), ! (! (! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), clamp((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))))) << uvec4(0u, 0u, 0u, 0u))).w) && true))))))))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true, ! (_GLF_IDENTITY(! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! (! (! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))).w) && true)))))))), (! (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w, _GLF_IDENTITY((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true, ! (_GLF_IDENTITY(! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + _GLF_IDENTITY(1, (1) | 0) < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w) && true), ! (! (! ((GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), clamp((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (true ? (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)) : _GLF_FUZZED(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizenum_workgroup)))) | (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), ((uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))) << uvec4(0u, 0u, 0u, 0u))))) | ((uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)))), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u)), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size) >> (uvec4(0u, 0u, 0u, 0u) & uvec4(112585u, 133579u, 186842u, 190531u))))) << uvec4(0u, 0u, 0u, 0u))).w) && true))))))))) && true)))))), ! (_GLF_IDENTITY(! (GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + 1 < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, clamp(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, uvec4(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[0], GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[1], GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[2], GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[3])), _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, (GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u))))) >> uvec4(0u, 0u, 0u, 0u)).w + 1, (GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0) ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (0 ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), max((_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) * 1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) >> 0)))))))), _GLF_IDENTITY(0, (0) | (0)) ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))))))) / 1u) < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, clamp(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, uvec4(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[0], _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[1], min(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[1], _GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id, uvec4(0u, 0u, 0u, 0u) + (GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id)))))[_GLF_IDENTITY(1, (1) | (1))])), GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[2], GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id[3])), GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id))) >> uvec4(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u)).w + 1, (_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w, (false ? _GLF_FUZZED(atomicMin(GLF_merged3_0_2_39_2_1_13_3_1_14GLF_merged2_0_1_4_1_1_11readvirtual_gidsubgroup_sizeworkgroup_base.z, (~ GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x))) : GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.w)) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1))))))))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 + (0)), 1))), clamp(1, 1, 1))), _GLF_IDENTITY(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), int(int(0 ^ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), int(int(_GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1)))))))))), 1))))))))), 0, 0)))) * (1 & 1))) / 1u) < GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_13next_virtual_gidreadsubgroup_idsubgroup_size.w)))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y, 0u + (GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y))], GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.x, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))))), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(861.779, -84.16).r)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(vec2(861.779, -84.16).r)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(vec2(861.779, -84.16).r)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 84816)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(92360) : int(0))), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(92360) : int(0)))) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y, 0u | (GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.y))], GLF_merged3_0_2_39_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_11readvirtual_gidnum_workgroupsubgroup_local_id.xy.x, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4))) / 1), 64, 4);
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       subgroupAll(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-50925)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}
