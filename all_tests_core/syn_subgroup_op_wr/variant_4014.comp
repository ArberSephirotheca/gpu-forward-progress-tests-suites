#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 uvec4 _f0;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 mat2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 ivec3 _f1;
 mat2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 ivec4 _f1;
 bool _f2;
 mat4 _f3;
 _GLF_struct_17 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_14 {
 mat2x4 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 bool _f1;
 vec4 _f2;
 uvec2 _f3;
 ivec3 _f4;
 _GLF_struct_14 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 mat2 _f1;
 float _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_11 {
 uvec2 _f0;
} ;

struct _GLF_struct_10 {
 bool _f0;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 mat3x4 _f3;
 vec4 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_13 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_18 _f2;
 ivec3 _f3;
 _GLF_struct_19 _f4;
 uint virtual_gid;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat2 _f1;
 int _f2;
 bvec4 _f3;
 uvec3 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 vec4 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 mat3 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 mat2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 mat2 _f1;
 mat3 _f2;
 mat4x3 _f3;
 int _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 int _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 uint workgroup_base;
 _GLF_struct_8 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.8)), bvec2(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.7) : injectionSwitch.y)))))))), false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || false) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0)))), clamp(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4(-375.213, -952.711, -88.63, 4896.4463, 2426.9813, -7.7, -3.2, 945.387, 0.1, 77.47, 3.5, 154.400, -10.94, 3.3, 6.2, 1.5)))))))), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)))))))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, false || (true)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.4)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(4.7)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-7.4)), bool(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(8.9)))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true, true)))))) || ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.4)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(4.7)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-7.4)), bool(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(8.9)))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true, true)))))) || ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.4)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(4.7)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-7.4)), bool(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(8.9)))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true, true)))))) || ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), false))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.4)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(4.7)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-7.4)), bool(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(8.9)))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true, true)))))) || ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.4)), bool(false)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(4.7)), float(float(injectionSwitch.y)), bool(true))), float(_GLF_FUZZED(-7.4)), bool(false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(8.9)))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), true, true)))))) || ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true, false, true)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))), false, true))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(_GLF_struct_0(mat2x3(1.0)), _GLF_struct_1(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), mat2(1.0), mat3(1.0), mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3360.5569) : 1.0))), 1, bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), 1, _GLF_struct_2(mat2(1.0), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY(_GLF_IDENTITY((1u), uint(uint(_GLF_IDENTITY((1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u + (_GLF_FUZZED(workgroup_id))) : _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(subgroup_local_id) : (1u)))))))), uint(uvec4((1u), 1u, 0u, (1u & 1u))))), 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)))))))) / 1u, 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)))))))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size)))))))))), workgroup_size * workgroup_id, _GLF_struct_8(_GLF_struct_4(uvec4(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 1u * (1u))))), vec4(1.0), mat3x4(1.0), mat4x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat3(1.0), mat2x3(1.0)), _GLF_struct_5(mat2x4(1.0)), _GLF_struct_6(1.0, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat2(mat4x3(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)))), bvec4(true), uvec3(1u), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_struct_7(vec3(1.0), ivec2(1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_13(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-48.71) : 1.0)), 1.0))), _GLF_struct_10(true), _GLF_struct_11(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mat3x4(1.0), vec4(1.0), _GLF_struct_12(bvec2(true), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(4.7, 1.0, -8.1, -375.688)), mat2(mat4(_GLF_FUZZED(mat2(4.7, 1.0, -8.1, -375.688))))) : mat2(1.0))), 1.0, mat3x4(1.0))), _GLF_struct_15(mat4(1.0), true, _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))[0], _GLF_IDENTITY(_GLF_FUZZED(106.737), max(_GLF_IDENTITY(_GLF_FUZZED(106.737), max(_GLF_FUZZED(106.737), _GLF_FUZZED(106.737))), _GLF_IDENTITY(_GLF_FUZZED(106.737), max(_GLF_FUZZED(106.737), _GLF_FUZZED(106.737))))), _GLF_IDENTITY((vec4(1.0))[2], (true ? (vec4(1.0))[2] : _GLF_FUZZED(932.287))), _GLF_FUZZED(-7545.0653)), vec4(_GLF_FUZZED(-988.984), (vec4(1.0))[1], _GLF_FUZZED(299.443), (vec4(1.0))[3]), bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0)))))))))), true, false, true))), vec4(mat4x3(_GLF_IDENTITY(vec4(1.0), vec4(mat4x2(vec4(1.0), abs(1.0), 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | uvec2(0u, 0u)) | (uvec2(1u))), ivec3(1), _GLF_struct_14(mat2x4(1.0), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(1u), 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(uvec2(1u), 1u), (uvec3(uvec2(1u), 1u)) << uvec3(0u, 0u, 0u))), max((uvec3(uvec2(1u), 1u)), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(uvec2(1u), 1u)), max((uvec3(uvec2(1u), 1u)), (uvec3(uvec2(1u), 1u)))), _GLF_IDENTITY(max(_GLF_IDENTITY((uvec3(uvec2(1u), 1u)), clamp((uvec3(uvec2(1u), 1u)), (_GLF_IDENTITY(uvec3(uvec2(1u), 1u), (uvec3(uvec2(1u), 1u)) / uvec3(1u, 1u, 1u))), (uvec3(uvec2(1u), 1u)))), (uvec3(uvec2(1u), 1u))), (max(_GLF_IDENTITY((uvec3(uvec2(1u), 1u)), clamp((uvec3(uvec2(1u), 1u)), (_GLF_IDENTITY(uvec3(uvec2(1u), 1u), (uvec3(uvec2(1u), 1u)) / uvec3(1u, 1u, 1u))), (uvec3(uvec2(1u), 1u)))), (uvec3(uvec2(1u), 1u)))) ^ uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u)))))) - _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))), ((uvec2(1u)) - _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), ~ (~ (uvec2(0u, 0u)))), uvec2(0u, 0u)))) >> uvec2(0u, 0u))), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)) ? _GLF_FUZZED(5.9) : 1.0, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(5.9) : 1.0, max(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(5.9) : 1.0, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(5.9) : 1.0)), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(5.9) : 1.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 1.0)))))), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, (1.0) / 1.0))))), uvec3(1u)), _GLF_struct_18(_GLF_struct_16(mat3x2(1.0), ivec3(1), mat2(1.0), bvec4(true)), ivec4(1), true, mat4(1.0), _GLF_struct_17(uvec2(1u), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))), mat3(1.0)), mat2x3(1.0)), ivec3(1), _GLF_struct_19(uvec4(1u)), _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size, (_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base) ^ 0u, min((_GLF_struct_replacement_9.workgroup_base) ^ 0u, (_GLF_struct_replacement_9.workgroup_base) ^ 0u)))) | 0u) + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size) * 1u) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(atomicOr(workgroup_size, num_workgroup)) : subgroup_local_id)) + 1) % subgroup_size) - 0u));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(1), _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4))), ((_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4)))) >> 0))), _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(89637))), 0)), clamp(int(_GLF_IDENTITY(ivec3(64, 0, 0), min(_GLF_IDENTITY(ivec3(64, 0, 0), (ivec3(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) | 0)))), 0, 0)) << ivec3(0, 0, 0)), ivec3(64, 0, 0)))), _GLF_IDENTITY(int(ivec3(64, 0, 0)), int(ivec2(int(ivec3(64, 0, 0)), 1))), int(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 1, 0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, 1, 0, 0)), clamp(int(ivec4(64, 1, 0, 0)), int(ivec4(64, 1, 0, 0)), int(ivec4(64, 1, 0, 0)))), ~ (~ (_GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY(1, 1 * (1)), 0, 0)), clamp(int(ivec4(64, 1, 0, 0)), int(ivec4(64, 1, 0, 0)), int(ivec4(64, 1, 0, 0)))))))), (true ? ~ (_GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(25961), (_GLF_IDENTITY(_GLF_FUZZED(25961), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((- 9911)) : _GLF_FUZZED(25961)))) | (_GLF_IDENTITY(_GLF_FUZZED(25961), min(_GLF_FUZZED(25961), _GLF_FUZZED(25961))))) : 1)), _GLF_IDENTITY(0, (0) - 0), 0)), clamp(int(_GLF_IDENTITY(ivec4(64, 1, 0, 0), (ivec4(64, 1, 0, 0)) << ivec4(0, 0, 0, 0))), int(ivec4(64, 1, 0, 0)), int(ivec4(64, 1, 0, 0))))) : _GLF_FUZZED(-3601)))))), 0, 0))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, 0u ^ (_GLF_struct_replacement_20.virtual_gid)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, clamp(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)), _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)))) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (0u | 0u) | (_GLF_struct_replacement_20.virtual_gid)), _GLF_struct_replacement_20.virtual_gid)), _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_20.virtual_gid) - 0u, ~ (~ ((_GLF_struct_replacement_20.virtual_gid) - 0u)))))) | 0u)))) : _GLF_FUZZED(next_virtual_gid)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), 0u ^ (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, clamp(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)))))) | (max(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (_GLF_struct_replacement_20.virtual_gid) << 0u), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u))), min(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (true ? _GLF_struct_replacement_20.virtual_gid : _GLF_FUZZED(next_virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), 0u ^ (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, clamp(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)))))) | (max(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_20.virtual_gid) << 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_struct_replacement_20.virtual_gid) << 0u : _GLF_FUZZED(mix(20862u, workgroup_id, false))))), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), 0u ^ (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, clamp(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)))))) | (max(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (_GLF_struct_replacement_20.virtual_gid) << 0u), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, min(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))) | 0u))) | 0u)))))) : _GLF_FUZZED(next_virtual_gid)), (false ? _GLF_FUZZED(51789u) : _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, ~ (~ (_GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (_GLF_struct_replacement_20.virtual_gid) | 0u))), _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_struct_replacement_20.virtual_gid : _GLF_FUZZED(workgroup_size)))))), (~ (_GLF_struct_replacement_20.virtual_gid)) / 1u)))), (_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)))) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u)))) : _GLF_FUZZED(next_virtual_gid)), uint(_GLF_IDENTITY(uvec2((true ? _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)))) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), _GLF_IDENTITY((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u, (_GLF_IDENTITY((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u, ~ _GLF_IDENTITY((~ ((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u)), ((~ ((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u))) * 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(next_virtual_gid)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec4(uvec2((true ? _GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), max(_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (_GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | _GLF_IDENTITY((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)), (88709u & 0u) + (_GLF_IDENTITY((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)), ((max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))) >> 0u))))) | (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid))), _GLF_IDENTITY(max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid), (max(_GLF_struct_replacement_20.virtual_gid, _GLF_struct_replacement_20.virtual_gid)) | 0u)))) : _GLF_FUZZED(next_virtual_gid)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)))))))) | 0u))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), ~ (~ (_GLF_IDENTITY(0 ^ (64), (0 ^ (64)) ^ 0)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))), (false ? _GLF_FUZZED(-96743) : _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))), ~ (~ (~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), min(_GLF_IDENTITY(0 ^ (64), 0 + (0 ^ (64))), 0 ^ (64))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (~ (_GLF_IDENTITY(64, 0 ^ (64))))))) ^ 0), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(44681) : 0)) ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))))))))))))))))), (64) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))))))))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))))), 0 ^ ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))))))))))))), (64) << 0)) | 0), 64), (0 << _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), ~ (~ (_GLF_IDENTITY(0 ^ (64), (0 ^ (64)) ^ 0)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))), (false ? _GLF_FUZZED(-96743) : _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))), ~ (~ (~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), min(_GLF_IDENTITY(0 ^ (64), 0 + (0 ^ (64))), 0 ^ (64))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (~ (_GLF_IDENTITY(64, 0 ^ (64))))))) ^ 0), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(44681) : 0)) ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))))))))))))))))), (64) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))))))))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))))), 0 ^ ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))))))))))))), (64) << 0)) | 0), 64), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), ~ (~ (_GLF_IDENTITY(0 ^ (64), (0 ^ (64)) ^ 0)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))), (false ? _GLF_FUZZED(-96743) : _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))), ~ (~ (~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), min(_GLF_IDENTITY(0 ^ (64), 0 + (0 ^ (64))), 0 ^ (64))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (~ (_GLF_IDENTITY(64, 0 ^ (64))))))) ^ 0), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(44681) : 0)) ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))))))))))))))))), (64) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))))))))))))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))))), 0 ^ ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (64))), clamp(~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64))), ~ (_GLF_IDENTITY(64, 0 ^ (64)))))))))))))))))), (64) << 0)) | 0), 64)) << 0)))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))) : _GLF_FUZZED(bitfieldInsert((~ next_virtual_gid), read, -8448, -2486)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4254.9672)), float(0.0), bool(true)))), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(734.417) : 0.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))))) * 1.0)), abs(0.0)), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(734.417) : 0.0)), sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))) * 1.0)), abs(0.0))))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, true, false)))))) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), mix(vec2(_GLF_FUZZED(vec2(-232.872, 2.7).s), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.7, 7807.3461)) : injectionSwitch)), vec2(vec2(injectionSwitch))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))), (false ? _GLF_FUZZED(fma(vec2(1.2, -9.8), injectionSwitch, vec2(109.677, -4.4))) : (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))))[0], _GLF_FUZZED(3911.3827)), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (_GLF_struct_replacement_20.virtual_gid) | 0u)], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(64, int(ivec4(64, 0, 0, 1)))) ^ 0), ~ (_GLF_IDENTITY(~ (64), (true ? _GLF_IDENTITY(~ (64), int(ivec2(~ (64), 1))) : _GLF_FUZZED(-41020))))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), true && ((false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), false || (bool(! (! (false))))))), false || (! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_20.virtual_gid, (true ? _GLF_struct_replacement_20.virtual_gid : _GLF_FUZZED(read))), _GLF_struct_replacement_20.virtual_gid))], read, _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), 0 ^ ((4))))), clamp((4), (4), (4))), (4), (4))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4), (4))), ((4)) - 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), clamp((4), (4), (4))), _GLF_IDENTITY((4), ((4)) - 0), (4))), ((4)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), min((4), (4))), (4), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, _GLF_IDENTITY(0, 0 | (0)), 0) | _GLF_IDENTITY((ivec3(4, 1, 1)), ~ (~ (_GLF_IDENTITY((ivec3(4, 1, 1)), min(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))) << (0 >> _GLF_IDENTITY(int(1), int(1)))))))) / 1), 4, 4)), 1, 1)), min((ivec3(4, 1, 1)), (ivec3(4, 1, 1)))), (ivec3(4, 1, 1))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec4(-27773, 83498, -1739, 96896)[3]) : 1))) ^ 0)))))), ((int(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(ivec4(-27773, 83498, -1739, 96896)[3]) : 1))) ^ 0))))))) << 0) | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), clamp(_GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(ivec3(4, 1, 1), ivec3(0, 0, 0) | (ivec3(4, 1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 1, 1), min(ivec3(4, 1, 1), _GLF_IDENTITY(ivec3(4, 1, 1), min(ivec3(4, 1, 1), ivec3(4, 1, 1))))), ivec3(0, 0, 0) | (ivec3(4, 1, 1)))))))) : _GLF_FUZZED(80528))))))), (4), (4))), ((4)) - _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(-32172)))))) + 0), (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(clamp(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), clamp(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), ~ (~ (_GLF_IDENTITY(4, (4) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), max(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(4, (4) ^ 0)))))), (4)), (clamp(_GLF_IDENTITY((4), clamp((4), (4), (4))), (4), (4))) >> _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-486.736) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))), float(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-486.736) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))), 0.0, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(int(ivec3(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-486.736), mix(float(_GLF_FUZZED((+ -7177.3191))), float(_GLF_FUZZED(-486.736)), bool(true))) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))))), bool(true))))), injectionSwitch.x)), 1, 0)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) | (int(ivec3(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.0)), bool(false))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-486.736) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))))), injectionSwitch.x)), 1, 0))))))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), clamp((_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(4, ~ (~ (4)))), (_GLF_IDENTITY(4, ~ (~ (4))))))) + 0)), clamp(clamp((4), (4), (4)), _GLF_IDENTITY(clamp((4), (4), (4)), clamp(clamp((4), (_GLF_IDENTITY(4, (4) | 0)), (4)), _GLF_IDENTITY(clamp((4), (4), (4)), 0 | (clamp((4), (4), (4)))), clamp((4), (4), (4)))), clamp(_GLF_IDENTITY((4), ((4)) | ((4))), (4), (_GLF_IDENTITY(4, 0 ^ (4))))))), (4), (4))), ((4)) - 0)) + 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))) - 0), (4), (4))), _GLF_IDENTITY(((4)) - 0, (((4)) - 0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4))), (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), clamp((4), (4), (4))) : _GLF_FUZZED((7258 ^ -31369))))) - 0)) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94786)))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4))) | (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))))) - 0), (4), _GLF_IDENTITY((4), clamp((4), (4), (4))))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (4) ^ 0)), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)))))))), ((4)) - 0)) + 0))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))) - 0), (4), (4))), _GLF_IDENTITY(((4)) - 0, (((4)) - 0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4))), (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), clamp((4), (4), (4))) : _GLF_FUZZED((7258 ^ -31369))))) - 0)) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94786)))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4))) | (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))))) - 0), (4), _GLF_IDENTITY((4), clamp((4), (4), (4))))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (4) ^ 0)), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)))))))), ((4)) - 0)) + 0))), _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))) - 0), (4), (4))), _GLF_IDENTITY(((4)) - 0, (((4)) - 0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4))), (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), clamp((4), (4), (4))) : _GLF_FUZZED((7258 ^ -31369))))) - 0)) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94786)))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4))) | (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))))) - 0), (4), _GLF_IDENTITY((4), clamp((4), (4), (4))))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (4) ^ 0)), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)))))))), ((4)) - 0)) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))) - 0), (4), (4))), _GLF_IDENTITY(((4)) - 0, (((4)) - 0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4))), (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), clamp((4), (4), (4))) : _GLF_FUZZED((7258 ^ -31369))))) - 0)) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94786)))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4))) | (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))))) - 0), (4), _GLF_IDENTITY((4), clamp((4), (4), (4))))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (4) ^ 0)), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)))))))), ((4)) - 0)) + 0))), (false ? _GLF_FUZZED(-12908) : _GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))) - 0), (4), (4))), _GLF_IDENTITY(((4)) - 0, (((4)) - 0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4))), (_GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), clamp((4), (4), (4))) : _GLF_FUZZED((7258 ^ -31369))))) - 0)) + _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94786)))), (0 >> _GLF_IDENTITY(int(3), int(3))) + (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (_GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), (4), (4)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)), (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4))) | (false ? _GLF_FUZZED(bitCount(-73767)) : clamp((4), (4), (4)))))))) - 0), (4), _GLF_IDENTITY((4), clamp((4), (4), (4))))), ((4)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(4, (4) | (4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), 0 ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (4) ^ 0)), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), (4), (4))), (false ? _GLF_FUZZED(56621) : _GLF_IDENTITY((4), clamp((4), (4), (4))))), (4), (4)))))))), ((4)) - 0)) + 0))))))))))), 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), ! (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false)) && true) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  barrier();
}
