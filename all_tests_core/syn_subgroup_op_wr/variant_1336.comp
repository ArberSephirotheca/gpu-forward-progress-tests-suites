#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5584.4477)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (false ? _GLF_FUZZED(vec4(-50.98, 211.840, -7508.1431, -24.58)) : mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 0.0, 1.0)))), vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(injectionSwitch, 0.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(79.62) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), true), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (injectionSwitch.x > injectionSwitch.y)))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.28), _GLF_FUZZED(3331.0266)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false, true)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.x)))) > injectionSwitch.y))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false, true)))), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.x)))) > injectionSwitch.y))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true)), false, true)))), true, true)))))))))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(true, (true) && true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, exp(0.0))), 0.0, 0.0, 0.0, 1.0, 1.0)), float(_GLF_IDENTITY(float(float(mat3(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), cos(0.0))), 0.0, 0.0, 0.0, exp(0.0))), 0.0, 0.0, 0.0, 1.0, 1.0))), min(float(float(mat3(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, exp(0.0))), 0.0, 0.0, 0.0, 1.0, 1.0))), float(float(mat3(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1])), 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, exp(0.0))), 0.0, 0.0, 0.0, 1.0, 1.0)))))))))), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-3305.5176), _GLF_FUZZED(6204.9211)), bvec2(false, false))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(498.750, -643.225))) : injectionSwitch)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0))))), 1, _GLF_IDENTITY(1, max(1, 1))))])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(4.7), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-3.9)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(567.995), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true)))))), 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 1.0)))))))[1])), min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), clamp(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1])))) * 1.0)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-3305.5176), _GLF_FUZZED(6204.9211)), bvec2(false, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(498.750, -643.225))) : injectionSwitch)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0))))), 1, _GLF_IDENTITY(1, max(1, 1))))])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(4.7), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-3.9)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(567.995), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true)))))), 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 1.0)))))))[1])), min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), clamp(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1])))) * 1.0)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-3305.5176), _GLF_FUZZED(6204.9211)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(498.750, -643.225))) : injectionSwitch)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0))))), 1, _GLF_IDENTITY(1, max(1, 1))))])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(4.7), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-3.9)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(567.995), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true)))))), 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 1.0)))))))[1])), min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), clamp(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1])))) * 1.0)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-3305.5176), _GLF_FUZZED(6204.9211)), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cosh(vec2(498.750, -643.225))) : injectionSwitch)))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0))))), 1, _GLF_IDENTITY(1, max(1, 1))))])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mix(vec3(_GLF_FUZZED(4.7), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-3.9)), vec3((vec3(injectionSwitch, 1.0))[0], _GLF_FUZZED(567.995), (vec3(injectionSwitch, 1.0))[2]), bvec3(true, false, true)))))), 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 1.0)))))))[1])), min(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), (_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), clamp(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1])))) * 1.0)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-3305.5176), _GLF_FUZZED(6204.9211)), bvec2(false, false))).y))) || false)))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, true)), _GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) && true, ((bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) && true) && true))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))) && true)))))), bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))) || false)), true, true))) && true)))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) && true)))))))))))))))))))) && true)), true), true, false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           barrier();
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.7)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
        }
      }
    }
   else
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       do
        {
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1 & 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false, true)))), (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), true, false, true))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), false, true, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), false, true, false))))), bool(bvec2(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-234.904))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (1.0) + length(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)))) < injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), clamp(float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), float(mat4(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0)))), abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0), vec3(0.0, log(1.0), 1.0))), 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0)), min(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), clamp(_GLF_IDENTITY((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0), (mat3x2(1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (true ? (vec4(injectionSwitch.x, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(radians(vec4(-1.8, 276.140, 4318.9535, -9.3))) : normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.91)), bool(false))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)), (float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))) + 0.0)))), 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)) : _GLF_FUZZED(vec4(_GLF_IDENTITY(86.11, (86.11) / 1.0), -9.2, -7434.7256, 9.9)))), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), (vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(967.474)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, tan(0.0), log(1.0), 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY((vec4(injectionSwitch.x, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), determinant(mat4(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0)))) + 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0)), ((vec4(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat4(sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) < injectionSwitch.y)))) || false))))), false, true, false))))), false))))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((0 & _GLF_IDENTITY(-62523, (-62523) >> 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) | (_GLF_IDENTITY(int(3), int(3))))), min(((_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, ~ (_GLF_IDENTITY(~ ((0) ^ 0), (~ ((0) ^ 0)) | (~ ((0) ^ 0)))))) & _GLF_IDENTITY(-62523, ~ (_GLF_IDENTITY(~ (-62523), (0 >> _GLF_IDENTITY(int(2), int(2))) + (~ (-62523)))))) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(((0 & -62523) >> _GLF_IDENTITY(int(3), int(3))), ~ (~ (_GLF_IDENTITY(((0 & -62523) >> _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY(0 | ((_GLF_IDENTITY((_GLF_IDENTITY(0 & -62523, 1 * (_GLF_IDENTITY(0 & -62523, min(0 & -62523, 0 & -62523))))), clamp(_GLF_IDENTITY((0 & -62523), 0 | ((0 & -62523))), _GLF_IDENTITY((0 & -62523), max((0 & -62523), (0 & -62523))), _GLF_IDENTITY((0 & -62523), ((0 & -62523)) << 0))) >> _GLF_IDENTITY(int(3), int(3)))), max(0 | (((0 & -62523) >> _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(0 | ((_GLF_IDENTITY((0 & -62523) >> _GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY((0 & -62523), 0 | (_GLF_IDENTITY((0 & -62523), ((0 & -62523)) << 0))) >> _GLF_IDENTITY(int(3), int(3)), ((0 & -62523) >> _GLF_IDENTITY(int(3), int(3))) - (0 << _GLF_IDENTITY(int(6), int(6))))) | 0))), clamp(0 | (((0 & -62523) >> _GLF_IDENTITY(int(3), int(3)))), 0 | (((0 & -62523) >> _GLF_IDENTITY(int(3), int(3)))), 0 | (((0 & -62523) >> _GLF_IDENTITY(int(3), int(3)))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(74079) : 1))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, determinant(mat4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.7))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), length(0.0), 1.0)), sqrt(1.0), 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sin(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7990.6644))) : _GLF_FUZZED(8.5)))) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6524.4140) : 1.0)), 1.0, 0.0, abs(0.0), length(0.0), 1.0)), sqrt(1.0), 1.0, 0.0)))) * exp(0.0)), float(mat3(injectionSwitch.y, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0), mat2(mat2x3(mat2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, 1.0))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0))))))), true && (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)), (true ? mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)) : _GLF_FUZZED((mat3x4(-9.4, 3138.8700, 9.7, 8.3, 804.700, -30.15, -310.291, -2565.1657, 1265.1710, 57.05, 1.4, 88.80) + 424.456))))), max(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)), (true ? mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)) : _GLF_FUZZED((mat3x4(-9.4, 3138.8700, 9.7, 8.3, 804.700, -30.15, -310.291, -2565.1657, 1265.1710, 57.05, 1.4, 88.80) + 424.456))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(0.0, cos(0.0), 1.0, 1.0, 0.0, 0.0)))))), sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)), (true ? mat3x4(injectionSwitch.x, 1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)) : _GLF_FUZZED((mat3x4(-9.4, 3138.8700, 9.7, 8.3, 804.700, -30.15, -310.291, -2565.1657, 1265.1710, 57.05, 1.4, 88.80) + 424.456)))))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, exp(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, false || (true)) ? 1.0 : _GLF_FUZZED(float(true)))), 0.0, 1.0)))))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, exp(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, exp(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), 1u, (1u ^ 0u)))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true, false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), 0.0, abs(abs(1.0)), 1.0, 0.0, 0.0, 1.0), mat2x4(mat4(mat2x4(vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), 0.0, abs(abs(1.0)), 1.0, 0.0, 0.0, 1.0))))), vec2(vec2(vec2(_GLF_IDENTITY(mat2x4(vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), 0.0, abs(abs(1.0)), 1.0, 0.0, 0.0, 1.0), mat2x4(mat4(mat2x4(vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), 0.0, abs(abs(1.0)), 1.0, 0.0, 0.0, 1.0))))))))), bvec2(true, false))).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x), min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false)), mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false)), mix(vec2(_GLF_FUZZED((- 4.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(997.745)), bvec2(true, false))))).x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) || false), false)))), (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ~ (~ ((1))))) << 0) | (_GLF_IDENTITY(1, (1) * 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, ~ (~ (2))), 2)), min(2, 2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), max(_GLF_IDENTITY(min(2, 2), ~ (_GLF_IDENTITY(~ (min(2, 2)), max(~ (min(2, 2)), ~ (min(2, 2)))))), min(2, 2)))), 1 * (_GLF_IDENTITY(2, min(2, 2))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(2, min(2, 2))))), 0, (0 >> _GLF_IDENTITY(int(4), int(4))))))))) == 0, ((subgroup_local_id % _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), ~ (~ (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) ^ 0)))))), 0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), max(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) * 1), (0 >> _GLF_IDENTITY(int(4), int(4)))))))), int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), ~ (~ (_GLF_IDENTITY(2, min(2, 2))))), 0, (0 >> _GLF_IDENTITY(int(4), int(4))))))))))) == 0) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-17479 & 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((55443 & int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 | ((55443 & int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, true))), true))), false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(false, true && (false))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(false, (false) || false))))))));
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))) && true); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), bool(bvec2(bool(bvec3(bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), false))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         read = atomicLoad(buf[virtual_gid], 4, 64, 2);
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8676.9742)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (false ? _GLF_FUZZED(26301) : 1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(79911)))) << 0)), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         subgroupAll(false);
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(851.490)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), true, false))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (((1 ^ _GLF_IDENTITY(0, clamp(0, 0, 0))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 1 * (_GLF_IDENTITY(6, (6) * 1)))), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), true && (! (false || (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 subgroupBarrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
}
