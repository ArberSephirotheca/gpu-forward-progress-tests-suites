#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY((vec2(vec2(injectionSwitch))) * mat2(1.0), mat2(1.0) * ((vec2(vec2(injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))), vec2(0.0, 0.0) + (vec2(vec2(injectionSwitch)))), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch, injectionSwitch)).y)))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w, (false ? _GLF_FUZZED(72004u) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size)).z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w, (false ? _GLF_FUZZED(72004u) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size)).z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w, (false ? _GLF_FUZZED(72004u) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size)).z * GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w))));
 GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY(0u | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y), (false ? _GLF_FUZZED(workgroup_id) : (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)))) * 1u), (true ? 0u | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY(0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size)).y), (true ? 0u | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, min(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size)).y) : _GLF_FUZZED(subgroup_id))))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY(0u | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y), (true ? 0u | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y) : _GLF_FUZZED(subgroup_id)))))) + 0u)) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), 0.0 + (dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(429.779) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-931.332)), bvec2(true, false))).x))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).y)) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, min(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, max(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y) | (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) / 1u) * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)), 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)))), clamp(~ (~ (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)))), (~ (~ (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y))))) >> 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y))))))), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)), _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, 1u * (workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)))) : _GLF_FUZZED(uvec2(_GLF_IDENTITY(28346u, min(28346u, 28346u)), 25922u).t))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), _GLF_IDENTITY(uint(uint((~ (subgroup_local_id)))), max(uint(uint((~ (subgroup_local_id)))), uint(uint((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec3(~ (subgroup_local_id), 0u, (1u & 1u))))))))))), _GLF_IDENTITY((subgroup_local_id) * 1u, min((subgroup_local_id) * 1u, _GLF_IDENTITY((subgroup_local_id) * 1u, uint(uvec3((subgroup_local_id) * 1u, 0u, (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-367.359, (-367.359) - 0.0)), _GLF_FUZZED(349.163)), bvec2(false, false))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((556.454))), bvec2(true, false)))[1])).x, log(1.0) + (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), (int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1))))) + 0), int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))))))))]), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), (int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1))))) + 0), int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(1, 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)))))), _GLF_IDENTITY((ivec4(1, 1, 1, 1)), (false ? _GLF_FUZZED(ivec4(-72916, -46494, -81098, 84907)) : _GLF_IDENTITY((ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0) ^ ((ivec4(1, 1, 1, 1)))))) | (ivec4(1, 1, 1, 1)))))))))])) * mat2(1.0))).x, log(1.0) + (injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), min(float(float(1.0)), float(float(1.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.4) : injectionSwitch.y)), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-642.085) : 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))) / 1.0)), float(_GLF_FUZZED(-660.895)), bool(false))), _GLF_IDENTITY((false ? _GLF_FUZZED(8.6) : injectionSwitch.y), ((false ? _GLF_FUZZED(8.6) : injectionSwitch.y)) + 0.0)))))) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0))[0], injectionSwitch[1]))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, 0)))))], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), exp(0.0), tan(0.0), 0.0, 0.0, 1.0, sqrt(1.0))))[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(1.0))), exp(0.0), tan(0.0), 0.0, 0.0, 1.0, sqrt(1.0))))[1]) : _GLF_FUZZED(86.21))) / 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size) | uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y), ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y)) | ((GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y))) | (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.y))) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec3((0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), _GLF_IDENTITY((uvec3((0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) | (uvec3((0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)), ((uvec3((0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) | (uvec3((0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))) / uvec3(1u, 1u, 1u)))))) | (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-984.772)), bool(false)))))))) ^ _GLF_IDENTITY((0u), ((0u)) ^ 0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_13_2_1_11_3_1_13num_workgroupsubgroup_basesubgroup_idsubgroup_size.w) << 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) || false)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) * 1u), ~ (~ (uint(1)))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, abs(1.0), 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if((_GLF_IDENTITY(subgroup_local_id % 2, 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2)), (true ? subgroup_local_id % 2 : _GLF_FUZZED(read))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2 : _GLF_FUZZED(read), (true ? _GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) % 2 : _GLF_FUZZED(read) : _GLF_FUZZED(next_virtual_gid))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2 : _GLF_FUZZED(read))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))), (true ? subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))) : _GLF_FUZZED(read)))) / 1u)))) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id % 2, uint(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u), subgroup_local_id % 2)), (0u ^ 1u)))) : _GLF_FUZZED(read), (true ? _GLF_IDENTITY(subgroup_local_id % 2, uint(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, uint(uint(subgroup_local_id % 2)))) >> 0u), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2)), (0u ^ 1u)))) : _GLF_FUZZED(read)) | (true ? _GLF_IDENTITY(subgroup_local_id % 2, uint(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) >> 0u), subgroup_local_id % 2)), (0u ^ 1u)))) : _GLF_FUZZED(read))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(read)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(read)))))), uint(uvec4(uint(uint((_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(read)))))), 1u, 0u, (1u & 1u))))) << _GLF_IDENTITY(0u, max(0u, 0u))))) ^ 0u))) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))))), false, true))))) || false), true))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), true))))))))) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), true))))))))) || _GLF_IDENTITY(false, ! (! (false)))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)) && true), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), true))))))))) || _GLF_IDENTITY(false, ! (! (false)))), true), true), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))) && true), true)))), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), true)))), false, true))))), true))))))))) || _GLF_IDENTITY(false, ! (! (false)))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))) && true) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, sin(0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(734.217)), float(injectionSwitch.y), bool(true))))), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), true)))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), true)))))), true && (bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, sin(0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(734.217)), float(injectionSwitch.y), bool(true))))), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), true)))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, true), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), true)))), false, true))))), true))))))))))) || _GLF_IDENTITY(false, ! (! (false)))), true), true), true))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ((~ (64))) * 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ _GLF_IDENTITY((64), ~ (~ ((64))))) / 1))), _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), min(_GLF_IDENTITY((~ (64)), ~ (~ ((~ (64))))), _GLF_IDENTITY((~ (64)), ((~ (64))) << 0)))), _GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), max(_GLF_IDENTITY((~ (64)), (_GLF_IDENTITY((~ (64)), (true ? (~ (64)) : _GLF_FUZZED(22006)))) / 1), (~ (64))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), ~ (~ (64))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), clamp(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, ~ (~ (64))))))), _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ~ (~ ((64))))) | (_GLF_IDENTITY((64), ((64)) | ((64)))))))))))) - 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))))) - 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) / 1)))), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0)))) + 0, (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ _GLF_IDENTITY((64), int(_GLF_IDENTITY(int((64)), (int((64))) | (int((64))))))))))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(7992) : 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), _GLF_IDENTITY(0, (0) * 1) + (~ _GLF_IDENTITY((64), int(ivec3(_GLF_IDENTITY((64), clamp((64), (64), (64))), 1, 0)))))))) - 0)), _GLF_IDENTITY(((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0, min(((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0, ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), _GLF_IDENTITY(max(~ (64), ~ (64)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))), clamp(int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))), int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))), int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))))))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), (false ? _GLF_FUZZED(-69813) : _GLF_IDENTITY(~ (64), max(~ _GLF_IDENTITY((64), max((64), (64))), ~ (64))))), 0 + (~ (64)))))) - 0))) | 0), max(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64))))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64))))))))) - 0))) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-90517)))))))) - 0))) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (_GLF_IDENTITY(~ (64), clamp(~ (64), _GLF_IDENTITY(~ (64), 1 * (~ (64))), ~ (64)))))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (_GLF_IDENTITY(~ (64), max(~ (64), _GLF_IDENTITY(~ (64), _GLF_IDENTITY(int(ivec4(~ (64), 1, 0, 1)), (int(ivec4(~ (64), 1, 0, 1))) / 1))))))))) - 0))) | 0))))))))) + _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(16133, -51718, 49546), clamp(ivec3(16133, -51718, 49546), ivec3(16133, -51718, 49546), _GLF_IDENTITY(ivec3(16133, -51718, 49546), ~ (~ (ivec3(16133, -51718, 49546)))))).x), (true ? _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ _GLF_IDENTITY((64), int(_GLF_IDENTITY(int((64)), (int((64))) | (int((64))))))))))) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(7992) : 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), _GLF_IDENTITY(0, (0) * 1) + (~ _GLF_IDENTITY((64), int(ivec3(_GLF_IDENTITY((64), clamp((64), (64), (64))), 1, 0)))))))) - 0)), _GLF_IDENTITY(((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0, min(((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0, ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0))) | 0))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), _GLF_IDENTITY(max(~ (64), ~ (64)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))), clamp(int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))), int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))), int(ivec4(_GLF_IDENTITY(max(~ (64), ~ (64)), (true ? max(~ (64), ~ (64)) : _GLF_FUZZED(73719))), 1, 0, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0))) >> _GLF_IDENTITY(int(1), int(1))))))))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), (false ? _GLF_FUZZED(-69813) : _GLF_IDENTITY(~ (64), max(~ _GLF_IDENTITY((64), max((64), (64))), ~ (64))))), 0 + (~ (64)))))) - 0))) | 0), max(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64))))), ~ (~ (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64))))))))) - 0))) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (~ (64)))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-90517)))))))) - 0))) | 0))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (_GLF_IDENTITY(~ (64), clamp(~ (64), _GLF_IDENTITY(~ (64), 1 * (~ (64))), ~ (64)))))))) - 0)), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), max(~ (64), ~ (64))), 0 + (_GLF_IDENTITY(~ (64), max(~ (64), _GLF_IDENTITY(~ (64), _GLF_IDENTITY(int(ivec4(~ (64), 1, 0, 1)), (int(ivec4(~ (64), 1, 0, 1))) / 1))))))))) - 0))) | 0))))))))) + _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(16133, -51718, 49546), clamp(ivec3(16133, -51718, 49546), ivec3(16133, -51718, 49546), _GLF_IDENTITY(ivec3(16133, -51718, 49546), ~ (~ (ivec3(16133, -51718, 49546)))))).x)) << 0)))), 2);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3322.8987), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((69.20 / 389.207))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2(vec2(0.0, 0.0), 0.0, 1.0)))) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), min(0 | (4), _GLF_IDENTITY(0 | (4), min(0 | (4), 0 | (4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) - 0), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
