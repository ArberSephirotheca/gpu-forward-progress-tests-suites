#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), false, true, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x) | (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), max((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)) + (injectionSwitch), mix(vec2((log(vec2(1.0, 1.0)) + (injectionSwitch))[0], (log(vec2(1.0, 1.0)) + (injectionSwitch))[1]), vec2(_GLF_FUZZED(3.0), _GLF_FUZZED(-8.7)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), min((min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), ((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)), min((min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch))) + vec2(0.0, 0.0)))) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(1.3, -4625.5552)))))), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), min((min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))) - vec2(0.0, 0.0))))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(742.921, -579.200)) : (injectionSwitch) * mat2(1.0)))), injectionSwitch)), (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), max((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) : _GLF_FUZZED(injectionSwitch))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0, mix(float(_GLF_FUZZED(279.901)), float(_GLF_IDENTITY((1.0) * 1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-2.7) : (1.0) * 1.0), 0.0 + ((false ? _GLF_FUZZED(-2.7) : (1.0) * 1.0))))), bool(true)))))), 1.0))))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)))), _GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), min(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) * exp(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) * vec2(1.0, 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y) && true))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(-4.6)), bvec2(false, false)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), min((min(injectionSwitch, injectionSwitch)), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-258.576), _GLF_FUZZED(0.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)))), _GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), min(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) * exp(vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) * vec2(1.0, 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))), (false ? _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y) && true))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(-4.6)), bvec2(false, false)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), min((min(injectionSwitch, injectionSwitch)), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-258.576), _GLF_FUZZED(0.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)))), _GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-4778.7684)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3990.2028)), float(0.0), bool(true))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), min(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(-4778.7684)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) * exp(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)))), _GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-4778.7684)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3990.2028)), float(0.0), bool(true))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), min(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(-4778.7684)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) * exp(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y), false, false)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)))), _GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-4778.7684)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3990.2028)), float(0.0), bool(true))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), min(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(-4778.7684)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) * exp(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y), false, false)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)))), _GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-4778.7684)), bvec2(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(1.0, 1.0) * (((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch)) - vec2(0.0, 0.0)))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3990.2028)), float(0.0), bool(true))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), min(vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4778.7684)), bvec2(true, false))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), vec4(((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.0), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))))[0], _GLF_FUZZED(-4778.7684)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), injectionSwitch))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) * exp(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))) / vec2(1.0, 1.0))).x > injectionSwitch.y), false, false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((false ? _GLF_FUZZED(atan(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))) : _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch))))), ((false ? _GLF_FUZZED(atan(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))) : _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))))) + tan(vec2(0.0, 0.0)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0), (_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) * mat2(1.0)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y) && true))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), vec2(_GLF_FUZZED(-8.1), _GLF_FUZZED(_GLF_IDENTITY(-4.6, min(-4.6, -4.6)))), bvec2(false, false)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))), min((min(injectionSwitch, injectionSwitch)), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-258.576), _GLF_FUZZED(0.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-53.64), _GLF_FUZZED((6.9))), vec2((mat2(1.0) * (vec2(1.0, 1.0)))[0], (mat2(1.0) * (vec2(1.0, 1.0)))[1]), bvec2(true, true)))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY((min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (false ? _GLF_FUZZED((mat2(-551.599, 50.66, 6.2, -9.4) + 6581.4185)) : transpose(mat2(1.0)))))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min((min(injectionSwitch, injectionSwitch)), (min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / sqrt(1.0)))))))) / vec2(1.0, 1.0))).x > injectionSwitch.y)))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_IDENTITY(bool(bool(bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(bool(bool(false)))), false), bvec2(bvec3(bvec2(bool(bool(bool(bool(false)))), false), _GLF_IDENTITY(true, bool(bool(true)))))), bvec2(bvec3(bvec2(bool(bool(bool(bool(false)))), false), true)))), (bool(_GLF_IDENTITY(bvec2(bool(bool(bool(bool(false)))), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bvec2(bvec3(bvec2(bool(bool(bool(bool(false)))), false), true))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (_GLF_IDENTITY(false, false || (false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) >> 0u) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (0u ^ 0u) + (subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-84.10)), float(injectionSwitch.y), bool(true)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u))))) - 0u) + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u))))) - 0u) + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) + _GLF_IDENTITY(0u, (0u) | (0u)))))))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) | 0u)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(81137u) : 1u))) + 1))) ^ 0u)), ((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ 0u))) | (_GLF_IDENTITY((subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ 0u)), (true ? (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ 0u)) : _GLF_FUZZED(num_workgroup))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))) + 0u), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size)))))), 0u | (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))) + 0u), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(log(vec2(1.0, 1.0)))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false, false))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, false, false))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, false, false))), true)))), true && (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, false, false))), true)))), false || ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), false, false, false))), true)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(atan(39.99, 8.4)) : (injectionSwitch)[0])), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(92.76)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2023.7954), _GLF_FUZZED(64.26)), bvec2(false, false))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(atan(39.99, 8.4)) : (injectionSwitch)[0])), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(92.76)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2023.7954), _GLF_FUZZED(64.26)), bvec2(false, false))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(atan(39.99, 8.4)) : (injectionSwitch)[0])), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(92.76)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2023.7954), _GLF_FUZZED(64.26)), bvec2(false, false))).y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) || false)))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) ? _GLF_FUZZED(pow(2004.7103, -901.277)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(72.44) : injectionSwitch.x)) : _GLF_FUZZED(-31.97))), float(vec4(injectionSwitch.x, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-640.310) : 0.0))))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))) && true)) && true)) ? _GLF_FUZZED(pow(2004.7103, -901.277)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((527.043 - -9.4))), vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(72.44) : injectionSwitch.x)) : _GLF_FUZZED(-31.97))), float(vec4(injectionSwitch.x, 1.0, abs(1.0), 0.0)))) - 0.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(74.20)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1))) : _GLF_FUZZED(next_virtual_gid))), uint(1))), uint(1)), (min(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1))) : _GLF_FUZZED(next_virtual_gid))), uint(1))), uint(1))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1))) : _GLF_FUZZED(next_virtual_gid))), uint(1))), uint(1)), (min(_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(subgroup_id) : uint(1))), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))), subgroup_id, subgroup_id))) + 0u)) : uint(1)))) - 0u) : _GLF_FUZZED(next_virtual_gid))), uint(1))), uint(1))) * 1u)))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) + 0), 4, 4)));
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, bool(bvec4(_GLF_IDENTITY((subgroup_local_id % 2) == 0, (_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) == 0), ! (! (((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) == 0)))) && true)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x : _GLF_FUZZED(smoothstep(-323.743, -1.1, 3.8)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   subgroupAll(false);
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), ~ (~ (virtual_gid)))], _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(64, ~ (~ (64))), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, false))))) || false), true, true, true)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) || false)))
    return;
   barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), (_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(ivec3(35568, 91697, 20740), ~ (~ (ivec3(35568, 91697, 20740))))[1]), _GLF_IDENTITY((_GLF_FUZZED(ivec3(35568, 91697, 20740)[1])) - 0, _GLF_IDENTITY(((_GLF_FUZZED(ivec3(35568, 91697, 20740)[1])) - 0) | ((_GLF_FUZZED(ivec3(35568, 91697, 20740)[1])) - 0), (false ? _GLF_FUZZED(-84284) : ((_GLF_FUZZED(ivec3(35568, 91697, 20740)[1])) - 0) | ((_GLF_FUZZED(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(35568, (35568) ^ 0), 91697, 20740)[1], ~ (_GLF_IDENTITY(~ (ivec3(_GLF_IDENTITY(35568, (35568) ^ 0), 91697, 20740)[1]), int(ivec2(~ (ivec3(_GLF_IDENTITY(35568, (35568) ^ 0), 91697, 20740)[1]), 0))))))) - 0))))) : (4))), (4))) + 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (_GLF_IDENTITY(4, (4) | 0))) ^ 0), (~ (4)) | (~ (_GLF_IDENTITY(4, ~ (~ (4))))))))) / 1), 64, _GLF_IDENTITY(4, (4) | (4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.5)), float(1.0), bool(true))), 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), max(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)), (mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))))) + log(exp(vec2(0.0, 0.0))))))) / vec2(1.0, 1.0)).y))))))))
  barrier();
}
