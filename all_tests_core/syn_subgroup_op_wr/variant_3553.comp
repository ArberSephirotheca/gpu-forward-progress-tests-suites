#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 ivec4 _f0;
 mat4x3 _f1;
 uint subgroup_local_id;
 bool _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 float _f1;
 uvec4 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 mat2 _f1;
 uvec4 _f2;
 mat3 _f3;
 int _f4;
 mat4 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint subgroup_size;
 bvec4 _f1;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 _GLF_struct_1 _f1;
 uvec3 _f2;
 bool _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(633.724))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), _GLF_IDENTITY(bool(bvec3((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(true, (true) && true)))), false, false)), ! (! (bool(bvec3((bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), false, false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true && (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), true, true, false))))), true && (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true && (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-90.27)), bool(false))))) > injectionSwitch.y)), false, false, true))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), false || (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))) && true)), true && (! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(vec2(1.0), _GLF_struct_1(_GLF_struct_0(ivec4(1), mat2(1.0), uvec4(1u), mat3(1.0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1), mat4(1.0)), gl_SubgroupSize, bvec4(true)), uvec3(1u), true, bvec4(_GLF_IDENTITY(true, ! (! (true)))), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true))) : _GLF_FUZZED(1.5)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.7)), _GLF_IDENTITY(float(1.0), (true ? _GLF_IDENTITY(float(1.0), (float(1.0)) * 1.0) : _GLF_FUZZED(62.84))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, bool(bvec4((_GLF_IDENTITY(true, true && (true))) || false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) : _GLF_FUZZED(1.5)), clamp((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(1.5), _GLF_IDENTITY((_GLF_FUZZED(1.5)), 1.0 * ((_GLF_FUZZED(1.5)))) / 1.0)), _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true))) : _GLF_FUZZED(1.5)), max((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true))) : _GLF_IDENTITY(_GLF_FUZZED(1.5), mix(float(_GLF_FUZZED(1.5)), float(_GLF_FUZZED(-290.511)), bool(false)))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(-6.7)), float(1.0), bool(true))) / 1.0)) : _GLF_FUZZED(1.5)))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.7, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(-6.7, (true ? -6.7 : _GLF_FUZZED(139.499))), max(_GLF_IDENTITY(-6.7, (true ? -6.7 : _GLF_FUZZED(139.499))), _GLF_IDENTITY(-6.7, (true ? -6.7 : _GLF_FUZZED(139.499))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), float(1.0), bool(true))) : _GLF_FUZZED(1.5))))) - 0.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false || (_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)), bool(bvec3(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)), false, false)))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)), bool(bvec3(bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)), false, false)))))), ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) || false)))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))))), ! (! (bool(bool(! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false))), ! (! (! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true)))) || false)))))))))), false || (! (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), (true && (false)) || false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec2(1u), 1.0, _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(uvec4(171491u, 195766u, 34879u, 35022u), (uvec4(171491u, 195766u, 34879u, 35022u)) | (uvec4(171491u, 195766u, 34879u, 35022u))))) : uvec4(1u))), uvec4(1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) * ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), (~ _GLF_IDENTITY((max(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), uvec4(1u), uvec4(1u))), min(_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), uvec4(1u), uvec4(1u))), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), uvec4(1u), uvec4(1u))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), uvec4(1u), uvec4(1u))))))), ((max(uvec4(1u), uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u))) | (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), (uvec4(1u)) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), (uvec4(1u)) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), (uvec4(1u)) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), uvec4(1u))))))))) | uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))))), 0u)), 0u)), _GLF_struct_3(_GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(min(ivec4(-9859, 16196, -18093, -92842), -9680)) : ivec4(1))), mat4x3(1.0), gl_SubgroupInvocationID, true, bvec3(true)));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(124668u, 125878u, 148421u)) : _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x, (_GLF_IDENTITY(1u | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u | 0u, (_GLF_IDENTITY(1u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u | 0u))) | (_GLF_IDENTITY(1u | 0u, clamp(_GLF_IDENTITY(1u | 0u, (1u | 0u) ^ 0u), _GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u), _GLF_IDENTITY(1u | 0u, 0u ^ (1u | 0u))))))), clamp(~ (1u | 0u), ~ (_GLF_IDENTITY(1u | 0u, min(1u | 0u, 1u | 0u))), ~ (1u | 0u)))))) * _GLF_IDENTITY((gl_NumWorkGroups.x), max((gl_NumWorkGroups.x), (gl_NumWorkGroups.x))))) * 1u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0), injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), sqrt(0.0)))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(58.84) : injectionSwitch.x)) > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) << 0u)), uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u ^ (uint(0u)), clamp(0u ^ (uint(0u)), _GLF_IDENTITY(0u ^ (uint(0u)), ~ (~ (0u ^ (uint(0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (uint(0u)), min(_GLF_IDENTITY(0u ^ (uint(0u)), uint(_GLF_IDENTITY(uvec3(0u ^ (uint(0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(0u ^ (uint(0u)), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))) | (uvec3(0u ^ (uint(0u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u ^ (uint(0u)), (0u ^ _GLF_IDENTITY((uint(0u)), ~ (_GLF_IDENTITY(~ ((uint(0u))), (true ? _GLF_IDENTITY(~ ((uint(0u))), 0u ^ (~ ((uint(0u))))) : _GLF_FUZZED(196554u)))))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(8717.1412)), bool(false))))))), (true ? 0u ^ (uint(0u)) : _GLF_FUZZED(num_workgroup)))))))), 0u)), 0u) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec4(_GLF_IDENTITY(int(6), ~ (_GLF_IDENTITY(~ (int(6)), min(~ (int(6)), ~ (int(6)))))), 1, 0, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) - 0) >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) + 0u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u))), (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))) + 0u)))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_id))))), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(0u | (workgroup_id), (0u | (workgroup_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u))))), 1u)))))) << 0u)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), uint(uint((workgroup_size * workgroup_id)))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), workgroup_id))))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_id), uint(_GLF_IDENTITY(uvec4(~ (workgroup_id), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(~ (workgroup_id), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) | (uvec4(~ (workgroup_id), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u)), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u)), uint(_GLF_IDENTITY(uvec3(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u)), 0u, 1u), clamp(uvec3(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u)), 0u, 1u), uvec3(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u)), 0u, 1u), uvec3(0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))))))) >> 0u)), 0u, 1u)))))) >> 0u))))) << 0u))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), clamp(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), max(_GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), (true ? (workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) : _GLF_FUZZED(num_workgroup))), (workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (0u ^ (workgroup_size * workgroup_id)) | (0u ^ (workgroup_size * workgroup_id))), 0u ^ (workgroup_size * workgroup_id))), min(0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(13595u))))), 0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size))), (1u ^ 1u)), (true ? uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size))), (1u ^ 1u)) : _GLF_FUZZED(uvec2(18668u, 138503u))))), 1u * (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size))), (1u ^ 1u)), (true ? uvec2(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_size))), (1u ^ 1u)) : _GLF_FUZZED(uvec2(18668u, 138503u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id)))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))), (true ? _GLF_IDENTITY(0u ^ (workgroup_size * workgroup_id), min(0u ^ (workgroup_size * workgroup_id), 0u ^ (workgroup_size * workgroup_id))) : _GLF_FUZZED(workgroup_id)))) / 1u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), _GLF_IDENTITY((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u | (uint(_GLF_IDENTITY((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u | (uint(_GLF_IDENTITY((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | ((~ (~ (workgroup_id))) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))) >> 0u)))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))), _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id)))), (_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), 0u | (workgroup_id))))) ^ 0u))))) >> 0u)))))) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))))));
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_2._f1.subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_struct_replacement_4._f3.subgroup_local_id, (workgroup_base + subgroup_base + _GLF_struct_replacement_4._f3.subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y)))), true, false, true)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((! ((injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))), true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), true)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
        return;
       return;
      }
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(float(false))), bool(false))) > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1731.7015) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.3)), bool(false))))), max((0.0) + _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(1731.7015), mix(float(_GLF_FUZZED(1731.7015)), float(_GLF_FUZZED(6025.7309)), bool(false))) : 0.0)), (0.0) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(1731.7015, (false ? _GLF_FUZZED(94.56) : 1731.7015))) : 0.0)))), max((0.0) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1731.7015) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1948.5775)), float(0.0), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))), max((_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))), (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1731.7015) : 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? _GLF_FUZZED(1731.7015) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1731.7015) : 0.0))), float(_GLF_FUZZED(-34.26)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1731.7015) : 0.0)), mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1731.7015) : 0.0))), float(_GLF_FUZZED(788.632)), bool(false)))))))), injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1)) - 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.2)), float(1.0), bool(true))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), tan(0.0), 1.0), transpose(transpose(mat4x2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, tan(0.0), 1.0)))))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(ceil(-40.07)) : (1.0) - 0.0))), tan(0.0), 1.0), transpose(transpose(mat4x2(injectionSwitch, determinant(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.9)), bool(false))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, tan(0.0), 1.0)))))).x, 1.0, 0.0))))) | _GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(69.37, (69.37) / 1.0))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x2(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), 1.0, 0.0, 1.0, log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), exp(0.0), 0.0, tan(0.0), 0.0))), 0.0, 0.0, 1.0, 0.0)))), (true ? (_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x2(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0))).x), bool(true))))))), (false ? _GLF_FUZZED(-23.84) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(69.37, (69.37) / 1.0))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(-5380.9778)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))), 0.0, 0.0)), vec2(mat3x2(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), 1.0, 0.0, 1.0, log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), exp(0.0), 0.0, tan(0.0), 0.0))), 0.0, 0.0, 1.0, 0.0)))), (true ? (_GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), vec2(mat3x2(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0))).x), bool(true))))))))) > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 1))))) || _GLF_IDENTITY(false, (false) && true)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true && (false)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || (false || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(bvec4(true, false, false, false))) && (false)), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), true && (! (bool(bool(false))))))))) || false))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false))))))))))) || false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED(49.46), _GLF_FUZZED(0.2)), bvec2(false, false))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED(49.46), _GLF_FUZZED(0.2)), bvec2(false, false))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true)), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))) && true))), true && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))) && true))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))) && true)), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && true))))))))))))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, true, false)))))))), true, true))))))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                break;
               break;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
      }
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_4._f3.subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_2._f1.subgroup_size), clamp((false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_2._f1.subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) : _GLF_struct_replacement_2._f1.subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, (_GLF_struct_replacement_2._f1.subgroup_size) ^ 0u))))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_2._f1.subgroup_size), clamp((false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_2._f1.subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_2._f1.subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_2._f1.subgroup_size))))) | 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), subgroup_id))) : _GLF_struct_replacement_2._f1.subgroup_size)))), ((~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1.subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u)))) : _GLF_struct_replacement_2._f1.subgroup_size))))) * 1u)) / 1u)))));
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))), injectionSwitch.x)))), min(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8579.8186)), bool(false))))))))), (false ? _GLF_FUZZED(16290) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))), injectionSwitch.x)))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))), injectionSwitch.x))))) * 1))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))), injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) != _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(3), int(3)), (0 ^ 1) * (0 >> _GLF_IDENTITY(int(3), int(3))))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) >> (0 & -38648)), (0 >> _GLF_IDENTITY(int(3), int(3))), (0 >> _GLF_IDENTITY(int(3), int(3))))), (true ? _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) >> (0 & -38648)), (0 >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-71458) : 0)) >> _GLF_IDENTITY(int(3), int(3))))) : _GLF_FUZZED(sign(_injected_loop_counter)))) ^ _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 + ((1))) ^ 0, 1 * (_GLF_IDENTITY((1), 0 + ((1))) ^ 0))), 1))), (false ? _GLF_FUZZED((~ max(_injected_loop_counter, 16866))) : (_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(int(3)))), int(3)))) >> (0 & -38648)), (0 >> _GLF_IDENTITY(int(3), int(3))), (0 >> _GLF_IDENTITY(int(3), int(3))))), (true ? _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(3))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ~ (~ (3)))) + 0)))), _GLF_IDENTITY(int(ivec3((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ~ (~ (3)))) + 0)))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1)), clamp(int(ivec3((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ~ (~ (3)))) + 0)))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1)), int(ivec3((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ~ (~ (3)))) + 0)))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1)), int(ivec3((0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, ~ (~ (3)))) + 0)))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))), 1))))), ((0 >> _GLF_IDENTITY(int(3), int(3)))) >> (0 & -38648)), (0 >> _GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-71458) : 0)) >> _GLF_IDENTITY(int(3), int(3))))) : _GLF_FUZZED(sign(_injected_loop_counter)))) ^ _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 + ((1))) ^ 0, 0 ^ (_GLF_IDENTITY((1), 0 + ((1))) ^ 0))), 1)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))) * 1u), uint(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) | (uint(1)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), (false ? _GLF_FUZZED(next_virtual_gid) : (uint(1)))) | (uint(1)), ((uint(1)) | (uint(1))) >> 0u)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((uint(1)) | (uint(1)), ((uint(1)) | (uint(1))) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((uint(1)) | (uint(1)), ((uint(1)) | (uint(1))) >> 0u)))))))), uint(1))))), uint(uint(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, 1 * (1))), (uint(_GLF_IDENTITY(1, 1 * (1)))) - 0u)))) | 0u), uint(1)))), ((uint(1))) - 0u) | (uint(1)))))), _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
     if(_GLF_DEAD(false))
      continue;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1, ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)) | _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | ((0))))), max(_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)) | _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), ((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)) | _GLF_IDENTITY(0, (0) | (0)))) - 0), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), int(_GLF_IDENTITY(ivec4((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), 1, 0, 1), (ivec4((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1), 1, 0, 1)) - ivec4(0, 0, 0, 0))))) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) + 0) | (0)))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))) && true))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true)), true))))))))
    continue;
   if((_GLF_IDENTITY(_GLF_struct_replacement_4._f3.subgroup_local_id % 2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_4._f3.subgroup_local_id % 2))) == 0)
    {
     subgroupAll(false);
     read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) >> _GLF_IDENTITY(0u, (0u) << 0u)), min(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid])), max(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), buf[virtual_gid], buf[virtual_gid]))))) >> 0u), min(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid])), max(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))))))) | 0u), 4, 64, 2), 1u * (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) >> 0u, max((_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) >> 0u, uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) >> 0u, 0u, 0u), (uvec3((_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) >> 0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))))), min(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), buf[virtual_gid])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), max(buf[virtual_gid], buf[virtual_gid])), max(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))]))) << 0u)) / 1u))))), 4, 64, 2)));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), false || ((! ((false)))))))), false || (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), (false || ((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(((false)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), bool(bvec2(! (bool(bvec3(((false)), false, false))), true))))))))))) && true))))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || ((! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ((! ((false)))) && true)))), ! (! (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), false || (! (! ((false)))))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), false || ((false))))), (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), false)))), false, true), true))))))))) || false))), _GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))), ! (! (! (false || ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), false, false, true)))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false))))))))), (_GLF_IDENTITY(false || ((! _GLF_IDENTITY((false), ! (! ((false)))))), ! (! (false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))) || false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))) || false)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))), injectionSwitch)).y))));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
     read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid))], _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) - 0)))), 64, 2);
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) < injectionSwitch.y))))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.3), clamp(_GLF_FUZZED(-4.3), _GLF_IDENTITY(_GLF_FUZZED(-4.3), max(_GLF_FUZZED(-4.3), _GLF_FUZZED(-4.3))), _GLF_FUZZED(_GLF_IDENTITY(-4.3, 1.0 * (_GLF_IDENTITY(-4.3, max(-4.3, -4.3))))))), _GLF_FUZZED(_GLF_IDENTITY(43.25, clamp(43.25, 43.25, 43.25)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bvec2(! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true))))))))
    {
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     subgroupBarrier();
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.3)), bool(false))))) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       atomicStore(checker[virtual_gid], read, 4, 64, 4);
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false))), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false))) && true)))))), true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), true))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, sin(0.0))), abs(0.0), abs(0.0), 0.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0))) > injectionSwitch.y)))) && true)), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, true, true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
}
