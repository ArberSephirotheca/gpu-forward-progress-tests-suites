#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 mat3x2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
 mat4 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 bool _f4;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 mat4x3 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 mat2x4 _f1;
 float _f2;
 vec4 _f3;
} ;

struct _GLF_struct_19 {
 bvec4 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 vec3 _f4;
 _GLF_struct_18 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
 mat4 _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 uint read;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 uvec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 ivec2 _f1;
 ivec2 _f2;
 uvec2 _f3;
 ivec3 _f4;
 bvec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_7 {
 int _f0;
 mat2x4 _f1;
 int _f2;
 vec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_7 _f0;
 bool _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 int _f4;
 _GLF_struct_10 _f5;
 _GLF_struct_11 _f6;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat4 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 bvec3 _f1;
 uint _f2;
 ivec4 _f3;
 bvec4 _f4;
 ivec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 vec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
 vec3 _f4;
 mat3x4 _f5;
 bool _f6;
} ;

struct _GLF_struct_2 {
 int _f0;
 ivec3 _f1;
 mat4x3 _f2;
 int _f3;
 mat3x2 _f4;
 bvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_1 {
 bool _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
} ;

struct _GLF_struct_0 {
 int _f0;
 int _f1;
 vec3 _f2;
} ;

struct _GLF_struct_13 {
 uint next_virtual_gid;
 _GLF_struct_0 _f0;
 uvec3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_12 _f3;
 vec4 _f4;
 ivec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, tan(0.0), 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(9.5) : float(mat3x2(injectionSwitch.y, tan(0.0), 0.0, 0.0, 0.0, 1.0)))), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, tan(0.0), 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(9.5) : float(mat3x2(injectionSwitch.y, tan(0.0), 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, tan(0.0), 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(9.5) : float(mat3x2(injectionSwitch.y, tan(0.0), 0.0, 0.0, 0.0, 1.0))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY((32.87), max((_GLF_IDENTITY(32.87, (false ? _GLF_FUZZED(sign(-4.5)) : 32.87))), _GLF_IDENTITY((32.87), (false ? _GLF_FUZZED(58.79) : (32.87)))))) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), false || (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(427.335)), bool(false))), injectionSwitch.y)), injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(137.170) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(137.170) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(137.170) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7710.3916))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true), false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_19(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), false || (bool(true)))), ! (! (bool(_GLF_IDENTITY(bool(true), false || (bool(true))))))))), _GLF_struct_15(ivec3(1), mat2x4(1.0), 1.0, vec4(1.0)), _GLF_struct_16(uvec4(1u), mat4x3(1.0), ivec2(1), bvec3(true)), _GLF_struct_17(ivec2(1), mat4(1.0), mat2x3(1.0), mat3x4(1.0), true), vec3(1.0), _GLF_struct_18(mat3x2(1.0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(max(1, 1), _GLF_IDENTITY(max(1, 1), (true ? _GLF_IDENTITY(max(1, 1), ~ (~ (max(1, 1)))) : _GLF_FUZZED(-34319)))))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), max(1, 1), max(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), 1)))), (_GLF_IDENTITY(1, max(1, 1))) | (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0), (clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) * 1), 0)) / 1)) : _GLF_FUZZED(bitCount(abs(86895))))) << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), (max(_GLF_IDENTITY(1, ~ (~ (1))), 1)) >> 0), max(1, 1), _GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1))))))))))), mat4(1.0), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (0u) + 0u) + (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u))) : _GLF_FUZZED(workgroup_base)))) ^ 0u, max((_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u))) : _GLF_FUZZED(workgroup_base)))) ^ 0u, (_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u))) : _GLF_FUZZED(workgroup_base)))) ^ 0u))) | 0u))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)), clamp(uint(uvec3(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id))), (0u | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)))))))), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) | 0u))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))) | 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))), 0u, 0u))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), max((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), subgroup_local_id))) : subgroup_size)))) + subgroup_local_id);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u) : _GLF_FUZZED(subgroup_size)))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) - 0u), (subgroup_id) * ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u, _GLF_IDENTITY(6u, ~ (~ (6u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u)) - 0u)) | (uint(6u))), (uint(6u)) | (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, (6u) | (6u))))))))), uint(6u)))) * subgroup_size)), (uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))), 0u + (1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) ^ 0u)), uint(6u)))) * subgroup_size))) | (_GLF_IDENTITY(0u, (0u) | (0u)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) - 0u), (subgroup_id) * ((_GLF_IDENTITY(1u, min(1u, 1u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) * 1u)) - 0u)) | (uint(6u))), (uint(6u)) | (_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))))), uint(6u)))) * subgroup_size)), (uint(uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) * ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 0u + (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) : _GLF_FUZZED(subgroup_id)))))) | (0u | 0u)))) << 0u) + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_0(_GLF_IDENTITY(1, 0 ^ (1)), 1, vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(refract(-75.73, 4.2, -4.1)) : 1.0)))), uvec3(1u), _GLF_struct_6(_GLF_struct_1(true), _GLF_struct_2(1, ivec3(1), mat4x3(1.0), 1, mat3x2(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false)))))), false)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))), bvec2(bvec2(bvec2(true)))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))))), bvec2(bvec2(bvec2(true)))), false))))))))))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false))))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, true))))))), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(false, true && (false)))))))))), true, true))))))), mat2(1.0)), _GLF_struct_3(mat4(1.0), vec2(1.0), ivec4(1), uvec4(1u), vec3(1.0), mat3x4(1.0), true), _GLF_struct_4(mat4x2(1.0), bvec3(true), _GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), ivec4(1), bvec4(_GLF_IDENTITY(true, false || (true))), ivec2(1), _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-4.7)), vec2(_GLF_FUZZED(3.5), _GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(1, max(1, 1))], ((vec2(1.0))[1]) - 0.0)), bvec2(false, true))), vec2(1.0)))), _GLF_struct_5(mat2x4(1.0), mat4(1.0), uvec4(1u))), _GLF_struct_12(_GLF_struct_7(1, mat2x4(1.0), 1, vec2(1.0), mat2x4(1.0)), true, _GLF_struct_8(uvec4(1u), ivec2(1), ivec2(1), uvec2(1u), ivec3(1), bvec4(true), mat4x2(1.0)), _GLF_struct_9(mat3x2(1.0), uvec4(1u)), 1, _GLF_struct_10(vec4(1.0), uvec2(1u), mat3x2(1.0)), _GLF_struct_11(vec3(1.0), mat3x2(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))) / vec4(1.0, 1.0, 1.0, 1.0))) * vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), ivec4(_GLF_IDENTITY(1, 0 ^ (1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_13.next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (4)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-49804) : 64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(uvec4(1u), atomicLoad(buf[_GLF_struct_replacement_20.virtual_gid], 4, 64, 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) && true))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(70.80)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) ^ 0u) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((mat3x4(-201.270, 2.8, -57.53, -47.03, -6831.4250, 92.33, -6196.6551, 7.2, 312.319, -9.9, 8422.0862, 875.678) * vec3(-9.4, -13.46, 8.9)).b)), bool(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(checker[_GLF_struct_replacement_20.virtual_gid], _GLF_struct_replacement_14.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, (0.0) * 1.0)), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(-707.623)), bool(false))), 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(sin(0.0), clamp(_GLF_IDENTITY(sin(0.0), 1.0 * (sin(0.0))), sin(0.0), sin(0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))))).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sin(0.0), 1.0, 0.0, 0.0), mix(vec4((vec4(sin(0.0), 1.0, 0.0, 0.0))[0], (vec4(sin(0.0), 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(745.397)), vec4(_GLF_FUZZED(-8069.7720), _GLF_FUZZED(-2.1), (vec4(sin(0.0), 1.0, 0.0, 0.0))[2], (vec4(sin(0.0), 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(37.17))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-34.54))), 0.0)), 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0)))) - 0.0)), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))) + (0.0)), 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8054.8139)), float(0.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))))).y)), true)))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(sin(0.0), 1.0, 0.0, 0.0), mix(vec4((vec4(sin(0.0), 1.0, 0.0, 0.0))[0], (vec4(sin(0.0), 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-0.0), _GLF_FUZZED(745.397)), vec4(_GLF_FUZZED(-8069.7720), _GLF_FUZZED(-2.1), (vec4(sin(0.0), 1.0, 0.0, 0.0))[2], (vec4(sin(0.0), 1.0, 0.0, 0.0))[3]), bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(37.17))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-34.54))), 0.0)), 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0))), 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(sin(0.0), float(mat2x3(sin(0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8054.8139)), float(0.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sin(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))))).y)), true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(checker[_GLF_struct_replacement_20.virtual_gid], _GLF_struct_replacement_14.read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(bvec2((! ((false))), false)))) || false, (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))), false, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))), false, true))))))))))), bool(bvec2((! ((false))), false)))) || false) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, (false) || false)))), bool(bvec2((! ((false))), _GLF_IDENTITY(false, true && (false)))))) || false, (_GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), ! (! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))))))), bool(bvec2((! ((false))), false)))) || false) || false)))))))), true && _GLF_IDENTITY((false), ((false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(463.325)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
