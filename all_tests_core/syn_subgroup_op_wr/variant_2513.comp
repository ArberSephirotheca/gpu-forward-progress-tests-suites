#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_53 {
 bvec4 _f0;
 uvec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_52 {
 ivec3 _f0;
 int _f1;
 vec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_51 {
 float _f0;
 bvec2 _f1;
 mat2 _f2;
 mat4x2 _f3;
 mat4 _f4;
 int _f5;
} ;

struct _GLF_struct_54 {
 _GLF_struct_51 _f0;
 vec4 _f1;
 _GLF_struct_52 _f2;
 _GLF_struct_53 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_55 {
 mat2 _f0;
 int _injected_loop_counter;
 _GLF_struct_54 _f1;
} ;

struct _GLF_struct_50 {
 mat2x3 _f0;
 int _f1;
 int _injected_loop_counter;
 bvec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_47 {
 uint _f0;
} ;

struct _GLF_struct_46 {
 float _f0;
 vec3 _f1;
 ivec3 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 mat2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_48 {
 uvec2 _f0;
 _GLF_struct_46 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 _GLF_struct_47 _f4;
} ;

struct _GLF_struct_44 {
 int _f0;
} ;

struct _GLF_struct_43 {
 ivec4 _f0;
 float _f1;
 vec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_42 {
 bvec2 _f0;
 ivec3 _f1;
 ivec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_45 {
 _GLF_struct_42 _f0;
 _GLF_struct_43 _f1;
 int _f2;
 ivec3 _f3;
 _GLF_struct_44 _f4;
} ;

struct _GLF_struct_40 {
 uint _f0;
 uvec2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_41 {
 _GLF_struct_40 _f0;
 bvec4 _f1;
 bool _f2;
 uint _f3;
 mat3x2 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_38 {
 bvec2 _f0;
 mat4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_37 {
 bool _f0;
 ivec2 _f1;
 ivec4 _f2;
 mat3x2 _f3;
 ivec4 _f4;
 ivec3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_36 {
 int _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_36 _f0;
 ivec4 _f1;
 _GLF_struct_37 _f2;
 mat2x4 _f3;
 mat4x3 _f4;
 _GLF_struct_38 _f5;
} ;

struct _GLF_struct_49 {
 int _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_41 _f2;
 bvec4 _f3;
 _GLF_struct_45 _f4;
 _GLF_struct_48 _f5;
 int _GLF_SWITCH_2_63v;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 uint _f1;
 vec2 _f2;
 uint _f3;
 ivec3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_32 {
 uvec3 _f0;
 uvec4 _f1;
 ivec4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_31 {
 uint _f0;
 mat3x4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 mat3x2 _f4;
 vec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_30 {
 mat4 _f0;
} ;

struct _GLF_struct_34 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_35 {
 _GLF_struct_34 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_28 {
 ivec3 _f0;
} ;

struct _GLF_struct_26 {
 mat3x2 _f0;
 float _f1;
} ;

struct _GLF_struct_25 {
 int _f0;
 vec3 _f1;
} ;

struct _GLF_struct_27 {
 vec2 _f0;
 _GLF_struct_25 _f1;
 uvec2 _f2;
 _GLF_struct_26 _f3;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 int _f1;
 bvec2 _f2;
 mat4 _f3;
 ivec3 _f4;
 uvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
 uint _f1;
 ivec4 _f2;
 bvec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_29 {
 mat4 _f0;
 _GLF_struct_24 _f1;
 bvec2 _f2;
 bvec2 _f3;
 uint _f4;
 _GLF_struct_27 _f5;
 _GLF_struct_28 _f6;
 ivec3 _GLF_SWITCH_2_68v;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 bvec2 _f1;
 float _f2;
 bvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 vec3 _f1;
 bvec4 _GLF_SWITCH_2_47v;
 bvec2 _f2;
} ;

struct _GLF_struct_22 {
 bool _f0;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_17 {
 mat3 _f0;
 mat2 _f1;
 vec4 _f2;
 bvec3 _f3;
 bvec2 _f4;
 mat4x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
 uvec3 _f1;
 vec4 _f2;
 mat4x3 _f3;
 vec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 mat4x3 _f1;
 _GLF_struct_17 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
 uint subgroup_size;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_13 {
 uint _f0;
 bool _f1;
 mat2x3 _f2;
 bool _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 uvec3 _f1;
 vec2 _f2;
 uint _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat2 _f1;
 mat3x2 _f2;
 mat4 _f3;
 vec3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
} ;

struct _GLF_struct_9 {
 float _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 int _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_7 {
 bool _f0;
 ivec2 _f1;
 vec4 _f2;
 mat4x2 _f3;
 vec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 mat4 _f1;
 bvec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 mat4x2 _f1;
 _GLF_struct_6 _f2;
 ivec3 _f3;
 mat3x2 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 mat2 _f1;
 mat2x4 _f2;
 vec4 _f3;
 float _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 uint _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 mat3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 mat4x2 _f1;
 vec2 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_8 _f4;
 uint virtual_gid;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_0 {
 float _f0;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 _GLF_struct_0 _f3;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat4x3(1.0), bvec4(true), mat3x2(1.0), _GLF_struct_0(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat2(1.0, 0.0, 1.0, 1.0)))))), gl_SubgroupID);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), true, false, true))))))
    barrier();
   barrier();
  }
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat4x3(1.0), gl_SubgroupSize, _GLF_struct_18(_GLF_struct_16(true, uvec3(_GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), vec4(1.0), mat4x3(1.0), vec4(1.0), 1u), mat4x3(1.0), _GLF_struct_17(mat3(1.0), mat2(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4009.2492)), bool(false))))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), max(vec4(1.0), vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))), bvec3(_GLF_IDENTITY(true, ! (! (true)))), bvec2(true), mat4x3(1.0), mat3x2(1.0)), mat4(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_35 _GLF_struct_replacement_35 = _GLF_struct_35(_GLF_struct_34(_GLF_struct_30(mat4(1.0)), _GLF_struct_31(1u, mat3x4(1.0), bvec2(true), bvec4(true), mat3x2(1.0), vec3(1.0), mat3(1.0)), _GLF_struct_32(uvec3(1u), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(84116u)))) / 1u)), ivec4(1), mat4x2(1.0)), _GLF_struct_33(ivec3(1), 1u, vec2(1.0), 1u, ivec3(1), bvec4(true)), vec3(1.0)), workgroup_size * workgroup_id);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(ivec3(1), mat4x2(1.0), vec2(1.0), _GLF_struct_5(mat4(1.0), _GLF_struct_2(mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED((ceil(1745.9896) / 3.4)), _GLF_IDENTITY((_GLF_FUZZED((ceil(_GLF_IDENTITY(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))) / 3.4))) + 0.0, float(mat4(_GLF_IDENTITY((_GLF_FUZZED((ceil(_GLF_IDENTITY(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))) / 3.4))) + 0.0, min(_GLF_IDENTITY((_GLF_FUZZED((ceil(_GLF_IDENTITY(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))) / 3.4))) + 0.0, ((_GLF_FUZZED((ceil(_GLF_IDENTITY(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))) / 3.4))) + 0.0) * 1.0), (_GLF_FUZZED((ceil(_GLF_IDENTITY(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), vec3(mat3x4(vec3(_GLF_IDENTITY(1745.9896, clamp(1745.9896, _GLF_IDENTITY(1745.9896, max(1745.9896, 1745.9896)), 1745.9896)), 0.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))) / 3.4))) + 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 1.0, exp(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1u), _GLF_struct_3(ivec2(_GLF_IDENTITY(1, max(1, 1))), vec2(1.0)), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch.y), bool(true)))), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch.y), bool(true)))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(9479.9874))), mix(float(_GLF_FUZZED(5.0)), float(injectionSwitch.y), bool(true)))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_struct_4(mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))))), mat2(1.0), mat2x4(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(sin(abs(0.0)), (true ? sin(abs(0.0)) : _GLF_FUZZED((9475.0594 - 884.112)))), 1.0, 0.0), max(vec4(1.0, _GLF_IDENTITY(sin(abs(0.0)), (true ? sin(abs(0.0)) : _GLF_FUZZED((9475.0594 - 884.112)))), 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(sin(abs(0.0)), (true ? sin(abs(0.0)) : _GLF_FUZZED((9475.0594 - 884.112)))), 1.0, 0.0)))))), mix(vec4((vec4(1.0))[_GLF_IDENTITY(0, 0 + (0))], _GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], ((vec4(1.0)))[1], ((vec4(1.0)))[2], _GLF_FUZZED((+ -2.1))), vec4(_GLF_IDENTITY(_GLF_FUZZED(-3896.5746), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3896.5746), min(_GLF_FUZZED(-3896.5746), _GLF_FUZZED(-3896.5746))), _GLF_IDENTITY(_GLF_FUZZED(-3896.5746), 0.0 + (_GLF_FUZZED(-3896.5746))), _GLF_FUZZED(-3896.5746))), _GLF_FUZZED(-9411.9249), _GLF_FUZZED(-8360.1985), ((vec4(1.0)))[3]), bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7236.0864)), bool(false)))))))), true)))[1], _GLF_FUZZED(-7.6), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0)))), clamp((_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0)))), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0)))), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))))[3]), vec4(_GLF_FUZZED(_GLF_IDENTITY(26.85, (26.85) - abs(0.0))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-80.57, (_GLF_IDENTITY(-80.57, (true ? -80.57 : _GLF_FUZZED(-2.3)))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(-80.57, (_GLF_IDENTITY(-80.57, (true ? -80.57 : _GLF_FUZZED(-2.3)))) / 1.0), max(_GLF_IDENTITY(-80.57, (_GLF_IDENTITY(-80.57, (true ? -80.57 : _GLF_FUZZED(-2.3)))) / 1.0), _GLF_IDENTITY(-80.57, (_GLF_IDENTITY(-80.57, (true ? -80.57 : _GLF_FUZZED(-2.3)))) / 1.0))), _GLF_IDENTITY(-80.57, (_GLF_IDENTITY(-80.57, (true ? -80.57 : _GLF_FUZZED(-2.3)))) / 1.0)))), (vec4(1.0))[2], _GLF_IDENTITY(_GLF_FUZZED((80.75 + 8.8)), float(vec4(_GLF_IDENTITY(_GLF_FUZZED((80.75 + 8.8)), max(_GLF_FUZZED((80.75 + 8.8)), _GLF_FUZZED((80.75 + 8.8)))), 1.0, 0.0, cos(0.0))))), bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false))), 1.0, bvec4(true))), _GLF_struct_8(mat3(1.0), mat4x2(1.0), _GLF_struct_6(mat2x3(1.0), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(float(mat3x4(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0))), min(_GLF_IDENTITY(float(mat3x4(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0))), (float(mat3x4(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0)))) + 0.0), float(mat3x4(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0)))))))) / abs(1.0))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), bvec3(true), mat2(1.0)), ivec3(1), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8782.3062)), float(1.0), bool(true)))), _GLF_struct_7(true, ivec2(1), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), mat4x2(1.0), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(1.0))), mat4(1.0))), _GLF_struct_replacement_35.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, max(_GLF_struct_replacement_1.subgroup_id, _GLF_struct_replacement_1.subgroup_id)) * _GLF_struct_replacement_19.subgroup_size + subgroup_local_id, _GLF_struct_14(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 1.0))), _GLF_struct_9(1.0, mat4x2(1.0), mat2x4(1.0), bvec2(true), 1, ivec4(1)), _GLF_struct_10(vec4(1.0)), _GLF_struct_11(mat2(1.0), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.2)))), mat3x2(1.0), mat4(1.0), vec3(1.0), vec3(1.0)), _GLF_struct_12(mat3x4(1.0), uvec3(1u), vec2(1.0), 1u, uvec2(1u)), _GLF_struct_13(1u, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) && true)), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))))))), mat2x3(1.0), true, mat3x4(1.0))));
 uint next_virtual_gid = _GLF_struct_replacement_35.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u, clamp((_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u, (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u, (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u)))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> 0u)) >> 0u), (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))), (true ? (_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_id, (_GLF_struct_replacement_1.subgroup_id) >> _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))))) : _GLF_FUZZED(96677u))) >> 0u)) | 0u)))) * 1u) * _GLF_struct_replacement_19.subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u ^ (subgroup_local_id)) + 1) % _GLF_struct_replacement_19.subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0)))))).x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || (true))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) / 1), 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_15.virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 1 < _GLF_struct_replacement_19.subgroup_size)
    {
     if(_GLF_DEAD(false))
      barrier();
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 82:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
          barrier();
         barrier();
        }
       atomicStore(checker[_GLF_IDENTITY(_GLF_struct_replacement_15.virtual_gid, (_GLF_struct_replacement_15.virtual_gid) / (1u & 1u))], _GLF_IDENTITY(read, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : 0u, (false ? _GLF_FUZZED(num_workgroup) : 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + _GLF_IDENTITY((read), ~ (_GLF_IDENTITY(~ ((read)), min(~ ((read)), ~ ((read))))))), 4, 64, 4);
       case 90:
       case 38:
       case 20:
       subgroupAll(false);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false, false)))))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 55:
       _GLF_IDENTITY(vec3(3.5, -9328.8565, 786.004), _GLF_IDENTITY(mat3(1.0) * (vec3(3.5, -9328.8565, 786.004)), (mat3(1.0) * (vec3(3.5, -9328.8565, 786.004))) + vec3(0.0, 0.0, 0.0)));
       case 66:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       uvec4(189639u, 181042u, 131317u, 28683u);
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true))))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         switch(_GLF_SWITCH((_GLF_IDENTITY(0, (0) * 1) << _GLF_IDENTITY(int(2), int(2)))))
          {
           case 71:
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
             {
              if(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                while(true)
                 {
                  do
                   {
                    -2318.9308;
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-450.831))), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
                   barrier();
                  _GLF_IDENTITY(58524, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (58524));
                  ivec4 _GLF_SWITCH_2_0v;
                  bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false))))), false);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  (greaterThan(ivec2(-9800, 69914), ivec2(19936, 69955)));
                  if(_GLF_DEAD(false))
                   barrier();
                  mat3x2 _GLF_SWITCH_2_1v[55];
                  float _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
                  if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(1.0) * (injectionSwitch), 1.0, 1.0)))).x > injectionSwitch.y)))) && true))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    barrier();
                   }
                  bool _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
                 }
                ;
                if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                mat3x2(_GLF_IDENTITY(0.9, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.9, float(mat2(0.9, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2(_GLF_IDENTITY(0.9, float(mat2(0.9, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0)), (transpose(mat4x2(_GLF_IDENTITY(0.9, float(mat2(0.9, 0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0))) * mat2(1.0)))))), _GLF_IDENTITY(587.919, float(float(_GLF_IDENTITY(587.919, mix(float(_GLF_FUZZED(-43.50)), float(587.919), bool(true)))))), -8.6, 392.323, -8.3, _GLF_IDENTITY(2.9, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-3.1), (_GLF_FUZZED(-3.1)) / 1.0)), (true ? float(_GLF_FUZZED(-3.1)) : _GLF_FUZZED(-8.8))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.9, max(2.9, 2.9)), max(_GLF_IDENTITY(2.9, mix(float(2.9), float(_GLF_FUZZED(float(false))), bool(false))), 2.9)), min(_GLF_IDENTITY(2.9, max(_GLF_IDENTITY(2.9, mix(float(2.9), float(_GLF_FUZZED(float(false))), bool(false))), 2.9)), _GLF_IDENTITY(_GLF_IDENTITY(2.9, max(2.9, _GLF_IDENTITY(2.9, (2.9) * 1.0))), max(_GLF_IDENTITY(2.9, mix(float(2.9), _GLF_IDENTITY(float(_GLF_FUZZED(float(false))), min(_GLF_IDENTITY(float(_GLF_FUZZED(float(false))), 1.0 * (float(_GLF_FUZZED(float(false))))), float(_GLF_FUZZED(float(false))))), bool(false))), 2.9))))), bool(true))));
                if(_GLF_DEAD(false))
                 barrier();
                mat4x3 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v, _GLF_SWITCH_2_9v;
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec3(27953u, 27866u, 128609u).zxzy;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat3x4 _GLF_SWITCH_2_10v;
                 if(_GLF_DEAD(false))
                  barrier();
                }
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                  {
                   unpackUnorm2x16((workgroup_id * workgroup_size));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 vec4(-828.342, -1.6, _GLF_IDENTITY(_GLF_IDENTITY(47.63, (47.63) - 0.0), (_GLF_IDENTITY(47.63, float(_GLF_IDENTITY(mat3x4(47.63, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(mat3x4(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0))))))), 1.0), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(274.438, -3.9, 4.1, -4.7, -2.7, 619.897, -698.351, -683.632, -54.47, 3855.1880, -35.95, 54.16, 74.62, -0.2, -2.0, _GLF_IDENTITY(-5.0, mix(float(_GLF_FUZZED(627.251)), float(-5.0), bool(true))))) : _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))))) * (mat3x4(47.63, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.3))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)) / 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(4.0), (vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4963.7184)))))[1], _GLF_FUZZED(vec2(838.221, 21.21).r)), vec3(_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], (_GLF_IDENTITY((vec3(1.0, 0.0, 0.0))[0], mix(float((vec3(1.0, 0.0, 0.0))[0]), float(_GLF_FUZZED(-0.1)), bool(false)))) - 0.0), _GLF_FUZZED(8.7), (vec3(1.0, 0.0, 0.0))[2]), bvec3(true, false, true))))), 1.0)))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(5.6)), float(abs(0.0)), bool(true)))), 63.53);
                 mat3(3599.4604, 6280.9127, -6.8, -9.4, -7.7, -7492.4061, -2097.6461, -9.8, _GLF_IDENTITY(-972.487, (true ? _GLF_IDENTITY(-972.487, float(mat3x2(_GLF_IDENTITY(-972.487, min(-972.487, -972.487)), 1.0, sqrt(0.0), tan(0.0), 0.0, 1.0))) : _GLF_FUZZED(pow(-3.0, 0.4)))));
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
                  barrier();
                 mat4 _GLF_SWITCH_2_11v[18], _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-5183.8757)) : injectionSwitch.x)) > injectionSwitch.y))))
                  barrier();
                 ivec2 _GLF_SWITCH_2_14v[71], _GLF_SWITCH_2_15v;
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-1.6)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_FUZZED(-8.4)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0)), (mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0)), (mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-1.6)), float((injectionSwitch)[0]), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_FUZZED(-8.4)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0)), (mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0)), (mat4x2(vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, false))))))))))))
                  barrier();
                 any(bvec4(true, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(false, ! (! (false))), true, false)), false || (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))) && true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, false)))))));
                 if(_GLF_DEAD(false))
                  barrier();
                 bvec3 _GLF_SWITCH_2_16v[10], _GLF_SWITCH_2_17v;
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), true, true)))))
                  barrier();
                }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      barrier();
                     }
                   }
                  for(mat2 _GLF_SWITCH_2_18v[40], _GLF_SWITCH_2_19v, _GLF_SWITCH_2_20v[4]; true; bvec2(false, false))
                   {
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                equal(ivec3(14086, 96689, _GLF_IDENTITY(-45092, _GLF_IDENTITY(int(ivec4(-45092, 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))), 1)), clamp(int(ivec4(-45092, 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), _GLF_IDENTITY(0, 0 | (0))))), 1)), int(ivec4(-45092, 0, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0), (_GLF_IDENTITY(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0), (ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0)) - ivec3(0, 0, 0))) | (ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))), (false ? _GLF_FUZZED(-50707) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0)))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))))))), 1)), int(_GLF_IDENTITY(ivec4(-45092, 0, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))), 1), ~ (~ (ivec4(-45092, 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 0), 0))), 1))))))))), ivec3(21164, -45667, -32437));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              else
               {
                mat4x3 _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v, _GLF_SWITCH_2_23v;
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
                  barrier();
                 ivec4 _GLF_SWITCH_2_24v, _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v;
                 bvec2 _GLF_SWITCH_2_27v, _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v;
                 if(_GLF_DEAD(false))
                  barrier();
                 mat4x2(4.0, 60.40, 2.7, _GLF_IDENTITY(99.43, abs(1.0) * (99.43)), -54.06, 438.250, -82.72, -2.9);
                 bvec3 _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v, _GLF_SWITCH_2_32v[91];
                 mat4(77.75, -0.8, -1.0, _GLF_IDENTITY(1.7, max(1.7, _GLF_IDENTITY(1.7, float(float(1.7))))), -4600.8422, 3.5, -725.257, _GLF_IDENTITY(4.5, mix(float(_GLF_FUZZED(-5.8)), float(4.5), bool(true))), 794.704, 64.75, 9.3, -4476.9836, _GLF_IDENTITY(-24.17, 0.0 + (_GLF_IDENTITY(-24.17, (-24.17) / exp(0.0)))), _GLF_IDENTITY(47.53, (47.53) * 1.0), _GLF_IDENTITY(1.1, (1.1) * cos(0.0)), -6.1);
                }
                (+ mat2x3(_GLF_IDENTITY(592.716, float(mat2x3(592.716, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), -8967.8296, -64.92, _GLF_IDENTITY(-5.2, mix(float(_GLF_FUZZED(_GLF_IDENTITY(1335.3794, max(1335.3794, 1335.3794)))), _GLF_IDENTITY(float(-5.2), max(float(-5.2), _GLF_IDENTITY(float(-5.2), (float(-5.2)) - 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true)))))), -6.6, 52.80));
                if(_GLF_DEAD(false))
                 barrier();
                (7.0 / mat4x2(3584.3894, -8.6, -8.2, -76.84, -6768.2409, 19.47, 43.76, 12.80));
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  while(_GLF_IDENTITY(true, (true) && true))
                   {
                    ;
                    if(_GLF_DEAD(false))
                     barrier();
                    int _GLF_SWITCH_2_33v[12];
                    bool _GLF_SWITCH_2_34v[83], _GLF_SWITCH_2_35v;
                    if(_GLF_DEAD(false))
                     barrier();
                    uvec3(131460u, 161209u, 176591u);
                    mat2x3 _GLF_SWITCH_2_36v[9], _GLF_SWITCH_2_37v, _GLF_SWITCH_2_38v;
                    uvec4 _GLF_SWITCH_2_39v[45], _GLF_SWITCH_2_40v[75];
                    mat4 _GLF_SWITCH_2_41v, _GLF_SWITCH_2_42v;
                   }
                 }
                else
                 {
                 }
                _GLF_IDENTITY(-0.3, max(-0.3, -0.3));
                if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))), (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ivec2(ivec3(-55162, 60230, 8787));
                ivec3 _GLF_SWITCH_2_43v;
                if(_GLF_DEAD(false))
                 barrier();
                do
                 {
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    switch(_GLF_SWITCH(((0 & 80203) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))), min(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) >> 0))), _GLF_IDENTITY(int(ivec3(int(6), 0, 0)), ~ (~ (int(ivec3(int(6), 0, 0))))))))))
                     {
                      case 0:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
                       barrier();
                      case 8:
                      if(_GLF_DEAD(false))
                       barrier();
                      case 85:
                      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true))))))) || false)))
                       barrier();
                      for(uvec3 _GLF_SWITCH_2_44v, _GLF_SWITCH_2_45v, _GLF_SWITCH_2_46v[71]; false; transpose(_GLF_SWITCH_2_22v))
                       {
                        _GLF_struct_22 _GLF_struct_replacement_22;
                        if(_GLF_DEAD(false))
                         barrier();
                        mat3 _GLF_SWITCH_2_48v[29], _GLF_SWITCH_2_49v[24], _GLF_SWITCH_2_50v;
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      break;
                      if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false))) || false))))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      case 71:
                      mat3x4(-2828.8062, -1.9, 722.928, 11.70, 10.19, 39.36, -84.46, -4066.1356, 366.524, 5.4, 2697.4633, 9650.5160);
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                        barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(83.52)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(83.52)), float((injectionSwitch)[1]), bool(true)))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), bvec2(true, false))).y) * determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))
                         barrier();
                       }
                      default:
                      1;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))) || false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))));
               }
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             barrier();
            mat2x3(-6.1, -4771.6140, 36.23, -5.0, 888.505, 551.840);
           }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 78:
           for(           mat4(69.15, 7.2, -761.525, -570.479, -9898.5116, -1706.9843, 2.6, -15.07, -7.8, 3.6, -49.38, -84.49, -716.636, -5.9, -9.3, 8.1);
 (vec3(373.047, _GLF_IDENTITY(547.588, _GLF_IDENTITY((false ? _GLF_FUZZED(-14.42) : 547.588), ((false ? _GLF_FUZZED(-14.42) : 547.588)) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) / 1.0), 0.0)), dot(vec4(0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / cos(0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-4.6, max(-4.6, -4.6))) != _GLF_IDENTITY(vec3(3450.5005, -7.4, -4.8), clamp(vec3(3450.5005, -7.4, -4.8), vec3(3450.5005, -7.4, -4.8), _GLF_IDENTITY(vec3(3450.5005, -7.4, -4.8), min(vec3(3450.5005, -7.4, -4.8), vec3(3450.5005, -7.4, -4.8)))))); smoothstep(_GLF_IDENTITY(_GLF_IDENTITY(2657.8603, max(2657.8603, 2657.8603)), (2657.8603) * 1.0), acos(-6.4), vec2(-2.8)))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 79:
                   case 28:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 35:
                   case 52:
                   case 58:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   break;
                   default:
                   1;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if((mix(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)) == false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
                    barrier();
                   if(all(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))))
                      barrier();
                    }
                   false;
                   for(uvec4 _GLF_SWITCH_2_51v, _GLF_SWITCH_2_52v, _GLF_SWITCH_2_53v; false; _GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 0:
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       mat2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(4.9, float(mat3x4(4.9, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, tan(0.0))))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(14.59)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0))), min(_GLF_IDENTITY(4.9, float(mat3x4(4.9, 0.0, 1.0, abs(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(14.59)), bool(false)))), 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(4.9, float(mat3x4(4.9, 0.0, 1.0, abs(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(14.59)), bool(false)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))))), 12.34, 49.81, 5.4, 4.7, 6.9, -0.1, _GLF_IDENTITY(-187.190, float(mat4x3(-187.190, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), tan(0.0), 1.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))), -3.4, _GLF_IDENTITY(-16.66, mix(float(_GLF_FUZZED(9958.5884)), float(-16.66), bool(true))), 9.8, -1931.8825));
                       vec4 _GLF_SWITCH_2_54v[35];
                       case 38:
                       mat2 _GLF_SWITCH_2_55v[39], _GLF_SWITCH_2_56v, _GLF_SWITCH_2_57v;
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       break;
                       default:
                       1;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   uvec4 _GLF_SWITCH_2_58v, _GLF_SWITCH_2_59v, _GLF_SWITCH_2_60v;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
                      {
                       case 71:
                       false;
                       case 7:
                       injectionSwitch;
                       case 0:
                       case 22:
                       case 38:
                       case 12:
                       case 69:
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                       break;
                       default:
                       1;
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
                      {
                       (_GLF_IDENTITY(1140 % ivec4(65215, -90566, -91156, 11208), min(1140 % ivec4(65215, -90566, -91156, 11208), 1140 % ivec4(65215, -90566, -91156, 11208))));
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                   vec2 _GLF_SWITCH_2_61v, _GLF_SWITCH_2_62v;
                   if(_GLF_DEAD(false))
                    barrier();
                   for(_GLF_struct_49 _GLF_struct_replacement_49; true; mat3x2(-3.4, -9.1, -5.2, -5414.9828, _GLF_IDENTITY(-7.6, mix(float(_GLF_FUZZED(-16.42)), float(-7.6), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -1.5))
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true)))))))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   mat4x2 _GLF_SWITCH_2_64v;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat3x4(-45.93, _GLF_IDENTITY(851.249, _GLF_IDENTITY((_GLF_IDENTITY(851.249, max(851.249, 851.249))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(851.249, max(851.249, 851.249))), mix(float((_GLF_IDENTITY(851.249, max(851.249, 851.249)))), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(851.249, max(851.249, 851.249))), (_GLF_IDENTITY(851.249, max(851.249, 851.249)))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(851.249, max(851.249, 851.249))), mix(float((_GLF_IDENTITY(851.249, max(851.249, 851.249)))), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(851.249, max(851.249, 851.249))), (_GLF_IDENTITY(851.249, max(851.249, 851.249)))), float(mat2(clamp(_GLF_IDENTITY((_GLF_IDENTITY(851.249, max(851.249, 851.249))), mix(float((_GLF_IDENTITY(851.249, max(851.249, 851.249)))), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(851.249, max(851.249, 851.249))), (_GLF_IDENTITY(851.249, max(851.249, 851.249)))), 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(851.249, max(851.249, 851.249))), mix(float((_GLF_IDENTITY(851.249, max(851.249, 851.249)))), float(_GLF_FUZZED(3.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(851.249, max(851.249, 851.249))), (_GLF_IDENTITY(851.249, max(851.249, 851.249))))))) - 0.0), 70.26, 26.30, 7206.5869, 44.24, -8.6, -3834.6980, -792.436, -4058.0647, 196.170, -362.449);
             mat2x4 _GLF_SWITCH_2_65v[71], _GLF_SWITCH_2_66v, _GLF_SWITCH_2_67v;
             _GLF_struct_29 _GLF_struct_replacement_29;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(_GLF_struct_50 _GLF_struct_replacement_50 = _GLF_struct_50(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))), 1, 0, bvec4(true), mat3(1.0)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_50._injected_loop_counter != ((_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) | 1), (_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) | 1), ~ (~ ((_GLF_IDENTITY(0, ~ (~ (0))) | 1))))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-90683) : int(4)))))); _GLF_struct_replacement_50._injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           case 0:
           switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(22.40)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-90.66)), bool(false)))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))), (injectionSwitch.x < injectionSwitch.y)))))))))))))))
            {
             case 49:
             ivec4(-26475, 72843, 2353, -22067);
             case 40:
             ivec3(ivec2(-54932, _GLF_IDENTITY(88169, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (88169))), 62714);
             case 0:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(_GLF_struct_55 _GLF_struct_replacement_55 = _GLF_struct_55(mat2(1.0), 1, _GLF_struct_54(_GLF_struct_51(1.0, bvec2(true), mat2(1.0), mat4x2(1.0), mat4(1.0), 1), vec4(1.0), _GLF_struct_52(ivec3(1), _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-452) : 1)))))), vec4(1.0), ivec2(1)), _GLF_struct_53(bvec4(true), uvec2(1u), mat4x2(1.0)), mat4(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_55._injected_loop_counter > ((_GLF_IDENTITY(_GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), int(ivec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter)) - 0), 1)))))) | (_GLF_IDENTITY((6353 & 0), max(_GLF_IDENTITY((6353 & 0), (false ? _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter) : (6353 & 0))), (6353 & 0))))), clamp(_GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), int(ivec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter)) - 0), 1)))))) | (_GLF_IDENTITY((6353 & 0), max(_GLF_IDENTITY((6353 & 0), (false ? _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter) : (6353 & 0))), (6353 & 0))))), _GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), int(ivec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter)) - 0), 1)))))) | (_GLF_IDENTITY((6353 & 0), max(_GLF_IDENTITY((6353 & 0), (false ? _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter) : (6353 & 0))), (6353 & 0))))), _GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY((6353 & 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), int(ivec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (6353 & 0) : _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter)) - 0), 1)))))) | (_GLF_IDENTITY((6353 & 0), max(_GLF_IDENTITY((6353 & 0), (false ? _GLF_FUZZED(_GLF_struct_replacement_55._injected_loop_counter) : (6353 & 0))), (6353 & 0))))))) ^ 0) ^ 0)); _GLF_struct_replacement_55._injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
              }
             atomicStore(checker[_GLF_struct_replacement_15.virtual_gid], read, 4, 64, 4);
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             subgroupAll(true);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             case 33:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))))))))))
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true), clamp(mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true), _GLF_IDENTITY(mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true), clamp(mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true), mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true), mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true))), mix(vec4(5.4, 6.1, -6.3, -832.180)[1], 933.430, true)))) : injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.7)), bool(false))) > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(876.025), _GLF_FUZZED(float(158566u))), bvec2(false, false))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(876.025), _GLF_FUZZED(float(158566u))), bvec2(false, false))).y)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 1.0)), vec2(vec4(vec2(vec4(injectionSwitch, 0.0, 1.0)), abs(0.0), 1.0)))).x > injectionSwitch.y)))), (false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(876.025), _GLF_FUZZED(float(158566u))), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(876.025), _GLF_FUZZED(float(158566u))), bvec2(false, false))).y)))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(876.025), _GLF_FUZZED(float(158566u))), bvec2(false, false))).y)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             break;
             case 15:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(true)
                {
                 for(ivec4 _GLF_SWITCH_0_0v; false; any(bvec4(true, false, true, true)))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     vec3(-1159.1163, -5.8, -3273.3998);
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
                    {
                    }
                   else
                    {
                     do
                      {
                       switch(_GLF_SWITCH((0 | _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - (0 ^ 0)), _GLF_IDENTITY(0, (0) | 0))))))
                        {
                         case 80:
                         mat2x3(-2947.5862, -361.371, 1.4, -58.49, -458.973, -54.01);
                         case 43:
                         findMSB(workgroup_size);
                         if(_GLF_DEAD(false))
                          barrier();
                         case 0:
                         case 81:
                         case 37:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         case 74:
                         case 84:
                         while(mix(_GLF_IDENTITY(bvec2(false, false).r, (bvec2(false, false).r) || false), true, (workgroup_id > num_workgroup)))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 50:
                             case 2:
                             case 45:
                             case 12:
                             if(_GLF_DEAD(false))
                              barrier();
                             case 13:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             break;
                             case 28:
                             ;
                             case 47:
                             mat2x4(7.2, -3.6, 4.4, 17.26, 8.7, -65.63, 8.4, -4.5);
                             default:
                             1;
                            }
                          }
                         case 65:
                         case 33:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 42:
                         case 11:
                         case 28:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         break;
                         case 38:
                         vec3 _GLF_SWITCH_1_0v;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         case 73:
                         ivec3 _GLF_SWITCH_1_1v[47], _GLF_SWITCH_1_2v;
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         1;
                        }
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), false))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3 _GLF_SWITCH_0_1v[16], _GLF_SWITCH_0_2v;
                   mat4x3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[10], _GLF_SWITCH_0_5v;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), mix(float(_GLF_FUZZED(-1963.5109)), float(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(true)))) - sin(0.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0)), (mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(-934.450, -2175.2406, -74.80, -6.5, 882.474, 2.4, -76.18, 789.206, 896.252))))), (_GLF_IDENTITY(true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0)), (mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(-934.450, -2175.2406, -74.80, -6.5, 882.474, 2.4, -76.18, 789.206, 896.252))))) : _GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(174.081, 2039.0180)) : true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0)), (true ? _GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0)), (mat3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat3(-934.450, -2175.2406, -74.80, -6.5, 882.474, 2.4, -76.18, 789.206, 896.252))))) : _GLF_FUZZED(injectionSwitch)))))).y, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), mix(float(_GLF_FUZZED(7067.7280)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(mat4x2(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) / 1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), bool(true))), 0.0)))) / 1.0)))))) || false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3x2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
                   vec3(2.5, 9.4, 175.226);
                   mat4 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[22];
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 bvec3 _GLF_SWITCH_0_14v[96], _GLF_SWITCH_0_15v;
                 if(_GLF_DEAD(false))
                  barrier();
                 notEqual((uvec3(24427u, _GLF_IDENTITY(59630u, max(59630u, _GLF_IDENTITY(59630u, max(59630u, 59630u)))), _GLF_IDENTITY(118566u, (118566u) ^ 0u)) + _GLF_IDENTITY(read, (read) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED((bvec4(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), false, true) , workgroup_size)), (_GLF_IDENTITY(_GLF_FUZZED((bvec4(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), false, true) , workgroup_size)), (true ? _GLF_FUZZED((bvec4(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), false, true) , workgroup_size)) : _GLF_FUZZED(111399u)))) << 0u))))), uvec3(52796u, 176259u, 76336u));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, false || (false)))) && true))))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false, false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-4041.0860, 1.2)) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-4041.0860, 1.2)) : injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false))) && true), false)))))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))));
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if((56490 != -93842))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false))))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) / 1))), ((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) / 1)))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   do
                    {
                     ivec2(29307, 42666);
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))));
                   ivec2(47273, _GLF_IDENTITY(468, ~ (~ (468))));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 1 * (int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (3))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(0, 0))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(true)
                      {
                       _GLF_SWITCH_0_15v.xz;
                       mat2x3(-6660.7879, 3099.7080, 8517.1658, 187.388, 7.0, 3625.2002);
                       ;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         mat4x3(0.0, 5273.4247, _GLF_IDENTITY(-48.23, min(-48.23, -48.23)), 5.9, _GLF_IDENTITY(_GLF_IDENTITY(-9025.0851, max(-9025.0851, -9025.0851)), min(-9025.0851, -9025.0851)), _GLF_IDENTITY(-5.7, float(_GLF_IDENTITY(mat2x3(-5.7, 1.0, 1.0, sin(0.0), 1.0, 1.0), transpose(transpose(mat2x3(-5.7, 1.0, 1.0, sin(0.0), 1.0, 1.0)))))), _GLF_IDENTITY(4.7, (_GLF_IDENTITY(4.7, float(mat4(4.7, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(0.0), 1.0 * (sqrt(0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, determinant(mat3(0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), 0.0, 0.0, sin(0.0), 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, determinant(mat3(0.0, log(1.0), abs(0.0), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), 0.0, 0.0, sin(0.0), 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0)))))).x), 0.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))) * 1.0), -45.35, 23.44, -642.902, 5.5, -0.1);
                        }
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
                          barrier();
                         barrier();
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.8), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) + (injectionSwitch)).x, (false ? _GLF_FUZZED(fract(99.66)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((+ -5747.9598)) : injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x)) > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   mat2x4 _GLF_SWITCH_0_16v;
                   for(uvec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[10]; true; _GLF_IDENTITY(uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u))).p, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicOr(_GLF_struct_replacement_35.workgroup_base, _GLF_struct_replacement_35.workgroup_base)) : _GLF_IDENTITY(uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u))).p, (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u))), (uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u)))) | (uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u))))).p, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u))) * (_GLF_IDENTITY(uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u))), (uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u)))) | (uvec3(62410u, 88936u, _GLF_IDENTITY(65841u, max(65841u, 65841u))))).p))) ^ 0u))))
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   ivec4(77367, -10734, 57807, _GLF_IDENTITY(-65244, _GLF_IDENTITY(min(-65244, -65244), clamp(_GLF_IDENTITY(min(-65244, _GLF_IDENTITY(-65244, (1 & 1) * (-65244))), min(min(-65244, -65244), min(-65244, -65244))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(-65244, 0 ^ (-65244)), -65244), 0 | (_GLF_IDENTITY(min(-65244, -65244), (true ? min(-65244, _GLF_IDENTITY(-65244, min(-65244, _GLF_IDENTITY(-65244, 1 * _GLF_IDENTITY((-65244), 1 * ((-65244))))))) : _GLF_FUZZED(-40150))))), 0 | (_GLF_IDENTITY(min(-65244, -65244), ~ (~ (min(-65244, -65244)))))), _GLF_IDENTITY(min(-65244, -65244), (min(-65244, -65244)) | 0)))));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   mat4(_GLF_IDENTITY(-4.8, clamp(-4.8, -4.8, -4.8)), 1.7, 1.9, -5110.8120, 97.77, -0.1, -7.5, _GLF_IDENTITY(96.99, (true ? _GLF_IDENTITY(96.99, float(vec4(96.99, sin(0.0), 1.0, 0.0))) : _GLF_FUZZED(717.942))), -931.044, -414.362, _GLF_IDENTITY(87.15, (true ? 87.15 : _GLF_FUZZED(996.889))), 844.239, -599.297, -6.7, -5.5, -473.253);
                   if((mat3x2(8905.6154, 5.2, -53.51, -5.1, _GLF_IDENTITY(_GLF_IDENTITY(64.53, (true ? 64.53 : _GLF_FUZZED(132.780))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false)))), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false)))), _GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false))))), min(min(_GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false)))), _GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false))))), min(_GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false)))), _GLF_IDENTITY(0.0, (0.0) - 0.0) + (_GLF_IDENTITY(64.53, mix(float(64.53), _GLF_IDENTITY(float(_GLF_FUZZED(-58.99)), (float(_GLF_FUZZED(-58.99))) * 1.0), bool(false))))))))), 5561.4321) != mat3x2(12.75, _GLF_IDENTITY(17.07, float(float(17.07))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, (true ? -9.3 : _GLF_FUZZED(determinant(mat4(78.95, 2.6, -83.49, 42.07, 30.81, 7.4, -9.2, -423.416, -3973.2952, 7.4, -382.637, -9.2, -1.4, 63.60, -5337.0299, -3319.2976))))), sqrt(0.0) + (-9.3)), (true ? _GLF_IDENTITY(-9.3, sqrt(0.0) + (-9.3)) : _GLF_FUZZED(-1197.9633))), -9738.6267, _GLF_IDENTITY(3.1, _GLF_IDENTITY(max(_GLF_IDENTITY(3.1, float(_GLF_IDENTITY(mat3x4(3.1, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(3.1, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), 3.1), (false ? _GLF_FUZZED(9.1) : max(_GLF_IDENTITY(3.1, float(_GLF_IDENTITY(mat3x4(3.1, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(7265.5343)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(3.1, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0))), 0.0, 1.0, 0.0)))))), 3.1)))), -95.40)))
                    {
                     _GLF_IDENTITY(91753, (_GLF_IDENTITY(91753, (_GLF_IDENTITY(91753, int(ivec3(91753, 1, 1)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     mat4x2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[59];
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     ;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     int _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                    barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) * 1) != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1)))))); _injected_loop_counter ++)
                    {
                     mat2x4(_GLF_IDENTITY(937.794, max(_GLF_IDENTITY(937.794, min(937.794, 937.794)), 937.794)), _GLF_IDENTITY(-2.1, (-2.1) * abs(1.0)), 3590.8277, -8806.4348, -6775.1980, 5.3, -6.9, _GLF_IDENTITY(38.16, float(mat2x3(38.16, determinant(mat4(0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   bvec3 _GLF_SWITCH_0_24v[53], _GLF_SWITCH_0_25v;
                   reflect(reflect(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-8.3, -741.858, -6.5), vec3(_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), (_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), mat2(mat3x2(mat2(vec3(-8.3, -741.858, _GLF_IDENTITY(-6.5, float(mat4x3(-6.5, 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0))), vec2(0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED((false ? (+ -74.02) : -667.427))), float(determinant(mat2(0.0, 0.0, 1.0, 0.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))) * (1.0))))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))), mix(vec3(_GLF_FUZZED(-399.152), (_GLF_IDENTITY(vec3(-8.3, -741.858, -6.5), vec3(_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), (_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), mat2(mat3x2(mat2(vec3(-8.3, -741.858, _GLF_IDENTITY(-6.5, float(mat4x3(-6.5, 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0))), vec2(0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED((false ? (+ -74.02) : -667.427))), float(determinant(mat2(0.0, 0.0, 1.0, 0.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))) * (1.0))))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))))[1], (_GLF_IDENTITY(vec3(-8.3, -741.858, -6.5), vec3(_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), (_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), mat2(mat3x2(mat2(vec3(-8.3, -741.858, _GLF_IDENTITY(-6.5, float(mat4x3(-6.5, 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0))), vec2(0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED((false ? (+ -74.02) : -667.427))), float(determinant(mat2(0.0, 0.0, 1.0, 0.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))) * (1.0))))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))))[2]), vec3((_GLF_IDENTITY(vec3(-8.3, -741.858, -6.5), vec3(_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), (_GLF_IDENTITY(mat2(vec3(-8.3, -741.858, -6.5), 1.0), mat2(mat3x2(mat2(vec3(-8.3, -741.858, _GLF_IDENTITY(-6.5, float(mat4x3(-6.5, 1.0, log(1.0), 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0))), vec2(0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED((false ? (+ -74.02) : -667.427))), float(determinant(mat2(0.0, 0.0, 1.0, 0.0))), bool(true))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))) * (1.0))))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))))[0], _GLF_FUZZED(8.0), _GLF_FUZZED(-9193.5488)), bvec3(true, false, false))), vec3(-7.0, -207.104, -4.8)), vec3(_GLF_IDENTITY(426.105, clamp(426.105, 426.105, _GLF_IDENTITY(426.105, min(426.105, 426.105)))), 9.6, -14.51));
                   uvec2 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && _GLF_IDENTITY((bool(bvec3(false, false, true))), bool(bvec4(_GLF_IDENTITY((bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bvec2((bool(bvec3(false, false, true))), true), bvec2(bvec4(bvec2((bool(bvec3(false, false, true))), true), false, false))))), true, false, false))))))))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                       barrier();
                      }
                     for(                     (mat4x3(1434.1139, 6.7, -8.6, -9.1, -7.1, cosh(-95.02), -4.8, 9031.9334, -855.567, -2.0, -40.72, _GLF_IDENTITY(-386.739, max(-386.739, -386.739))) , mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(4.7, (true ? 4.7 : _GLF_FUZZED(8013.7163))), float(float(4.7))), 944.695, _GLF_IDENTITY(3.3, min(3.3, _GLF_IDENTITY(3.3, 1.0 * (_GLF_IDENTITY(3.3, 1.0 * (3.3)))))), 8223.9259, 4365.9636, _GLF_IDENTITY(-79.46, _GLF_IDENTITY(float(mat4x3(-79.46, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(-79.46, (-79.46) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), max((float(mat4x3(_GLF_IDENTITY(-79.46, (-79.46) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (float(mat4x3(_GLF_IDENTITY(-79.46, (-79.46) * 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), -4424.4391, _GLF_IDENTITY(_GLF_IDENTITY(-7.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(-7.0, max(-7.0, -7.0)), float(mat3x2(-7.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, abs(1.0), 1.0, length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(-7.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(-7.0, max(-7.0, -7.0)), float(mat3x2(-7.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, abs(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(-7.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(-7.0, max(-7.0, -7.0)), float(mat3x2(-7.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(-7.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(-7.0, max(-7.0, -7.0)), float(mat3x2(-7.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), 1.0, 0.0, 1.0, abs(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED((184.670 * -7824.2647))), bool(false)))))));
 false; mat2x3(-4.7, 386.875, -0.7, -9279.1490, -4.0, -5.7))
                      {
                       _GLF_IDENTITY(_GLF_IDENTITY(vec3(-9576.9858, 779.079, -5254.2780), max(vec3(-9576.9858, 779.079, -5254.2780), _GLF_IDENTITY(vec3(-9576.9858, 779.079, -5254.2780), (false ? _GLF_FUZZED(vec3(75.03, 554.893, -9.8)) : vec3(-9576.9858, 779.079, -5254.2780))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(-9576.9858, _GLF_IDENTITY(779.079, min(_GLF_IDENTITY(779.079, mix(float(779.079), _GLF_IDENTITY(float(_GLF_FUZZED(7.1)), clamp(float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)))), bool(false))), _GLF_IDENTITY(779.079, float(mat2x4(779.079, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), -5254.2780) : _GLF_FUZZED(vec3(95.27, -5.3, 1433.4675)), (false ? _GLF_FUZZED(min(vec3(-2.2, 8.3, -8.7), -63.06)) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(-9576.9858, _GLF_IDENTITY(779.079, min(_GLF_IDENTITY(779.079, mix(float(779.079), _GLF_IDENTITY(float(_GLF_FUZZED(7.1)), clamp(float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)))), bool(false))), _GLF_IDENTITY(779.079, float(mat2x4(779.079, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), -5254.2780) : _GLF_FUZZED(vec3(95.27, -5.3, 1433.4675)), _GLF_IDENTITY(vec3(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(-9576.9858, _GLF_IDENTITY(779.079, min(_GLF_IDENTITY(779.079, mix(float(779.079), _GLF_IDENTITY(float(_GLF_FUZZED(7.1)), clamp(float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)))), bool(false))), _GLF_IDENTITY(779.079, float(mat2x4(779.079, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), -5254.2780) : _GLF_FUZZED(vec3(95.27, -5.3, 1433.4675)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (true ? vec3(mat4x3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(-9576.9858, _GLF_IDENTITY(779.079, min(_GLF_IDENTITY(779.079, mix(float(779.079), _GLF_IDENTITY(float(_GLF_FUZZED(7.1)), clamp(float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)), float(_GLF_FUZZED(7.1)))), bool(false))), _GLF_IDENTITY(779.079, float(mat2x4(779.079, abs(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), -5254.2780) : _GLF_FUZZED(vec3(95.27, -5.3, 1433.4675)), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(vec3(-448.390, -197.913, 3853.4851)))))))));
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                          barrier();
                         barrier();
                        }
                       float _GLF_SWITCH_0_29v[27];
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       bvec4(false, false, false, false);
                       mat4x2(mat3x2(-2170.8889, -4.0, _GLF_IDENTITY(62.49, (62.49) * 1.0), 37.18, -99.66, -585.235));
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       uvec3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[64];
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      barrier();
                    }
                   do
                    {
                     ivec2 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
                     _GLF_SWITCH_0_28v;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / _GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch.x))) + _GLF_IDENTITY(dot(vec2(sin(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(sin(0.0), 1.0), vec2(1.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
                        {
                         case 36:
                         ;
                         case 31:
                         tanh(6130.9277);
                         case 0:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 81:
                               false;
                               case 0:
                               barrier();
                               break;
                               case 67:
                               vec3(_GLF_IDENTITY(4.0, float(mat3x4(4.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 8.2, 1.8);
                               case 64:
                               min(_GLF_SWITCH_0_33v, -79284);
                               if(_GLF_DEAD(false))
                                barrier();
                               default:
                               _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, ~ (~ (1)))));
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         case 83:
                         case 46:
                         case 22:
                         if(_GLF_DEAD(false))
                          barrier();
                         findMSB(ivec4(-10977, 26288, -59324, 26033));
                         case 86:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         case 87:
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         if(_GLF_DEAD(false))
                          barrier();
                         case 69:
                         uvec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 23:
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false) && true))))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                          barrier();
                         ivec3 _GLF_SWITCH_1_3v;
                         if(_GLF_DEAD(false))
                          barrier();
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(mix(vec3(-8691.9257, 674.647, -8304.6673), vec3(-38.26, -9009.2367, 2.7), bvec3(true, false, false)))) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(mix(vec3(-8691.9257, 674.647, -8304.6673), vec3(-38.26, -9009.2367, 2.7), bvec3(true, false, false)))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(mix(vec3(-8691.9257, 674.647, -8304.6673), vec3(-38.26, -9009.2367, 2.7), bvec3(true, false, false)))) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(mix(vec3(-8691.9257, 674.647, -8304.6673), vec3(-38.26, -9009.2367, 2.7), bvec3(true, false, false)))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(mix(vec3(-8691.9257, 674.647, -8304.6673), vec3(-38.26, -9009.2367, 2.7), bvec3(true, false, false)))) : injectionSwitch.x)))))) > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         1;
                        }
                      }
                     14407;
                     uvec3(101120u, 123623u, 10515u);
                     bvec4 _GLF_SWITCH_0_34v[91], _GLF_SWITCH_0_35v;
                     if(_GLF_DEAD(false))
                      barrier();
                     tan(vec4(0.4, -3.2, -2495.1538, _GLF_IDENTITY(-9.7, (-9.7) + 0.0)));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while((bvec3(true, false, false) != _GLF_SWITCH_0_15v));
                   bvec3 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(37.45, 9887.7646, 9943.6151, -7.0, 3.8, -7.0, 4160.0021, -9554.4834, -50.09, 9.1, -6313.4996, -1.6))))), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch, 1.0, 1.0, abs(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(37.45, 9887.7646, 9943.6151, -7.0, 3.8, -7.0, 4160.0021, -9554.4834, -50.09, 9.1, -6313.4996, -1.6)))))) / vec2(1.0, 1.0))).y)) || (false))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   bvec4 _GLF_SWITCH_0_39v[52], _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     mat2x4(_GLF_IDENTITY(4233.7369, min(_GLF_IDENTITY(4233.7369, float(mat2x4(4233.7369, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 4233.7369)), dot(vec3(3.2, -193.168, -0.0), vec3(418.181, _GLF_IDENTITY(-6.4, float(float(-6.4))), 4.3)), -1817.9601, -7.1, -365.133, -6667.7056, _GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(asin(-4830.9995)))), 4.2);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((false), false, true, false))))))))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             barrier();
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
                            barrier();
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   for(vec4 _GLF_SWITCH_0_42v; true; ivec2(_GLF_IDENTITY(ivec3(50193, 91819, _GLF_IDENTITY(-53939, min(-53939, -53939))), (ivec3(50193, 91819, -53939)) | (ivec3(50193, 91819, -53939)))))
                    {
                     vec2 _GLF_SWITCH_0_43v[94], _GLF_SWITCH_0_44v[66];
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                      {
                      }
                     else
                      {
                       -7782;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     27341;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(length(vec3(-11.67, -328.960, -0.5))) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((! _GLF_IDENTITY((false), false || ((false))))) || false)))))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))), _GLF_IDENTITY(true, ! (! (true))), true, true).g)
                  {
                   ivec3 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
                   uvec3 _GLF_SWITCH_0_47v;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   mat4x2 _GLF_SWITCH_0_48v[99], _GLF_SWITCH_0_49v;
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
                          barrier();
                         barrier();
                        }
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   mat3x2(-0.6, 92.13, -482.368, 0.7, 518.847, 2872.3686);
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), bool(bvec2(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true)))), false || (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) && true, false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) && true, (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))) && true, true && ((bool(_GLF_IDENTITY(false, true && (false)))) && true))) || false))))))))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
              }
             default:
             1;
            }
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           default:
           1;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))) || false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))) || false)))), true, false, false))))))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))), false, true, false))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))) || false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
