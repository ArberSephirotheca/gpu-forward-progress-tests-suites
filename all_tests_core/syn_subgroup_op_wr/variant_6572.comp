#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id))), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) >> 0u);
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u) + subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true)))))), injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) * 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))));
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1)))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))));
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 1u * ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (true ? min(subgroup_size, subgroup_size) : _GLF_FUZZED(subgroup_id)))))));
 uint read = 0;
 do
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (91349 & 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-39947) : _GLF_IDENTITY(64, (64) << 0))))), max(64, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), 0 + (_GLF_IDENTITY(64, (64) | (64))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), max(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))))), 64, 64)))))), 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), _GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 1 * (2))) | 0), 2))) == 0)), true && ((! ((subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 1 * (2))) | 0), 2))) == 0)))) && _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), true && (! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0)))))) && true, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3((! ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_local_id)) % 2) == 0)) && true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), bool(bvec3(! ((subgroup_local_id % 2) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && _GLF_IDENTITY(true, true && (true)), true, true))))))), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), true && (! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0)))))) && true, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3((! ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_local_id)) % 2) == 0)) && true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), bool(bvec3(! ((subgroup_local_id % 2) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && _GLF_IDENTITY(true, true && (true)), true, true))))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), true && (! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0)))))) && true, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3((! ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_local_id)) % 2) == 0)) && true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), bool(bvec3(! ((subgroup_local_id % 2) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && _GLF_IDENTITY(true, true && (true)), true, true))))))), false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), true && (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))))) && true, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id % 2)), ((false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id % 2))) >> 0u)) == 0)) && true, true, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id % 2, 1u, 1u, 1u)))))) == 0)) && true, true, true), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, _GLF_IDENTITY(true, true && (true)), true))))))))))))))), (_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 1 * (2))) | 0), 2)), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 1 * (2))) | 0), 2)), (subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), 1 * (2))) | 0), 2))) | 0u)) >> 0u)) == 0)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, true && (true)), false)))))), true, true))) && ((! ((subgroup_local_id % _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 1 * (2))) | 0), 2))) == 0)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || _GLF_IDENTITY((true), true && ((true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) % 2) | (subgroup_local_id % 2))) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), true && (! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0)))))) && true, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3((! ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED((workgroup_base ++)), (_GLF_FUZZED((workgroup_base ++))) / 1u) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) % 2) == 0)) && true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(0, 0, 0))), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), bool(bvec3(! ((subgroup_local_id % 2) == 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), ! (_GLF_IDENTITY(! (! ((subgroup_local_id % 2) == 0)), (! (! ((subgroup_local_id % 2) == 0))) && true)))) || false), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, (0) ^ 0))) && _GLF_IDENTITY(true, true && (true)), true, true))))))), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), true && (! ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0)))))) && true, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3((! ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_local_id, (false ? _GLF_FUZZED((workgroup_base ++)) : subgroup_local_id) | 0u))) % 2) == 0)) && true, _GLF_IDENTITY(true, false || (true)), true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, _GLF_IDENTITY(false, false || (false)))))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), bool(bvec3(! ((subgroup_local_id % 2) == 0), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1920.3839) : injectionSwitch.x)) < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false), true, true))), true)))), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && _GLF_IDENTITY(true, true && (true)), true, true))))))), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), true && (! (_GLF_IDENTITY((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0)), ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 1 * (0))) || false))))) && true, true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3((! ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_base ++, 1u * (workgroup_base ++)))) : subgroup_local_id)) % 2) == 0)) && true, true, true)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false))))))) && true)))) && true))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(num_workgroup)))) - 0u)) == 0), bool(bvec3(_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false))))))) && true)))) && true))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(num_workgroup)))) - 0u)) == 0), bool(bvec3(_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false))))))) && true)))) && true))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(num_workgroup)))) - 0u)) == 0), bool(bvec3(_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)))))), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), true, false, false))))))) && true)))) && true))) || false), true, true))), true)))), bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(num_workgroup)))) - 0u)) == 0), bool(bvec3(_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true, true)))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(! ((subgroup_local_id % 2) == 0), (! ((subgroup_local_id % 2) == 0)) || false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false), bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(true, true && (true)), true))), _GLF_IDENTITY(true, true && (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), ! (! ((! ((subgroup_local_id % 2) == 0))))) && _GLF_IDENTITY(true, true && (true)), true, true))))))), false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), true)))))))))) && true, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id % 2)), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2))))) >> 0u)) == 0)) && true, true, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id % 2, 1u, 1u, 1u)))))) == 0)) && true, true, true), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, _GLF_IDENTITY(true, true && (true)), true))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), true)))))))))) && true, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id % 2)), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2))))) >> 0u)) == 0)) && true, true, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id % 2, 1u, 1u, 1u)))))) == 0)) && true, true, true), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, _GLF_IDENTITY(true, true && (true)), true))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false))))), (_GLF_IDENTITY((! ((subgroup_local_id % 2) == 0)), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) % 2) == 0) || false))), true), bvec2(bvec4(bvec2((! ((subgroup_local_id % 2) == 0)), true), true, false)))))) || false))), true), true)))))))))) && true, true, _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((subgroup_local_id % 2) == 0)) && true, true, true), bvec3(bvec3(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : (subgroup_local_id % 2)), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2))))) >> 0u)) == 0)) && true, true, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(subgroup_local_id % 2, uint(_GLF_IDENTITY(uvec4(subgroup_local_id % 2, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id % 2, 1u, 1u, 1u)))))) == 0)) && true, true, true), bvec3(bvec3(bvec3((! ((subgroup_local_id % 2) == 0)) && true, _GLF_IDENTITY(true, true && (true)), true))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
  {
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, 1 * (0)))) | 0))))))), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(~ (~ (0 | 0)), clamp(~ (~ (0 | 0)), ~ (~ (0 | 0)), ~ (~ (0 | 0))))))), (0 >> _GLF_IDENTITY(int(2), int(2))) ^ (~ (~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(~ (~ (0 | 0)), clamp(~ (~ (0 | 0)), ~ (~ (0 | 0)), ~ (~ (0 | 0)))))))))), clamp(_GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(~ (~ (0 | 0)), clamp(~ (~ (0 | 0)), ~ (~ (0 | 0)), ~ (~ (0 | 0)))))))), _GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (0 | 0)), min(_GLF_IDENTITY(~ (~ (0 | 0)), ~ (~ (~ (~ (0 | 0))))), ~ (~ (0 | 0)))), clamp(~ (~ (0 | 0)), ~ (~ (0 | 0)), ~ (~ (0 | 0)))))))), _GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(~ (~ (0 | 0)), clamp(~ (~ (0 | 0)), ~ (~ (0 | 0)), ~ (~ (0 | 0)))))))))))) || false)), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | 0, ~ (~ (_GLF_IDENTITY(0 | 0, ~ (~ (0 | 0)))))))), true, false, true))); _injected_loop_counter --)
        {
         do
          {
           read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 4, 64, 2);
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, false)))))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2532.6651), _GLF_FUZZED(8.1)), bvec2(false, false))))).x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(196.651)), bvec2(true, false))), injectionSwitch)).x < injectionSwitch.y))))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   do
    {
     do
      {
       subgroupAll(false);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sin(-6077.9072)) : injectionSwitch.x)) > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, true, false))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             read = atomicLoad(buf[virtual_gid], 4, 64, 2);
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(19.50))) : _GLF_FUZZED(vec4(-4.5, 9.8, 6657.9001, 2.4).y)))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (_GLF_IDENTITY(true, (true) && true)), false, _GLF_IDENTITY(false, (false) || false), false))))))) && (_GLF_IDENTITY(true, true && (true)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, (0 >> _GLF_IDENTITY(int(5), int(5))) | (1 & 1))), bool(bvec4(_injected_loop_counter != (1 & 1), false, false, true)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 0.0, 0.0)))))))
    barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED((ivec2(-92969, 77897) , bitCount(subgroup_id))) : (1 << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, 0)), max(_GLF_IDENTITY(int(ivec2(false ? _GLF_IDENTITY(_GLF_FUZZED(-97996), (_GLF_FUZZED(-97996)) / 1) : _injected_loop_counter, 0)), max(int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, 0)), int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, 0)))), _GLF_IDENTITY(int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, 0)), _GLF_IDENTITY(int(ivec2(int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, 0)), 0)), int(int(int(ivec2(int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, 0)), 0)))))))), (int(ivec2(false ? _GLF_FUZZED(-97996) : _injected_loop_counter, _GLF_IDENTITY(0, 0 ^ (0))))) << 0)))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       subgroupBarrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
}
