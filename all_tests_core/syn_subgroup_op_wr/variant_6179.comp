#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), true))))))))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (true && (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-83.89) : injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || (true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true), _GLF_IDENTITY(false, (false) || false) || (true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true), _GLF_IDENTITY(false, (false) || false) || (true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && true), _GLF_IDENTITY(false, (false) || false) || (true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.3)), bool(false))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), false))))), false, true))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-3.9 / 947.351))), bool(false))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))), true, true)))), true)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.5)), float(mat4(float(_GLF_FUZZED(7.5)), 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), bool(true)))) / _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(12.92), _GLF_FUZZED(-3914.0901)), bvec2(false, false))).y)), true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.0)), float(injectionSwitch.x), bool(true)))) - 0.0), (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) || false))))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, false || (false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false)))), bvec2(bvec4(bvec2(bvec2(false, _GLF_IDENTITY(false, false || (false)))), true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true))))), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(475.010) : injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), true)))))))))))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), ((bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))) || false))))), _GLF_IDENTITY(true, ! (! (true))), true)))), true)))))), true)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-19.29) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-19.29) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.0) : injectionSwitch.y))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) && (true))))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(vec2((injectionSwitch.x), 0.0))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (false || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))) && true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))), true)))))), true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, false, true), false)), true))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)))), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(8.0, -36.61)) : (injectionSwitch) * mat2(1.0)))).y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true)))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true, false))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (true)))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true, false))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (true)))))), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true))), 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)), float(mat4(mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)), 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))))))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)), (bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))), true)), bvec3(bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(vec2(0.0, 0.0), sin(0.0)), (vec3(vec2(0.0, 0.0), sin(0.0))) * vec3(1.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(vec3(vec2(0.0, 0.0), sin(0.0)), (vec3(vec2(0.0, 0.0), sin(0.0))) * vec3(1.0, 1.0, 1.0)))) * mat2(1.0))), vec2(0.0, 0.0))) + (injectionSwitch)).x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(normalize(51.27)) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(vec2(-1.5, 8596.9047))) : injectionSwitch)).x, injectionSwitch.x)))) > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true)))))), true)))))))), true, true)))), false)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, false))), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec4((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), false || ((! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)) && true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true))))), _GLF_IDENTITY(false, true && (false)), true))), true), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))) && true, bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))) && true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false, true))), true), true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), bool(_GLF_IDENTITY(bool(true && (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))), (bool(true && (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)))) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sqrt(0.0), sin(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), sqrt(0.0), 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), vec2(_GLF_FUZZED((- -2.8)), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(false), false), true), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), false), true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))) && true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) >> (1 ^ 1)), 0))], injectionSwitch[1])).x) + 0.0) - 0.0))))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(189656u, 149354u, 135261u)) : _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false), bool(bvec4(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (bool(! (_GLF_DEAD(false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) / 1u)))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 1u, 1u))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (0u | 0u) | (_GLF_IDENTITY(5u, (5u) >> 0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u | (clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 0u, (1u ^ 1u), 0u)))))))))))))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u))), _GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u + (5u))), uint(5u))), ((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ (_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u, 1u, 0u), max(uvec4(_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ (_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u, 1u, 0u), uvec4(_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ (_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u, 1u, 0u))), (uvec4(_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ (_GLF_IDENTITY((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), 0u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u))))) * subgroup_size))), ~ (~ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) / 1u))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) + 0u), ~ (~ (uint(5u)))))), uint(5u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))), uint(5u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))), uint(5u))) - 0u)) / 1u))) * subgroup_size)), max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(5u)), ~ (~ ((uint(5u)))))), min((~ _GLF_IDENTITY((uint(5u)), ~ (~ ((uint(5u)))))), _GLF_IDENTITY((~ _GLF_IDENTITY((uint(5u)), ~ (~ ((uint(5u)))))), (_GLF_IDENTITY((~ _GLF_IDENTITY((uint(5u)), _GLF_IDENTITY(~ (~ ((uint(5u)))), (~ (~ ((uint(5u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max((~ _GLF_IDENTITY((uint(5u)), ~ (~ ((_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))))), (~ _GLF_IDENTITY((uint(5u)), ~ (~ ((uint(5u))))))))) + 0u)))))), uint(5u)))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), (true ? uint(5u) : _GLF_FUZZED(atomicCompSwap(num_workgroup, 191542u, num_workgroup))))))) * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))), uint(5u)))) * subgroup_size)))))))) / 1u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 1u, 0u))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u)) - _GLF_IDENTITY(0u, 1u * (0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) << 0)) | 0)) / 1), int(3))))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, max(4, 4)))), min(4, 4)), 4)))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), ~ (~ (min(_GLF_IDENTITY(4, min(4, 4)), 4)))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), ~ (~ (min(_GLF_IDENTITY(4, min(4, 4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))), 4), ~ (~ (min(_GLF_IDENTITY(4, min(4, 4)), 4)))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), ~ (~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), _GLF_IDENTITY(int(ivec2(min(4, 4), 0)), (int(ivec2(min(4, 4), 0))) | 0))), 4)))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), 4), ~ (~ (min(_GLF_IDENTITY(4, min(4, 4)), 4))))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) >> 0)))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) << (-62802 & 0)))), 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (0) - 0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ 0u, ((subgroup_size) ^ 0u) / 1u)), 1u * (subgroup_size)), true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, false, false, true))))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, (read) >> (71941u & 0u)))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), max(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), _GLF_IDENTITY(~ (64), (~ (64)) >> 0)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), max(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), _GLF_IDENTITY(~ (64), (~ (64)) >> 0)))) | 0)) | 0)), min(~ (_GLF_IDENTITY(~ (64), (~ (64)) >> 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (64), (~ (64)) >> 0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-44323) : ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) - 0))), (true ? ~ (64) : _GLF_FUZZED(-4994)))) >> 0)), min(false ? _GLF_FUZZED(-44323) : ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-4994)))) >> 0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-44323) : ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-4994)))) >> 0)), (false ? _GLF_FUZZED(-44323) : ~ (_GLF_IDENTITY(~ (64), (_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(-4994)))) >> 0))) / 1)))))))), 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec4((! (! (_GLF_DEAD(false)))), false, true, true)), (bool(bvec4((! (! (_GLF_DEAD(false)))), false, true, true))) || false))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y))))))), true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), true))), bool(bvec3(true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), true))), true, false)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(13.81))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-887.858))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(56.63) : injectionSwitch.y)), 1.0, 0.0, 0.0)), max(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(56.63) : injectionSwitch.y)), 1.0, 0.0, 0.0)), float(vec3(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(56.63) : injectionSwitch.y)), 1.0, 0.0, 0.0)), 0.0, 1.0))), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(56.63) : injectionSwitch.y)), 1.0, 0.0, 0.0))))))), true))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
  }
}
