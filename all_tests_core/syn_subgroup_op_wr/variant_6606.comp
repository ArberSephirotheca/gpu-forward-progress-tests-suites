#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false)))), bool(bool(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9449.9675)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_FUZZED(-0.7)), _GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) / 1.0), clamp(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) / 1.0), (float((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) / 1.0)) + 0.0), float((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) / 1.0), float((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x) / 1.0))), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) || false, bool(_GLF_IDENTITY(bvec3((((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), bool(bool(! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, false)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))) || false, ! (! ((_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))) || false))), false, true), true))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, true, true))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true, true))))))))))))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) || false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.1, -4.9), mat2(1.0) * (vec2(-4.1, -4.9))).x, mix(float(_GLF_FUZZED(6527.5010)), float(_GLF_IDENTITY(vec2(-4.1, -4.9), _GLF_IDENTITY(mat2(1.0) * (vec2(-4.1, -4.9)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(mat2(1.0) * (vec2(-4.1, -4.9)), max(mat2(1.0) * (vec2(-4.1, -4.9)), mat2(1.0) * (vec2(-4.1, -4.9))))))).x), bool(_GLF_IDENTITY(true, false || (true)))))), _GLF_FUZZED(75.72)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))[0]) / 1.0), (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(18258) : _GLF_IDENTITY(1, (1) * 1)))))]), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.1, -4.9), mat2(1.0) * (vec2(-4.1, -4.9))).x, mix(float(_GLF_FUZZED(6527.5010)), float(_GLF_IDENTITY(vec2(-4.1, -4.9), _GLF_IDENTITY(mat2(1.0) * (vec2(-4.1, -4.9)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(mat2(1.0) * (vec2(-4.1, -4.9)), max(mat2(1.0) * (vec2(-4.1, -4.9)), mat2(1.0) * (vec2(-4.1, -4.9))))))).x), bool(_GLF_IDENTITY(true, false || (true))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-4.1, -4.9), mat2(1.0) * (vec2(-4.1, -4.9))).x, mix(float(_GLF_FUZZED(6527.5010)), float(_GLF_IDENTITY(vec2(-4.1, -4.9), _GLF_IDENTITY(mat2(1.0) * (vec2(-4.1, -4.9)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(1.0, 1.0) * (_GLF_FUZZED(injectionSwitch))) : _GLF_IDENTITY(mat2(1.0) * (vec2(-4.1, -4.9)), max(mat2(1.0) * (vec2(-4.1, -4.9)), mat2(1.0) * (vec2(-4.1, -4.9))))))).x), bool(_GLF_IDENTITY(true, false || (true))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, cos(sqrt(0.0)), 0.0, 1.0)))), _GLF_FUZZED(75.72)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))[0]) / 1.0), (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(18258), (_GLF_FUZZED(18258)) | (_GLF_IDENTITY(_GLF_FUZZED(18258), ~ (~ (_GLF_FUZZED(18258)))))) : _GLF_IDENTITY(1, (1) * 1)))))]), bvec2(true, true))) - tan(vec2(0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), true && ((injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec4(90.48, 78.90, 3.9, -1453.2265), vec4(8.3, -8.8, 8583.6138, 6075.1378))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec4(90.48, 78.90, 3.9, -1453.2265), vec4(8.3, -8.8, 8583.6138, 6075.1378))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0)) * mat2(1.0)))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(7355.7376)), bool(false)))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) || false), true)))), true))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * 1.0)))))))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) || false)))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-958.882)), bool(false))) > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, false, true)), bool(bvec2(bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false, false, true)), false)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          break;
         barrier();
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.16)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2675.9923 * 6.2))), float(injectionSwitch.y), bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2675.9923 * 6.2))), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((2675.9923 * 6.2))), float(injectionSwitch.y), bool(true))))))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).y))), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).y))), true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).y))), true, false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).y))), true, false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).y))), true, false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, abs(0.0), 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0))).y))), true, false))))), true)))), true)))))))), true)))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) - 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((subgroup_id)) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), clamp(uint(uint(workgroup_base)), _GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) << 0u), uint(uint(workgroup_base))))) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED((subgroup_id)) : _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) - 0u);
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2) == 0), bool(bvec4(((subgroup_local_id % 2) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, _GLF_IDENTITY(0, (0) | (0))))), true, true, false))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-78.74)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), float(_GLF_IDENTITY(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)), transpose(transpose(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)))))))), injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), float(_GLF_IDENTITY(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)), transpose(transpose(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)))))))), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-2649.9386)), bool(false))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-39.68, 4.9, -9488.6716, 5.7, 9.3, -2.5, 62.38, -88.09, -210.717, -5227.7117, 223.836, 3835.6463)) : mat3x4(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), float(_GLF_IDENTITY(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)), transpose(transpose(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)))))))), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat3x4(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), float(_GLF_IDENTITY(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)), transpose(transpose(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)))))))), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0), _GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-2649.9386)), bool(false))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-39.68, 4.9, -9488.6716, 5.7, 9.3, -2.5, 62.38, -88.09, -210.717, -5227.7117, 223.836, 3835.6463)) : mat3x4(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), float(_GLF_IDENTITY(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)), transpose(transpose(mat2((true ? injectionSwitch.x : _GLF_FUZZED(118.844)), 1.0, 1.0, abs(0.0)))))))), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 1.0, 1.0)))))))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       subgroupAll(false);
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))));
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7877.5313)), float(1.0), bool(true))), injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true))), true, true))))))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bool(true)))))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), false, true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-87977) : int(5))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5)))))) >> 0), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-830.605) : injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(~ (4), (~ (4)) ^ 0), ~ (4))), (_GLF_IDENTITY(~ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) >> 0), clamp(~ (4), _GLF_IDENTITY(~ (4), (~ (4)) ^ 0), ~ (4)))) + 0), ~ (_GLF_IDENTITY(4, (4) | (4)))))))), (int(4)) + 0))), (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((4), clamp((4), (4), (4))), clamp(~ (4), ~ (4), ~ (4)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((4), clamp((4), (4), (4))), clamp(~ (4), ~ (4), ~ (4))))) - (0 << _GLF_IDENTITY(int(0), int(0)))) | 0), _GLF_IDENTITY(clamp(~ (4), ~ (_GLF_IDENTITY(4, (4) ^ 0)), ~ (4)), max(clamp(~ (4), ~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) ^ 0)), (false ? _GLF_FUZZED(-86121) : (_GLF_IDENTITY(4, (4) ^ 0)))), ~ (4)), _GLF_IDENTITY(clamp(~ (4), ~ (_GLF_IDENTITY(4, (4) ^ 0)), _GLF_IDENTITY(~ (4), min(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), _GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))), (_GLF_IDENTITY(clamp(~ (4), ~ (_GLF_IDENTITY(4, (4) ^ 0)), ~ (4)), min(clamp(~ (4), ~ (_GLF_IDENTITY(4, (4) ^ 0)), ~ (4)), clamp(~ (4), ~ (_GLF_IDENTITY(4, (4) ^ 0)), ~ (4))))) ^ 0)))), ~ (4)))))), (int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, (4) | (4)))))), 4, 4)))) + 0)))) | (((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), int(4))), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0), _GLF_IDENTITY(int(4), int(4)))), max(_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), int(4)), 1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0))))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0)))))))))) | 0)), (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0))))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0)))))))))) | 0))) | (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0))))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), min(clamp(~ (4), _GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) | (~ (4))), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), clamp(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), (_GLF_IDENTITY(clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4)), 0 | (clamp(~ (4), _GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), int(ivec4(_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(_injected_loop_counter))), ~ (4))), ~ (4))))) * 1)) - 0)))))))))) | 0)))))), (int(4)) + 0)))))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 1 * (int(4))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
        }
      }
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
        }
       barrier();
      }
    }
   else
    {
     subgroupAll(false);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7655.2988), _GLF_FUZZED(6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))).x > injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7655.2988), _GLF_FUZZED(6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))).x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7655.2988), _GLF_FUZZED(6.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, true && (true)), true))).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0 + _GLF_IDENTITY((_GLF_IDENTITY(4, (0 | 0) | (4))), min(_GLF_IDENTITY((_GLF_IDENTITY(4, (0 | 0) | (4))), ~ (~ ((_GLF_IDENTITY(4, (0 | 0) | (4)))))), _GLF_IDENTITY((_GLF_IDENTITY(4, (0 | 0) | (4))), max((_GLF_IDENTITY(4, (0 | 0) | (4))), _GLF_IDENTITY((_GLF_IDENTITY(4, (0 | 0) | (4))), ((_GLF_IDENTITY(4, (0 | 0) | (4)))) / 1))))), (0 + (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) << 0)))))) - 0), max(_GLF_IDENTITY(0 + (4), 0 | (0 + (4))), 0 + (4)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, max(64, 64)) : _GLF_FUZZED(-33542)))) | (_GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(18829) : 2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(18829) : 2)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(18829) : 2)), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(18829) : 2), ((false ? _GLF_FUZZED(18829) : 2)) + 0))) - 0, 0 + ((_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(18829) : 2, (_GLF_IDENTITY(false ? _GLF_FUZZED(18829) : 2, clamp(false ? _GLF_FUZZED(18829) : 2, false ? _GLF_FUZZED(18829) : 2, false ? _GLF_FUZZED(18829) : 2))) + 0)))) - 0))), 1))), _GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(18829), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(18829), (_GLF_FUZZED(18829)) | (_GLF_FUZZED(18829)))), max(~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(18829, (_GLF_IDENTITY(false ? _GLF_FUZZED(-3376) : 18829, ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(-3376) : 18829), 0 ^ (~ (false ? _GLF_FUZZED(-3376) : 18829)))))))), (_GLF_FUZZED(18829)) | (_GLF_FUZZED(18829)))), ~ (_GLF_IDENTITY(_GLF_FUZZED(18829), (_GLF_FUZZED(18829)) | (_GLF_FUZZED(18829)))))))) : 2)), _GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(18829) : 2)), _GLF_IDENTITY((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(18829) : 2))), ((_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(18829, (18829) >> 0), (_GLF_IDENTITY(18829, _GLF_IDENTITY(~ (~ (18829)), (false ? _GLF_FUZZED(5372) : ~ (~ (18829)))))) | (_GLF_IDENTITY(18829, (18829) | (18829))))) : _GLF_IDENTITY(2, (2) | (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))))), ((false ? _GLF_FUZZED(18829) : 2)) << 0)))) / 1) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(~ (2), (~ (2)) ^ 0), 0), (false ? _GLF_FUZZED(ivec2(-93540, -74829)) : ivec2(_GLF_IDENTITY(~ (2), (~ (2)) ^ 0), 0)))))) | (_GLF_IDENTITY(~ (2), ~ (_GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) ^ 0))))))), min(2, 2))) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / _GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, max(2, 2))))))))) / 1)) | (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) / 1, clamp(_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) / 1, clamp((_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY(2, min(2, 2))) / 1))) | (-50164 & 0)), (_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY(2, min(2, 2))) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))), (true ? (_GLF_IDENTITY(2, min(2, 2))) : _GLF_FUZZED(int(next_virtual_gid)))) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1)) << 0)), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1)) << 0))), (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1)) << 0)))) * 1))))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / _GLF_IDENTITY(1, clamp(1, 1, 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2)), min(2, 2))) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2)), min(2, 2))) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 | (2)), 2)), min(2, 2))) / 1)) << 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) + (0 & 90099))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) / 1, clamp((_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY(2, min(2, 2))) / 1, (_GLF_IDENTITY(2, min(2, 2))) / 1))) - 0))), 0 | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) ^ 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1))), (~ ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1)))) | (~ ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) / 1))))))))))))))) / 1), (_GLF_IDENTITY(false ? _GLF_FUZZED(18829) : 2, max(_GLF_IDENTITY(false ? _GLF_FUZZED(18829) : 2, (_GLF_IDENTITY(false ? _GLF_FUZZED(18829) : 2, int(ivec3(false ? _GLF_FUZZED(18829) : 2, 0, 0)))) / 1), false ? _GLF_FUZZED(18829) : 2))))) ^ _GLF_IDENTITY(0, min(0, 0))), 0, 0, 0))));
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, true && (false)))) || false))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               return;
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
           barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 subgroupBarrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, true)))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))))), clamp((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(read, read)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
