#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false || (false || (false)), false || (false || _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), false || ((false || (false))))))), ! (! ((false || (false))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false || (false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true)))), bvec2(bvec3(bvec2(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true)))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false || (false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))) && (true)))), bvec2(bvec3(bvec2(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true)))), true))))))))))), true))), false)))), true)))) && true))))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false))) && true, true && ((bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false))) && true))))) || (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(false || (false || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false)))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true))))), true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (true))), true))), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), _GLF_IDENTITY(false, ! (! (false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))))))))))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true))))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(false || (false || (false)), _GLF_IDENTITY(true, true && (true))), true))), false)))), true), true, true)))))) && true))))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false))) && true, false || ((bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false))) && true)), true && ((bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))), false))) && true))))) || (_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false || (false)))))))))), true, true), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(uvec2(33986u, 119679u), uvec2(_GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY(33986u, _GLF_IDENTITY(0u, min(0u, 0u)) | (33986u)), 119679u)), _GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), ~ (~ ((_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), (_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), (uvec2(0u, 0u) ^ uvec2(0u, 0u)) + _GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))), max((uvec2(uvec2(33986u, 119679u))), (uvec2(uvec2(33986u, 119679u))))))) | (_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), max(uvec2(uvec2(33986u, 119679u)), uvec2(uvec2(33986u, 119679u))))))) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u), ~ (~ ((uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(33986u, _GLF_IDENTITY(uint(uint(33986u)), (uint(uint(33986u))) - 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(33986u, _GLF_IDENTITY(uint(uint(33986u)), (uint(uint(33986u))) - 0u)), 1u, 0u), max(uvec3(_GLF_IDENTITY(33986u, _GLF_IDENTITY(uint(uint(33986u)), (uint(uint(33986u))) - 0u)), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(33986u, _GLF_IDENTITY(uint(uint(33986u)), (uint(uint(33986u))) - 0u)), 1u, 0u), (uvec3(_GLF_IDENTITY(33986u, _GLF_IDENTITY(uint(uint(33986u)), (uint(uint(33986u))) - 0u)), 1u, 0u)) ^ uvec3(0u, 0u, 0u)))))), 119679u))) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u))))), subgroup_id)) : gl_WorkGroupSize)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(33986u, 119679u), uvec2(_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), _GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u)), ~ (~ _GLF_IDENTITY(((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)), min(((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY(((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)), min(_GLF_IDENTITY(((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)), (false ? _GLF_FUZZED(uvec2(25078u, 76980u)) : ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), max(uvec2(uvec2(33986u, 119679u)), uvec2(uvec2(33986u, _GLF_IDENTITY(119679u, (119679u) | (119679u))))))) ^ uvec2(0u, 0u), _GLF_IDENTITY(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), max(~ _GLF_IDENTITY((~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), ~ (_GLF_IDENTITY(~ ((~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), uvec2(0u, 0u) + (~ ((~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))))))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), uint(uvec4(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), 0u, 1u, 0u)))))))))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (uvec3(_GLF_IDENTITY(uvec2(33986u, 119679u), uvec2(_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), _GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u)), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u)), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), max(uvec2(uvec2(33986u, 119679u)), uvec2(uvec2(33986u, 119679u))))) ^ uvec2(0u, 0u), _GLF_IDENTITY(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), max(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))))))))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), uint(uvec4(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), 0u, 1u, 0u)))))), 0u ^ (~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), uint(uvec4(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), 0u, 1u, 0u)))))))))))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u))))), subgroup_id)) ^ uvec3(0u, 0u, 0u))) : gl_WorkGroupSize), ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(33986u, 119679u), uvec2(_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), _GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), min((_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))))) / uvec2(1u, 1u)), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(33986u, 119679u), max(_GLF_IDENTITY(uvec2(33986u, 119679u), clamp(uvec2(33986u, 119679u), uvec2(33986u, 119679u), uvec2(33986u, 119679u))), uvec2(33986u, 119679u)))), max(uvec2(uvec2(33986u, 119679u)), uvec2(uvec2(33986u, 119679u))))) ^ uvec2(0u, 0u), _GLF_IDENTITY(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), max(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), uint(uvec4(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), 0u, 1u, 0u)))))))))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u))))), subgroup_id), (uvec3(_GLF_IDENTITY(uvec2(33986u, 119679u), uvec2(_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), _GLF_IDENTITY((uvec2(uvec2(33986u, _GLF_IDENTITY(119679u, ~ (~ (_GLF_IDENTITY(119679u, (119679u) | 0u))))))) ^ uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u)), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), min((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u)), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), max(uvec2(uvec2(33986u, 119679u)), uvec2(uvec2(33986u, 119679u))))) ^ uvec2(0u, 0u), _GLF_IDENTITY(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), max(~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), ~ (~ ((uvec2(uvec2(33986u, _GLF_IDENTITY(119679u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (119679u))))) ^ uvec2(0u, 0u)))))), ~ (~ ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 0u))), 0u, 0u, 0u)), uint(uvec4(uint(uvec4(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))), 0u, 0u))))), 0u, 0u, 0u)), 0u, 1u, 0u)))))))))))) >> uvec2(0u, 0u))) ^ uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))), subgroup_id)) ^ uvec3(0u, 0u, 0u))) : gl_WorkGroupSize)) / uvec3(1u, 1u, 1u))).x, _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(uvec2(33986u, 119679u), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(33986u, 119679u), max(uvec2(33986u, 119679u), uvec2(33986u, 119679u)))), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)) | ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), ~ (~ (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), clamp((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), (uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), _GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), ((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u)) * uvec2(1u, 1u))))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY((uvec2(uvec2(33986u, 119679u))) ^ uvec2(0u, 0u), ~ (~ ((_GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_size | uvec2(27326u, _GLF_IDENTITY(66953u, max(_GLF_IDENTITY(66953u, uint(uvec4(66953u, 1u, 0u, 1u))), 66953u))))), max(_GLF_FUZZED((subgroup_size | uvec2(27326u, _GLF_IDENTITY(66953u, max(_GLF_IDENTITY(66953u, uint(uvec4(66953u, 1u, 0u, 1u))), 66953u))))), _GLF_FUZZED((subgroup_size | uvec2(27326u, _GLF_IDENTITY(66953u, max(_GLF_IDENTITY(66953u, uint(uvec4(66953u, 1u, 0u, 1u))), 66953u))))))) : _GLF_IDENTITY(uvec2(uvec2(33986u, 119679u)), max(uvec2(uvec2(33986u, 119679u)), uvec2(uvec2(33986u, 119679u))))))) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u))) ^ uvec2(0u, 0u))))), subgroup_id)) : gl_WorkGroupSize)).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ (+ -91.68)))), vec2(_GLF_FUZZED((3477.7558 / -8.2)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.71)), bool(false))), 1.0, 1.0, determinant(mat3(0.0, sin(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), _GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), float(mat2x3(log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0)))) - 0.0))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.0) : 0.0)))), abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(699.237)), float(abs(0.0)), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size);
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(47318)), _GLF_FUZZED(7.3)), bvec2(false, false))).x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(113.786), _GLF_FUZZED(-4499.4813)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), max(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), 0.0, 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((true ? -9.2 : 54.83))), float(1.0), bool(true))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(0.0), 1.0, 0.0)), (true ? float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), ((max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(400.147, -34.60, 6.2, 203.364, -3.5, -8.9, 4.2, 4911.3773, -6302.9344, 293.239, -4.8, -178.014)) : mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))), exp(0.0), 0.0, 0.0, abs(1.0), cos(0.0), 0.0, log(1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-705.865)), bool(false))) : _GLF_FUZZED(-0.8))), 0.0, 0.0)), dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), ((max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(400.147, -34.60, 6.2, 203.364, -3.5, -8.9, 4.2, 4911.3773, -6302.9344, 293.239, -4.8, -178.014)) : mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))), exp(0.0), 0.0, 0.0, abs(1.0), cos(0.0), 0.0, log(1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-705.865)), bool(false))) : _GLF_FUZZED(-0.8))), 0.0, 0.0)), dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), ((max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(400.147, -34.60, 6.2, 203.364, -3.5, -8.9, 4.2, 4911.3773, -6302.9344, 293.239, -4.8, -178.014)) : mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))), exp(0.0), 0.0, 0.0, abs(1.0), cos(0.0), 0.0, log(1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-705.865)), bool(false))) : _GLF_FUZZED(-0.8))), 0.0, 0.0)), dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), ((max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(400.147, -34.60, 6.2, 203.364, -3.5, -8.9, 4.2, 4911.3773, -6302.9344, 293.239, -4.8, -178.014)) : mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))), exp(0.0), 0.0, 0.0, abs(1.0), cos(0.0), 0.0, log(1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-705.865)), bool(false))) : _GLF_FUZZED(-0.8))), 0.0, 0.0)), dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), ((max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(400.147, -34.60, 6.2, 203.364, -3.5, -8.9, 4.2, 4911.3773, -6302.9344, 293.239, -4.8, -178.014)) : mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))), exp(0.0), 0.0, 0.0, abs(1.0), cos(0.0), 0.0, log(1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-705.865)), bool(false))) : _GLF_FUZZED(-0.8))), 0.0, 0.0)), dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), (0.0 + (injectionSwitch.x)) * 1.0)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), ((max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))) + 0.0))), 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(400.147, -34.60, 6.2, 203.364, -3.5, -8.9, 4.2, 4911.3773, -6302.9344, 293.239, -4.8, -178.014)) : mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) - 0.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0)))), exp(0.0), 0.0, 0.0, abs(1.0), cos(0.0), 0.0, log(1.0))))), 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-705.865)), bool(false))) : _GLF_FUZZED(-0.8))), 0.0, 0.0)), dot(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(uintBitsToFloat(subgroup_id)))), 0.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), _GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec2(float(0.0), 0.0), (vec2(float(0.0), 0.0)) * mat2(1.0)))), bool(true))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.9), float(mat2x3(_GLF_FUZZED(-7.9), 0.0, 0.0, sqrt(abs(1.0)), 1.0, 1.0)))), float(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))), float(_GLF_FUZZED(-7.3)), bool(false)))), bool(true))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(49.27)), bool(false))), 0.0)), 1.0, 1.0, 1.0, abs(0.0), 1.0, 0.0)) : _GLF_FUZZED(-97.42))))), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) * 1.0)))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))), sqrt(0.0))) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, abs(1.0))), clamp(float(mat3x4(sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, abs(1.0))), _GLF_IDENTITY(float(mat3x4(sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, abs(1.0))), min(float(mat3x4(sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, abs(1.0))), float(mat3x4(sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 0.0, 0.0, 1.0, 1.0, abs(1.0))))), float(mat3x4(sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0, 1.0, log(1.0), cos(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, abs(1.0)))))))), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-586.017)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-45.29)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-1.0, -978.555).x)), bool(false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), true && (true && ((injectionSwitch.x > injectionSwitch.y))))))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-97.29)))) * 1.0)), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, false)))), false, true, true)))))) || false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false, false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true))))))) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true)))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, true))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && true), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true, true))) && true)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), false, false, true))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), false, false, true))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), false, false, true))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, true))) && true), (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(862.537) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).y))), true, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)) >> 0u)))))) | 0u)], uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), 1u, _GLF_IDENTITY(0u, uint(uint(0u))), 1u))), 4, 64, 2);
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (false)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-7.7)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false), true && ((false))) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1960.8077), _GLF_FUZZED(-3.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 0.0)))[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(true))), bool(bvec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1960.8077), _GLF_FUZZED(-3.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 0.0)))[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(true))), true, true, false)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) / 1), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) / 1)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, (2) / 1))), max(~ ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (1 ^ 1) | (_GLF_IDENTITY(2, int(ivec2(2, 1)))))) / 1))), ~ ((_GLF_IDENTITY(2, (2) / 1))))))) ^ 0));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, false))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
