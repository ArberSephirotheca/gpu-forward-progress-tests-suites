#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 vec3 _f0;
 ivec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 bvec2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
 _GLF_struct_13 _f1;
 bvec2 _f2;
 bvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 vec3 _f1;
 mat3x4 _f2;
 bool _f3;
 mat2x4 _f4;
 int _f5;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 mat4 _f1;
 _GLF_struct_10 _f2;
 uint next_virtual_gid;
 vec3 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 _GLF_struct_14 _f1;
 float _f2;
 _GLF_struct_15 _f3;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 vec2 _f1;
 mat2 _f2;
 bvec2 _f3;
 int _f4;
} ;

struct _GLF_struct_6 {
 uint _f0;
 int _f1;
 int _f2;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 uint _f1;
 vec2 _f2;
 uvec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_8 {
 uint _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 int _f0;
 vec4 _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 vec3 _f1;
 mat2 _f2;
 bvec2 _f3;
 float _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat3 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 ivec3 _f1;
 mat3 _f2;
 vec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 bvec4 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 _GLF_struct_4 _f1;
 bvec3 _f2;
 uint num_workgroup;
 mat2 _f3;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))), true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, true)))))))))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))), bool(bool(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)).y)))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)))))))))))), _GLF_IDENTITY(bool(bvec2((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)))))))))))), false)), (bool(bvec2((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y)))))))))))), false))) || false)))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false, true), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, sqrt(1.0)))).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), true, false, true)), ! (! (bool(bvec4(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), true, false, true))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), bvec2(false, true))), (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), false, true), true)))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
    return;
   return;
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(bvec3(true), _GLF_struct_4(bvec3(true), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(1.0)) + mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.0))), 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.6) : 0.0)), float(mat4(0.0, 0.0, exp(0.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 1.0, 0.0, 1.0, 0.0))))), 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), min(vec4(1.0, 0.0, 1.0, 1.0), vec4(1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), min(float(mat3x4(1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0)), float(mat3x4(1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0))))), 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(-1.9)), float(max(0.0, 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(float(_GLF_FUZZED(-248.730)), float(float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), bool(true))))))))), _GLF_IDENTITY((float(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), max((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))) * 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, (true ? (0.0) - 0.0 : _GLF_FUZZED(7386.1563)))) + (0.0))), mix(float(_GLF_FUZZED(16.39)), float(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0)))), bool(true))), float(_GLF_FUZZED(-9.5)), bool(false))), 1.0, 1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0), mat4(1.0) * (mat4(0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), max((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))) * 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0))), mix(float(_GLF_FUZZED(16.39)), float(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0)))), bool(true))), float(_GLF_FUZZED(-9.5)), bool(false))), 1.0, 1.0))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), max((_GLF_IDENTITY(1.0, (1.0) / 1.0)), (_GLF_IDENTITY(1.0, (1.0) / 1.0)))) * 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0))), mix(float(_GLF_FUZZED(16.39)), float(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0) + (0.0)))), bool(true))), float(_GLF_FUZZED(-9.5)), bool(false))), 1.0, 1.0)))), float(_GLF_FUZZED(float(25885))), bool(false))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0))))), clamp(_GLF_IDENTITY((float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))))), max((_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))))), (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))))))) * 1.0))), 1.0 * (dot(vec4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1341.5679)), bool(false)))) / 1.0), 0.0)), 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))))), max((_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))))), (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))))))) * 1.0))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-9.5)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)))), bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)))), false, false))))), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false)), bvec2(bvec4(bvec2(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), false)), true, true))), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (false))))), true)))), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true)))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true))))) && true), false)), false)), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), 1.0, 1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0))), ((float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), (length(0.0)) + 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(-4.4), (vec4(0.0, 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-8470.1242), (vec4(0.0, 1.0, 0.0, 0.0))[3]), vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], _GLF_FUZZED(-8.3), (vec4(0.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(-718.597)), bvec4(true, false, true, false))), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) * 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-9.5, clamp(-9.5, -9.5, -9.5)))), bool(false))), 1.0, 1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)))) - 0.0), (float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) / 1.0, float(mat2x3((1.0) / 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY((1.0) / 1.0, float(mat2x3((1.0) / 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((1.0) / 1.0, float(mat2x3((1.0) / 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0))))))) * 1.0))), dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-9.5), clamp(_GLF_FUZZED(-9.5), _GLF_FUZZED(-9.5), _GLF_FUZZED(-9.5)))), bool(false))), 1.0, 1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0))), (float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, sqrt(sqrt(1.0)), 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) * 1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-9.5)), bool(false))), 1.0, 1.0))), 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0))))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) * 1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-887.352), (_GLF_FUZZED(-887.352)) / 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_struct_0(uvec3(1u), ivec3(1), mat3(1.0), vec3(1.0), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1)))), _GLF_struct_1(uvec2(1u), mat3(1.0), uvec2(_GLF_IDENTITY(1u, max(1u, 1u)))), _GLF_struct_2(mat4(1.0), vec3(1.0), mat2(1.0), bvec2(true), 1.0, bvec2(true), mat3(1.0)), bvec4(true), _GLF_struct_3(1, vec4(1.0), _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), mat3x4(1.0))), bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), gl_NumWorkGroups.x, mat2(1.0), _GLF_struct_8(1u, _GLF_struct_5(bvec2(true), 1u, vec2(1.0), uvec2(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED(atomicAnd(subgroup_id, subgroup_size))))), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_6(1u, 1, 1), _GLF_struct_7(mat2x3(1.0), vec2(1.0), mat2(1.0), bvec2(true), 1), true));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size) : gl_WorkGroupID, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size) : gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size) : gl_WorkGroupID, max(false ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size) : gl_WorkGroupID, false ? _GLF_FUZZED(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size) : gl_WorkGroupID)))))) ^ uvec3(0u, 0u, 0u)))).x;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z, min(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size)).z)) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true))), false || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? 5951.4874 : -600.467))), bool(false))))), ((! (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), true))))))))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_12(uvec3(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), mat4(1.0), _GLF_struct_10(uvec3(1u), vec3(1.0), mat3x4(1.0), true, mat2x4(1.0), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) / 1)), (_GLF_IDENTITY(0 ^ 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) | (0 ^ 0))), (~ (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) | (0 ^ 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))))), max(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), _GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1)))))) ^ 0)), (_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1))))), min((~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1)))), (~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1))))) | 0)), ((~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1)))))) | 0)))) ^ 0)), ivec3(_GLF_IDENTITY(ivec3(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1)))))) ^ 0))), ivec3(ivec4(ivec3(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), 0 + (_GLF_IDENTITY(0, 0 ^ (0)))), 1)))))) ^ 0))), 1)))))) | (ivec3(1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) - 0), (false ? _GLF_FUZZED(-98331) : _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) + 0))) - 0)))) >> 0), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) - 0)))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, 0 ^ (0)), 1)))))) ^ 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 1 * (1)), (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), max(_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), min(0 >> _GLF_IDENTITY(int(4), int(4)), 0 >> _GLF_IDENTITY(int(4), int(4))))), (_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, max(0, 0)), 1 * (0 ^ 0)))), (ivec3(1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (~ (4)))), int(4))), _GLF_IDENTITY((_GLF_IDENTITY(0 ^ _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))), _GLF_IDENTITY(0, min(0, 0)))), 1 * _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) >> 0), ((0 ^ 0)) | ((0 ^ 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 0, 1 * _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))))), min((_GLF_IDENTITY(0 ^ 0, 1 * _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0))))), (_GLF_IDENTITY(0 ^ 0, 1 * _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) | ((0 ^ 0)))))))) << (1 ^ (1 & 1))))) << ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0 << _GLF_IDENTITY(int(6), int(6)))), 0, 0)), _GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), ivec3(ivec4(ivec3(1, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec2(0, 1))), 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))), int(4))), (0 ^ 0)), 1))))), max(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), min(int(4), int(4)))))), _GLF_IDENTITY(((int(4))) + 0, ~ (~ (((int(4))) + 0)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(4))), (0 ^ 0)), max(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), ivec3(ivec3(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), (ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0))) ^ ivec3(0, 0, 0))))), ivec3(1, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(bitfieldExtract(-54549, 45555, (- 43807)))))), int(4))), (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) + 0), max(0 ^ 0, _GLF_IDENTITY(0 ^ 0, min(0 ^ 0, _GLF_IDENTITY(0 ^ 0, max(_GLF_IDENTITY(0 ^ 0, (0 ^ 0) << 0), 0 ^ 0))))))) + 0))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(-60986) : 0 >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(-60986) : 0 >> _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (false ? _GLF_FUZZED(-60986) : _GLF_IDENTITY(0, min(0, 0)) >> _GLF_IDENTITY(int(4), int(4))))))), (0 ^ 0)), max(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ 0)), ~ (~ (_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ 0)), clamp(ivec3(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ 0)), ivec3(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ 0)), _GLF_IDENTITY(ivec3(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ 0)), ivec3(ivec3(ivec3(1, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ((0 >> _GLF_IDENTITY(int(4), int(4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 ^ 0)))))))))), ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1))) ^ 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))), (ivec3(-54039, _GLF_IDENTITY(-16489, (-16489) | (-16489)), -50994) & ivec3(0, 0, 0)) | (ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY((0 ^ 0), ~ _GLF_IDENTITY((~ ((0 ^ 0))), ~ (~ (_GLF_IDENTITY((~ ((0 ^ 0))), ((~ ((0 ^ 0)))) | 0)))))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY((0 ^ 0), ~ (_GLF_IDENTITY(~ ((0 ^ 0)), min(~ ((0 ^ 0)), ~ ((0 ^ 0))))))), (ivec3(-54039, -16489, -50994) & ivec3(0, 0, 0)) | (ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), ~ (~ (int(4))))) * 1)) >> (0 | 0)), int(4))), _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))))))), max(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) | 0))))), (0 ^ 0)), ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-31991))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, 0 | (0)) ^ 0)), (_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), ~ (~ (int(int(_GLF_IDENTITY(0, max(0, 0)))))))), (true ? 0 : _GLF_FUZZED(-31991))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), 0 | (0)) ^ 0)), min(ivec3(1, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-31991))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, 0 | (0)) ^ 0)), _GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1), (ivec4(0, (0 << _GLF_IDENTITY(int(7), int(7))), 0, 1)) - ivec4(0, 0, 0, 0)))), (true ? 0 : _GLF_FUZZED(-31991))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, 0 | (0)) ^ 0)), ivec3(0, 0, 0) | (ivec3(1, (_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-31991), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-31991)), min(~ (_GLF_FUZZED(-31991)), ~ (_GLF_FUZZED(-31991)))))))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, 0 | (0)) ^ 0))))))) | (_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-31991))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4))), int(_GLF_IDENTITY(4, (4) | (4))))), (_GLF_IDENTITY(0, 0 | (0)) ^ 0)), (ivec3(1, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-31991))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, 0 | (0)) ^ 0))) << ivec3(0, 0, 0)))), max(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), ivec3(1, (_GLF_IDENTITY(0, int(int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, ((4) - 0) >> 0))), int(4))), (_GLF_IDENTITY(0 ^ 0, (_GLF_IDENTITY(0 ^ 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), clamp(1 * (0), 1 * (0), 1 * (0))))) >> 0) ^ (0 ^ 0))) | (0 ^ 0)))))), _GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(0, (0) | 0) >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), max(ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(4) : _GLF_FUZZED(66173))), int(4))), (0 ^ 0)), ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), int(ivec2((0 ^ 0), (0 & -23125))))) | ((0 ^ 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), max(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-65700) : _GLF_IDENTITY(4, (4) - 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(4), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | (int(4))))), (int(int(_GLF_IDENTITY(int(4), int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | (int(4)))))) << 0)), int(4))), (0 ^ 0)), (_GLF_IDENTITY(ivec3(1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), int(4)), 0 ^ (0 >> _GLF_IDENTITY(int(4), int(4))))), (0 ^ 0)), min(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ 0)), ivec3(1, _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), clamp(0 >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), clamp(0 >> _GLF_IDENTITY(int(4), int(4)), 0 >> _GLF_IDENTITY(int(4), int(4)), 0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) >> 0)))), 0 ^ ((0 >> _GLF_IDENTITY(int(4), int(4))))), (0 ^ 0))))) + ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), clamp((0), (0), (0)))))) | (0)) ^ 0)), ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) ^ 0)), (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), min(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) * 1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))).x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y))))))))), (ivec3(1, (0 >> _GLF_IDENTITY(int(4), int(4))), (0 ^ _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), min(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) * 1), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))).x)), int(_GLF_ONE(1.0, injectionSwitch.y)))), int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ ivec3(0, 0, 0)), max(ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(4)), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(int(4), (int(4)) >> 0))) | 0)), (0 ^ 0)), ivec3(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(4)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(4), int(4)), 1)), int(ivec2(int(ivec2(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(95847))))), 1))))) >> 0)), (0 ^ 0))))))))))), workgroup_base + subgroup_id * GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y + ((subgroup_local_id + 1) % GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), vec3(mat4(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), transpose(transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), transpose(transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, abs(1.0), 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), max(sin(0.0), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(5.9)), bool(false))))), (sin(0.0)) + 0.0))), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0)))) / vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_struct_11(bvec4(true))), _GLF_struct_14(bvec3(true), _GLF_struct_13(mat2(1.0), bvec2(true), uvec3(1u)), bvec2(true), bvec3(true), mat4x3(1.0)), 1.0, _GLF_struct_15(vec3(1.0), ivec2(1), mat4x2(_GLF_IDENTITY(1.0, (1.0) + 0.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && true))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY(((false)), bool(bvec2(((false)), false))), true, false))), true && (! ((false)))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_struct_replacement_16._f0.next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(ivec3(_GLF_IDENTITY(64, (64) * 1), 1, 1))), 64)), 64)), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x = read;
 if(subgroup_local_id + 1 < GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.y)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
    }
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x, 0u | (GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_13_2_1_14readsubgroup_sizeworkgroup_size.x, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
}
