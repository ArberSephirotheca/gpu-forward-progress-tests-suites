#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 vec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 float _f3;
 bvec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_15 {
 vec3 _f0;
 ivec2 _f1;
 ivec2 _f2;
 mat2 _f3;
 mat4x3 _f4;
 mat4x3 _f5;
 int _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 uvec4 _f0;
 mat3x2 _f1;
 vec4 _f2;
 mat4x3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
} ;

struct _GLF_struct_20 {
 _GLF_struct_11 _f0;
 _GLF_struct_14 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 _GLF_struct_16 _f4;
 uint workgroup_base;
 _GLF_struct_19 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 int _f1;
 uint workgroup_size;
 mat3x2 _f2;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 bvec4 _f1;
 int _f2;
 mat4x3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 mat2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 int _f3;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 uvec3 _f1;
 mat4 _f2;
 mat3x4 _f3;
 mat2 _f4;
 vec4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uint _f1;
 mat3 _f2;
 uvec2 _f3;
 bvec2 _f4;
 uvec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 int _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_10 {
 bool _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 mat3x4 _f3;
 _GLF_struct_9 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), false || ((_GLF_WRAPPED_LOOP(false)))) || false)), _GLF_IDENTITY(true && (false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))) || false))), (true && _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))) || false))), bool(bvec3((false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))) || false))), false, true)))) || false))));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), false || ((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))) || false)))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false)))))), ((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false))))))) + vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.7)), bool(false))))))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0) + (vec2(0.0, 0.0)), (vec2(0.0, 0.0) + (vec2(0.0, 0.0))) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, abs(sin(0.0))))), 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))))).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) - 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) - 0))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
              return;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))
          return;
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && true) || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))) || false); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) && true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 << _GLF_IDENTITY(int(1), int(1))))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))) || false), (((_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! ((_GLF_IDENTITY(false, true && (false))) || false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, true && (false))) || false)), (! (! ((_GLF_IDENTITY(false, true && (false))) || false))) && true)), false, false, true)), (bool(bvec4(! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, true && (false))) || false)), (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || _GLF_IDENTITY(false, true && (false))))) && true)), false, false, true))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) || false)) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) || false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) || false))) && true)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, true && (false))) || false)), ! (! (! (! ((_GLF_IDENTITY(false, true && (false))) || false)))))) && true, _GLF_IDENTITY(((! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), ((false)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true), ! (! (_GLF_IDENTITY(((! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), ((false)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true), ! (! (((! (! ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))), ((false)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) && true))))))) || false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))) || false), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, true && (false))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false)))))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))))))) || false), ((_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false)))))), bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))))))) || false)) || false), true && (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || _GLF_IDENTITY(false, ! (! (false))))) && true))))) || false)), ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false), (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || _GLF_IDENTITY(false, ! (! (false))))) && true))))) || false)))))))), true && ((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) || false), true && _GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)), true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)), ! (! ((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)))))))), ! (! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)), true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true && (false)))))))) || false)), ! (! ((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))) || false)))))))))))))))))), true, false, _GLF_IDENTITY(false, true && (false))))) && true)))))))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat2(1.0, 0.0, 1.0, 0.0)))), float(mat2x4(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat2(1.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat2(1.0, 0.0, 1.0, 0.0)))), float(mat2x4(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat2(1.0, 0.0, 1.0, 0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))) / 1.0), injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(80802) : int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> (1 ^ 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))))) + 0.0) < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-7.1) : (injectionSwitch.x))) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0)))), (injectionSwitch.x) + 0.0))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-7.1) : (injectionSwitch.x))) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0)))), (injectionSwitch.x) + 0.0))) < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-7.1) : (injectionSwitch.x))) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (float(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) * sqrt(1.0))), clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0)))), (injectionSwitch.x) + 0.0))) < injectionSwitch.y))))))), _GLF_IDENTITY(true && ((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-7.1) : (injectionSwitch.x))) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0)))), (injectionSwitch.x) + 0.0))) < injectionSwitch.y))), (true && ((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-7.1) : (injectionSwitch.x))) + 0.0, clamp((injectionSwitch.x) + 0.0, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) + 0.0, (injectionSwitch.x) + 0.0)))), (injectionSwitch.x) + 0.0))) < injectionSwitch.y)))) || false)))))))))
  {
   GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.y = num_workgroup;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(true, _GLF_struct_3(_GLF_struct_0(ivec3(1), 1), _GLF_struct_1(vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-112.852)))), _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(mat3(mat3x4(mat3(1.0))), mat3(mat4(mat3(mat3x4(mat3(1.0))))))), _GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), (true ? ~ (uvec2(1u)) : _GLF_FUZZED(uvec2(146630u, 139994u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), (true ? ~ (uvec2(1u)) : _GLF_FUZZED(uvec2(146630u, 139994u)))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), (true ? ~ (uvec2(1u)) : _GLF_FUZZED(uvec2(146630u, 139994u)))))), 0u))), _GLF_IDENTITY(uvec2(1u), ~ (_GLF_IDENTITY(~ (uvec2(1u)), (true ? ~ (uvec2(1u)) : _GLF_FUZZED(uvec2(146630u, 139994u)))))))), uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) >> 0u)))), bvec2(true), uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), mat4x3(1.0)), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), (ivec2(1)) | (ivec2(1))), uvec3(1u), mat4(1.0), mat3x4(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (false ? _GLF_FUZZED(8090.3442) : _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), float(mat4x3((1.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0)))))) - 0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))) - 0.0, clamp(_GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))) / 1.0))) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))) - 0.0, max(_GLF_IDENTITY((1.0), max((1.0), (1.0))) - 0.0, _GLF_IDENTITY((1.0), max((1.0), (1.0))) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-79.86))))), max((_GLF_IDENTITY(1.0, float(float(1.0)))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-41.06)), bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))) - 0.0)), _GLF_IDENTITY((1.0), _GLF_IDENTITY(max((1.0), (1.0)), clamp(max((1.0), (1.0)), max((1.0), (1.0)), max((1.0), (1.0))))) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), ((1.0)) - 0.0), max((1.0), (1.0))) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))))))), clamp(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), max(_GLF_IDENTITY(1.0 * (0.0), max(1.0 * (0.0), 1.0 * (0.0))), _GLF_IDENTITY(1.0 * (0.0), max(1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_FUZZED(-3.7)), float(1.0 * (0.0)), bool(true))))))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (1.0) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), log(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), sin(0.0) + (min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), max(_GLF_IDENTITY(1.0 * (0.0), max(1.0 * (0.0), 1.0 * (0.0))), _GLF_IDENTITY(1.0 * (0.0), max(1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_FUZZED(-3.7)), float(_GLF_IDENTITY(1.0, 0.0 + (1.0)) * (0.0)), bool(true))))))))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (1.0) - _GLF_IDENTITY(0.0, 1.0 * (0.0))), log(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))) / 1.0), min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (_GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0))) + 0.0))))))))))), (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)), _GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)), max(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)), (true ? (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2))), (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)))), 1.0, 0.0)), max(float(vec3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((_GLF_IDENTITY(true, ! (! (true))) ? -3.5 : -1319.6388)) : 0.0)), max(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)), (_GLF_IDENTITY(true ? (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2), clamp(true ? (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2), true ? (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2), _GLF_IDENTITY(true ? (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2), min(true ? (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2), true ? (1.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2))))))), (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)))), 1.0, 0.0)), float(vec3(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0) - 0.0)) * 1.0), _GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)))), max(_GLF_IDENTITY((1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)), (true ? (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)) : _GLF_FUZZED(-9.2))), (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sin(0.0), 1.0, 1.0, 0.0)))) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0)))), 1.0, 0.0))))))))), (false ? _GLF_FUZZED(mix(-30.00, -91.76, length(_GLF_IDENTITY(vec2(12.29, -8216.7627), (vec2(12.29, -8216.7627)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((true ? -3.5 : -1319.6388)) : 0.0))))))))))) / mat2(1.0, 1.0, 1.0, 1.0)), vec4(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-528.408) : 1.0)), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0))))), _GLF_struct_7(_GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) << 0)), (ivec2(_GLF_IDENTITY(1, (1) << 0))) << ivec2(0, 0))) / ivec2(1, 1)), (ivec2(1)) | (ivec2(0, 0) << _GLF_IDENTITY(ivec2(3), ivec2(3)))), mat2x3(1.0), uvec4(1u), mat2x3(1.0)), _GLF_struct_5(mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))) / cos(0.0), min(_GLF_IDENTITY((1.0) / cos(0.0), min((1.0) / cos(0.0), (1.0) / cos(0.0))), (1.0) / cos(0.0)))), 1.0))), ivec3(1), mat3x4(1.0), mat2(1.0), uvec2(1u)), _GLF_struct_6(bvec4(true), bvec4(true), 1, mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.4)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(-3.4)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(-3.4)), float(1.0), bool(true)))))), (0.0 + (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.4)), float(1.0), bool(true))))) * determinant(mat2(1.0, 0.0, 1.0, 1.0))))), mat2(1.0)), 1), mat3x4(_GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + _GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-978.485) : (1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-4618.1371) : (1.0)), 1.0 * ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4618.1371) : (1.0))))))), _GLF_struct_9(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat3(mat2(1.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(_GLF_IDENTITY(mat3(mat2(1.0)), (true ? mat3(mat2(1.0)) : _GLF_FUZZED(mat3(7.1, 37.90, 4941.5775, 55.65, -408.195, -5.5, -4.9, 57.20, -6.5))))))) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0)))), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), transpose(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0), ((_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), _GLF_IDENTITY((transpose(mat2(mat3(mat2(1.0))))), transpose(transpose((transpose(mat2(mat3(mat2(1.0)))))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (_GLF_IDENTITY(mat2(mat3(mat2(1.0))), transpose(transpose(mat2(mat3(mat2(1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(338.021)), float(1.0), bool(true))), 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(_GLF_IDENTITY(mat3(mat2(1.0)), (false ? _GLF_FUZZED(mat3(-839.424, 162.995, -3.5, 48.23, 60.11, -3246.3037, -7.4, 7.0, 0.8)) : mat3(mat2(1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))) * mat2(1.0))))))), mat2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))))), (false ? _GLF_FUZZED((23.06 - mat2(-4.3, -67.82, 70.19, -206.920))) : _GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(10.97) : 1.0)), 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat4(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), (transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), (mat2(mat3(mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(mat3(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(8571.2804, 93.05, 3770.0037, 7285.9040))))))), (transpose(mat2(mat3(mat2(1.0))))) * mat2(1.0)), (_GLF_IDENTITY(transpose(mat2(mat3(mat2(1.0)))), _GLF_IDENTITY((transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), _GLF_IDENTITY((mat2(mat3(mat2(1.0)))), (_GLF_IDENTITY((mat2(mat3(mat2(1.0)))), transpose(transpose((mat2(mat3(mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0, 1.0)))), mat2(mat3x4((transpose(_GLF_IDENTITY(mat2(mat3(mat2(1.0))), _GLF_IDENTITY((mat2(mat3(mat2(1.0)))), (_GLF_IDENTITY((mat2(mat3(mat2(1.0)))), transpose(transpose((mat2(mat3(mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), 1.0, 1.0))))))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(512.091)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true))))))) * mat2(1.0))))))))))))))) : _GLF_FUZZED(mat2(-0.6, 6510.9398, -7.7, -3.5))))))), _GLF_struct_8(ivec3(1), 1, gl_WorkGroupSize.x, mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(vec2((1.0), 0.0))) - 0.0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) + 0.0)) > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false) && (bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), bool(bvec4(bool(bvec3(false, true, false)), false, false, false)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), max((injectionSwitch.x), (injectionSwitch.x))) / 1.0) > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5541.9899))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))) || false)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5755.9370)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.y))))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_11(mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))) + abs(0.0)), _GLF_IDENTITY(1.0, (1.0) / round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) / 1.0))))))), _GLF_struct_14(_GLF_struct_12(bvec4(true), ivec2(1)), _GLF_struct_13(uvec4(1u), mat3x2(1.0), vec4(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(881.339)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(881.339)), _GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(881.339)), _GLF_IDENTITY(bool(false), bool(bool(bool(false))))))) + 0.0)), float(_GLF_FUZZED(946.491)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mat3x4(1.0)), mat3(1.0)), mat2x4(1.0), bvec4(true), _GLF_struct_16(_GLF_struct_15(vec3(1.0), ivec2(1), ivec2(_GLF_IDENTITY(1, max(1, 1))), mat2(1.0), mat4x3(1.0), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? 1.0 : _GLF_FUZZED(-4.9)), max((true ? 1.0 : _GLF_FUZZED(-4.9)), (true ? 1.0 : _GLF_FUZZED(-4.9))))), 1.0), mix(_GLF_IDENTITY(float(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.9), clamp(_GLF_FUZZED(-4.9), _GLF_FUZZED(-4.9), _GLF_FUZZED(-4.9)))), max((true ? 1.0 : _GLF_FUZZED(-4.9)), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.9), min(_GLF_FUZZED(-4.9), _GLF_FUZZED(-4.9))))))), 1.0)), (float(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.9), clamp(_GLF_FUZZED(-4.9), _GLF_FUZZED(-4.9), _GLF_FUZZED(-4.9)))), max((true ? 1.0 : _GLF_FUZZED(-4.9)), (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.9), min(_GLF_FUZZED(-4.9), _GLF_FUZZED(-4.9))))))), 1.0))) - 0.0), float(_GLF_FUZZED((- -0.2))), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-4.9)), max((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9), mix(float(true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9)), float(_GLF_FUZZED(-56.47)), bool(false))), _GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9), mix(float(_GLF_FUZZED(23.02)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9), (false ? _GLF_FUZZED(-8.5) : true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9)))), bool(true))), true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-4.9))), max(true ? 1.0 : _GLF_FUZZED(-4.9), _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)) ? 1.0 : _GLF_FUZZED(-4.9)))), (true ? 1.0 : _GLF_FUZZED(-4.9))))), 1.0), mix(float(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.9), max(_GLF_IDENTITY(_GLF_FUZZED(-4.9), (_GLF_FUZZED(-4.9)) * 1.0), _GLF_FUZZED(-4.9)))), max((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? 1.0 : _GLF_FUZZED(-4.9)), (true ? 1.0 : _GLF_FUZZED(-4.9))))), 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED((- -0.2))), (_GLF_IDENTITY(float(_GLF_FUZZED((- -0.2))), clamp(float(_GLF_FUZZED((- -0.2))), _GLF_IDENTITY(float(_GLF_FUZZED((- -0.2))), (float(_GLF_FUZZED(_GLF_IDENTITY((- -0.2), mix(float((- -0.2)), float(_GLF_FUZZED(-7.1)), bool(false)))))) / 1.0), float(_GLF_FUZZED((- -0.2)))))) / 1.0), bool(false)))), ((_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-4.9)), max((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-4.9), max(true ? 1.0 : _GLF_FUZZED(-4.9), _GLF_IDENTITY(true, false || (true)) ? 1.0 : _GLF_FUZZED(-4.9)))), (true ? 1.0 : _GLF_FUZZED(-4.9))))), 1.0), mix(float(max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-4.9)), max((true ? 1.0 : _GLF_FUZZED(-4.9)), (true ? 1.0 : _GLF_FUZZED(-4.9))))), 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED((- -0.2)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_FUZZED((- -0.2)), min(_GLF_FUZZED((- -0.2)), _GLF_FUZZED((- -0.2)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3(_GLF_FUZZED(6.6), _GLF_FUZZED(-5.7), _GLF_FUZZED(-7147.9745)), vec3((vec3(0.0, 1.0, 0.0))[0], (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, true)))), dot(vec3(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 0.0), vec3(0.0, 1.0, 0.0))), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), abs(1.0), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(_GLF_FUZZED((- -0.2)), min(_GLF_FUZZED((- -0.2)), _GLF_FUZZED((- -0.2)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))) * 1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, determinant(mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, abs(1.0), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_FUZZED((- -0.2)), min(_GLF_FUZZED((- -0.2)), _GLF_FUZZED((- -0.2)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(abs(1.0), 1.0 * (_GLF_IDENTITY(abs(1.0), 1.0 * (_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))))))), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(_GLF_FUZZED((- -0.2)), min(_GLF_IDENTITY(_GLF_FUZZED((- -0.2)), (_GLF_FUZZED((- -0.2))) - 0.0), _GLF_FUZZED((- -0.2)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, determinant(mat2(1.0, 0.0, abs(1.0), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))), (_GLF_IDENTITY(float(_GLF_FUZZED((- -0.2))), clamp(float(_GLF_FUZZED((- -0.2))), _GLF_IDENTITY(float(_GLF_FUZZED((- -0.2))), (float(_GLF_FUZZED((- -0.2)))) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2361.1933)), bool(false)))), 1.0, 0.0)), 1.0, 1.0), vec4(mat3x2(vec4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), 1.0, 1.0), 0.0, 0.0)))))), float(_GLF_FUZZED((- -0.2)))))) / 1.0), bool(false))))) + tan(0.0)) * 1.0))), 1)), _GLF_IDENTITY(_GLF_struct_replacement_10._f4._f1.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_10._f4._f1.workgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_10._f4._f1.workgroup_size, (_GLF_struct_replacement_10._f4._f1.workgroup_size) | (_GLF_struct_replacement_10._f4._f1.workgroup_size)), _GLF_struct_replacement_10._f4._f1.workgroup_size))) / 1u) * workgroup_id, _GLF_struct_19(uvec3(1u), _GLF_struct_17(vec4(1.0), ivec3(1), mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(8261.1934)), bool(false)), mix(float(mix(float(1.0), float(_GLF_FUZZED(8261.1934)), bool(false))), float(_GLF_FUZZED(8.3)), bool(false))), _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(8764.3272)), float(cos(0.0)), bool(true))) * (_GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(8261.1934), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(8261.1934), (true ? _GLF_IDENTITY(_GLF_FUZZED(8261.1934), min(_GLF_FUZZED(8261.1934), _GLF_FUZZED(8261.1934))) : _GLF_FUZZED(5677.6098)))))), bool(false)), float(vec4(mix(float(1.0), float(_GLF_FUZZED(8261.1934)), bool(false)), 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0))))))))), _GLF_IDENTITY(vec4(1.0), vec4(mat3x4(vec4(1.0), 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0))), mat2(1.0)), _GLF_struct_18(uvec3(1u), uvec2(1u)), 1.0, bvec4(true), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), (_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   do
    {
     GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z = subgroup_base;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_struct_replacement_20.workgroup_base + GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_20.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base, (false ? _GLF_FUZZED(uvec3(20159u, 62760u, _GLF_IDENTITY(144825u, (false ? _GLF_FUZZED(virtual_gid) : 144825u)))) : GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base)).z, (true ? _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base, (false ? _GLF_FUZZED(uvec3(20159u, 62760u, 144825u)) : GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base)).z : _GLF_FUZZED(subgroup_id))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), subgroup_size)))))) ^ 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u)), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) - 0u), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> 0u)))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED((true ? num_workgroup : num_workgroup)))) ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u))), ((~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u)))) / 1u)), 0u, 0u), (uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u)) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) | (uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u)))), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), subgroup_size)))))) ^ 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u)), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) - 0u), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> 0u)))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED((true ? num_workgroup : num_workgroup)))) ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u))), ((~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u)))) / 1u)), 0u, 0u), (uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u)) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) | (uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u)))), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), subgroup_size)))))) ^ 0u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u)), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) - 0u), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> 0u)))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED((true ? num_workgroup : num_workgroup)))) ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u))), ((~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u)))) / 1u)), 0u, 0u), (uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ 0u)))), 0u, 0u)) | uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))) | (uint(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) ^ 0u)))), 0u, 0u)))))) >> 0u)) + 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false))))), false, true, false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.x = next_virtual_gid;
 uint read = _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | 0) | (_GLF_IDENTITY(0, (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1) * _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) | ((0)))) / 1)) >> _GLF_IDENTITY(int(7), int(7))))), int(_GLF_IDENTITY(ivec3(min(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), (0), (0))) | (0 >> _GLF_IDENTITY(int(7), int(7))))), (1 & 1), 0), (true ? ivec3(min(0, _GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) / 1))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) + 0)), int(7)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) | (_GLF_IDENTITY(int(7), min(int(7), int(7))))), int(7))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0)) : _GLF_FUZZED(-92506))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) + 0)), int(7)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) | (_GLF_IDENTITY(int(7), min(int(7), int(7))))), int(7))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0)) : _GLF_FUZZED(-92506))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) + 0)), int(7)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) | (_GLF_IDENTITY(int(7), min(int(7), int(7))))), int(7))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0)) : _GLF_FUZZED(-92506))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) + 0)), int(7)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) | (_GLF_IDENTITY(int(7), min(int(7), int(7))))), int(7))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, min((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0, (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))))) >> 0)) << 0)) : _GLF_FUZZED(-92506))))))))))), (1 & 1), 0) : _GLF_FUZZED((false ? ivec3(11303, 58778, -43892) : ivec3(-77810, -82472, -3936))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4237.3735)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390))), min(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390))), mix(float(_GLF_FUZZED(-54.53)), float(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390)))), bool(true))))), (injectionSwitch)[1]), bvec2(false, true)))) + vec2(0.0, 0.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4237.3735)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390))), min(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_IDENTITY(_GLF_FUZZED(-509.390), mix(float(_GLF_FUZZED(-7787.0009)), float(_GLF_FUZZED(-509.390)), bool(true))), _GLF_FUZZED(-509.390))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390))), mix(float(_GLF_FUZZED(16.93)), float(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390)))), bool(true)))), float(_GLF_FUZZED(8277.2305)), bool(false))), mix(float(_GLF_FUZZED(-54.53)), float(_GLF_IDENTITY(_GLF_FUZZED(-509.390), max(_GLF_FUZZED(-509.390), _GLF_FUZZED(-509.390)))), bool(true))))), (injectionSwitch)[1]), bvec2(false, true)))) + vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), 1.0, 1.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(65.19), _GLF_FUZZED(float(true))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]), _GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-589.065), (min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-1.5)), bvec2(true, false)))), vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(-184.176)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), 1.0, 1.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(65.19), _GLF_FUZZED(float(true))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1]), _GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-589.065), (min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-1.5)), bvec2(true, false)))), vec2(injectionSwitch[0], injectionSwitch[1])))).x), bool(true))) > injectionSwitch.y))))
      {
      }
     else
      {
       atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.x], uint(1), 4, 64, 4);
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (2) | (2))) == 0)
  {
   do
    {
     subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! ((! (false)))), true && ((! ((! (false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (! ((! (false)))), true && (! (! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false))))))) && true))))))))), true && ((! ((! (false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! ((! (false)))), ! (! ((! ((! (false))))))), true && ((! ((! (false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY(((! (false))), bool(bvec2(((! (false))), true))))), (_GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ((false)) || false)))))) && true)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), _GLF_IDENTITY(! (! ((! (false)))), false || (! (! ((! (false)))))))) && true)) || false, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true)) || false, true))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-399.841) : _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch)[1] : _GLF_FUZZED(8.3)))))), bvec2(false, true))).y))), (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).y)))) || false), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true)), vec2(vec2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true)))))).y))), (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true)), vec2(1.0, 1.0) * (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true)), max(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true)), (false ? _GLF_FUZZED(vec2(47.00, 771.005)) : mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(47.55)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))))))).y)))) || false), true, false)))))))), (! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), bool(bool((false))))))))) || false)))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_IDENTITY(_GLF_FUZZED(-9.4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6569.4947) : _GLF_FUZZED(-9.4)))), bool(false))))) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           continue;
          }
         for(int _injected_loop_counter = (26431 & _GLF_IDENTITY(0, max(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) + 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) / 1), ~ (_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), 0 + (~ (_GLF_IDENTITY(1, (1) ^ 0))))), min(clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) / 1), ~ (_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), 0 + (~ (_GLF_IDENTITY(1, (1) ^ 0))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) / 1), ~ (_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), 0 + (~ (_GLF_IDENTITY(1, (1) ^ 0)))))))))), 1))); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) - 0) != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), false || (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), mat3(1.0) * (vec3(injectionSwitch, 0.0))))).y), false, true)))))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))
        break;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) * 1), 64, 2), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(190000u, min(_GLF_IDENTITY(_GLF_IDENTITY(190000u, (190000u) / 1u), clamp(190000u, 190000u, 190000u)), 190000u))) : read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 4, 64, 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(190000u, min(_GLF_IDENTITY(190000u, clamp(190000u, 190000u, 190000u)), _GLF_IDENTITY(190000u, uint(uvec3(190000u, _GLF_IDENTITY(0u, 0u ^ (0u)), 1u)))))) : read = atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u ^ (~ (false ? _GLF_FUZZED(_GLF_IDENTITY(190000u, _GLF_IDENTITY(min(_GLF_IDENTITY(190000u, clamp(190000u, 190000u, 190000u)), 190000u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(min(_GLF_IDENTITY(190000u, clamp(_GLF_IDENTITY(190000u, min(_GLF_IDENTITY(190000u, _GLF_IDENTITY((190000u), ((190000u)) | ((190000u))) | (190000u)), _GLF_IDENTITY(190000u, _GLF_IDENTITY((_GLF_IDENTITY(190000u, (190000u) | 0u)) << 0u, ((_GLF_IDENTITY(190000u, (190000u) | 0u)) << 0u) * 1u)))), 190000u, 190000u)), 190000u), (min(_GLF_IDENTITY(190000u, clamp(190000u, 190000u, 190000u)), 190000u)) << 0u))))) : read = atomicLoad(buf[virtual_gid], 4, 64, 2))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     subgroupAll(false);
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), true, false)), true, false, false)), false || (bool(bvec4(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false)), true, false, _GLF_IDENTITY(false, (false) && true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))) || false)); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(-30565) : _GLF_IDENTITY(_injected_loop_counter --, 0 + (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))))))
      {
       do
        {
         read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))], 4, 64, 2);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(4.1))) < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(84074) : _injected_loop_counter)) != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atanh(643.818)))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true))))))))))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
  {
  }
 else
  {
   for(int _injected_loop_counter = (0 | int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, abs(0.0), log(1.0)), mix(vec4((vec4(0.0, 1.0, abs(0.0), log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(8.7))))))[0], _GLF_FUZZED(6.0), (vec4(0.0, 1.0, abs(0.0), log(1.0)))[2], (vec4(0.0, 1.0, abs(0.0), log(1.0)))[3]), vec4(_GLF_FUZZED(-5.8), (vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-336.117) : 1.0)), abs(0.0), log(1.0)))[1], _GLF_FUZZED((true ? -4254.9240 : -7509.0335)), _GLF_FUZZED(-8.2)), bvec4(false, true, false, false))))), injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) < _GLF_IDENTITY(1, int(ivec3(1, 0, 0)))); _injected_loop_counter ++)
    {
     subgroupBarrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (! (false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-729.829))), injectionSwitch.x)) : _GLF_FUZZED(-83.33))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0))), (false ? _GLF_FUZZED(vec2(2051.2024, -474.122)) : vec2(mat2x4(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0)))))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.7) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))))
      {
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(48722) : (_injected_loop_counter)))) << (0 << _GLF_IDENTITY(int(3), int(3)))), 0))))), ~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(48722) : (_injected_loop_counter)))) << (0 << _GLF_IDENTITY(int(3), int(3)))), 0)))))))) < 1, (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ (_injected_loop_counter), 0))))) < 1) && true)), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(48722) : (_injected_loop_counter)))) << (0 << _GLF_IDENTITY(int(3), int(3)))), 0))))), ~ (~ (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), (false ? _GLF_FUZZED(48722) : (_injected_loop_counter)))) << (0 << _GLF_IDENTITY(int(3), int(3)))), 0)))))))) < 1, (_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), int(ivec2(~ (_injected_loop_counter), 0))))) < 1) && true)))))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))) - 0.0)), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))) - 0.0))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec4(_injected_loop_counter < 1, false, false, true)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 | (0 | 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0 | (0 | 0), min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(56300) : _GLF_IDENTITY(0, (1 | 1) * (0)))) | (0 | 0), 0 | (0 | 0))), 1, 1), min(ivec3(_GLF_IDENTITY(0 | (0 | 0), min(0 | (0 | 0), 0 | (0 | 0))), 1, 1), ivec3(_GLF_IDENTITY(0 | (0 | 0), min(0 | (0 | 0), 0 | (0 | 0))), 1, 1)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), ! (! (_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), ! (_GLF_IDENTITY(! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) - 0)))) && true))))))))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), ((4)) ^ 0))))), max(4, 4)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x) : _GLF_FUZZED((-0.4 - -418.900))))), 0, 1)), (int(ivec4(_GLF_IDENTITY(4, max(4, 4)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0, 1))) + 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 1, 0)), ~ (~ (int(ivec3(4, 1, 0)))))), _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4))))), 1 * (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, int(ivec4(4, 0, 1, 0))), 4))) ^ 0)) | 0)), clamp(max(4, 4), max(4, 4), max(4, 4)))))))))) ^ 0));
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))), 0 | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1))), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), ~ (~ (int(_GLF_IDENTITY(0, max(0, 0)))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, ((int(2)) * 1) * 1)))))), _GLF_IDENTITY(int(ivec4(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))), int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(95662) : int(0))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, min(2, 2)))) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1), (((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1)) >> 0) * 1)))))), _GLF_IDENTITY(0, 0 + (0)), 1, 0)), (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(ivec4(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))), int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(95662) : int(0))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, min(2, 2)))) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1), (((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1)) >> 0) * 1)))))), _GLF_IDENTITY(0, 0 + (0)), 1, 0)), (false ? _GLF_FUZZED(-71740) : int(ivec4(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))), int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(95662) : int(0))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, min(2, 2)))) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1), (((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1)) >> 0) * 1)))))), _GLF_IDENTITY(0, 0 + (0)), 1, 0))))))), int(ivec3(_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))), 0 | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1))), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, max(0, 0))), ~ (~ (int(_GLF_IDENTITY(0, max(0, 0)))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(2)) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, ((int(2)) * 1) * 1)))))), _GLF_IDENTITY(int(ivec4(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))), int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(95662) : int(0))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, min(2, 2)))) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1), (((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1)) >> 0) * 1)))))), _GLF_IDENTITY(0, 0 + (0)), 1, 0)), (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(ivec4(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))), int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(95662) : int(0))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, min(2, 2)))) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1), (((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1)) >> 0) * 1)))))), _GLF_IDENTITY(0, 0 + (0)), 1, 0)), (false ? _GLF_FUZZED(-71740) : int(ivec4(((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) / 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), clamp(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, max(0, 0))))))) >> _GLF_IDENTITY(int(0), int(0))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), int(ivec2((0), 0))), (0), (0))))), ((0)) / 1)))), int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(95662) : int(0))))))))))) >> _GLF_IDENTITY(int(0), int(0)))) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), (int(_GLF_IDENTITY(2, min(2, 2)))) * 1), min(_GLF_IDENTITY(int(2), (int(2)) * 1), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) * 1, _GLF_IDENTITY(((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1), (((_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2)))) * 1)) >> 0) * 1)))))), _GLF_IDENTITY(0, 0 + (0)), 1, 0))))))), 0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | 0)) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_GLF_IDENTITY(54719, 0 | (54719)))))))) | 1), ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | 0)) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_GLF_IDENTITY(54719, 0 | (54719)))))))) | 1)) | 0) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
  }
}
