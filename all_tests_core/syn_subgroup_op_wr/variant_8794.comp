#version 460
struct _GLF_struct_6 {
 ivec2 _f0;
} ;

struct _GLF_struct_5 {
 uint num_workgroup;
 vec3 _f0;
 ivec3 _f1;
 bvec2 _f2;
 mat3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 _GLF_struct_7 _f1;
 int _f2;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 bvec3 _f1;
 mat3 _f2;
 bvec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 _GLF_struct_0 _f1;
 float _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint subgroup_id;
 int _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_4_1_1_14readworkgroup_base;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(mat4x3(1.0), _GLF_struct_0(bvec2(true)), 1.0, _GLF_struct_1(mat2(1.0), bvec3(true), mat3(1.0), bvec4(true), vec2(1.0))), gl_SubgroupID, 1);
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat4(1.0), _GLF_struct_7(_GLF_struct_4(mat2x3(1.0)), _GLF_struct_5(gl_NumWorkGroups.x, vec3(1.0), ivec3(1), bvec2(true), mat3(1.0), bvec3(true)), _GLF_struct_6(ivec2(1))), 1);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.y = workgroup_base;
 uint subgroup_base = _GLF_struct_replacement_3.subgroup_id * subgroup_size;
 uint virtual_gid = GLF_merged2_0_1_4_1_1_14readworkgroup_base.y + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = GLF_merged2_0_1_4_1_1_14readworkgroup_base.y + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = 0;
 GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = read;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 else
  {
   subgroupAll(false);
   GLF_merged2_0_1_4_1_1_14readworkgroup_base.x = atomicLoad(buf[virtual_gid], 4, 64, 2);
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], GLF_merged2_0_1_4_1_1_14readworkgroup_base.x, 4, 64, 4);
}
