#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (1) - 0))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(clamp(-121.498, 36.13, -7936.4850)) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))), (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))) || false))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, true)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                {
                }
               else
                {
                 barrier();
                }
              }
             barrier();
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, vec2(-60.82, -89.18))))), injectionSwitch, injectionSwitch)).y))));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size, (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size : _GLF_FUZZED(subgroup_size)));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.z = workgroup_size;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, false)), (bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, false))) && true)));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true), bvec2(bvec2(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true), bvec2(bvec2(bvec2(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true))))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch / vec2(-3765.0985, 0.8))))), 1.0, 0.0, 1.0, abs(1.0)))).y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y) || false)))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
                barrier();
               barrier();
              }
            }
           barrier();
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))), true, true, true))))))
  {
   do
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.z, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.z) - (0u | 0u), ((GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.z) - (0u | 0u)) >> 0u)) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (uvec2(85401u, 81209u) & _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))) ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).r)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (false ? _GLF_FUZZED(uvec3(140409u, 49239u, 34570u).s) : GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (false ? _GLF_FUZZED(uvec3(140409u, 49239u, 34570u).s) : GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))) << 0u) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) ^ uvec2(0u, _GLF_IDENTITY(0u, (0u) << 0u)))) << (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u)))).x + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED((workgroup_size & subgroup_id))))) + subgroup_local_id), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id)))))) / 1u)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, min(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) * 1u))) + subgroup_local_id, (workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id) | (workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))), uint(uvec2((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))), 1u)))), (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(716.563), _GLF_FUZZED(-673.469)), bvec2(false, false))))), injectionSwitch)).x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u)))))), 0u | (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u)))))))), (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u))), 0u | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u)))))), (true ? (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))) + 0u))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u), (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) | (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))), 1u)))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(716.563), _GLF_FUZZED(-673.469)), bvec2(false, false))))), injectionSwitch)).x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u)))))), 0u | (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u)))))))), (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u))), 0u | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u)))))), (true ? (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))) + 0u)), (true ? (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(716.563), _GLF_FUZZED(-673.469)), bvec2(false, false))))), injectionSwitch)).x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) - 0u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), 0u | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u)))))), 0u | (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))), (true ? (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id)))), max(_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id)))), _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))))) ^ 0u)) >> (0u & 166444u))) : _GLF_FUZZED(162619u)))))))), (~ ((_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u))), 0u | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u))), 0u | (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_IDENTITY((0u & 164926u), ((0u & 164926u)) / 1u) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), min(_GLF_FUZZED((subgroup_id / workgroup_id)), _GLF_FUZZED((subgroup_id / workgroup_id))))) >> 0u))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (true ? (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id / workgroup_id)), (0u & 164926u) | (_GLF_FUZZED((subgroup_id / workgroup_id))))) : _GLF_FUZZED(162619u))))))) + 0u)) : _GLF_FUZZED(workgroup_id)))) : _GLF_FUZZED(num_workgroup))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) || false)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1))) | (1))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1])))))) * (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, clamp(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, 0u | (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, min(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u)))))))).x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), max(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1])))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), max(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))))))))), (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]) * (1u & 1u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(_GLF_IDENTITY(uvec2(71628u, 94977u), uvec2(0u, 0u) + (uvec2(71628u, 94977u))))))[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(1, ~ (~ (1)))], (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]) * (1u & 1u))), max(uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) * (1u & 1u))), uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) * (1u & 1u)))))))).x)))), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1))) | (1))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), ~ (~ ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1])))))) * (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, clamp(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, 0u | (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, min(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 0u, 1u))) & 1u)))))))).x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), max(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1])))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), max(~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))), ~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))))))))), (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]) * (1u & 1u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(_GLF_IDENTITY(uvec2(71628u, 94977u), uvec2(0u, 0u) + (uvec2(71628u, 94977u))))))[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(1, ~ (~ (1)))], (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]) * (1u & 1u))), max(uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) * (1u & 1u))), uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1], uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) * (1u & 1u)))))))).x))))) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
  {
   atomicStore(buf[GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.x], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(clamp(uint(1), uint(1), _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))), 0u + (clamp(uint(1), uint(1), uint(1))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), max(_GLF_IDENTITY((4), int(int((4)))), _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) << (0 << _GLF_IDENTITY(int(3), int(3))), (((4)) << (0 << _GLF_IDENTITY(int(3), int(3)))) | (((4)) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1))))))) + 0)) | (4)));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (4)), 64, 0);
 GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.y = read;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), false, true, true)))))
      barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec4(int(5), 0, 1, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)))))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 1)))) / 1)) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false)))))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (bool(bool(bool(_GLF_DEAD(false))))) || false)))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, true && (true))))))))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(false)) && true)))), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, true && (true)))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, (0) - 0))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = (1 & ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > 0), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > 0)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter --)
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(96.76)), (true ? (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(96.76)) : _GLF_FUZZED(857.022))))))))
                                      barrier();
                                     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0), (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1))
                                        {
                                         barrier();
                                        }
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                    {
                                     do
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                        {
                                         barrier();
                                         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                          barrier();
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), clamp(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).y))));
                               for(int _injected_loop_counter = ((_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (_GLF_IDENTITY(0 ^ 1, clamp(_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1)), 0 ^ 1, 0 ^ 1))))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                                {
                                 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size.y, 4, _GLF_IDENTITY(64, (64) | (0 >> _GLF_IDENTITY(int(5), int(5)))), 4);
                                }
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                  }
                                 barrier();
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                                barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))));
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), min(int(2), int(2)))), (~ (_GLF_IDENTITY(int(2), min(int(2), int(2))))) ^ 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) >> _GLF_IDENTITY(int(2), int(2)))) - 0), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1)), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))) | (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))))) + ivec2(0, 0))))) >> 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1)), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))) | (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))))) + ivec2(0, 0))))) >> 0))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1)), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))) | (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))))) + ivec2(0, 0))))) >> 0)))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(mix(_injected_loop_counter, 3460, false)))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), 1)), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))), (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))) | (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))))) + ivec2(0, 0))))) >> 0)), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) + 0))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0)))) >> ivec4(0, 0, 0, 0))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (false ? _GLF_FUZZED(-38470) : _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))))), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), max(1, _GLF_IDENTITY(1, (1) >> 0))))))))), 1, 0)))), (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, _GLF_IDENTITY(-6612, (-6612) | (-6612)), -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))) >> 0), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))) | (ivec2(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) >> 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))), ~ (_GLF_IDENTITY(~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))), clamp(~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))), ~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))), ~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))))), 1, 0), (false ? _GLF_FUZZED(ivec4(-72598, -6612, -13522, -38498)) : ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), clamp(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 + ((1)))) | 0))) >> 0), _GLF_IDENTITY(1, max(1, 1))), ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1))), ~ (~ (ivec2(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, max(1, 1)))))))), 1, 0))))))) + _GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))))) >> 0)) : _GLF_FUZZED(-2708))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2))))))), true && (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), 0 + ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | (int(2)))) + 0))), true && (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) * 1, (true ? (2) * 1 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, _injected_loop_counter)) : (2) * 1)))), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) * 1)), (int(_GLF_IDENTITY(2, (2) * 1))) ^ 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0 + (float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0 + (float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) << 0), 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, _injected_loop_counter)) : (2) * 1)))), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) * 1)), (int(_GLF_IDENTITY(2, (2) * 1))) ^ 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0 + (float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0 + (float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) << 0), 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (0 | 0) ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, _injected_loop_counter)) : (2) * 1)))), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) * 1)), (int(_GLF_IDENTITY(2, (2) * 1))) ^ 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0 + (float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), 0.0 + (float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) << 0), 0))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec3(_GLF_IDENTITY(int(2), int(2)), 1, 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), int(ivec3(_GLF_IDENTITY(int(2), int(2)), 1, 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec3(_GLF_IDENTITY(int(2), int(2)), 1, 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(13571) : (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec3(_GLF_IDENTITY(int(2), int(2)), 1, 0)))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))))))) << 0) / (1 & 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), int(2)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(2), int(2)))), int(int((~ (_GLF_IDENTITY(int(2), int(2)))))))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))) && (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) ^ 0) < (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, ~ (~ (2)))))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)) | 0, 0 + ((int(2)) | _GLF_IDENTITY(0, 0 ^ (0))))))), int(2))), clamp(max((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2)), int(_GLF_ONE(1.0, injectionSwitch.y)) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), ~ _GLF_IDENTITY((~ (int(2))), int(int((~ (int(2))))))), int(2))), int(2))))), _GLF_IDENTITY(max((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))), int(2))), min(max((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2)))))) - 0), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(2)), 1 * (_GLF_IDENTITY(min(int(2), int(2)), 1 * (min(int(2), int(2))))))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) - 0)) | (int(2))))), max((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (2))), (false ? _GLF_FUZZED(2876) : (_GLF_IDENTITY(2, (2) | (2)))))))))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))) ^ 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))) ^ 0))))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter)))) ^ 0)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2))))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) >> 0), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) / 1))), _GLF_IDENTITY(2, ~ (~ (2)))))), int(2))))), true && (_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(22391) : 2)))))), max(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(22391) : 2)))))), _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(22391) : 2))))))))) >> _GLF_IDENTITY(int(2), int(2)))))), false))) && _GLF_IDENTITY(true, false || (true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), min(_GLF_IDENTITY((2), ((2)) * 1), (2)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) - 0), _GLF_IDENTITY(2, (2) | (2))), (min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) - 0), _GLF_IDENTITY(2, (2) | (2)))) | 0))))), int(2))), _GLF_IDENTITY(bool(bool(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) + 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) | (2)), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec4(2, 1, 0, (((1 & 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), max(int(ivec4(2, 1, 0, (((1 & 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(ivec4(2, 1, 0, (((1 & 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))), (_GLF_IDENTITY(2, (2) | (2))) - 0), _GLF_IDENTITY(2, (2) | (2))))))), int(2))))), (bool(_GLF_IDENTITY(bool(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) - 0), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) | (2))))))))), int(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, max(2, 2)))))))), ! (! (bool(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), min(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(2, (2) | (2))) - 0), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) | (2))))))))), int(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, max(2, 2))))))))))))) && true)), true && (_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), ~ (~ (int(2)))), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < ((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(int(2)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), int(2))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))) && (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (0 & (+ 32848)) + (_GLF_IDENTITY(int(2), int(2)))))), false || (true && (_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 0, 0, _GLF_IDENTITY(((1 | 1) & 1), min(((1 | 1) & 1), ((1 | 1) & 1)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1)))), min(_GLF_IDENTITY(~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1)))), (~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1))))) << ivec4(0, 0, 0, 0)), _GLF_IDENTITY(~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1)))), ~ (~ (~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1))))))))), max(~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1)))), ~ (~ (ivec4(2, 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | 0))), ((1 | 1) & 1)))))))))))) >> _GLF_IDENTITY(int(2), int(2))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) / 1)) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (0) / 1))) ^ 0)), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) >> 0), 2, 2))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) >> 0), 2, 2))) : _GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(int(2), int(2))) / 1)))))))), (_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), int(_GLF_IDENTITY(2, int(int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY(true && (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), false || (true && (_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 0, 0, ((1 | 1) & 1)), _GLF_IDENTITY(~ (~ (ivec4(2, 0, 0, (_GLF_IDENTITY((1 | 1), 1 * (_GLF_IDENTITY((1 | 1), int(ivec3((1 | 1), 0, 1))))) & 1)))), _GLF_IDENTITY(~ (~ (~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1)))))), (~ (~ (~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1))))))) | (~ (~ (~ (~ (ivec4(2, 0, 0, ((1 | 1) & 1))))))))))))))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - ((0 << _GLF_IDENTITY(int(2), int(2))) | 0)), (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, 0 | (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))) ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0)))) : _GLF_IDENTITY(0, (0) << 0))))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), 0 ^ ((false ? _GLF_FUZZED(_injected_loop_counter) : 0))), 1), (ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), 0 ^ ((false ? _GLF_FUZZED(_injected_loop_counter) : 0))), 1)) + ivec2(0, 0))))))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) ^ 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), (_GLF_IDENTITY(int(2), int(2))) / 1))), 0 ^ ((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), 0 + (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))))), (_injected_loop_counter))) - ((0 << _GLF_IDENTITY(int(2), int(2))) | 0)), (_injected_loop_counter) | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) - 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), 1 * (_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1))), int(_GLF_IDENTITY(2, (2) - 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), _GLF_IDENTITY(int(2), min(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(_GLF_IDENTITY(2, (2) << 0))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), (int(_GLF_IDENTITY(2, (2) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) / 1), int(2)))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), (_GLF_IDENTITY(int(2), int(2))) / 1))))))))))) && true)), ! (! (! (_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) ^ 0)), int(2))), true && _GLF_IDENTITY((_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-85454)))), int(2)))), ! (! ((_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-85454)))), int(2)))))))))))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((_GLF_IDENTITY(1, int(int(1))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) + 0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, int(ivec3(2, 0, 1))), _GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) << 0))), 2))), int(_GLF_IDENTITY(2, (2) ^ 0))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 | (1))), 0 | (~ (_GLF_IDENTITY(1, 0 | (1))))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (int(2)) - (0 << _GLF_IDENTITY(int(7), int(7)))), int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), int(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> 0)), 1, 1, 1)))) >> _GLF_IDENTITY(int(2), int(2)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (0 >> _GLF_IDENTITY(int(4), int(4)))), _GLF_IDENTITY(int(2), (int(2)) >> 0))) >> _GLF_IDENTITY(int(2), int(2))) * 1), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max((1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) ^ 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), int(2)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) * 1), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / 1)) / _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (1) | (1))), max(_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (1) | (1))), ~ (~ ((1) | (_GLF_IDENTITY(1, (1) | (1)))))), (1) | (_GLF_IDENTITY(1, (1) | (1))))))), 2)))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), 0 ^ ((1 << _GLF_IDENTITY(int(2), int(2)))))) / 1), 1 * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), clamp((1 << _GLF_IDENTITY(int(2), int(2))), (1 << _GLF_IDENTITY(int(2), int(2))), (1 << _GLF_IDENTITY(int(2), int(2))))))) : _GLF_FUZZED(_injected_loop_counter))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (false ? _GLF_FUZZED(_injected_loop_counter) : (~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))), (~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), clamp((~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))), (~ (_GLF_IDENTITY(2, clamp(2, 2, 2)))))))))), int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) ^ 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(determinant(mat4(17.55, 54.70, 54.87, -53.01, 844.801, 9627.5795, 379.468, 5.0, -731.200, 7717.8628, 6.9, -733.409, -0.4, -3618.0048, -6113.4191, 4542.9253))))))) << (0 | 0))))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> 0), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))))) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))))) << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), int(0)))))), 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0))))) | (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))))))) << _GLF_IDENTITY(int(2), int(2))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))), 0 | (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(0), int(0)))))))) << _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), max((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(clamp(int(2), int(2), int(2)), min(clamp(int(2), int(2), int(2)), clamp(int(2), int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 ^ (2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) - (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))))), (_GLF_IDENTITY(int(2), int(2))) ^ 0), 0, 0, 1)))) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), clamp(1 << _GLF_IDENTITY(int(2), int(2)), 1 << _GLF_IDENTITY(int(2), int(2)), 1 << _GLF_IDENTITY(int(2), int(2))))) - 0)) - 0)) >> _GLF_IDENTITY(int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))) | 0)))), true && (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))), max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1, ~ (~ (1))))))) << _GLF_IDENTITY(int(2), int(2))), ~ (~ ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (_injected_loop_counter))), clamp(~ (_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (_injected_loop_counter))), ~ (_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (_injected_loop_counter))), ~ (_GLF_IDENTITY(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (_injected_loop_counter)))))))) : _GLF_IDENTITY(1, ~ (~ (1))))) << _GLF_IDENTITY(int(2), int(2)))))) >> _GLF_IDENTITY(int(2), int(2))), (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) && true)))), false))) && _GLF_IDENTITY(true, false || (true))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0), (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0)) - 0))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(52.00), (vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[2]), vec3((vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(7.4), _GLF_FUZZED(7442.5500)), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), (true ? vec4(0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(vec4(10.13, 74.71, -730.491, 4.8)))))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(52.00), (vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[2]), vec3((vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(7.4), _GLF_FUZZED(7442.5500)), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), (true ? vec4(0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(vec4(10.13, 74.71, -730.491, 4.8)))))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(vec3(_GLF_FUZZED(52.00), (vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[1], (vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[2]), vec3((vec3(injectionSwitch, determinant(mat4(0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(7.4), _GLF_FUZZED(7442.5500)), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), (true ? vec4(0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(vec4(10.13, 74.71, -730.491, 4.8)))))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0)))))))))))))))))))
                    {
                     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, false || (true))), false, true)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.y) - 0.0)))))
                        barrier();
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, true, false)))) || false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))));
                      }
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))))))))
                      {
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0))), 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(abs(0.0), 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), 0.0, 1.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           else
                            {
                            }
                          }
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       subgroupAll(false);
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(495.866) : injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
                              barrier();
                             barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))) && true)), bool(bvec2((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), false || (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (! ((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))) && true)), true))))))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(-718.933)), bool(false))), float(_GLF_FUZZED(-8.6)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, false)))) || false)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size, (GLF_merged3_0_1_16_1_1_4_2_1_14next_virtual_gidreadworkgroup_size) - uvec3(0u, 0u, 0u)).y, 4, 64, 4);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), false))))), ((! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), false)))))) || false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), true), false, false))))))), (false) && true)), ! (! (_GLF_DEAD(false)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || false) && true)), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))) || false))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), ! (! (_GLF_DEAD(false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), ! (! (_GLF_DEAD(false)))))))))), bool(bool((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), ! (! (_GLF_DEAD(false))))))))))))))))))))))))) && true) && true))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.3) : 0.0)), 0.0)), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, tan(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))))))), 0.0))).y))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                      }
                     barrier();
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), bool(bvec4(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true, true, false))))))))));
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), true)))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
}
