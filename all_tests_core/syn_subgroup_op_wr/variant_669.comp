#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   switch(_GLF_SWITCH((0 & 88559)))
    {
     case 64:
     for(vec4 _GLF_SWITCH_12_0v[58], _GLF_SWITCH_12_1v[89], _GLF_SWITCH_12_2v; mix(false, true, true); true)
      {
       (mat3x4(470.909, -4250.9080, -908.023, 1.6, 8.4, 942.867, -6.0, -684.843, -7.5, 3200.5661, -2.9, -54.97) + mat3x4(2830.7868, -4.8, -9.6, -5.2, -7148.8151, 55.67, -462.272, 4.9, 3995.7555, -5.8, 9.1, -19.70));
       bvec3 _GLF_SWITCH_12_3v, _GLF_SWITCH_12_4v[27], _GLF_SWITCH_12_5v;
       vec4 _GLF_SWITCH_12_6v;
       if((mat4(1.1, 57.21, -1.2, 981.086, -19.44, -4204.4011, -2.9, 7.6, -6117.7970, -684.360, 56.72, -3251.7245, -79.69, -445.685, -9.3, 9.9) == mat4(-93.06, 173.071, 533.804, 9.2, 5626.9953, -6274.2660, -5938.7113, -26.18, 46.81, -7.4, 67.08, 50.71, 6578.6837, -63.22, 3.3, 917.184)))
        {
         switch(_GLF_SWITCH(0))
          {
           case 47:
           vec4(-9.6, -9490.1080, -4343.3466, 1268.4374);
           case 0:
           vec3(-836.721, 8.3, 1.2);
           {
            switch(_GLF_SWITCH(0))
             {
              case 70:
              max((ivec4(5739, -75244, -17575, 6989) | -94886), ivec4(63106, 61816, 83865, 8862));
              case 10:
              bvec4(true, false, false, false).tt;
              case 0:
              case 54:
              uvec4 _GLF_SWITCH_12_7v, _GLF_SWITCH_12_8v, _GLF_SWITCH_12_9v[86];
              case 79:
              case 96:
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                true;
               }
              case 22:
              mat4x3 _GLF_SWITCH_12_10v[25], _GLF_SWITCH_12_11v, _GLF_SWITCH_12_12v;
              case 47:
              ivec2 _GLF_SWITCH_12_13v, _GLF_SWITCH_12_14v[73];
              break;
              default:
              1;
             }
           }
           mat3 _GLF_SWITCH_12_15v[51], _GLF_SWITCH_12_16v[14];
           ivec4 _GLF_SWITCH_12_17v[42];
           break;
           case 74:
           (-2.0 / vec4(48.85, -0.3, -8.3, -1.6));
           default:
           1;
          }
        }
       else
        {
         {
         }
         while(((+ mat3(8.3, 9443.9490, -9.3, 7.5, 9.8, -899.775, -41.21, -14.98, 27.42)) == mat3(-3.6, -4585.5322, 1403.9598, -1.4, 2.2, 23.76, 48.99, -6.5, -14.51)))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 66:
             case 49:
             case 89:
             case 19:
             case 56:
             case 87:
             case 73:
             case 21:
             case 5:
             mat3x2 _GLF_SWITCH_12_18v;
             break;
             case 55:
             ivec4(93651, -46786, 93164, 7518)[3];
             case 93:
             ;
             default:
             1;
            }
          }
         {
          vec2(-9.3, 8.1);
          uvec2 _GLF_SWITCH_12_19v, _GLF_SWITCH_12_20v[21];
          ;
          uvec2 _GLF_SWITCH_12_21v, _GLF_SWITCH_12_22v;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            mat3(mat4x2(180.933, -429.665, 159.528, -7322.4948, -11.63, -361.761, -1.8, -2.7));
           }
          else
           {
           }
          do
           {
            (++ GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base);
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          mat3 _GLF_SWITCH_12_23v, _GLF_SWITCH_12_24v;
          do
           {
            (-42.67 - (_GLF_SWITCH_12_24v / _GLF_SWITCH_12_23v));
           }
          while(_GLF_WRAPPED_LOOP(false));
         }
         _GLF_SWITCH_12_5v;
         if((-705.189 < -62.13))
          {
           bvec2(true, false);
           7476.4936;
           mat4x3 _GLF_SWITCH_12_25v, _GLF_SWITCH_12_26v[2], _GLF_SWITCH_12_27v;
           mix(bvec3(false, true, true), bvec3(false, false, true), _GLF_SWITCH_12_3v);
           mat4x2((3.0 - mat4(69.79, 316.457, -21.48, 5845.9853, 5.9, 499.967, -1.7, 0.2, -4.8, -48.33, -6.8, 7.5, -1507.7939, 562.213, -5.4, 67.77)));
           ivec2 _GLF_SWITCH_12_28v[61];
          }
         while(true)
          {
           int _GLF_SWITCH_12_29v;
           (+ mat4x2(-6.1, -3.4, 1.1, 5.0, 57.68, 4.8, 994.376, 6396.1693));
           uvec2 _GLF_SWITCH_12_30v[19], _GLF_SWITCH_12_31v;
           vec4 _GLF_SWITCH_12_32v, _GLF_SWITCH_12_33v;
           ivec3(ivec2(-92623, 6772), _GLF_SWITCH_12_29v);
           uvec4(124998u, 18709u, 65607u, 196288u);
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           while((_GLF_SWITCH_12_3v != _GLF_SWITCH_12_5v))
            {
            }
          }
         uint _GLF_SWITCH_12_34v[38], _GLF_SWITCH_12_35v[98];
         (-5445.5563 / mat2x3(3.2, -3878.1952, -4.2, -700.961, 2.8, -7.8));
        }
       bvec2 _GLF_SWITCH_12_36v, _GLF_SWITCH_12_37v, _GLF_SWITCH_12_38v;
       {
        for(        subgroup_size;
 (mat3(mat2x3(_GLF_IDENTITY(-41.97, (true ? -41.97 : _GLF_FUZZED(19.80))), -6516.5681, -4.9, 9.9, 61.91, 41.18)) == mat3(9.5, -3.4, 63.65, -126.343, -2247.8160, -2001.7678, 6515.4968, 0.3, -1110.6829)); ivec2(29831, 39323))
         {
          mat3x2 _GLF_SWITCH_12_39v[63], _GLF_SWITCH_12_40v, _GLF_SWITCH_12_41v[68];
          bvec4 _GLF_SWITCH_12_42v, _GLF_SWITCH_12_43v;
          mat2x4 _GLF_SWITCH_12_44v[75], _GLF_SWITCH_12_45v;
          mat4 _GLF_SWITCH_12_46v[91];
          mat4x3 _GLF_SWITCH_12_47v[55];
          mat2x3 _GLF_SWITCH_12_48v, _GLF_SWITCH_12_49v;
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
           {
            clamp(_GLF_SWITCH_12_6v, vec4(3934.3923, -585.186, 0.9, 844.768), _GLF_SWITCH_12_6v);
           }
          lessThanEqual(_GLF_SWITCH_12_2v, _GLF_SWITCH_12_6v);
         }
        do
         {
         }
        while((_GLF_IDENTITY(ivec3(-75354, -80522, -86022) == (ivec3(20765, -69102, 94821) * ivec3(89891, 41675, -2620)), (ivec3(-75354, -80522, -86022) == (ivec3(20765, -69102, 94821) * ivec3(89891, 41675, -2620))) || false)));
        mat4 _GLF_SWITCH_12_50v;
        mat2x4(575.474, 3.5, 314.678, -9.5, 7.3, -283.592, -83.57, 0.9);
       }
       while((vec3(-3.6, -5.2, 1.8) != mix(vec3(2005.8544, 961.347, -0.4), vec3(93.23, 2.8, 8456.7166), 0.8)))
        {
         uint _GLF_SWITCH_12_51v[34], _GLF_SWITCH_12_52v[48], _GLF_SWITCH_12_53v[65];
         if(true)
          {
           mat3x4(7252.3778, -1.6, -2416.3619, -285.622, -7.1, -620.172, -6766.9905, 288.028, -395.367, -6.9, -783.900, 29.04);
           ;
           bvec4(false, true, true, false);
           (- mat4(-4173.6873, 18.30, 601.175, -0.8, 943.753, -5191.2976, 5.9, -8.0, -3614.9131, -1.3, -5.3, 7.2, 2.7, 998.416, -5.8, 52.83));
           ivec3 _GLF_SWITCH_12_54v, _GLF_SWITCH_12_55v;
           atomicCompSwap(subgroup_id, 14355u, (subgroup_id ^ subgroup_size));
           _GLF_SWITCH_12_2v;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           uvec4(94295u, 94888u, 170718u, 88213u);
          }
         else
          {
          }
         {
          mat2x3(-1.8, 1.1, -63.10, 8.9, -61.23, -400.600);
          (mat4(-6369.4325, -5978.4721, 7476.0062, 7.2, -83.84, 9.0, -989.800, -0.0, 511.187, 9.4, 1.9, -328.545, -23.52, -8.2, -9263.0109, -4.7) - mat4(-322.750, 343.016, 6.6, -4.3, -89.17, 5.4, 53.61, -1.3, 783.504, 1480.7597, -8306.8614, -5479.8911, -4385.2164, 508.865, -274.913, 729.407));
         }
         (mat2(995.133, 7.6, -7.4, -2.2));
        }
      }
     case 0:
     case 11:
     case 72:
     case 89:
     case 21:
     case 8:
     case 17:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) & (_GLF_IDENTITY(+ 215, min(+ 215, + 215))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           switch(_GLF_SWITCH((1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))))
            {
             case 56:
             for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), int(7))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), int(int(int(8))))) ^ 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) ? _injected_loop_counter : _GLF_FUZZED(-58357))) != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)))))))))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)))))))))) && _GLF_IDENTITY(true, (true) && true))), (! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1), false || ((_injected_loop_counter != 1))))))) && true)))))))))) && true))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)))))))))) && _GLF_IDENTITY(true, (true) && true))), (! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1), false || ((_injected_loop_counter != 1))))))) && true)))))))))) && true))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)))))))))) && _GLF_IDENTITY(true, (true) && true))), (! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1), false || ((_injected_loop_counter != 1))))))) && true)))))))))) && true))) && true)), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)))))))))) && _GLF_IDENTITY(true, (true) && true))), (! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1), false || ((_injected_loop_counter != 1))))))) && true)))))))))) && true))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)))))))))) && _GLF_IDENTITY(true, (true) && true))), (! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1), ! (! (_GLF_IDENTITY((_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) && true)), ! (! (! (_GLF_IDENTITY((_injected_loop_counter != 1), (_GLF_IDENTITY((_injected_loop_counter != 1), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 1), false || ((_injected_loop_counter != 1))))))) && true)))))))))) && true))) && true)), false, true)))))))) || false)))); _injected_loop_counter ++)
              {
               {
                for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 26:
                    equal(_GLF_IDENTITY(vec3(-68.61, -91.95, 764.059).yz, (vec3(-68.61, -91.95, 764.059).yz) * mat2(1.0)), injectionSwitch);
                    case 0:
                    case 55:
                    ivec3(73650, 55110, _GLF_IDENTITY(-12674, (-12674) - 0));
                    case 33:
                    mat3 _GLF_SWITCH_2_0v;
                    case 73:
                    case 95:
                    bitfieldReverse((uvec2(133591u, 73053u) << uvec2(76109u, 130546u)));
                    case 68:
                    _GLF_IDENTITY(mat4(0.0, -9.2, 3.9, -1.2, 8551.9183, 6.0, _GLF_IDENTITY(-9.0, mix(float(-9.0), float(_GLF_FUZZED(7602.1388)), bool(false))), 4299.0810, 26.89, 64.85, 4474.6655, -515.096, -59.63, 438.859, -37.51, 7069.9605), (mat4(0.0, -9.2, 3.9, -1.2, 8551.9183, 6.0, _GLF_IDENTITY(-9.0, mix(float(-9.0), float(_GLF_FUZZED(_GLF_IDENTITY(7602.1388, min(_GLF_IDENTITY(7602.1388, min(7602.1388, 7602.1388)), 7602.1388)))), bool(false))), 4299.0810, 26.89, 64.85, 4474.6655, _GLF_IDENTITY(-515.096, float(mat4x2(-515.096, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), -59.63, 438.859, -37.51, 7069.9605)) + mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0) * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)));
                    break;
                    default:
                    _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (_GLF_IDENTITY(1, min(1, 1))));
                   }
                 }
               }
               if((mat2x4(57.76, 5.5, 7.3, 6.1, 5.7, -1240.1751, 423.800, -925.179) != mat2x4(4735.0122, -9.5, 1.9, _GLF_IDENTITY(_GLF_IDENTITY(5951.1400, mix(float(_GLF_IDENTITY(5951.1400, min(5951.1400, 5951.1400))), float(_GLF_FUZZED(1.2)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))))), clamp(5951.1400, 5951.1400, _GLF_IDENTITY(5951.1400, min(5951.1400, 5951.1400)))), -175.193, -26.10, -3590.1904, 2.9)))
                {
                 switch(_GLF_SWITCH(((0 & (- -87208)) | 0)))
                  {
                   case 31:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     bvec2(true, true);
                    }
                   case 0:
                   case 91:
                   case 32:
                   case 85:
                   case 20:
                   case 65:
                   case 79:
                   case 53:
                   case 81:
                   case 34:
                   switch(_GLF_SWITCH(0))
                    {
                     case 66:
                     greaterThan(ivec2(94247, -14503), ivec2(26834, 96908));
                     case 16:
                     mat2x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[31], _GLF_SWITCH_4_2v;
                     case 0:
                     case 29:
                     clamp(ivec2(25007, -17866), _GLF_IDENTITY(ivec2(-89639, 31369), max(_GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), _GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-89639, _GLF_IDENTITY(31369, int(ivec2(31369, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(ivec2(-89639, 31369), _GLF_IDENTITY(ivec2(-89639, 31369), max(ivec2(-89639, 31369), ivec2(-89639, 31369))))), (_GLF_IDENTITY(ivec2(-89639, _GLF_IDENTITY(31369, int(ivec2(31369, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-784.978) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), min(ivec2(-89639, 31369), _GLF_IDENTITY(ivec2(-89639, 31369), max(ivec2(-89639, 31369), ivec2(-89639, 31369)))))) - ivec2(0, 0))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), clamp((true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(0, 0) ^ ((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), _GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), (false ? _GLF_FUZZED(ivec2(-45142, -24619)) : _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), ((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369))))) - ivec2(0, 0)))) >> _GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | ivec2(0, 0)), ivec2(ivec2((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (77266 & 0), 1)))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), ~ (~ ((true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), (false ? _GLF_FUZZED(ivec2(-45142, -24619)) : _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), ((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369))))) - ivec2(0, 0)))) >> _GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | ivec2(0, 0)), ivec2(ivec2((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (77266 & 0), 1)))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038)))))), (true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), clamp((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038)))))), max((_GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, _GLF_IDENTITY(31369, _GLF_IDENTITY(int(ivec2(31369, int(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(int(ivec2(31369, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(31369, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(31369, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), min(ivec2(-89639, 31369), _GLF_IDENTITY(ivec2(-89639, 31369), max(ivec2(-89639, 31369), ivec2(-89639, 31369)))))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), clamp((true ? _GLF_IDENTITY(ivec2(_GLF_IDENTITY(-89639, clamp(-89639, -89639, _GLF_IDENTITY(-89639, (-89639) | (-89639)))), 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-89639, clamp(-89639, -89639, _GLF_IDENTITY(-89639, (-89639) >> 0))), 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(0, 0) ^ ((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), (true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec2((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (77266 & 0), 1)))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), (true ? _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038)))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, _GLF_IDENTITY(31369, int(ivec2(_GLF_IDENTITY(31369, (31369) | (31369)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(ivec2(-89639, 31369), _GLF_IDENTITY(ivec2(-89639, 31369), max(ivec2(-89639, 31369), ivec2(-89639, 31369)))))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), clamp((true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))) ^ ((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), (true ? _GLF_IDENTITY(ivec2(-89639, 31369), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec2((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (77266 & 0), 1))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec2((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (77266 & 0), 1)))) | (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ivec2(ivec2((_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (77266 & 0), 1)))))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), (true ? _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038)))))))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(ivec2(-89639, 31369), (_GLF_IDENTITY(ivec2(-89639, 31369), min(ivec2(-89639, 31369), ivec2(-89639, 31369)))) >> ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(8512, (8512) / 1), 98038)))) + ivec2(0, 0))))), ivec2(-89639, 31369))), ivec2(60571, 33634));
                     case 72:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), clamp(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), _GLF_IDENTITY(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), clamp(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1))), ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1, 1)))))); _injected_loop_counter --)
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             uvec2(149751u, 157456u);
                            }
                           else
                            {
                            }
                           break;
                           default:
                           1;
                          }
                        }
                      }
                     case 39:
                     case 62:
                     ;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 70:
                         61685;
                         case 0:
                         max(ivec4(_GLF_IDENTITY(-68887, int(ivec3(-68887, 0, 0))), 96287, -805, 51146), -91448);
                         break;
                         case 51:
                         uvec3 _GLF_SWITCH_13_0v[7], _GLF_SWITCH_13_1v[46];
                         case 30:
                         (~ (subgroup_size - uvec2(144811u, 173973u)));
                         default:
                         1;
                        }
                      }
                     case 51:
                     _GLF_IDENTITY(ivec4(-21147, -72648, 89012, -60050), ~ (~ (ivec4(-21147, -72648, 89012, -60050))));
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (1 & 1) * (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))))
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), int(7)))))
                        {
                         case 6:
                         bvec4 _GLF_SWITCH_13_0v;
                         case 44:
                         mat4x2 _GLF_SWITCH_13_1v, _GLF_SWITCH_13_2v, _GLF_SWITCH_13_3v[87];
                         case 0:
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(473.980)), float(injectionSwitch.y), bool(true))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(473.980)), float(injectionSwitch.y), bool(true))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 1.0)) * mat4(1.0))))))))
                          {
                          }
                         else
                          {
                           switch(_GLF_SWITCH(((0 | 0) >> _GLF_IDENTITY(int(3), int(3)))))
                            {
                             case 0:
                             case 30:
                             case 35:
                             case 38:
                             case 7:
                             case 29:
                             case 63:
                             case 34:
                             uvec3(80322u);
                             break;
                             default:
                             1;
                            }
                          }
                         break;
                         default:
                         1;
                        }
                      }
                     break;
                     case 71:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       ;
                      }
                     default:
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
                      {
                       1;
                      }
                    }
                   break;
                   default:
                   1;
                  }
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 94:
                   mat4x3 _GLF_SWITCH_9_0v[62], _GLF_SWITCH_9_1v[69], _GLF_SWITCH_9_2v;
                   case 0:
                   case 25:
                   case 68:
                   switch(_GLF_SWITCH(0))
                    {
                     case 96:
                     mat3x4 _GLF_SWITCH_3_0v;
                     case 0:
                     case 33:
                     case 97:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 67:
                             case 94:
                             case 31:
                             case 97:
                             case 49:
                             case 2:
                             case 58:
                             case 11:
                             case 90:
                             switch(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(54623) : 0)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(54623) : 0))) << (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(int(int(8)))))))))
                              {
                               case 0:
                               case 90:
                               case 80:
                               case 3:
                               ((80102u) , mat3(_GLF_IDENTITY(-751.868, 0.0 + (-751.868)), -7.9, -340.724, -7435.4072, -2.5, _GLF_IDENTITY(5.9, max(_GLF_IDENTITY(5.9, min(5.9, 5.9)), 5.9)), -605.843, -9635.9054, 56.64));
                               break;
                               case 43:
                               bvec3(false, false, false);
                               default:
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   switch(_GLF_SWITCH((((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5))) ^ 1)))
                                    {
                                     case 0:
                                     case 5:
                                     case 57:
                                     case 46:
                                     case 14:
                                     case 83:
                                     case 55:
                                     case 79:
                                     case 84:
                                     1;
                                     break;
                                     case 20:
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       do
                                        {
                                         _GLF_IDENTITY(step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12)), min(_GLF_IDENTITY(step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12)), mix(vec4((step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12)))[0], _GLF_FUZZED(353.969), _GLF_FUZZED(-2.0), _GLF_FUZZED(-3415.1227)), vec4(_GLF_FUZZED(2.7), (step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12)))[1], (step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12)))[2], (step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12)))[3]), bvec4(false, true, true, true))), step(-7.3, vec4(-7735.7412, 7.7, 776.426, 34.12))));
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                      }
                                     else
                                      {
                                      }
                                     default:
                                     1;
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             break;
                             default:
                             1;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     break;
                     case 8:
                     _GLF_IDENTITY((ivec4(-24045, -74119, _GLF_IDENTITY(31287, max(_GLF_IDENTITY(31287, 0 ^ (31287)), 31287)), 11098) != ivec4(64829, -1886, 6066, -4048)), ((ivec4(-24045, -74119, _GLF_IDENTITY(31287, max(_GLF_IDENTITY(31287, 0 ^ (31287)), 31287)), 11098) != ivec4(64829, -1886, 6066, -4048))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)));
                     default:
                     _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) + 0);
                    }
                   break;
                   case 19:
                   vec2(-372.747, -41.36);
                   case 79:
                   vec3(-2461.2635, 30.85, _GLF_IDENTITY(-9339.9020, (-9339.9020) * 1.0));
                   default:
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
                      {
                       case 39:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         ;
                        }
                       else
                        {
                        }
                       case 0:
                       case 68:
                       case 21:
                       case 5:
                       case 38:
                       case 85:
                       case 96:
                       1;
                       break;
                       case 78:
                       ;
                       case 9:
                       ivec4 _GLF_SWITCH_11_0v, _GLF_SWITCH_11_1v[83], _GLF_SWITCH_11_2v;
                       default:
                       1;
                      }
                    }
                  }
                }
               bvec3 _GLF_SWITCH_2_1v[27], _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (_GLF_IDENTITY(int(8), (int(8)) | (int(8)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH((0 & -35117)))
                      {
                       case 75:
                       mat3 _GLF_SWITCH_10_0v, _GLF_SWITCH_10_1v, _GLF_SWITCH_10_2v[18];
                       case 22:
                       int _GLF_SWITCH_10_3v;
                       case 0:
                       case 5:
                       case 48:
                       case 74:
                       case 53:
                       case 47:
                       case 93:
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(                           ivec4(-96022, -110, 46461, -70368);
 _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false)))[1]; vec3(-866.815, -38.78, 3.1))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 94:
                               case 8:
                               case 26:
                               ((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base | _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, uvec3(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base[0], GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base[1], GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base[2])))))) ^ uvec3(60750u, _GLF_IDENTITY(139284u, ~ (_GLF_IDENTITY(~ (139284u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)) + (~ (139284u))))), 128848u));
                               case 88:
                               case 41:
                               case 58:
                               uvec3 _GLF_SWITCH_2_4v;
                               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
                                {
                                 do
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 31:
                                     mat2x4 _GLF_SWITCH_12_0v[60], _GLF_SWITCH_12_1v, _GLF_SWITCH_12_2v;
                                     case 0:
                                     case 19:
                                     case 86:
                                     case 25:
                                     case 29:
                                     case 52:
                                     case 85:
                                     case 76:
                                     case 55:
                                     case 79:
                                     for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), 1 * ((0 << _GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       outerProduct(vec3(-385.237, -7.1, -4.6), injectionSwitch);
                                      }
                                     break;
                                     case 45:
                                     90493;
                                     case 57:
                                     uvec3(97455u, 13261u, 50235u);
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                               break;
                               case 66:
                               equal(bvec2(false, true), notEqual(ivec2(20306, 38719), (ivec2(41437, 88062) - _injected_loop_counter)));
                               default:
                               1;
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       break;
                       case 7:
                       _GLF_SWITCH_2_2v;
                       case 27:
                       bvec2 _GLF_SWITCH_10_4v, _GLF_SWITCH_10_5v, _GLF_SWITCH_10_6v;
                       default:
                       _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)));
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(mat3x4 _GLF_SWITCH_2_5v[8], _GLF_SWITCH_2_6v; ((- mat2(_GLF_IDENTITY(7.2, max(7.2, 7.2)), 2.4, -13.49, -2.2)) == (-165.890 / _GLF_IDENTITY(mat2(-2454.0318, -4.5, 3765.5153, -0.0), mat2(mat4x2(_GLF_IDENTITY(mat2(-2454.0318, -4.5, 3765.5153, -0.0), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)) * (mat2(-2454.0318, -4.5, 3765.5153, -0.0)))))))); (- ivec4(_GLF_IDENTITY(88396, int(_GLF_IDENTITY(ivec3(88396, 1, 1), min(ivec3(88396, 1, 1), ivec3(88396, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) / 1)))))), -29597, -40267, -66333)))
                {
                 switch(_GLF_SWITCH((_GLF_IDENTITY(0, max(0, 0)) | 0)))
                  {
                   case 8:
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))), (_GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0))))))) << 0))); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 27:
                       case 21:
                       case 90:
                       case 1:
                       case 11:
                       case 67:
                       case 75:
                       case 20:
                       bvec4(false, false, false, false);
                       break;
                       case 32:
                       mat2x3 _GLF_SWITCH_12_0v, _GLF_SWITCH_12_1v, _GLF_SWITCH_12_2v;
                       case 35:
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         reflect(vec3(914.304, -5.8, -775.770), vec3(-56.68, _GLF_IDENTITY(-4.2, max(_GLF_IDENTITY(-4.2, float(mat4x2(-4.2, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0))), -4.2)), 686.424));
                        }
                       default:
                       1;
                      }
                    }
                   case 0:
                   case 5:
                   case 34:
                   case 97:
                   7.0;
                   case 3:
                   case 87:
                   vec3 _GLF_SWITCH_2_7v;
                   case 49:
                   case 53:
                   case 45:
                   case 98:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     _GLF_IDENTITY(_GLF_IDENTITY(uvec3(185000u, 118057u, 194423u), (uvec3(185000u, 118057u, 194423u)) ^ uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec3(185000u, _GLF_IDENTITY(118057u, uint(_GLF_IDENTITY(uint(118057u), max(uint(118057u), uint(118057u))))), 194423u), (_GLF_IDENTITY(uvec3(185000u, 118057u, 194423u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u))))), clamp(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u))))), ~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, _GLF_IDENTITY(194423u, max(194423u, 194423u))))))), ~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u)), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) | (uvec3(185000u, 118057u, 194423u))))))))))) | uvec3(0u, 0u, 0u)))));
                    }
                   break;
                   case 90:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     mat3x2(_GLF_IDENTITY(1467.4660, (true ? _GLF_IDENTITY(1467.4660, (true ? 1467.4660 : _GLF_FUZZED(-48.10))) : _GLF_FUZZED(7543.5418))), 9326.9690, _GLF_IDENTITY(7.1, mix(float(_GLF_IDENTITY(7.1, (false ? _GLF_FUZZED(998.158) : 7.1))), float(_GLF_FUZZED(-1527.6454)), bool(false))), 0.7, -159.245, -7.1);
                    }
                   else
                    {
                    }
                   default:
                   1;
                  }
                }
              }
             case 0:
             case 84:
             case 47:
             case 80:
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size) ^ 0u);
              }
             break;
             default:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               1;
              }
             else
              {
              }
            }
          }
        }
      }
     break;
     case 92:
     (uvec2(24110u, 9759u) - uvec2(110677u, 189590u));
     default:
     1;
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), workgroup_id));
 do
  {
   _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = workgroup_base))) * (1u | 1u));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + subgroup_local_id;
 do
  {
   GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z) - 0u) + subgroup_id * GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x) - 0u) + ((subgroup_local_id + 1) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) >> 0u), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
 uint read = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))) ^ 0))), 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(read))) < GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)
  {
   switch(_GLF_SWITCH(0))
    {
     case 80:
     uvec3(75174u, 12450u, 165715u);
     case 0:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 48:
           case 37:
           switch(_GLF_SWITCH(0))
            {
             case 15:
             while((isinf(vec3(5.8, 9.0, -3.0)) , false))
              {
               mat2x3(-61.26, 1.2, 1.0, 6.4, 7728.1628, -5.0);
               ivec2 _GLF_SWITCH_6_0v[94], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
               ;
               do
                {
                 subgroup_size;
                }
               while(_GLF_WRAPPED_LOOP(false));
               ;
               mat4x3 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v, _GLF_SWITCH_6_5v;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 ivec3(_GLF_IDENTITY(14940, (_GLF_IDENTITY(14940, ~ (~ _GLF_IDENTITY((14940), ~ (~ ((14940))))))) | 0), -62667, 66707);
                }
              }
             case 0:
             case 25:
             case 95:
             case 58:
             case 96:
             case 47:
             case 21:
             case 19:
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     switch(_GLF_SWITCH(_GLF_IDENTITY(_GLF_IDENTITY(0, (0 ^ 1) * (0)), min(_GLF_IDENTITY(0, (0 ^ 1) * (0)), _GLF_IDENTITY(0, (0 ^ 1) * (0))))))
                      {
                       case 0:
                       case 49:
                       case 22:
                       case 32:
                       case 67:
                       case 29:
                       case 89:
                       case 11:
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 39:
                           ;
                           case 23:
                           vec2 _GLF_SWITCH_12_0v, _GLF_SWITCH_12_1v[68], _GLF_SWITCH_12_2v;
                           case 0:
                           case 3:
                           case 12:
                           case 31:
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 33:
                             case 82:
                             case 6:
                             case 60:
                             case 62:
                             case 80:
                             case 98:
                             atomicStore(checker[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], read, 4, 64, 4);
                             break;
                             case 67:
                             -49072;
                             case 83:
                             mat4x2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                             default:
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               1;
                              }
                            }
                           break;
                           case 10:
                           mat4(-2.4, 8.2, -3.1, 1.5, -6.8, 6.6, 7102.0084, 8.5, 4.6, 4.1, -803.805, 5.0, -6115.9354, 418.290, 3.1, 8.4);
                           case 27:
                           mat4x2(8.6, 76.34, 698.857, 7.7, -6.9, 3806.5060, 649.945, 201.350);
                           default:
                           1;
                          }
                        }
                       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
                       break;
                       case 99:
                       mat2x4(310.392, -2241.3377, -2.4, 857.815, 81.02, 79.54, 69.06, -8511.8003);
                       case 38:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         mat3(2.2, 2.8, -266.794, 3.9, -1.0, -54.58, -155.324, 74.82, -30.44);
                        }
                       default:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         1;
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
             break;
             default:
             _GLF_IDENTITY(1, (1) - 0);
            }
           break;
           case 3:
           (mat4x2(-13.38, -32.85, -89.93, 975.550, -4.4, -14.94, 3103.5670, -1.5));
           default:
           1;
          }
        }
      }
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 84:
         bool _GLF_SWITCH_13_0v[39], _GLF_SWITCH_13_1v[14];
         case 78:
         if(false)
          {
           ivec2(-83221, 71992)[0];
           uvec4 _GLF_SWITCH_13_2v, _GLF_SWITCH_13_3v[61];
           _GLF_SWITCH_13_2v;
           float _GLF_SWITCH_13_4v, _GLF_SWITCH_13_5v, _GLF_SWITCH_13_6v;
           ;
           36519u;
           ivec3(-16914);
           (mat2(-9.4, 5581.0404, -2116.7727, 1.4) * mat2(-8271.0444, -2692.4292, -2.6, 2.4));
          }
         case 0:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * exp(0.0)), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 1.0, 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0))))).x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * exp(0.0)), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 1.0, 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0))))).x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * exp(0.0)), 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0)), max(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 1.0, 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0))))).x < injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * sqrt(1.0)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))
          {
           switch(_GLF_SWITCH(0))
            {
             case 27:
             {
              bvec2 _GLF_SWITCH_11_0v[90];
              int _GLF_SWITCH_11_1v, _GLF_SWITCH_11_2v;
             }
             case 0:
             case 17:
             case 73:
             case 37:
             case 86:
             subgroupAll(false);
             break;
             default:
             1;
            }
          }
         else
          {
          }
         break;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
     case 1:
     _GLF_IDENTITY(mix(uvec2(165574u, 170163u), uvec2(139973u, 62909u), bvec2(false, false)), uvec2(uvec3(mix(uvec2(165574u, 170163u), uvec2(139973u, 62909u), bvec2(false, false)), 1u)));
     case 43:
     while(false)
      {
       switch(_GLF_SWITCH(0))
        {
         case 35:
         for(         vec2(-1.6, 482.795);
 false; bitfieldInsert(22969, (-44372), -53055, -54554))
          {
           mat4x2(-3062.2432, -0.9, 85.94, -1048.3353, -5.7, 8.0, -2.2, -31.17);
           mat4x2 _GLF_SWITCH_7_0v[80], _GLF_SWITCH_7_1v;
           bvec3 _GLF_SWITCH_7_2v[68], _GLF_SWITCH_7_3v, _GLF_SWITCH_7_4v;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             vec4(-70.01, -200.345, -3.6, -595.634);
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(-47166)))); _injected_loop_counter ++)
            {
             switch(_GLF_SWITCH(0))
              {
               case 9:
               (-58.05 / mat2x3(8142.7249, -7.7, -244.478, 137.305, -546.217, 442.281));
               case 15:
               vec2 _GLF_SWITCH_8_0v[72];
               case 0:
               case 33:
               case 57:
               case 59:
               case 85:
               case 6:
               (((_GLF_SWITCH_7_4v != _GLF_SWITCH_7_3v) ? mat2x4(3.0, 1.6, 296.660, -9671.3167, -71.55, -7265.4700, -430.203, 23.41) : mat2x4(-9.1, _GLF_IDENTITY(-6.2, min(-6.2, -6.2)), 2291.7731, -6474.1430, -5.5, -6.1, 4581.3572, -8.4)) != (+ mat2x4(-701.460, 6590.7605, 5.6, 91.51, -2118.1541, -4098.8944, 918.077, 525.847)));
               break;
               default:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 1;
                }
               else
                {
                }
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             _GLF_IDENTITY(sinh(degrees(vec3(-4.4, 0.8, -6.3))), vec3(vec3(sinh(degrees(vec3(-4.4, 0.8, -6.3))))));
            }
           else
            {
            }
           mat3 _GLF_SWITCH_7_5v;
          }
         case 92:
         ;
         case 0:
         case 45:
         switch(_GLF_SWITCH(0))
          {
           case 59:
           mat3x4 _GLF_SWITCH_2_0v[52];
           case 31:
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
            {
             mat4(-71.29, 852.552, 1.9, _GLF_IDENTITY(75.37, min(75.37, 75.37)), 3021.8657, -7.5, -47.71, _GLF_IDENTITY(-6035.1515, (true ? _GLF_IDENTITY(-6035.1515, 0.0 + (-6035.1515)) : _GLF_FUZZED(tan(7101.5298)))), 3.9, -7.3, 9324.4510, 2.7, -0.3, 84.03, -38.29, 5384.6025);
            }
           case 0:
           case 1:
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(float _GLF_SWITCH_1_0v; (vec4(637.749, _GLF_IDENTITY(-9.1, mix(float(_GLF_FUZZED(-5.0)), float(_GLF_IDENTITY(-9.1, float(mat2(-9.1, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, 1.0, 0.0, 0.0))[0], (vec4(0.0, 1.0, 0.0, 0.0))[1], (vec4(0.0, 1.0, 0.0, 0.0))[2], _GLF_FUZZED(-2.1)), vec4(_GLF_FUZZED(5708.2027), _GLF_FUZZED(-8.6), _GLF_FUZZED(-39.57), (vec4(0.0, 1.0, 0.0, 0.0))[3]), bvec4(false, false, false, true))), vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0)))), bool(true))), 5.1, 629.965) == max(vec4(7.1, 3.5, _GLF_IDENTITY(-2109.7722, _GLF_IDENTITY((-2109.7722) * 1.0, max((-2109.7722) * 1.0, (-2109.7722) * 1.0))), -553.272), tan(_GLF_SWITCH_1_0v))); mat3x4(2.9, 4420.2713, -1.4, -5.3, -5459.9968, 6.9, -3.1, 27.91, -23.88, -102.607, 1.3, -6.6))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 19:
                     vec3 _GLF_SWITCH_10_0v[27], _GLF_SWITCH_10_1v, _GLF_SWITCH_10_2v[55];
                     case 0:
                     case 8:
                     case 21:
                     case 86:
                     case 54:
                     case 12:
                     case 99:
                     case 84:
                     case 14:
                     case 49:
                     switch(_GLF_SWITCH(0))
                      {
                       case 76:
                       (_GLF_SWITCH_1_0v - mat4x2(-9.9, -359.995, -5.2, -4883.3246, 56.76, 3621.2573, 13.36, 4.5));
                       case 0:
                       case 30:
                       case 43:
                       case 98:
                       switch(_GLF_SWITCH((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0)))
                        {
                         case 75:
                         ivec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[43];
                         case 0:
                         case 42:
                         case 97:
                         mat2 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v;
                         case 14:
                         case 18:
                         case 76:
                         case 8:
                         mat4x2 _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v[52], _GLF_SWITCH_1_6v[60];
                         case 27:
                         do
                          {
                           switch(_GLF_SWITCH((0 | 0)))
                            {
                             case 0:
                             case 92:
                             case 94:
                             case 28:
                             case 24:
                             case 71:
                             case 47:
                             case 49:
                             case 57:
                             if(_GLF_IDENTITY((mat2x4(102.818, 2565.8510, -0.8, 177.760, 80.14, -3.0, -23.69, _GLF_IDENTITY(3591.4531, float(mat3(_GLF_IDENTITY(3591.4531, float(mat3x2(3591.4531, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-250.950)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0)), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) == mat2x4(_GLF_IDENTITY(4.6, max(4.6, 4.6)), -0.6, 912.284, -8.4, 3.2, -4.8, -25.35, -99.97)), ! (_GLF_IDENTITY(! ((mat2x4(102.818, 2565.8510, -0.8, 177.760, 80.14, -3.0, -23.69, _GLF_IDENTITY(3591.4531, float(mat3(_GLF_IDENTITY(3591.4531, float(mat3x2(3591.4531, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) == mat2x4(4.6, -0.6, 912.284, -8.4, 3.2, -4.8, -25.35, -99.97))), bool(bvec3(! ((mat2x4(102.818, 2565.8510, -0.8, 177.760, 80.14, -3.0, -23.69, _GLF_IDENTITY(3591.4531, float(mat3(_GLF_IDENTITY(3591.4531, float(mat3x2(3591.4531, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))) == mat2x4(4.6, -0.6, 912.284, -8.4, 3.2, -4.8, -25.35, -99.97))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 98:
                                 bvec2(false, false);
                                 case 97:
                                 mat4 _GLF_SWITCH_13_0v[27], _GLF_SWITCH_13_1v[66], _GLF_SWITCH_13_2v;
                                 case 0:
                                 case 46:
                                 case 72:
                                 case 96:
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 96:
                                   mat4 _GLF_SWITCH_11_0v[60];
                                   case 27:
                                   equal(vec4(8954.2208, 7827.0988, 1.3, 42.44), vec4(-2322.2933, -3.3, -3.7, 3136.5290));
                                   case 0:
                                   case 1:
                                   case 44:
                                   switch(_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6))))) / 1)) - 0))
                                    {
                                     case 0:
                                     case 27:
                                     case 38:
                                     mat2x4 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v[1];
                                     break;
                                     case 91:
                                     vec4 _GLF_SWITCH_5_0v;
                                     case 17:
                                     mat4x3 _GLF_SWITCH_5_1v[15], _GLF_SWITCH_5_2v;
                                     default:
                                     1;
                                    }
                                   break;
                                   default:
                                   1;
                                  }
                                 break;
                                 case 58:
                                 vec3(2.3, 5799.0764, -1.5);
                                 case 17:
                                 int _GLF_SWITCH_13_3v, _GLF_SWITCH_13_4v[34];
                                 default:
                                 1;
                                }
                              }
                             break;
                             case 68:
                             mat4x2 _GLF_SWITCH_8_0v;
                             case 89:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               num_workgroup;
                              }
                             default:
                             1;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         break;
                         case 72:
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             ((uvec4(32128u, 37278u, 96814u, 171458u) * uvec4(174354u, 150109u, 6139u, 191568u)) == uvec4(177092u, 81372u, 142917u, 172775u));
                            }
                           else
                            {
                            }
                          }
                         default:
                         1;
                        }
                       break;
                       case 8:
                       ;
                       default:
                       1;
                      }
                     break;
                     default:
                     1;
                    }
                  }
                }
              }
            }
           case 30:
           case 34:
           case 67:
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 6:
              mat2(-42.20, -682.317, -1.8, -9751.6569);
              case 0:
              case 70:
              case 64:
              case 67:
              case 56:
              case 89:
              case 10:
              case 91:
              case 69:
              bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false))))), true && (bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false))))))))), false);
              break;
              default:
              1;
             }
           }
           break;
           case 55:
           mat2(-7.2, 1.9, 3694.7038, -378.001);
           default:
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))
            {
             1;
            }
           else
            {
            }
          }
         break;
         default:
         1;
        }
      }
     default:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       1;
      }
    }
  }
 else
  {
   switch(_GLF_IDENTITY(_GLF_SWITCH((0 | 0)), min(_GLF_SWITCH((0 | 0)), _GLF_SWITCH((_GLF_IDENTITY(0 | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(76553) : 0)))), max(0 | 0, 0 | 0)))))))
    {
     case 12:
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 77:
         ivec2(30843, -93048);
         case 0:
         case 91:
         do
          {
           (87732 ^ -39674);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         break;
         case 69:
         do
          {
           (vec2(226.795, 4.3) + -7.8);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))));
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     case 0:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base) + uvec3(0u, 0u, 0u)).y], read, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(max(27935, 5046)) : _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) | (64)))))), 4);
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       switch(_GLF_SWITCH((1 ^ 1)))
        {
         case 12:
         (_injected_loop_counter , mat4(5.6, -6231.5874, -4.2, -98.39, -6.6, -4637.7597, -7.3, 409.066, 2154.7227, 33.08, -23.50, -91.19, -5.6, _GLF_IDENTITY(-50.18, 1.0 * (-50.18)), 0.5, -6.6));
         case 17:
         mat2x3 _GLF_SWITCH_11_0v, _GLF_SWITCH_11_1v;
         case 0:
         case 61:
         case 62:
         case 27:
         case 69:
         case 37:
         case 99:
         case 94:
         case 63:
         case 40:
         subgroupAll(true);
         break;
         default:
         1;
        }
      }
     break;
     case 73:
     if((_GLF_IDENTITY((+ vec3(-2.0, 4782.0136, 1.9)), mat3(1.0) * ((+ vec3(-2.0, 4782.0136, 1.9)))) == _GLF_IDENTITY(vec3(1.7, 7183.5639, -4384.1614), (vec3(1.7, 7183.5639, -4384.1614)) / vec3(1.0, 1.0, 1.0))))
      {
       do
        {
         for(         max((uvec2(86895u, 194310u) * uvec2(49220u, _GLF_IDENTITY(90932u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))) ? 90932u : _GLF_FUZZED(subgroup_id))))), uvec2(195213u, 194193u));
 false; mat2(mat4x2(384.933, -71.16, -5090.5577, -908.693, 8809.0062, 2708.5904, 1719.7397, -548.402)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 19:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                        {
                         do
                          {
                           (76.13 - unpackSnorm2x16(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 0u)))) >> 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 0u)))) >> 0u, clamp((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 0u)))) >> 0u, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 0u)))) >> 0u, (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(workgroup_base, 1u, 0u, 0u), (uvec4(workgroup_base, 1u, 0u, 0u)) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))))))) >> 0u)) : _GLF_FUZZED(workgroup_id))))));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                     case 0:
                     case 87:
                     case 43:
                     -61664;
                     case 72:
                     case 63:
                     case 69:
                     case 91:
                     bvec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[79], _GLF_SWITCH_0_2v;
                     break;
                     case 33:
                     bvec2(true, true);
                     case 5:
                     int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
            }
           bvec3(true, false, false).gbg;
           mat3x4 _GLF_SWITCH_0_3v[40], _GLF_SWITCH_0_4v[77];
           ivec3 _GLF_SWITCH_0_5v[92], _GLF_SWITCH_0_6v[39], _GLF_SWITCH_0_7v;
           bvec2 _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
           for(           ivec2(79370, -71171).rrgg;
 true; mat4x3(2677.2704))
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 5:
                 case 91:
                 case 93:
                 case 8:
                 case 42:
                 case 88:
                 case 70:
                 case 56:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 59:
                     mat2(94.12, 360.406, -5.5, -3.9);
                     case 0:
                     case 12:
                     case 41:
                     case 79:
                     case 37:
                     case 73:
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 96:
                         mat4x3 _GLF_SWITCH_13_0v[57], _GLF_SWITCH_13_1v, _GLF_SWITCH_13_2v;
                         case 78:
                         mat4x2 _GLF_SWITCH_13_3v;
                         case 0:
                         case 84:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 94:
                               case 67:
                               case 12:
                               case 65:
                               case 5:
                               case 84:
                               case 95:
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), _GLF_IDENTITY(int(4), (int(4)) << (0 << _GLF_IDENTITY(int(1), int(1)))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), _GLF_IDENTITY(int(4), (int(4)) << (0 << _GLF_IDENTITY(int(1), int(1))))))) / 1) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(4), int(ivec2(int(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, (true ? _GLF_IDENTITY((4) >> 0, ((4) >> _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) ^ 0) : _GLF_FUZZED((_injected_loop_counter % -97903)))), 0))) | 0) : _GLF_FUZZED(_injected_loop_counter))))))), 1))), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(int(4), int(ivec2(int(4), 1))), 0, 1, 0)))))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
                                {
                                 _GLF_IDENTITY(uvec2(125975u, 41829u), clamp(uvec2(125975u, 41829u), uvec2(125975u, 41829u), _GLF_IDENTITY(uvec2(125975u, 41829u), min(_GLF_IDENTITY(uvec2(125975u, 41829u), (uvec2(125975u, 41829u)) * uvec2(1u, 1u)), uvec2(125975u, 41829u)))));
                                }
                               break;
                               case 96:
                               ;
                               default:
                               do
                                {
                                 1;
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         else
                          {
                          }
                         break;
                         case 10:
                         float _GLF_SWITCH_13_4v, _GLF_SWITCH_13_5v;
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))));
                     break;
                     case 20:
                     mat2x3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                     case 81:
                     vec2 _GLF_SWITCH_7_3v;
                     default:
                     1;
                    }
                  }
                 break;
                 case 7:
                 ;
                 case 18:
                 (sqrt(506.004) , mat2x3(-1.3, 3.5, 16.32, -8930.0402, 4.8, 9614.6245));
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 62:
                 mat4x3 _GLF_SWITCH_11_0v;
                 case 0:
                 case 94:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     (subgroup_id);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 break;
                 case 42:
                 bool _GLF_SWITCH_11_1v;
                 case 13:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mix(equal(ivec4(-82201, 41456, -83198, 83146), ivec4(_GLF_SWITCH_0_7v, -22025)), notEqual(uvec4(85318u, 142970u, 21697u, 18959u), uvec4(121337u, 48382u, 34328u, 76086u)), bvec4(false, false, true, false));
                  }
                 default:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                  {
                  }
                 else
                  {
                   1;
                  }
                }
              }
             false;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               false;
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0))) + determinant(mat2(0.0, 0.0, 0.0, 0.0))))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch), (false ? _GLF_FUZZED(vec2(8.9, -1.5)) : clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), true, false))))))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-20.09))))), injectionSwitch.x)) > injectionSwitch.y)), false))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6395.7607) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.5)), bool(false))))))))), injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))))), injectionSwitch.x)) > injectionSwitch.y, true))))), false))))))))))))) && true))
              {
              }
             else
              {
               mat2x3(-79.09, 1.2, _GLF_IDENTITY(-2.4, float(mat2x3(-2.4, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), float(mat4x3(abs(0.0), sin(0.0), sin(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(abs(1.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(abs(1.0), 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0))), 7641.4261, -8396.1009, -8.9);
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               mod(vec4(5.5, -8952.7982, _GLF_IDENTITY(2.3, (2.3) / cos(0.0)), -67.10), _GLF_IDENTITY(vec4(652.384, -51.02, 4.4, 8208.3419), (vec4(652.384, _GLF_IDENTITY(-51.02, (true ? -51.02 : _GLF_FUZZED(9.7))), 4.4, 8208.3419)) * mat4(1.0)));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       uint _GLF_SWITCH_0_11v[25], _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[49];
       ivec3 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
       vec4 _GLF_SWITCH_0_16v[18], _GLF_SWITCH_0_17v;
      }
     case 68:
     {
     }
     default:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             1;
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
}
