#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 vec4 _f0;
 uvec4 _f1;
 uvec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 ivec4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 mat4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 ivec2 _f2;
 mat4x3 _f3;
 ivec4 _f4;
 _GLF_struct_5 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat3x2 _f1;
 vec3 _f2;
 ivec2 _f3;
 uint _f4;
 bvec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat4x3 _f1;
 _GLF_struct_0 _f2;
 mat2 _f3;
 _GLF_struct_1 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 mat4x2 _f1;
 _GLF_struct_2 _f2;
 mat2x4 _f3;
 mat3 _f4;
 _GLF_struct_6 _f5;
 uint subgroup_id;
 vec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (vec2(1.0))), max(_GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (vec2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), vec2(0.0, 0.0) + (vec2(1.0))))))), (_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (vec2(1.0)))))) / vec2(1.0, 1.0)), vec2(1.0), vec2(1.0)))), mix(vec2(_GLF_FUZZED((vec4(-6.1, 96.43, 953.805, 8431.3494) / -53.69).x), _GLF_FUZZED(-6.2)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(max(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), vec2(1.0), vec2(1.0)))), min(max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-168.042)), bool(false))), float(mat4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)), float(_GLF_FUZZED(4.9)), bool(false))), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), max(float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / abs(1.0)))), float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 1.0, abs(cos(0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(abs(cos(0.0)), tan(0.0) + (abs(cos(0.0)))), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0)))))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), vec2(1.0), vec2(1.0)), vec2(mat3x4(clamp(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0))))), vec2(1.0), vec2(1.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0))))), max(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-204.231)), bool(false))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).x), 0.0)))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), vec2(1.0), vec2(1.0)))))))[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY(float(mat2((max(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-350.222)), vec2(_GLF_FUZZED(-1.1), _GLF_IDENTITY((vec2(1.0))[1], min((vec2(1.0))[1], (vec2(1.0))[1]))), bvec2(false, true))), max(vec2(1.0), vec2(1.0))), vec2(1.0), vec2(1.0)))))[0], 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2((max(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(-4.1) : float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? (false ? _GLF_FUZZED(-4.1) : float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) : _GLF_FUZZED(-22.18)))))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0)), max((vec2(1.0)), (vec2(1.0))))[0], _GLF_FUZZED(-350.222)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.1), (_GLF_FUZZED(_GLF_IDENTITY(-1.1, max(-1.1, -1.1)))) - 0.0), _GLF_IDENTITY((vec2(1.0))[1], min((vec2(1.0))[1], (vec2(1.0))[1]))), bvec2(false, true))), _GLF_IDENTITY(max(vec2(1.0), vec2(1.0)), mix(vec2(_GLF_FUZZED(8.7), (max(vec2(1.0), vec2(1.0)))[1]), vec2((max(vec2(1.0), vec2(1.0)))[0], _GLF_FUZZED(8.7)), bvec2(true, false)))), vec2(1.0), vec2(1.0)))))[0], 1.0, 0.0, 0.0)), (float(mat2((max(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, sqrt(1.0), 1.0, log(1.0), round(length(normalize(1.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(-350.222)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.1), clamp(_GLF_FUZZED(-1.1), _GLF_FUZZED(-1.1), _GLF_FUZZED(-1.1))), _GLF_IDENTITY((vec2(1.0))[1], min((vec2(1.0))[1], (vec2(1.0))[1]))), bvec2(false, true))), max(vec2(1.0), vec2(1.0))), vec2(1.0), _GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(injectionSwitch)))))))[0], 1.0, 0.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))) - 0.0)) - 0.0)), (max(vec2(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), abs(cos(0.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(-9622.9416) : sqrt(1.0))), _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(2644.1467))))), 1.0, log(1.0), _GLF_IDENTITY(round(length(normalize(1.0))), float(_GLF_IDENTITY(vec2(round(length(normalize(1.0))), 1.0), mix(vec2((vec2(round(length(normalize(1.0))), 1.0))[0], _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED(40.82), (vec2(round(length(normalize(1.0))), 1.0))[1]), bvec2(false, true))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(vec2(1.0), clamp(_GLF_IDENTITY(vec2(1.0), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(sqrt(89.21)))), (false ? _GLF_FUZZED(exp(94.75)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(sqrt(89.21)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(sqrt(89.21)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(sqrt(89.21)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(sqrt(89.21))))) - 0.0)))))), vec2(1.0))), vec2(1.0), vec2(1.0)))))[1]), bvec2(true, true)))), mat4x2(1.0), _GLF_struct_2(vec3(1.0), mat4x3(1.0), _GLF_struct_0(mat4x3(1.0), vec2(1.0)), mat2(1.0), _GLF_struct_1(mat2x4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-5767.7929)))), mat3x2(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0)), _GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED(ivec2(66565, 19143)))), 1u, bvec2(true), ivec2(1)), ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1)))), mat2x4(1.0), mat3(1.0), _GLF_struct_6(_GLF_struct_3(ivec3(1), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), uvec3(1u)), _GLF_struct_4(uvec4(1u), ivec4(1), mat2x4(1.0)), ivec2(1), mat4x3(1.0), ivec4(1), _GLF_struct_5(vec4(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u + _GLF_IDENTITY((1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u)), min(_GLF_IDENTITY(~ ((1u)), (~ ((1u))) / (1u ^ 0u)), ~ ((1u)))), ~ (~ (_GLF_IDENTITY(~ ((1u)), (~ ((1u))) | (~ ((1u)))))))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | (_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | _GLF_IDENTITY((_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u)))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u)))))))), ((_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))) | ((_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u)))))))))), (_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))))) | 0u))), uint(uvec4(uint((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY((~ ((_GLF_IDENTITY(1u, ~ (~ (1u)))))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u)), clamp(~ ((1u)), ~ ((1u)), _GLF_IDENTITY(~ ((1u)), min(~ ((1u)), ~ ((1u))))))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))) | 0u))), 0u, 0u, 1u)))), clamp(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((_GLF_IDENTITY(~ ((1u)), (~ ((1u))) << 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) ^ 0u), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))) | 0u))), uint(uvec4(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u)), ~ (~ (~ ((1u))))), _GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ ((1u))), uint(_GLF_IDENTITY(uvec3((~ ((1u))), 1u, 0u), (true ? uvec3((~ ((1u))), 1u, 0u) : _GLF_FUZZED(uvec3(121656u, 141658u, 36725u)))))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))) | 0u))), 0u, 0u, 1u)))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | (_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))) | 0u))), uint(uvec4(uint((_GLF_IDENTITY(_GLF_IDENTITY(~ ((1u)), uint(uvec4(~ ((1u)), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))), _GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | (_GLF_IDENTITY((~ ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, ~ (~ (_GLF_IDENTITY((1u) - 0u, (true ? (1u) - 0u : _GLF_FUZZED(uvec3(22841u, 83889u, 130210u)[1]))))))), 1u, 1u))))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u)))))), ((_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u))), 0u, 0u, 1u)))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY(_GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u)), (false ? _GLF_FUZZED(38588u) : ~ ((1u))))), ((~ ((1u)))) | ((~ ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) / 1u))))))))) | (_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u))))))))), ~ (~ (_GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((~ ((1u))), ((~ ((1u)))) | ((~ ((1u)))))) | (_GLF_IDENTITY((~ ((1u))), 0u ^ (_GLF_IDENTITY((~ ((1u))), 0u | ((~ ((1u)))))))))))) | 0u))), uint(uvec4(uint((_GLF_IDENTITY(~ ((1u)), _GLF_IDENTITY((~ ((1u))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((1u)), clamp(~ ((1u)), ~ ((1u)), _GLF_IDENTITY(~ ((1u)), ~ (~ (~ ((1u)))))))), ((~ ((_GLF_IDENTITY(1u, (1u) / 1u))))) | ((_GLF_IDENTITY(~ ((1u)), min(~ ((1u)), _GLF_IDENTITY(~ ((1u)), (~ ((1u))) - 0u))))))) | (_GLF_IDENTITY((~ ((_GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((1u), _GLF_IDENTITY(uint(uvec3((1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec3((1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) / 1u)))))), 0u ^ (_GLF_IDENTITY((~ ((1u))), _GLF_IDENTITY(0u | _GLF_IDENTITY(((~ ((1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))), uint(uint(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))))))), clamp(0u | _GLF_IDENTITY(((~ ((1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))), uint(uint(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))))))), 0u | _GLF_IDENTITY(((~ ((1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))), uint(uint(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))))))), _GLF_IDENTITY(0u | _GLF_IDENTITY(((~ ((1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))), uint(uint(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))))))), (0u | _GLF_IDENTITY(((~ ((1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u)))), uint(uint(uint(_GLF_IDENTITY(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), min(uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u), uvec4(((~ ((1u)))), 1u, (0u ^ 0u), 0u))))))))) / 1u)))))))) | 0u))), 0u, 0u, 1u))))))))))) : _GLF_IDENTITY(_GLF_FUZZED(124992u), clamp(_GLF_FUZZED(124992u), _GLF_FUZZED(124992u), _GLF_FUZZED(124992u)))))), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(124992u))))), ((uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(124992u)))))) | uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)), uvec3(1u), mat3(1.0)), bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))), gl_SubgroupID, vec3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(true, (true) || false), false)))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), (bool(bvec4(! (! (false)), false, false, true))) && true))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(! (! (false)), false, false, true)), (bool(bvec4(! (! (false)), false, false, true))) && true)))))) || false), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), true && (bool(_GLF_IDENTITY(false, ! (! (false)))))))) || _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), (! (false)) && true))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false))))))))), true, _GLF_IDENTITY(false, (false) || false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))) || false))), false)))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))) || false))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && ((! (false))))) && true)))), false, false), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false), true)))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)) || false))) && _GLF_IDENTITY(true, (true) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(mat2x4(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, log(1.0))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch))), mix(vec2((_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch))))[0], (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch))))[1]), vec2(_GLF_FUZZED(-96.52), _GLF_FUZZED(-321.963)), bvec2(false, false)))) * sqrt(vec2(1.0, 1.0)))), 0.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(4.8)) : 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0, cos(sqrt(0.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), clamp(vec2(mat2(injectionSwitch, 0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), transpose(transpose(mat2(injectionSwitch, 0.0, 0.0)))))), (false ? _GLF_FUZZED(mat2(-7.6, -78.71, -2.9, -9.3)) : mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), transpose(transpose(mat2(injectionSwitch, 0.0, 0.0)))))))))), mix(vec2(_GLF_FUZZED(vec3(-2.8, -1.6, -3.7).z), (vec2(mat2(injectionSwitch, 0.0, 0.0)))[1]), vec2((vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), injectionSwitch[1])))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))[0], _GLF_FUZZED(-781.150)), bvec2(true, false))), vec2(mat2(injectionSwitch, 0.0, 0.0)))), vec2(0.0, 0.0) + (vec2(mat2(injectionSwitch, 0.0, 0.0)))))))) : _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, abs(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.8) : 1.0)), _GLF_IDENTITY(0.0, abs(1.0) * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(97.96)), bool(false))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - tan(0.0)), cos(sqrt(0.0)))), mix(vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, abs(0.0), 1.0, 0.0, 0.0, cos(sqrt(0.0)))))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, abs(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5599.9260) : 1.0)), 1.0)), 0.0, 0.0, cos(sqrt(0.0)))))[1]), vec2(_GLF_FUZZED(-5.9), _GLF_IDENTITY(_GLF_FUZZED(5436.9122), (true ? _GLF_FUZZED(5436.9122) : _GLF_FUZZED(9.5)))), bvec2(false, false)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true)))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * mat2(1.0)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)).y, false, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.6, -1.4)) : injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))) && true))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false))))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true))) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0)))) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(40.32), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-412.542)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, length(0.0)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(238.416, -3.0)))))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.0)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2090.9722))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2004.9826))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.4))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(abs(vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(abs(vec2(0.0, 0.0)), clamp(abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, 0.0))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0), vec2(mat2x3((_GLF_IDENTITY(abs(vec2(0.0, 0.0)), clamp(abs(vec2(0.0, 0.0)), abs(vec2(0.0, 0.0)), _GLF_IDENTITY(abs(vec2(0.0, 0.0)), (abs(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.5)), float(0.0), bool(true))))), 0.0, 0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))).y, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (injectionSwitch) - abs(vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0))).y, 0.0, log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), 1.0, 0.0, abs(0.0), 0.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (injectionSwitch) - abs(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.7)), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0))), bool(true)))))).y, 0.0, log(1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0))))))), 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) / 1.0))), abs(0.0), 0.0))), mat4(1.0) * (mat3x4(mat4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (injectionSwitch) - abs(vec2(0.0, 0.0))).y, 0.0, log(1.0), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0))))), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0), (mat2x4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0))))), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, abs(0.0), 0.0)))))))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), (injectionSwitch) - abs(vec2(0.0, 0.0))).y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true)))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))), false, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))), false, false), false)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_7.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec3(0.0, 0.0, 0.0)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), workgroup_base)) + _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))), min(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_7.subgroup_id * subgroup_size)), max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + _GLF_struct_replacement_7.subgroup_id * subgroup_size)), 1u * (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))), 0u), max(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))), 0u), uvec2(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))), 0u))))), min(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, max(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_struct_replacement_7.subgroup_id * subgroup_size)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), workgroup_base + _GLF_struct_replacement_7.subgroup_id * subgroup_size)))) + ((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 1 * (4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! ((false)))))), (! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.3)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))))
    return;
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, (1 & ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1))) | (0 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(7), int(7))))), (ivec2(4, (1 & ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))) + ivec2(0, 0)))), 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, 0 ^ (4)))));
}
