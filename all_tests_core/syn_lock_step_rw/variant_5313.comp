#version 460
struct _GLF_struct_1 {
 vec4 _f0;
 vec2 _f1;
 bvec2 _f2;
 int _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 uint _f1;
 uint _f2;
 vec4 _f3;
 mat2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 bvec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 vec3 _f1;
 _GLF_struct_2 _f2;
 uint read;
 float _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.z = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.z;
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_13_1_1_11_2_1_12num_workgroupsubgroup_idworkgroup_id.y * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(vec2(1.0), vec3(1.0), _GLF_struct_2(vec4(1.0), bvec3(true), _GLF_struct_0(mat3x2(1.0), 1u, 1u, vec4(1.0), mat2(1.0), mat3x2(1.0)), _GLF_struct_1(vec4(1.0), vec2(1.0), bvec2(true), 1, mat4x3(1.0))), atomicLoad(buf[virtual_gid], 4, 64, 0), 1.0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_3.read, 4, 64, 4);
}
