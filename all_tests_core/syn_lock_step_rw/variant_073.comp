#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, true))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 1.0, sqrt(1.0))))) - 0.0))).x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec2(87.73, -85.09)))), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat4x2((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), mix(vec2(_GLF_FUZZED(-6128.7022), _GLF_FUZZED((-2.9 / -399.319))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)))[1]), bvec2(true, true))), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y) && true)))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))), mix(vec2(_GLF_FUZZED(99.73), (_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))))[1]), vec2((_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))))[0], _GLF_FUZZED(vec3(9.9, -5903.1896, 0.0).p)), bvec2(true, false))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), 0.0, 1.0, cos(log(1.0)), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), 0.0, 1.0, cos(log(1.0)), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), clamp((_GLF_IDENTITY(injectionSwitch[1], determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))), (injectionSwitch[1]), (injectionSwitch[1]))) - 0.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) : _GLF_FUZZED(vec2(118.507, -6.6)))))), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.4)), bool(false)))) * (injectionSwitch)))), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true))), false, false, true)))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 1.0, sqrt(1.0))))) - 0.0))).x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec2(87.73, -85.09)))), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat4x2((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), mix(vec2(_GLF_FUZZED(-6128.7022), _GLF_FUZZED((-2.9 / -399.319))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)))[1]), bvec2(true, true))), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y) && true)))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))), mix(vec2(_GLF_FUZZED(99.73), (_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))))[1]), vec2((_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))))[0], _GLF_FUZZED(vec3(9.9, -5903.1896, 0.0).p)), bvec2(true, false))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), 0.0, 1.0, cos(log(1.0)), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), 0.0, 1.0, cos(log(1.0)), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), clamp((_GLF_IDENTITY(injectionSwitch[1], determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))), (injectionSwitch[1]), (injectionSwitch[1]))) - 0.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) : _GLF_FUZZED(vec2(118.507, -6.6)))))), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.4)), bool(false)))) * (injectionSwitch)))), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true))), false, false, true)))) || false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 0.0, determinant(mat3(abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 1.0, sqrt(1.0))))) - 0.0))).x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? (vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(vec2(87.73, -85.09)))), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat4x2((vec2(1.0, 1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), mix(vec2(_GLF_FUZZED(-6128.7022), _GLF_FUZZED((-2.9 / -399.319))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)))[1]), bvec2(true, true))), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(30.23, -4.5)) : injectionSwitch))))[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y) && true)))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))), mix(vec2(_GLF_FUZZED(99.73), (_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))))[1]), vec2((_GLF_IDENTITY((injectionSwitch), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (injectionSwitch))))[0], _GLF_FUZZED(vec3(9.9, -5903.1896, 0.0).p)), bvec2(true, false))) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), 0.0, 1.0, cos(log(1.0)), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y)), (mat2x4(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.1, 19.43)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch), 0.0, 1.0, cos(log(1.0)), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)))))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), clamp((_GLF_IDENTITY(injectionSwitch[1], determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))), (injectionSwitch[1]), (injectionSwitch[1]))) - 0.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) : _GLF_FUZZED(vec2(118.507, -6.6)))))), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.2, float(mat2x3(-3.2, 1.0, 1.0, abs(0.0), 1.0, 0.0))))), vec2(_GLF_FUZZED(-76.20), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.4)), bool(false)))) * (injectionSwitch)))), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), true))), false, false, true)))) || false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), false))))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), true, false, true)))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), false || ((true)))))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), true, false, true)))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), false || ((true)))))))))), false)))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! (! (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))), true, false, true)))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), true && (! _GLF_IDENTITY((true), false || ((true)))))))))), false))))))) || false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), true, false, true)))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), false || ((true)))))))))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), true, false, true)))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! _GLF_IDENTITY((true), false || ((true)))))))))), false)))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (! (_GLF_IDENTITY(! (true), true && (! (true))))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (! (_GLF_IDENTITY(! (true), true && (! (true)))))))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), bool(bool(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), true)))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), ! (! (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))), true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), true && (! _GLF_IDENTITY((true), false || ((true)))))))))), false))))))) || false)) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)).y, injectionSwitch.y, injectionSwitch.y)) * 1.0))))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), ((~ (0u))) | ((~ (0u)))), (_GLF_IDENTITY((~ (0u)), ((~ (0u))) | ((~ (0u))))) | (_GLF_IDENTITY((~ (0u)), ((~ (0u))) | ((~ (0u)))))), (~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max(_GLF_IDENTITY((~ (0u)), ((~ _GLF_IDENTITY((0u), 0u | ((0u))))) | ((~ (0u)))), (~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ _GLF_IDENTITY((~ (0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u)) | ((~ (0u)))))))), 0u)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), (uint(_GLF_IDENTITY(8u, 0u ^ (8u)))) | (uint(_GLF_IDENTITY(8u, 0u ^ (8u)))))) | 0u))))), ((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max(_GLF_IDENTITY((~ (0u)), ((~ _GLF_IDENTITY((0u), 0u | ((0u))))) | ((~ (0u)))), (~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (~ _GLF_IDENTITY((~ (0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | ((~ (0u)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | ((~ (0u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | ((~ (0u)))), (_GLF_IDENTITY((~ (0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | ((~ (0u))))) >> 0u), 1u, 1u)))))))))), 0u)) >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), (uint(_GLF_IDENTITY(8u, 0u ^ (8u)))) | (uint(_GLF_IDENTITY(8u, 0u ^ (8u)))))) | 0u)))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max(_GLF_IDENTITY((~ (0u)), ((~ (0u))) | (_GLF_IDENTITY((~ (0u)), uint(uvec4(_GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u), 0u, 1u, 1u))))), (~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (_GLF_IDENTITY(~ (0u), uint(uvec3(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), 1u, 1u)))))))), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u)), uint(uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), max(_GLF_IDENTITY((~ (0u)), ((~ (0u))) | (_GLF_IDENTITY((~ (0u)), uint(uvec4(_GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u), 0u, 1u, 1u))))), (~ (0u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (_GLF_IDENTITY(~ (0u), uint(uvec3(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), 1u, 1u)))))))), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u)))))))) << 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), clamp(_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), _GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), (true ? _GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))) : _GLF_FUZZED(workgroup_size))))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), clamp(_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), _GLF_IDENTITY(~ (0u), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u))), uint(uint(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u))))))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u))), 0u + (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))), (true ? _GLF_IDENTITY(~ (0u), ~ (~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))) | ((0u)))))) : _GLF_FUZZED(workgroup_size)))))))) / 1u), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u))) / 1u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ _GLF_IDENTITY((~ (~ (0u))), (_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), 1u, 1u)))))), ((_GLF_IDENTITY(~ (~ (0u)), (true ? ~ (~ (0u)) : _GLF_FUZZED((false ? min(workgroup_id, num_workgroup) : 29437u)))))) ^ 0u)) >> 0u)))), 0u)) >> _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u), _GLF_IDENTITY(0u, (0u) | 0u) | (clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 1u * (uint(8u))), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uint(8u)), (_GLF_IDENTITY(uint(uint(8u)), ~ (~ (uint(uint(8u)))))) | (uint(uint(8u)))))))))) | 0u) + (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)))), ~ (~ (workgroup_size))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ~ (~ ((workgroup_id) - 0u)))), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) - 0u, ~ (~ ((workgroup_id) - 0u))))) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u))) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)))))), 0u, 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u), max(clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u))), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u), max(clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u), max(clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u), clamp(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id * subgroup_local_id)))), 0u)), 0u, 0u)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), ~ _GLF_IDENTITY((~ (subgroup_local_id)), 0u ^ ((~ (subgroup_local_id)))))))) / 1u) + 1) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, min((subgroup_local_id + 1) - 0u, (subgroup_local_id + 1) - 0u)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 1u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), 1u))))), (subgroup_local_id + 1) - 0u))))) / 1u) % subgroup_size), _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (1u & 1u)), subgroup_local_id)) + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size))), (~ (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)))) / 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), true && (false))), true, true, true)), true && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))) && (false), (true && (false)) || false))), _GLF_IDENTITY(true, false || (true))))), true, true, true))), _GLF_IDENTITY(((bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), _GLF_IDENTITY(true, false || (true))))), true, true, true)))) && true, false || (((bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))), _GLF_IDENTITY(true, false || (true))))), true, true, true)))) && true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, true && (true))) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, true && (true))), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && _GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(((true)) && _GLF_IDENTITY(true, true && (true)), ! (! (((true)) && _GLF_IDENTITY(true, true && (true))))))))))) || false) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)))))) || false))) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))) || false))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), true)))), false, false, false)), true && (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), true)))), false, false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3(0.0, sqrt(1.0), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (true))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))) && true)))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))) && true)))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))) && true)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))).y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))).y))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), true, false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), false), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), false), false, false)))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mod(11.84, 9.8)) : 1.0))) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))))))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), ((mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + abs(vec2(0.0, 0.0))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)))).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), vec2(mat3x4(cos(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), false))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8171.2526), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-1.8, -92.92, 7.1, -2.6).x)), bvec2(true, false))).x > injectionSwitch.y)))))))) && true)))))))), true), true)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), true)))), false, false, false)), true && (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), bool(bvec2((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), false))))))))))), true), true)))), false, false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, float(mat3(0.0, sqrt(1.0), sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (true))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))) && true)))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))) && true)))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))) && true)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), bool(bvec2((bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))).y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))).y))), false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), true, false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), false), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), false), false, false)))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mod(11.84, 9.8)) : 1.0))) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))))))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), ((mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) + abs(vec2(0.0, 0.0))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)))).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / _GLF_IDENTITY(cos(vec2(0.0, 0.0)), clamp(cos(vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), (cos(vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(cos(vec2(0.0, 0.0)), vec2(mat3x4(cos(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), false))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8171.2526), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-1.8, -92.92, 7.1, -2.6).x)), bvec2(true, false))).x > injectionSwitch.y)))))))) && true)))))))), true), true))))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))))))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + sqrt(vec2(0.0, 0.0))), mat2(1.0) * (injectionSwitch)))) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (bool(_GLF_IDENTITY(bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, (_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true) && true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, (_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), ((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))) * mat2(1.0)))))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true) && true))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, true, true), false))))))))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-43.65, 714.545, -4.4, 4.0)) : mat2(1.0))) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), ! (! ((bool(bool(_GLF_DEAD(false)))))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))))) + vec2(0.0, 0.0)).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), ! (! ((bool(bool(_GLF_DEAD(false)))))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))))) + vec2(0.0, 0.0)).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y, float(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))) && true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))), true)), false, true, true)))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-84.20), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(28.67)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), (bool(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true))))))))))), true), true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_DEAD(false))))), (bool(bool(_GLF_DEAD(false)))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(mat3x4(-79.57, 587.029, 3118.7225, -408.656, 4.3, 4595.3472, 3104.0687, 8706.3850, -8.4, 2.4, 6.9, -9.1))) : mat2(1.0))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! ((bool(bool(_GLF_DEAD(false))))), ! (! (! ((bool(bool(_GLF_DEAD(false)))))))))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) && true)))))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))) : _GLF_FUZZED((injectionSwitch * -4.2)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), ((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))) * mat2(1.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-2.3 - -1.2))), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0)), bool(true))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4846.1482), _GLF_FUZZED(-7162.5509)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch)))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - abs(vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))) || false))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), false, false))))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))), true), true)))))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) && true)))))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))) : _GLF_FUZZED((injectionSwitch * -4.2)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)), ((mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0))) * mat2(1.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-2.3 - -1.2))), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0)), bool(true))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4846.1482), _GLF_FUZZED(-7162.5509)), bvec2(false, false))) : _GLF_FUZZED(injectionSwitch)))), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - abs(vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))) || false))) && true)))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), bool(bvec2((bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)), false, false))))))), (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / cos(vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))), true), true))))))))))))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), virtual_gid)))))))))) - 0u)], _GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(subgroup_size) : (read))) | (read)), _GLF_IDENTITY(4, (4) - 0), 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || (_GLF_IDENTITY(false, false || (false))))) && true, bool(bool((_GLF_IDENTITY(false, false || (false))) && true)))))))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, true))) || (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, false)))) && true)), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x < injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) || ((injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) / 1.0)), false || ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ((! (injectionSwitch.x < injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bvec3((! (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false, false))))))))))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((! (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec3((! (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))) && true)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true, false))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), (false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))) || false)) || false)))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(48.60)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), true, false))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))) || false)), true, false)))), (false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))) || false)) || false)))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), bool(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), true, true))))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec3(false || (_GLF_DEAD(false)), true, false)))) && true))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), bool(bvec3(! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))), true, true))))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), (_GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec3(false || (_GLF_DEAD(false)), true, false)))) && true)))))))))))) || false))))))))))
  return;
}
