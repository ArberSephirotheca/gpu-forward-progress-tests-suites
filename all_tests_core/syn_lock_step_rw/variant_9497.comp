#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 ivec4 _f0;
 vec4 _f1;
 bvec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_19 {
 ivec2 _f0;
 mat3x4 _f1;
 int _f2;
 vec2 _f3;
 int _f4;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 int _f1;
 _GLF_struct_20 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_22 {
 bvec4 _f0;
 uint read;
 float _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 uvec3 _f3;
 bvec3 _f4;
 uint _f5;
 mat4 _f6;
} ;

struct _GLF_struct_17 {
 uint workgroup_base;
 _GLF_struct_16 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 mat4x3 _f1;
 ivec3 _f2;
 mat3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 vec3 _f1;
 _GLF_struct_14 _f2;
 vec4 _f3;
 uvec2 _f4;
 int _f5;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_12 _f0;
 _GLF_struct_15 _f1;
 vec3 _f2;
 mat4 _f3;
 int _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_9 {
 bvec4 _f0;
 float _f1;
 uint subgroup_id;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 _GLF_struct_9 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 ivec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_11 {
 float _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_10 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 mat3x4 _f1;
 uvec3 _f2;
 mat4x2 _f3;
 uvec2 _f4;
 mat2x4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 int _f1;
 _GLF_struct_4 _f2;
 bvec3 _f3;
 _GLF_struct_5 _f4;
 mat4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 bvec3 _f1;
 mat3x4 _f2;
 bvec3 _f3;
 mat4x3 _f4;
 mat2x3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 vec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 uint virtual_gid;
 int _f0;
 _GLF_struct_2 _f1;
 mat3x2 _f2;
 _GLF_struct_6 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec4 _f1;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(1.0, _GLF_struct_8(mat4x3(1.0), ivec3(1), mat4x2(1.0)), _GLF_struct_10(vec3(1.0), _GLF_struct_9(bvec4(true), 1.0, gl_SubgroupID), mat2(1.0)), bvec3(true));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec4(1u), bvec4(true), gl_WorkGroupID.x);
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_12(uvec3(1u)), _GLF_struct_15(_GLF_struct_13(bvec2(true)), vec3(1.0), _GLF_struct_14(mat2x3(1.0), mat4x3(1.0), ivec3(1), mat3(1.0), bvec3(true)), vec4(1.0), uvec2(1u), 1), vec3(1.0), mat4(1.0), 1, _GLF_struct_17(workgroup_size * _GLF_struct_replacement_0.workgroup_id, _GLF_struct_16(mat2(1.0), ivec3(1), mat3x4(1.0), uvec3(1u), bvec3(true), 1u, mat4(1.0)), bvec2(true)));
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_replacement_18._f5.workgroup_base + _GLF_struct_replacement_11._f2._f1.subgroup_id * subgroup_size + subgroup_local_id, 1, _GLF_struct_2(_GLF_struct_1(mat2(1.0), bvec3(true), mat3x4(1.0), bvec3(true), mat4x3(1.0), mat2x3(1.0), mat2(1.0)), vec2(1.0), ivec2(1)), mat3x2(1.0), _GLF_struct_6(_GLF_struct_3(mat4x2(1.0)), 1, _GLF_struct_4(uvec3(1u), mat3x4(1.0), uvec3(1u), mat4x2(1.0), uvec2(1u), mat2x4(1.0), mat4x3(1.0)), bvec3(true), _GLF_struct_5(vec3(1.0)), mat4(1.0), mat4x3(1.0)), 1.0);
 uint next_virtual_gid = _GLF_struct_replacement_18._f5.workgroup_base + _GLF_struct_replacement_11._f2._f1.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(bvec4(true), atomicLoad(buf[_GLF_struct_replacement_7.virtual_gid], 4, 64, 0), 1.0, _GLF_struct_21(_GLF_struct_19(ivec2(1), mat3x4(1.0), 1, vec2(1.0), 1), 1, _GLF_struct_20(ivec4(1), vec4(1.0), bvec3(true), mat3x2(1.0)), mat2x4(1.0)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
      }
     else
      {
      }
    }
   else
    {
    }
  }
 atomicStore(checker[_GLF_struct_replacement_7.virtual_gid], _GLF_struct_replacement_22.read, 4, 64, 4);
}
