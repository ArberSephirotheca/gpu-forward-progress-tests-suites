#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 mat3x2 _f0;
 ivec3 _f1;
 uvec3 _f2;
 mat4 _f3;
 bvec2 _f4;
 vec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_23 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_21 {
 uvec3 _f0;
 float _f1;
 mat3x2 _f2;
 mat2x3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 vec2 _f1;
 float _f2;
 ivec3 _f3;
 mat3x2 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 ivec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_19 {
 uint _f0;
 float _f1;
} ;

struct _GLF_struct_25 {
 _GLF_struct_19 _f0;
 mat3 _f1;
 _GLF_struct_22 _f2;
 uint num_workgroup;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 float _f1;
 mat4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 bvec3 _f1;
 float _f2;
 mat4x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_14 {
 uint _f0;
} ;

struct _GLF_struct_13 {
 uvec4 _f0;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat4 _f1;
 bvec2 _f2;
 uint _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 ivec3 _f2;
 _GLF_struct_14 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 mat3x4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 ivec3 _f1;
 _GLF_struct_8 _f2;
 mat3 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 bvec3 _f1;
 vec3 _f2;
 int _f3;
 uvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 ivec4 _f1;
 mat3 _f2;
 mat3x4 _f3;
 vec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 _GLF_struct_6 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat2x4 _f1;
 ivec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 vec2 _f1;
 bool _f2;
 bvec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat2 _f1;
 bvec3 _f2;
 uvec4 _f3;
 _GLF_struct_0 _f4;
 _GLF_struct_1 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_18 {
 float _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_4 _f2;
 uint subgroup_base;
 _GLF_struct_7 _f3;
 _GLF_struct_11 _f4;
 uvec4 _f5;
 _GLF_struct_17 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.0)))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(clamp(injectionSwitch, 62.30, 3.4)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.4, 1.7)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y, (injectionSwitch.y) * determinant(mat2(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-9964.5209)), bool(false))), 0.0))), 0.0)), 1.0))), (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.9, -29.93)) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), true && (! (true))))), (! (! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) || false)))) && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4298.1648)), vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), bvec2(false, true))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_19(1u, 1.0), mat3(1.0), _GLF_struct_22(_GLF_struct_20(vec4(1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, ivec3(_GLF_IDENTITY(1, min(1, 1))), mat3x2(1.0), bvec3(true), mat2(1.0)), _GLF_struct_21(uvec3(1u), _GLF_IDENTITY(1.0, (1.0) * 1.0), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), 0.0 + (dot(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), vec4(0.0, 0.0, 1.0, 1.0))))) + (1.0))), mat2x3(1.0), uvec3(1u)), ivec2(1), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), gl_NumWorkGroups.x, _GLF_struct_24(_GLF_struct_23(mat3x2(1.0), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ uvec3(0u, 0u, 0u))) | (uvec3(1u))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(1u, 0u | (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(1u)), (uvec3(uvec3(1u))) >> uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (uvec3(uvec3(1u))), (~ (uvec3(uvec3(1u)))) >> uvec3(0u, 0u, 0u))))) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), max(_GLF_IDENTITY(uvec3(0u), uvec3(0u)), _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))))), mat4(1.0), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), vec3(1.0), bvec3(true)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ~ (_GLF_IDENTITY(~ (ivec4(1)), (_GLF_IDENTITY(~ (ivec4(1)), clamp(_GLF_IDENTITY(~ (ivec4(1)), ivec4(0, 0, 0, 0) | (~ (ivec4(1)))), ~ (ivec4(1)), ~ (ivec4(1))))) << ivec4(0, 0, 0, 0))))) >> ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ~ (_GLF_IDENTITY(~ (ivec4(1)), (_GLF_IDENTITY(~ (ivec4(1)), clamp(_GLF_IDENTITY(~ (ivec4(1)), ivec4(0, 0, 0, 0) | (~ (ivec4(1)))), ~ (ivec4(1)), ~ (ivec4(1))))) << ivec4(0, 0, 0, 0))))) >> ivec4(0, 0, 0, 0))) - ivec4(0, 0, 0, 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(164.989)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))))).y)) * _GLF_IDENTITY((mat2(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((mat2(1.0)), mat2(1.0) * ((mat2(1.0))))), transpose(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (transpose(_GLF_IDENTITY((mat2(1.0)), mat2(1.0) * ((mat2(1.0)))))) * mat2(1.0)))))))) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0), mat2(1.0) * (_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0), ((mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(0.0, 0.0) + (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 1.0), vec2(0.0, 0.0)), dot(vec2(sqrt(1.0), 1.0), vec2(0.0, 0.0))), 0.0), (vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 1.0), vec2(0.0, 0.0)), dot(vec2(sqrt(1.0), 1.0), vec2(0.0, 0.0))), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (1.0))) * (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0))), 1.0))))) * (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-947.837)))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))))))))) / vec2(1.0, 1.0)))).y))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(20.63)), float(injectionSwitch.y), bool(true))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + sqrt(vec2(0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(37790u, 142310u, 189581u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))), max(gl_WorkGroupSize, gl_WorkGroupSize))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))), ~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.0, -7329.2339))) : injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.0, -7329.2339))) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.0, -7329.2339))) : injectionSwitch)).x)) > injectionSwitch.y))))), false, false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))) || (true))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))) || (true))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))) || (true))))), (injectionSwitch.x > injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, true))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(1.0, _GLF_struct_2(mat2x4(1.0), mat2(1.0), bvec3(true), uvec4(1u), _GLF_struct_0(bvec4(_GLF_IDENTITY(true, (true) || false)), vec2(1.0), true, bvec2(true), uvec3(1u)), _GLF_struct_1(1u, mat2x4(1.0), ivec4(1), vec4(1.0)), mat3x2(1.0)), _GLF_struct_4(_GLF_struct_3(vec3(1.0)), mat2x3(1.0), _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))), _GLF_struct_7(_GLF_struct_5(mat3x2(1.0), ivec4(1), mat3(1.0), mat3x4(1.0), vec2(1.0), 1u), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (bool(bvec4(true, false, true, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false)))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false)))))))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (! (false))))))))))) || false)))) && true)), false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), bool(bvec4((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), true, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, false)))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, false)))))))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, ! (! (false))))))))))) || false)))) && true)), false))))) && true))), mat3x2(1.0), _GLF_struct_6(mat2x3(1.0), bvec3(true), vec3(1.0), 1, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u))))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), 0u ^ (clamp(1u, 1u, 1u)))) - 0u), min(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u))))))) - 0u)), mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((- 5.6)) : 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))), transpose(transpose((transpose(mat2(1.0)))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat2x3(mat2(1.0, 1.0, 1.0, 1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))), transpose(transpose(_GLF_IDENTITY((transpose(mat2(1.0))), (true ? (transpose(mat2(1.0))) : _GLF_FUZZED(mat2(-5.3, -3.6, 971.809, 625.245))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat2x3(mat2(1.0, 1.0, 1.0, 1.0)))))))), transpose(transpose(transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))), mat2(mat3x4((transpose(mat2(1.0)))))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0))), 0.0, cos(0.0), 0.0))), 1.0)))))))), _GLF_struct_11(mat4x2(1.0), ivec3(1), _GLF_struct_8(uvec2(1u), mat3x4(1.0)), mat3(1.0), _GLF_struct_9(mat2(1.0), mat2x4(1.0)), _GLF_struct_10(mat2x3(1.0), mat3x4(1.0), vec3(1.0))), uvec4(_GLF_IDENTITY(1u, (1u) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) << 0u), 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(uvec3(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1u), (uint(1u)) | (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), 1u * (uint(1u)))) ^ 0u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(uvec3(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) | (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(uvec3(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))))))), ((uint(1u)) | (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), 0u + (uint(1u)))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) | 0u)) ^ 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(uvec3(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))))))))) + 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) - uvec2(0u, 0u)))), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | 0u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)), (_GLF_IDENTITY((uint(1u)), clamp((uint(1u)), (uint(1u)), (uint(1u))))) << 0u) - 0u))))), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | _GLF_IDENTITY((uint(1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(1u)), ((uint(1u))) | ((uint(1u)))), (uint(1u))), max(min(_GLF_IDENTITY((uint(1u)), ((uint(1u))) | ((uint(1u)))), (uint(1u))), min(_GLF_IDENTITY((uint(1u)), ((uint(1u))) | ((uint(1u)))), (uint(1u))))))), uint(1u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), uint(1u)))), _GLF_IDENTITY(uint(uvec2(((1u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u)), max(uint(uvec2(((1u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u)), uint(uvec2(((1u << _GLF_IDENTITY(uint(1u), uint(1u)))), 1u))))) * _GLF_IDENTITY(1u, (1u) >> 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), uint(1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u), max((1u), (1u))) * 1u)), uint(_GLF_IDENTITY(1u, ((0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (1u))))) << 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), 0u, 0u, 0u))))))), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))) | 0u)))), _GLF_struct_17(_GLF_struct_12(ivec3(1), mat4(1.0), bvec2(true), 1u, uvec2(1u)), _GLF_struct_13(uvec4(1u)), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1))), _GLF_struct_14(1u), _GLF_struct_15(mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, sqrt(1.0), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4x2(mat4x3(mat4x2(1.0, sqrt(1.0), 0.0, length(0.0), 1.0, 0.0, 1.0, 0.0))), transpose(transpose(mat4x2(mat4x3(mat4x2(1.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-5115))), bool(false))), length(0.0), 1.0, 0.0, 1.0, 0.0)))))))))), bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false)))), 1.0, mat4x3(1.0), vec2(1.0)), _GLF_struct_16(1, 1.0, mat4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-14.25)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)), bool(true))), 1.0, 1.0))), ivec2(1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) | (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base))) | (workgroup_base))), (false ? _GLF_FUZZED(4680u) : (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))))) + _GLF_struct_replacement_18.subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_18.subgroup_base + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + _GLF_struct_replacement_18.subgroup_base + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + _GLF_struct_replacement_18.subgroup_base + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.3), _GLF_FUZZED(-5.3)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), true)))))) || false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 1)), (int(ivec3(4, 0, 1))) << 0)))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(4330.2110, _GLF_IDENTITY(33.52, max(_GLF_IDENTITY(33.52, float(vec2(33.52, 1.0))), 33.52)))) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, false))), ! (! (bool(bool(bvec4(false, false, true, false))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec4(false, false, true, false))), ! (! (_GLF_IDENTITY(bool(bool(bvec4(false, false, true, false))), bool(_GLF_IDENTITY(bool(bool(bool(bvec4(false, false, true, false)))), bool(bvec2(_GLF_IDENTITY(bool(bool(bool(bvec4(false, false, true, false)))), ! (! (bool(bool(bool(bvec4(false, false, true, false))))))), false))))))))), false)), bool(bvec2(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false))) && true)))), (bool(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true))))), true, false)))) || false))))), false)), false))))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, false)), true, true, true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)), true, true, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, false)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, false || (true))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), false || (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), true && ((! (_GLF_IDENTITY(true, false || (true))))))) && true), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), false || (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))))))))))))))), ! (_GLF_IDENTITY(! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), false || (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(false, true && (false)))), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), false || (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))))))))))))))), (! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), false || (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))), false)), _GLF_IDENTITY(! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))), ! (! (_GLF_IDENTITY(! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ((true)) || false))))))), false)))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))), ! (! ((! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))))))), (bool(bool(! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))) && true))))))))), false || (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), false || (_GLF_IDENTITY(bool((true)), (bool((true))) && true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), false || (_GLF_IDENTITY(bool((true)), _GLF_IDENTITY((bool((true))) && true, ! (! (_GLF_IDENTITY((bool((true))) && true, ! (! ((bool((true))) && true)))))))))), ! (! (bool(_GLF_IDENTITY(bool((true)), false || (_GLF_IDENTITY(bool((true)), _GLF_IDENTITY((bool((true))) && true, ! (! (_GLF_IDENTITY((bool((true))) && true, ! (! ((bool((true))) && true)))))))))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((true)), false || (_GLF_IDENTITY(bool((true)), _GLF_IDENTITY((bool((true))) && true, ! (! (_GLF_IDENTITY((bool((true))) && true, ! (! ((bool((true))) && true)))))))))), ! (! (bool(_GLF_IDENTITY(bool((true)), false || (_GLF_IDENTITY(bool((true)), _GLF_IDENTITY((bool((true))) && true, ! (! (_GLF_IDENTITY((bool((true))) && true, ! (! ((bool((true))) && true))))))))))))))))))))))), false)), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false)))))))), false || (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)))), false)), bool(bvec4(bool(bvec2((! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)))), false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bvec2((! (_GLF_IDENTITY(true, false || (true)))), false))))))))))))))))))))) && true))))), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(53.66), _GLF_FUZZED(642.929)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(true, (true) && true), true))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], read, 4, 64, 4);
}
