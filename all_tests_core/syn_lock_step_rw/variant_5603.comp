#version 460
struct _GLF_struct_2 {
 mat4 _f0;
 bvec2 _f1;
 uvec4 _f2;
 uint _f3;
 vec2 _f4;
 int _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 uint _f3;
 mat3x4 _f4;
 mat3x4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x4 _f1;
 uint next_virtual_gid;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec2(1.0), gl_SubgroupID);
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.y = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.z * GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.y;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size + subgroup_local_id;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_1(1.0, mat2x4(1.0), mat3x2(1.0), 1u, mat3x4(1.0), mat3x4(1.0), vec4(1.0)), _GLF_struct_2(mat4(1.0), bvec2(true), uvec4(1u), 1u, vec2(1.0), 1, mat2x4(1.0))), mat2x4(1.0), workgroup_base + _GLF_struct_replacement_0.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.x = read;
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], uint(1), 4, 64, 4);
 atomicStore(checker[virtual_gid], GLF_merged3_0_1_4_1_1_12_2_1_14readworkgroup_idworkgroup_size.x, 4, 64, 4);
}
