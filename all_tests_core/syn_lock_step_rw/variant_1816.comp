#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) * 1.0)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false), bvec2(bvec4(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.7)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(sqrt(vec2(0.0, 0.0)))), vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec4(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true, false, true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), _GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), max(_GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(min(vec2(1.0, 1.0), vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : min(vec2(1.0, 1.0), vec2(1.0, 1.0))))))))) : _GLF_FUZZED(injectionSwitch))) * (vec2(injectionSwitch))), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), vec2(injectionSwitch))))).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.6))), 1.0))) : _GLF_FUZZED(injectionSwitch))) * (vec2(injectionSwitch))), vec2(injectionSwitch), vec2(injectionSwitch))))).y), true, true, true)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(-32.05)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), min(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), (_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))) * (vec2(injectionSwitch))), vec2(injectionSwitch), vec2(injectionSwitch))))).y), true, true, true))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[0], _GLF_FUZZED(_GLF_IDENTITY(vec2(9788.8725, -470.416).g, (false ? _GLF_FUZZED(-4.7) : vec2(9788.8725, -470.416).g)))), vec2(_GLF_FUZZED(17.56), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false), false, true, false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), false || (bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / (1u | 0u)), 0u)), 0u) | (_GLF_IDENTITY(~ (gl_NumWorkGroups), (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)) ^ (~ (gl_NumWorkGroups))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)), (_GLF_IDENTITY(((subgroup_id)), clamp(((subgroup_id)), _GLF_IDENTITY(((subgroup_id)), _GLF_IDENTITY((((subgroup_id))), ((((subgroup_id)))) - 0u) << 0u), _GLF_IDENTITY(((subgroup_id)), (false ? _GLF_FUZZED(subgroup_size) : ((subgroup_id))))))) * 1u) - 0u) + 0u) * subgroup_size + subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size)))))) >> 0u)) * 1u), 0u + (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size)))) * 1u))))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(subgroup_id * subgroup_size, 1u, 1u))))))), (true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), clamp((_GLF_FUZZED(subgroup_size)), (_GLF_FUZZED(subgroup_size)), (_GLF_FUZZED(subgroup_size)))), uint(uint((_GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), uint(uint((_GLF_FUZZED(subgroup_size)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), uint(uint((_GLF_FUZZED(subgroup_size)))))), ((_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), uint(uint((_GLF_FUZZED(subgroup_size))))))) + 0u)))) | (_GLF_IDENTITY((_GLF_FUZZED(subgroup_size)), uint(uint((_GLF_FUZZED(subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), clamp((uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), (uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), (uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))))), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))))))))))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))), (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))) | (_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))))))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id)))) | (1u)), 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), clamp(uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))), uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (_GLF_IDENTITY((1u) | (1u), clamp((1u) | (1u), (1u) | (1u), (1u) | (1u)))) | (_GLF_IDENTITY((1u) | (1u), max((1u) | (1u), _GLF_IDENTITY((1u) | (1u), min((1u) | (1u), (1u) | (1u)))))))), 0u, 1u))))) - 0u))))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u)))))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec3(_GLF_FUZZED(subgroup_size), 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 0u, 1u))))))))))))))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), 0u, 0u))), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size)))) | 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(410.904) : 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), mix(float(_GLF_FUZZED(-7391.1924)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), float(mat2x4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.6)), bool(false)))) - 0.0), 1.0, 1.0), vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), log(1.0), sin(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0)))), bool(true))), 0.0))), 1.0)))), 0.0, 1.0, length(0.0), cos(0.0), 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED((4.4 * -1.4))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), min((1u), (1u))), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY((1u), 0u | ((1u))))))) | (1u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 1u * (uint(1u))), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u ^ (uint(1u)), (_GLF_IDENTITY(0u ^ (uint(1u)), 1u * (0u ^ (uint(1u))))) | (0u | 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + ((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], 1u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), max((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), max((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))), (uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u))), 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)))))) / 1u)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u))))))), max(_GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u))))))), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), _GLF_IDENTITY(0u, (0u) + 0u) + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), min(uint(_GLF_IDENTITY(1u, (1u) * 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), (uint(_GLF_IDENTITY(1u, (1u) * 1u))) << 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), uint(uvec3(uint(_GLF_IDENTITY(1u, (1u) * 1u)), 1u, 0u))), uint(_GLF_IDENTITY(1u, (1u) * 1u)))), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u), (uint(1u)) | (uint(1u))))))), (0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))) << 0u), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), (0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))) << 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | _GLF_IDENTITY((uint(1u)), min((uint(1u)), (uint(1u))))))))), (0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))) << 0u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))))))), min(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))))))), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))))))) << 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ (~ (1u)))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))) | (~ (_GLF_IDENTITY(1u, ~ (~ (1u)))))))), 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (uint(1u)) | (uint(1u)))))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (uint(1u)) | (uint(1u))))))))))) | 0u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) | (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], _GLF_IDENTITY(1u, 0u | (1u)), 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), (uint(1u)) >> 0u)) << 0u, uint(uvec3((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) << 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) ^ ((0u | 0u) & (166154u + 143567u)))), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_id)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), max((1u), (1u)))), (~ (_GLF_IDENTITY((1u), max((1u), (1u))))) | (~ (_GLF_IDENTITY((1u), max((1u), (1u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), max((1u), (1u)))), (~ (_GLF_IDENTITY((1u), max((1u), (1u))))) | (~ (_GLF_IDENTITY((1u), max((1u), (1u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))) << (0u | (1u ^ 1u)))), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) * 1u) ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))))), max((uint(1u)), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)), 0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))))))))) | (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (1u))), (uint(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (1u)))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))))))), (uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u ^ (uint(1u)), (0u ^ (uint(1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u)), uint(uvec3((_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) * 1u))), 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) << 0u)))), 1u, 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u)))), (uint(1u)) >> 0u)) << 0u, uint(uvec3((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) << 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u)))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), max((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), max((1u), (1u)))), (~ (_GLF_IDENTITY((1u), max((1u), (1u))))) | (~ (_GLF_IDENTITY((1u), max((1u), (1u)))))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) * 1u) ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(1u, uint(uint(1u))))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1u, ~ (~ (1u))))), max((uint(1u)), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)), 0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))))))))) | (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (1u))), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))))))), (uint(uvec4(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], 1u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u ^ (uint(1u)), (_GLF_IDENTITY(0u ^ (uint(1u)), max(_GLF_IDENTITY(0u ^ (uint(1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u ^ (uint(1u)), (1u & 1u), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (uvec4(0u ^ (uint(1u)), (1u & 1u), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))), (uint(_GLF_IDENTITY(uvec4(0u ^ (uint(1u)), (1u & 1u), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (uvec4(0u ^ (uint(1u)), (1u & 1u), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))) ^ 0u)), _GLF_IDENTITY(0u ^ (uint(1u)), (1u ^ 1u) ^ (0u ^ (uint(1u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), _GLF_IDENTITY(uint(1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(1u), (uint(1u)) - 0u) : _GLF_FUZZED(atomicAdd(workgroup_base, next_virtual_gid))))))))) | 0u)), 0u, 0u))) << 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u)))))), 1u, 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u ^ (uint(1u)), (0u ^ (uint(1u))) ^ 0u)))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) | (uint(1u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), (_GLF_IDENTITY((1u) | (1u), 0u + ((1u) | (1u)))) | 0u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(1u)), max((_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))), (0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))) << 0u), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))), (0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) << 0u)))))))) << 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (0u)))) + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))) << 0u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))), ~ (~ (_GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))))))) | (_GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))), ~ (~ (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))))))))))))))) * 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), max(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ (~ (1u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), ~ (~ (1u))))) | (~ (_GLF_IDENTITY(1u, ~ (~ (1u)))))))), 1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), (uint(1u)) | (uint(1u)))))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))), 0u | (uint(1u))), (uint(1u)) | (uint(1u))))))))))) | 0u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), (uint(uvec4(buf[virtual_gid], 1u, 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u ^ (uint(1u)), 0u ^ (0u ^ (uint(1u))))), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), 0u ^ _GLF_IDENTITY((uint(1u)), (_GLF_IDENTITY((uint(1u)), ((uint(1u))) ^ 0u)) | ((uint(1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u)))) | (_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u), (_GLF_IDENTITY(uint(uvec4(buf[virtual_gid], _GLF_IDENTITY(1u, 0u | (1u)), 0u, ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))))))))), max(_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), 0u + ((1u)))), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)), ((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))) | 0u))) << 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) << 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) << 0u), max(~ ((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) << 0u), ~ ((_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) << 0u))))), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), _GLF_IDENTITY(uint(1u), 0u ^ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) * 1u)) >> 0u))))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ _GLF_IDENTITY((uint(1u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) - 0u) ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), max((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), max((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), 0u)), (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), max((_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.2) : injectionSwitch.x))), float(_GLF_FUZZED(-492.884)), bool(false)))))))) | (uint(1u)))))), 0u))) << 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-1404.3613, -8.8, -27.43, -41.78))) : _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), (_GLF_IDENTITY((uint(1u)), max((uint(1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (_GLF_IDENTITY(uint(1u), uint(uvec3(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), 1u, 0u)))), _GLF_IDENTITY(0u, (0u) | (0u)) ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), (~ ((1u))) | (~ ((1u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(1u)), 0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))), ((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(1u)), 0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))))))) | ((_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(1u)), 0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x))), 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(1u)), _GLF_IDENTITY(0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u))), (0u ^ ((uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))) >> 0u))))))))) | (_GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (1u))), max(uint(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (1u))), uint(_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (1u))))), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(1u)))))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY((uint(1u)), max((uint(1u)), (_GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))) | (uint(1u))))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY((uint(uvec4(buf[virtual_gid], _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (1u))))), 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ((uint(uvec4(buf[virtual_gid], _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (1u))))), 0u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) / 1u) | 0u)) << 0u)))) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (bool(bvec2(_GLF_DEAD(false), false)))))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-13.03)), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(vec2(vec3(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), 0.0)), 0.0)), (vec2(vec3(vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), 0.0)), 0.0))) / vec2(1.0, 1.0)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bool((_GLF_DEAD(false)) && true)))), false, false, true)))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), (64) - 0)) ^ 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
