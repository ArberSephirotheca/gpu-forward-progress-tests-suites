#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y = subgroup_local_id, 0u ^ (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y = _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uaddCarry((subgroup_id - uvec3(44275u, 53872u, 146670u)), uvec3(145330u, 124297u, 182591u), GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), true, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y)) || false), false || (bool(((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))), _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, _GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785)))), -759.682))), mix(vec2(((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))[0], _GLF_FUZZED((-1.3))), vec2(_GLF_FUZZED(692.252), ((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(95917, -15104))))]), bvec2(false, true)))), (vec2(1.0, 1.0) * (_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, _GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785)))), -759.682))), mix(vec2(((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))[0], _GLF_FUZZED((-1.3))), vec2(_GLF_FUZZED(692.252), ((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(min(95917, -15104))))]), bvec2(false, true))))) / exp(vec2(0.0, 0.0))))).y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), 1.0))))) * (_GLF_IDENTITY((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682)), (_GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, _GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)))), -759.682))) + vec2(0.0, 0.0))), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, _GLF_IDENTITY(min(-5322.5785, -5322.5785), min(_GLF_IDENTITY(min(-5322.5785, -5322.5785), _GLF_IDENTITY(0.0 + (min(-5322.5785, -5322.5785)), mix(float(_GLF_FUZZED(9031.0112)), float(0.0 + (min(-5322.5785, -5322.5785))), bool(true)))), min(-5322.5785, -5322.5785)))), -759.682)))), (((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))) - vec2(0.0, 0.0))[0], _GLF_FUZZED((-1.3))), mix(vec2(_GLF_FUZZED(-54.09), _GLF_FUZZED(-2226.3586)), vec2((vec2(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, _GLF_IDENTITY(min(-5322.5785, -5322.5785), min(_GLF_IDENTITY(_GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), clamp(_GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), _GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), _GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))))), _GLF_IDENTITY(_GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), float(mat3x4(_GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0)))), _GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))))), _GLF_IDENTITY(min(-5322.5785, -5322.5785), min(min(-5322.5785, -5322.5785), _GLF_IDENTITY(min(-5322.5785, -5322.5785), (min(-5322.5785, -5322.5785)) * 1.0)))))), -759.682)))), (((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))) - vec2(0.0, 0.0))[0], _GLF_FUZZED((-1.3))))[0], (vec2(_GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, _GLF_IDENTITY(min(-5322.5785, -5322.5785), min(_GLF_IDENTITY(min(-5322.5785, -5322.5785), 0.0 + (min(-5322.5785, -5322.5785))), min(-5322.5785, -5322.5785)))), -759.682)))), (((true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-5322.5785, float(mat3x2(-5322.5785, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, sqrt(0.0), exp(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0))), min(-5322.5785, -5322.5785)), -759.682))))) - vec2(0.0, 0.0))[0], _GLF_FUZZED((-1.3))))[1]), bvec2(true, true))), vec2(_GLF_FUZZED(692.252), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(417.083), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(134.005)), bvec2(true, false)))[0], _GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), float(mat4x2(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-34.91)), bvec2(false, false))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682)), max(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), float(mat4x2(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-34.91)), bvec2(false, false))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682)), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), float(mat4x2(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-3.6), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(-3.6))), _GLF_FUZZED(-34.91)), bvec2(false, false))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682)), min(true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), float(mat4x2(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-34.91)), bvec2(false, false))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682)), true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0))), float(mat4x2(float(mat3x4((injectionSwitch)[0], 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 1.0, cos(0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-34.91)), bvec2(false, false))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-5322.5785, min(-5322.5785, -5322.5785)), -759.682))))))))[1]), bvec2(false, true)))))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, false || ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))), injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))), injectionSwitch)).x)) : _GLF_FUZZED(-71.39))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bool(! (! (! (_GLF_DEAD(false)))))))) && true)))), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) && true)), (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false))))), false, false, false))), ! (! (bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) && true)), (injectionSwitch.x < injectionSwitch.y))) && true), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && true)), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false))))), false, false, false))), ! (! _GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY((bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false))), ! (! ((bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false))))))) || false)))) && true)) || false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-174.211)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-174.211)), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 1.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (true && (true)), true && (! (true && (true))))))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), true, true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)), (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))) || false), false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z = GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z, max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z), 0u | ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z))) | (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z)), GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.z));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))), bool(bvec3(! (bool(bool(_GLF_IDENTITY(false, true && (false))))), false, false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup)))))) + _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)) | 0u), _GLF_IDENTITY(0u ^ ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)), (false ? _GLF_FUZZED(workgroup_size) : 0u ^ ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y) - 0u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)) | 0u), _GLF_IDENTITY(0u ^ ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)), (false ? _GLF_FUZZED(workgroup_size) : 0u ^ ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, (GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) * 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y), ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)) | 0u), _GLF_IDENTITY(0u ^ ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y)), (false ? _GLF_FUZZED(workgroup_size) : 0u ^ ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, min(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y, GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y))) - 0u)))))))))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y))))), false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.6)), bool(false)))) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.0) : injectionSwitch.y)))), mix(float(_GLF_FUZZED(-2.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(79.62)), bool(false)))) + 0.0))), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(1.9)), bool(false))), injectionSwitch[1])).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.x * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id, uvec3(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id[0], GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id[1], GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id[2])).y + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))), ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))))))), 0u, 0u)), 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, clamp(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1))) << (0u ^ 0u))), 1u * ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, clamp(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1, GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1))) << (0u ^ 0u))))) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (false ? _GLF_FUZZED(74101u) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))))), _GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u))))) ^ 0u) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)))))) | 0u), 0u))))) * 1u))))), (((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u))))))) | (_GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u)))))), (true ? ((GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.y + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | 0u)) + 0u)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))), 0u)))))) : _GLF_FUZZED(virtual_gid))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y], _GLF_IDENTITY(4, int(ivec3(4, 0, 0))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec2((true) && true, false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), true, true, true))), true)))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true)))))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))), true), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))), true), true)), false)))))))))), (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true), false)))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))), false, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true, true), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))))), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true), false)))))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0) < injectionSwitch.y) || false))), false, true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))), true))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))))), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true), false)))))), true && ((! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))), true))))), bvec3(bvec3(bvec3((injectionSwitch.x < injectionSwitch.y), true, true))))))), false, true), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true), false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id.x], uint(1), 4, 64, 4);
 atomicStore(checker[_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id) | (uvec3(190348u, 112952u, 191269u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, (GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id) | (uvec3(190348u, 112952u, 191269u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id) : _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id, _GLF_IDENTITY((GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id), uvec3(uvec3((GLF_merged3_0_1_11_1_1_11_2_1_12subgroup_idvirtual_gidworkgroup_id)))) | (uvec3(190348u, 112952u, 191269u) & uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_17_2_1_12next_virtual_gidsubgroup_local_idworkgroup_id))).y : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u), _GLF_FUZZED(subgroup_id)))))], read, 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(_GLF_IDENTITY(max(4, 4), (max(4, 4)) / 1), max(4, 4), _GLF_IDENTITY(max(4, 4), (max(4, 4)) | 0)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), true, true))))))), bool(bvec2(false, false))), bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))) || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (true))), true, false)), bool(bvec3(bool(bvec4(! (false), _GLF_IDENTITY(true, ! (! (true))), true, false)), true, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
  }
}
