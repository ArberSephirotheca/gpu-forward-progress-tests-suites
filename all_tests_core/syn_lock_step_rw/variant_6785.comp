#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-468.884)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bvec4(bool(bvec4(false, false, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(36.96, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 36.96 : _GLF_FUZZED(float(subgroup_id))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6796.2271)), bvec2(true, false))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true))) && true)))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(36.96, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 36.96 : _GLF_FUZZED(float(subgroup_id))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6796.2271)), bvec2(true, false))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true))) && true)))) && true))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(36.96, min(36.96, 36.96)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) ? 36.96 : _GLF_FUZZED(float(subgroup_id))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6796.2271)), bvec2(true, false))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true))) || false), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), true))) && _GLF_IDENTITY(true, ! (! (true))))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), (_GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), min(float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0)), float(vec4(injectionSwitch.x, 1.0, 1.0, 0.0))))) * 1.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(63.01)), float(injectionSwitch.y), bool(true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), true)))) || false))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))))) && true)) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, tan(0.0), 1.0, 0.0))).x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(false || (_GLF_DEAD(false)), false)), false || (bool(bvec2(false || (_GLF_DEAD(false)), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false || (_GLF_DEAD(false)))))), true)))) || false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), true, true))), ! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), true, true))), true && (! (bool(bvec3(_GLF_DEAD(false), true, true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(814.327) : injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-189.638) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, 1.0, 0.0, 1.0))))).y)) && true)))))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && true)))))))), false || (bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && true)))))))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(-43.17), _GLF_FUZZED(-6674.7487)), bvec2(false, false)))))).y))))) && true)))))))), false || (bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3877.1759), _GLF_FUZZED(-34.38)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(942.267, -850.654)) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 1.0, exp(0.0), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(vec2(0.0, 0.0), 1.0, exp(0.0), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec2(0.0, 0.0)))).y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(942.267, -850.654)) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) - _GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4(vec2(0.0, 0.0), 1.0, exp(0.0), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (mat4(vec2(0.0, 0.0), 1.0, exp(0.0), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec2(0.0, 0.0)))).y))))) && true)))))))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))), bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(acos(-940.245))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (~ ((gl_WorkGroupSize.x))) * 1u)))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (_GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x))))) ^ 0u)))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (gl_WorkGroupSize)).x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), (_GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x)))))) | 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u)))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) + 0.0))))), 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))), (false ? _GLF_FUZZED((+ subgroup_id)) : 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u), 1u, 1u, 0u))), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), 1u * (_GLF_IDENTITY(((gl_WorkGroupSize.x)), 0u | (((gl_WorkGroupSize.x))))))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 0u, 1u, 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (~ ((gl_WorkGroupSize.x))) * 1u)))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (_GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x))))) ^ 0u)))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (gl_WorkGroupSize)).x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), (_GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x)))))) | 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u)))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) + 0.0))))), 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))), (false ? _GLF_FUZZED((+ subgroup_id)) : 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u), 1u, 1u, 0u))), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), 1u * (_GLF_IDENTITY(((gl_WorkGroupSize.x)), 0u | (((gl_WorkGroupSize.x))))))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 0u, 1u, 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (~ ((gl_WorkGroupSize.x))) * 1u)))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), (_GLF_IDENTITY(((gl_WorkGroupSize.x)), clamp(((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x)), ((gl_WorkGroupSize.x))))) ^ 0u)))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (gl_WorkGroupSize)).x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | _GLF_IDENTITY(((gl_WorkGroupSize.x)), (_GLF_IDENTITY(((gl_WorkGroupSize.x)), ~ (~ (((gl_WorkGroupSize.x)))))) | 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u)))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) + 0.0))))), 0u))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, _GLF_IDENTITY(0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))), (false ? _GLF_FUZZED((+ subgroup_id)) : 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u), 1u, 1u, 0u))), _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x)), 1u * (_GLF_IDENTITY(((gl_WorkGroupSize.x)), 0u | (((gl_WorkGroupSize.x))))))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 0u, 1u, 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | ((gl_WorkGroupSize.x))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)))))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))), ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))) | ((gl_WorkGroupSize.x))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, false, false)), true)), ! (! (bool(bvec2(bool(bvec4(false, true, false, false)), true)))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, _GLF_IDENTITY(true, ! (! (true)))))), false, false))))), false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false)))) && true), false, false)), true)), ! (! (bool(bvec2(bool(bvec4(false, true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.y))), (false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.y))), (false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (false ? _GLF_FUZZED(155308u) : (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))) - 0u)))) | (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (false ? _GLF_FUZZED(155308u) : (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))) - 0u))), (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u))))), clamp(1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u))))), 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))))) - 0u)))) ^ 0u)) | (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), max(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 0u))), subgroup_base))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false)))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 0u))), subgroup_base)))), ~ (~ (((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false)))))) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 0u))), subgroup_base)))))))))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0))) ^ 0)) | 0)) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | _GLF_IDENTITY(0, max(0, 0))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1u, 0u, 0u)))) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | (subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)) | ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))))) | (subgroup_size)), (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)))) - 0))))) | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)))) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))), (false ? _GLF_FUZZED(workgroup_base) : (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | _GLF_IDENTITY(0, max(0, 0))), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), 1u, 0u, 0u)))) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | (subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)) | ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))))) | (subgroup_size)), (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)))) - 0))))) | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)))) % subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(uvec2(81158u, 2631u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) / 1u), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec2(virtual_gid, 0u)), (uint(uvec2(virtual_gid, 0u))) | 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (0u | 0u) | (_GLF_IDENTITY(0u, (0u) << 0u)))), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (0u | 0u) | (_GLF_IDENTITY(0u, (0u) << 0u)))), ~ (~ (uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (0u | 0u) | (_GLF_IDENTITY(0u, (0u) << 0u)))))))) + uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (_GLF_IDENTITY(uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u)), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u)))), (_GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))))) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size))))), uint(uint(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) << 0u))))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size))))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size))))), min(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size)))))))) / 1u), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, _GLF_IDENTITY(1u, ~ (~ (1u))), 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x) / 1.0) < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(virtual_gid))))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, 0u, 1u)))) >> 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, 0u, 1u)))) >> 0u)))))), (0u) << 0u))))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * ((uvec3(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(virtual_gid))))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((0u) << 0u, min((0u) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, 0u, 1u)))) >> 0u)), ~ (~ (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), uint(uvec4(uint(0u), 0u, 0u, 1u)))) >> 0u)))))), (0u) << 0u))))))))) << uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | 0u)), (~ (_GLF_IDENTITY(0u, (0u) | 0u))) / 1u))), 0u))) : _GLF_FUZZED(subgroup_size))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, (0u) << 0u))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))))) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size)), max((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))))) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? uint(_GLF_IDENTITY(uvec3(virtual_gid, 1u, 0u), (uvec3(virtual_gid, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))))) << 0u, min((0u) << 0u, (0u) << 0u))))))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(subgroup_size))))))))))))))]) >> 0u), 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec3(next_virtual_gid, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec3(next_virtual_gid, 0u, 0u)), (uint(uvec3(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))), 0u))) >> 0u), uint(uvec3(next_virtual_gid, 0u, 0u)))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && true)), (bool(_GLF_IDENTITY(bool((false) || false), (bool((false) || false)) && true))) && true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), true && (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))) && true))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, false))))), (((false))) || false)) && true) && true) || false))))))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), false || (bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), false || (bool(_GLF_IDENTITY(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))) || false, ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, true))), ((false)) && true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))) && true))))))))))) || false) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
