#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, true)))))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4094.5094, mix(float(_GLF_FUZZED(-25.37)), float(_GLF_IDENTITY(-4094.5094, (-4094.5094) / 1.0)), bool(true)))) : injectionSwitch.y))))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)) || false)) || false))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)), false, true, true)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, true))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true)))))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(true, ! (! (true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true)))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))))) > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false)))))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0))), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0)))), transpose(transpose(transpose(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0)))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0))), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0)))), transpose(transpose(transpose(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0)))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0))), (_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0))), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0)))), transpose(transpose(transpose(mat2(injectionSwitch.x, 1.0, 0.0, sqrt(sqrt(0.0)))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))), true && (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(823.251), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.8)))) - sqrt(0.0)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.8)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-954.746)), float(injectionSwitch.y), bool(true)))), clamp(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - tan(0.0)), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))), clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))))), ((injectionSwitch.y)) + 0.0) : _GLF_FUZZED(2.1)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(0.0, 0.0)).y : _GLF_FUZZED(exp2(_GLF_IDENTITY(55.92, min(55.92, 55.92)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(0.0, 0.0)).y : _GLF_FUZZED(exp2(_GLF_IDENTITY(55.92, min(55.92, 55.92)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(0.0, 0.0)).y : _GLF_FUZZED(exp2(_GLF_IDENTITY(55.92, min(55.92, 55.92)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(0.0, 0.0)).y : _GLF_FUZZED(exp2(_GLF_IDENTITY(55.92, min(55.92, 55.92)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))), 0.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(633.530, -12.45)) : injectionSwitch))) - vec2(0.0, 0.0)).y : _GLF_FUZZED(exp2(_GLF_IDENTITY(55.92, min(55.92, 55.92)))))))))), 0.0 + (injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(66.20), (true ? _GLF_FUZZED(66.20) : _GLF_FUZZED(5310.6441)))))) / 1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0))))), min(sin(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0))))), float(mat3x2(sin(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))))), 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), true && ((_GLF_IDENTITY(true, (true) && true))))) ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0))) : _GLF_FUZZED(-1.9), (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), true && ((_GLF_IDENTITY(true, (true) && true))))) ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0))) : _GLF_FUZZED(-1.9))))), _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-47.96) : round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(float(false ? _GLF_FUZZED(-47.96) : _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))))), max(round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))))))))), max(float(float(false ? _GLF_IDENTITY(_GLF_FUZZED(-47.96), (_GLF_FUZZED(-47.96)) - sqrt(0.0)) : round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.9)), float(1.0), bool(true))), 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0))))), mix(float(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-0.5)), bool(false)))))), float(float(false ? _GLF_FUZZED(-47.96) : round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0))))))))))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), _GLF_IDENTITY(length(0.0), (length(0.0)) * exp(0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true))))))), (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true)))))))))))), ! (! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), false))))))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true))))))), true && (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, true)))))))))))))))))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mix(vec4((vec4(injectionSwitch, 1.0, 0.0))[0], _GLF_FUZZED(-2302.7047), (vec4(injectionSwitch, 1.0, 0.0))[2], (vec4(injectionSwitch, 1.0, 0.0))[3]), vec4(_GLF_FUZZED(4.6), (vec4(injectionSwitch, 1.0, 0.0))[1], _GLF_FUZZED(-29.73), _GLF_FUZZED(-456.911)), bvec4(false, true, false, false))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u))) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id))))) | 0u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size + subgroup_local_id), (true ? ~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) : _GLF_FUZZED(workgroup_size))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u), ~ (~ (~ (subgroup_id))))) | (~ (subgroup_id))))) * subgroup_size, 1u))) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (1u | 1u) * _GLF_IDENTITY((subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_id) : _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id))))) >> 0u)) | 0u), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id))))) | 0u), 1u * (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (1u | 1u) * (subgroup_id))))) | 0u)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u * (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))) * subgroup_size) ^ 0u) + subgroup_local_id), (true ? ~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) + 0u)) : _GLF_FUZZED(workgroup_size)))))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : subgroup_size)), subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))) * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5436.3627)), vec2(_GLF_FUZZED(vec2(5.9, -6.7).r), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) / 1)) << 0), _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0)), 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0)))), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0)), _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(_GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, 0 ^ (4)), 4), (max(_GLF_IDENTITY(4, 0 ^ (4)), 4)) / 1))) + 0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(false, false || (false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, sqrt(1.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x) - abs(0.0)) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | 0) + (4)), 0, 1, (1 & _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1)))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(_GLF_IDENTITY(1, ~ (~ (1)))))))) * ((4))) | 0))), 0 + (4)), 0, 1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) | (1)))) & 1)), (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / int(_GLF_ONE(1.0, injectionSwitch.y))) | (4))), min(0 + (4), _GLF_IDENTITY(0 + (4), 1 * (0 + (4)))))), _GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0)))))), _GLF_IDENTITY((1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (_GLF_IDENTITY(1, (1) >> 0) & _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (0 | 0) ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))), min((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(1, (1) ^ 0), 0))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ 0)))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), max(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(24402))), 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215)), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))) | (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))), clamp((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))), max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), 1 & _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))), 0 ^ ((1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))))), clamp((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ 0), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(8406, -24068, 37042)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 + ((1))) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(ivec3(-1683, -41596, -88215)), min(_GLF_FUZZED(ivec3(-1683, -41596, -88215)), _GLF_FUZZED(ivec3(-1683, -41596, -88215))))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))))), _GLF_IDENTITY(int(int(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))))))), int(_GLF_IDENTITY(ivec3(int(int(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))))))), 1, 1), clamp(ivec3(int(int(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))))))), 1, 1), ivec3(int(int(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))))))), 1, 1), ivec3(int(int(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0)))))))), 1, 1))))))))))), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0)), (int(ivec4((_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(5), int(5))), 1, 0))) >> 0))), clamp(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 1 & _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))), ((_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215)))))) | ((_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215)))))))) >> ivec3(0, 0, 0)) | ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec3(1, 1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-396.479)), float(0.0), bool(true))), injectionSwitch.x))), (true ? ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(ivec3(-1683, -41596, -88215))))) | ivec3(0, 0, 0))) | ivec3(0, 0, 0))))))))))))), ((1 & _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4((1), 1, 0, 1)), 0 ^ (_GLF_IDENTITY(int(ivec4((1), 1, 0, 1)), clamp(int(ivec4((1), 1, 0, 1)), _GLF_IDENTITY(int(ivec4((1), 1, 0, 1)), 0 | (_GLF_IDENTITY(int(ivec4((1), 1, 0, 1)), ~ (_GLF_IDENTITY(~ (int(ivec4((1), 1, 0, 1))), (~ (int(ivec4((1), 1, 0, 1)))) - 0))))), int(ivec4((1), 1, 0, 1))))))) | (_GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | 0), 1, 1, 1))))) + ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0, 0)), ivec4(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), 0 | ((4)))), 0, 1, (1 & _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, _GLF_IDENTITY((1 & _GLF_IDENTITY(1, (1) / 1)), max((1 & _GLF_IDENTITY(1, (1) / 1)), (1 & _GLF_IDENTITY(1, (1) / 1))))), _GLF_IDENTITY(clamp(ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, (1 & 1)), ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, _GLF_IDENTITY((1 & 1), ~ (~ ((1 & 1))))), ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, (1 & 1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 + (4)), 0, 1, (_GLF_IDENTITY(1 & 1, (1 & 1) >> 0))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(43726) : _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | 0) + (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), clamp(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4)))))), 0, 1, (1 & 1)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) >> (0 >> _GLF_IDENTITY(int(5), int(5))), 1 * (((4)) >> (0 >> _GLF_IDENTITY(int(5), int(5))))))), 0, 1, (1 & 1)), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), ((4)) >> (0 >> _GLF_IDENTITY(int(5), int(5))))), 0, 1, (1 & 1)))))), min((clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), max(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4)))), 0, 1, (1 & 1)), ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, (1 & 1)), ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, (1 & 1)))), (clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), (true ? _GLF_IDENTITY(4, 0 + (4)) : _GLF_FUZZED(-49187))), 0, 1, _GLF_IDENTITY((1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), ((_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0), (1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) >> 0)) ^ 0)) - 0))) - 0)), ivec4(_GLF_IDENTITY(4, 0 + _GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4((4), 1, 1, 1)), (int(ivec4((4), 1, 1, 1))) | _GLF_IDENTITY((int(ivec4((4), 1, 1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, int(ivec3(1, (1 | 0), 1)))))))), 0 + ((int(ivec4((4), 1, 1, 1)))))), clamp(_GLF_IDENTITY(int(ivec4((4), 1, 1, 1)), (int(ivec4((4), 1, 1, 1))) >> 0), _GLF_IDENTITY(int(ivec4((4), 1, 1, 1)), (int(ivec4((4), 1, 1, 1))) >> 0), int(ivec4((4), 1, 1, 1)))))) | 0)), 0, 1, (1 & 1)), ivec4(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, min(4, 4)))), 0, 1, (1 & 1)))))), ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(1.3, 573.726).t)), float(0.0), bool(true))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (~ (clamp(ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), max(int(_GLF_IDENTITY(1, (1) / 1)), int(_GLF_IDENTITY(1, (1) / 1)))), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1)))), (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(13346) : int(4))))) | (_GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1)))), ~ (~ (~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1))))))))))))) / 1), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1)))))))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1)))))))) / 1, int(ivec2((_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1)))), (~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | 0)) / 1))))) | 0))))) / 1, 0)))) | (0 << _GLF_IDENTITY(int(6), int(6)))))))), _GLF_IDENTITY((1 & 1), 1 * (_GLF_IDENTITY((1 & 1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1 & 1), 0 | (_GLF_IDENTITY((1 & 1), ((1 & 1)) | (0 | 0)))), 0), (false ? _GLF_FUZZED(ivec2(-86342, -74538)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY((1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29799)))), max(_GLF_IDENTITY((1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29799)))), ((1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29799))))) >> 0), _GLF_IDENTITY((1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29799)))), int(int((1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-29799))))))))), 0 | (_GLF_IDENTITY((1 & 1), ((1 & 1)) | (0 | 0)))), 0)))))))), ivec4(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, int(ivec3(4, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 0, 1, (1 & 1)), ivec4(_GLF_IDENTITY(4, 0 + (4)), 0, 1, (1 & 1))))))))))))), 64, 4);
 if(_GLF_DEAD(false))
  return;
}
