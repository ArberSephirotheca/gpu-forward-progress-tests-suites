#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 bvec4 _f0;
 mat3x4 _f1;
 bool _f2;
 bvec4 _f3;
 mat4x2 _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat4 _f1;
 uvec4 _f2;
 ivec4 _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint _f1;
 mat2x3 _f2;
 uint workgroup_id;
 mat3 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, false), true))), false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, true))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false, false), true)))), true, false, false)))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(cos(29.39)) : injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), ((injectionSwitch.x > injectionSwitch.y)) && true))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), true && ((_GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0), (mat3((injectionSwitch), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), mix(float(_GLF_FUZZED(403.732)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), mix(float(_GLF_FUZZED(403.732)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), 0.0, 0.0))), 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0))), 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(68.15)))))), (true ? _GLF_IDENTITY(mat3((injectionSwitch), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0), (mat3((injectionSwitch), 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), mix(float(_GLF_FUZZED(403.732)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(403.732, mix(float(_GLF_FUZZED(41.96)), float(_GLF_IDENTITY(403.732, min(403.732, _GLF_IDENTITY(403.732, mix(float(403.732), float(_GLF_FUZZED(-2.7)), bool(false)))))), bool(true))))), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), clamp((_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, determinant(mat4(cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))), 0.0, 0.0))), 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0))), (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0))), 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(68.15)))))) : _GLF_FUZZED(mat3(-616.255, -2.4, -6.6, -94.55, -19.08, 419.511, 0.4, 5.7, -6599.3967)))))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(49.74), _GLF_FUZZED(-0.3)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (true ? ((injectionSwitch))[1] : _GLF_FUZZED(6.6)))), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), (injectionSwitch))), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) || false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)))))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))), vec2(0.0, 1.0))), 1.0, 1.0, 1.0)))))).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(71.44) : injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.015), _GLF_FUZZED(1.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (bool((injectionSwitch.x > injectionSwitch.y))))), false || (! ((! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(66.92)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-37.89)), bool(false)))))))))) + mat2(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -2691.6815))), vec2(_GLF_FUZZED(13.29), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.9) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.5) : injectionSwitch.x)))))) > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((false))) || false)))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-767.092, 5.8)))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)))))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.6) : injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), (vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) * vec2(1.0, 1.0))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true))))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))))), true && (false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-209.514), _GLF_FUZZED(3843.5770)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-6601.9911)), bool(false)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-935.616)), bool(false)))))))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true))))))))))))), true, true)), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) || false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4691.0721)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-543.278)), float(injectionSwitch.y), bool(true)))))))))))))))))
  return;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(bvec4(_GLF_IDENTITY(true, ! (! (true)))), mat4(1.0), uvec4(1u), ivec4(1), true), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))), max((1u), _GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | ((1u)))) << 0u), clamp(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | ((1u)))) << 0u), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | ((1u)))) << 0u), _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) | ((1u)))) << 0u))))) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))) * _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ~ (~ ((1u))))), ((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((0u))) / 1u)))))))))))) * _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))), ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(41120u)))) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))) ^ 0u))), ((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))), min(uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), _GLF_IDENTITY(min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))), 0u | (min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))), uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))), ~ (~ ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))))))))))) * _GLF_IDENTITY(1u, 0u ^ (1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))) * _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((0u))) / 1u)))))))))))) * _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u))), (true ? (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) - 0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | _GLF_IDENTITY(((0u)), (((0u))) - 0u)) / 1u)))))))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY(1u, (1u) >> 0u))) : _GLF_FUZZED((workgroup_size))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))), ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))) ^ 0u))), ((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))), min(uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))), uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u))) | ((0u)), min(((_GLF_IDENTITY(0u, (0u) + 0u))) | ((0u)), ((_GLF_IDENTITY(0u, (0u) + 0u))) | ((0u)))))))))))))))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((_GLF_IDENTITY(0u, (0u) | 0u))) | ((0u))))))))))), ~ (~ ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, min((0u) - 0u, (0u) - 0u)))), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))))))))))) * _GLF_IDENTITY(1u, 0u ^ (1u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))) * _GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(101890u))), _GLF_IDENTITY(0u, 0u + (0u)), 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((_GLF_IDENTITY(0u, 0u | (0u))))) / 1u)))))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u), ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) >> 0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((0u))) / 1u)))))))))))), min((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((0u))) / 1u)))))))))))), (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((0u))) / 1u)))))))))))))), (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), _GLF_IDENTITY(((0u)) | ((0u)), (((0u)) | ((0u))) / 1u)))))))))))))) * _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) >> 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))), ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))) ^ 0u))), ((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))), min(uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))), uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), uint(uvec3((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))), 1u, 0u))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))), (~ ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u))))))))))))) | (~ ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))))))), ~ (~ ((_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (1u) << _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), ((0u)) | ((0u)))))))))))))))))))) * _GLF_IDENTITY(1u, 0u ^ (1u)))))))) << 0u), mat2x3(1.0), gl_WorkGroupID.x, mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), true)))))) ? _GLF_FUZZED(7605.8443) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7605.8443) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7605.8443) : 1.0))) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7605.8443) : 1.0))))), _GLF_struct_1(bvec4(true), mat3x4(1.0), true, bvec4(true), mat4x2(1.0), vec3(1.0), 1.0)), mat3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -5.5 : -9170.2411))), vec2(_GLF_FUZZED(-2219.5948), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * (_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, true))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), false || (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (false))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_3._f0.workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3._f0.workgroup_id, (_GLF_struct_replacement_3._f0.workgroup_id) - 0u)), ((_GLF_struct_replacement_3._f0.workgroup_id)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3._f0.workgroup_id, (_GLF_struct_replacement_3._f0.workgroup_id) - 0u)), ((_GLF_struct_replacement_3._f0.workgroup_id)) << 0u), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3._f0.workgroup_id, (_GLF_struct_replacement_3._f0.workgroup_id) - 0u)), ((_GLF_struct_replacement_3._f0.workgroup_id)) << 0u), 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3._f0.workgroup_id, (_GLF_struct_replacement_3._f0.workgroup_id) - 0u)), ((_GLF_struct_replacement_3._f0.workgroup_id)) << 0u), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_3._f0.workgroup_id, (_GLF_struct_replacement_3._f0.workgroup_id) - 0u)), ((_GLF_struct_replacement_3._f0.workgroup_id)) << 0u), 0u, 1u, 0u))))) / 1u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)) ? _GLF_FUZZED(uaddCarry((workgroup_base >> workgroup_size), _GLF_IDENTITY(uint(-854.987), clamp(uint(-854.987), uint(-854.987), _GLF_IDENTITY(uint(-854.987), clamp(uint(-854.987), uint(-854.987), _GLF_IDENTITY(uint(-854.987), (uint(-854.987)) | 0u))))), workgroup_size)) : subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))), (_GLF_IDENTITY((1), clamp((1), (1), (1))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)))) | _GLF_IDENTITY((-52263 & 0), (_GLF_IDENTITY((-52263 & 0), 0 ^ (_GLF_IDENTITY((-52263 & 0), ((-52263 & 0)) << 0)))) << 0)))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))), ! (! (! (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.3, 71.93)) : injectionSwitch)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(78528, -46086, 85063).p) : _GLF_IDENTITY(1, (1) << 0), (true ? false ? _GLF_FUZZED(ivec3(78528, -46086, 85063).p) : _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(76957)))))), 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(~ (virtual_gid), 1u * (~ (virtual_gid)))) - 0u)))) >> 0u), (virtual_gid) | (virtual_gid))) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(60.06)))))))), float(_GLF_FUZZED(-5848.2450)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)))) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false)))))))))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), ! (! (! ((! (false)) || false))))) && true), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)) || false)) || false))), ! (! (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false))) || false)) || false)) || false))))))), false, false, false)))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)))) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false)))))))))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), ! (! (! ((! (false)) || false))))) && true), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)) || false)) || false))), ! (! (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false))) || false)) || false)) || false))))))), false, false, false)))) && true), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false)))) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false)))))))))) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), ! (! (! ((! (false)) || false))))) && true), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)) || false)) || false))), ! (! (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false))) || false)) || false)) || false))))))), false, false, false)))) && true), true, false, true))) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! (_GLF_IDENTITY((! (false)), bool(bool((! (false))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), _GLF_IDENTITY(true, ! (! (true))), false)))) || false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), (bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))) || false)) || false)) || false)) || false))), ! (! (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false), _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))) || false))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false))) || false)), bool(bool((! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))) || false))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false))) || false))))) || false)) || false))))))), false, false, false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))), (! ((! (false)) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! (_GLF_IDENTITY((! (false)), bool(bool((! (false))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), _GLF_IDENTITY(true, ! (! (true))), false)))) || false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), _GLF_IDENTITY((bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), ! (! (_GLF_IDENTITY((bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), false || ((bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))))) || false)) || false)) || false)) || false))), ! (! (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false), _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false))), false))) || false)), bool(bool((! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))) || false))), bool(bvec2((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false))) || false))))) || false)) || false))))))), false, false, false)))) && true)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), false || (((false))))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((! (false)) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false)))) || false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((! _GLF_IDENTITY((false), ! (! ((false))))) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), ! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false)) || false), (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true), bool(bvec3(_GLF_IDENTITY(! ((! (false)) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true && (! (_GLF_IDENTITY(! (! ((! (false)) || false)), bool(bool(! (! ((! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), true, false)))))) || false)) || false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((! (false)) || false), bool(bvec3(! ((! (false)) || false), true, false))), false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(! ((! (false)) || false), bool(bvec3(! ((! (false)) || false), true, false))), false, false, true)), false, false, true)), (bool(bvec4(bool(bvec4(_GLF_IDENTITY(! ((! (false)) || false), bool(bvec3(! ((! (false)) || false), true, false))), false, false, true)), false, false, true))) && true)))) || false)) || false)))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || _GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bvec4((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) || false), _GLF_IDENTITY(bool(bvec2(! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false), true)), bool(bvec4(bool(bvec2(! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false), true)), true, false, false)))))))) || false)) || false))), ! (! (_GLF_IDENTITY((! (false)) || false, ! (_GLF_IDENTITY(! ((! (false)) || false), (_GLF_IDENTITY(! ((! (false)) || false), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), bool(bvec2((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || false, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (! (false)))) || false, true), true, true)))))))), false))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), false || (bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec4((false), false, true, false))), false, true)))))))))))))) || false))))))), false, false, false)))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec3(bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))), true, false)))))), true)), (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)) || false), (_GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))), bool(bvec3(bool(bool(! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(true, ! (! (true))), false)))))), true)), (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) && true, bool(bvec3((_GLF_IDENTITY(true, false || (true))) && true, false, false))))))) || false)) || false)) || false))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-368.669), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1.5)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-3479.2031), _GLF_FUZZED(76.89)), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), ~ (~ (int(ivec2(0, 1)))))), _GLF_IDENTITY(0, (0) - 0), 0))], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), false || (! (! ((false) && true))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
}
