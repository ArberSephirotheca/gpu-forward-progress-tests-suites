#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))), true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(5256.2894), _GLF_FUZZED(9114.3157)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true, true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.3) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))) < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bool(bool(false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec2(injectionSwitch[0], 0.0))), injectionSwitch[1])).x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(33182) : _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | 0)))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     return;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true))))))), false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true) && (_GLF_DEAD(false))))), true, true))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(mat4x2(vec4(1.0, 1.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0)), (vec4(mat4x2(vec4(1.0, 1.0, 0.0, 1.0), 1.0, 1.0, 0.0, 0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))))), injectionSwitch.y))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-85.67)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false), false, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false), false, false))))))) && true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) && true)) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, true && ((false) || false)), true, true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, true && ((false) || false)), true, true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, true && ((false) || false)), true, true))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false))) && true, ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, (false) || false))) && true), false || (! (((_GLF_IDENTITY(false, (false) || false))) && true)))))), false, true, false)))) || false))) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), false, true, false)))) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))) || false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))), ((false)) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true) || false)))) || false))))) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(true, (true) && true) && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))
                {
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-0.9)) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-0.9)) : injectionSwitch.y))))))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.9))) > injectionSwitch.y))))))))));
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-184.048)), float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.0))) : _GLF_FUZZED(-9.1)))), bool(true))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(false || (bool(bvec2(false, true))), true && (_GLF_IDENTITY(false || (bool(bvec2(false, true))), bool(bvec4(false || (bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (bool(_GLF_WRAPPED_LOOP(false))))), ((_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (bool(_GLF_WRAPPED_LOOP(false)))))) && true), false || (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bool(bool(_GLF_WRAPPED_LOOP(false))))), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (bool(_GLF_WRAPPED_LOOP(false))))), ((_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (bool(_GLF_WRAPPED_LOOP(false)))))) && true), false || (! (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bool(bool(_GLF_WRAPPED_LOOP(false))))), false, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, true)))))));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))) && true)))), true && (_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(bool(_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), false || (! (((false)))))))))), (! ((false))) || false))))))), ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))) && true))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4(! (_GLF_WRAPPED_IF_TRUE(true)), false, true, false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2])))), ~ (~ (uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2])))))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, abs(0.0), 1.0)), max(float(vec4(injectionSwitch.x, 0.0, abs(0.0), 1.0)), float(vec4(injectionSwitch.x, 0.0, abs(0.0), 1.0))))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, _GLF_IDENTITY(false, (false) && true)))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.3)))), float(_GLF_FUZZED(-9107.3762)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.3)))), float(_GLF_FUZZED(-9107.3762)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true, false, false))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x < injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
      {
       return;
      }
     else
      {
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : 0u ^ (subgroup_id * subgroup_size)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * subgroup_size), uint(uvec3(0u ^ (subgroup_id * subgroup_size), 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u ^ (subgroup_id * subgroup_size))) << 0u))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, min(0, 0))))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), max(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))) >> ivec2(0, 0), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))) >> ivec2(0, 0), ((_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))) >> ivec2(0, 0)) / ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(5), ivec2(5))) >> _GLF_IDENTITY(ivec2(5), ivec2(5)))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))) >> ivec2(0, 0), _GLF_IDENTITY(ivec2(ivec4((_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))) >> ivec2(0, 0), 0, 0)), (ivec2(ivec4((_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))) >> ivec2(0, 0), 0, 0))) ^ ivec2(0, 0)))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 0), (ivec3(0, 1, 0)) | ivec3(0, 0, 0))))) | (0)))))))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((1), (0 & 79799) ^ ((1))), int(ivec4(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(53764) : 1))), int(_GLF_IDENTITY(ivec4((1), 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))), 0), (ivec4((1), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)) << ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec3(int(5), 0, 1)), int(int(int(ivec3(int(5), 0, 1)))))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 0), min(ivec2(1, 0), ivec2(1, 0))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, 0))))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 | (_GLF_IDENTITY((1), ((1)) / 1)))) - 0))), 1))), min((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) - 0)), 1))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(0 + (~ (_GLF_IDENTITY(0, (0) - 0))), (0 + (~ (_GLF_IDENTITY(0, (0) - 0)))) | (_GLF_IDENTITY(0 + (~ (_GLF_IDENTITY(0, (0) - 0))), clamp(0 + (~ (_GLF_IDENTITY(0, (0) - 0))), 0 + (~ (_GLF_IDENTITY(0, (0) - 0))), 0 + (~ (_GLF_IDENTITY(0, (0) - 0))))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), 0 + (~ (_GLF_IDENTITY(0, (0) - 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), 0 + (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), (~ ((0) - 0)) + 0)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), 0 + (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), ((_GLF_IDENTITY(0, (0) - 0))) | ((_GLF_IDENTITY(0, (0) - 0)))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) - 0), 0, 0, (1 ^ 0)))), 1))), ((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) / 1)), (ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(0 + (~ (_GLF_IDENTITY(0, (0) - 0))), (0 + (~ (_GLF_IDENTITY(0, (0) - 0)))) | (_GLF_IDENTITY(0 + (~ (_GLF_IDENTITY(0, (0) - 0))), clamp(0 + (~ (_GLF_IDENTITY(0, (0) - 0))), 0 + (~ (_GLF_IDENTITY(0, (0) - 0))), 0 + (~ (_GLF_IDENTITY(0, (0) - 0))))))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), 0 + (~ (_GLF_IDENTITY(0, (0) - 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), 0 + (~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ~ (_GLF_IDENTITY(~ ((0) - 0), (~ ((0) - 0)) + 0)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), 0 + (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), ((_GLF_IDENTITY(0, (0) - 0))) | ((_GLF_IDENTITY(0, (0) - 0)))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) - 0), 0, 0, (1 ^ 0)))), 1))), ((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) / 1))) | ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4371) : 0)))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 + (0)))))))) / 1)) + 0))), 1))))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4371) : 0)))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 + (0)))))))) / 1)) + 0))), 1))))))), clamp(max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4371) : 0)))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 + (0)))))))) / 1)) + 0))), 1))))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4371) : 0)))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 + (0)))))))) / 1)) + 0))), 1))))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(4371) : 0)))))), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1), (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 + (0)))))))) / 1)) + 0))), 1)))))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, ((0 ^ 1) ^ 1) | (0)), (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(0, 0) + _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ 0))))), ~ (~ ((ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) ^ 0))))))))), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0)))) / ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(ivec3(~ (~ (1)), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(58491))))))))), 1))))))))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0)))), (ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))) | ivec2(0, 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (true ? (_GLF_IDENTITY((1), ((_GLF_IDENTITY(1, min(1, 1)))) >> 0)) * ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(int(int(5)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), _GLF_IDENTITY(int(5), 0 | (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))))) : _GLF_FUZZED(36778)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(_GLF_IDENTITY(~ (1), (~ (1)) << (0 >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (_GLF_IDENTITY(0, (0) | (0))))), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (false ? _GLF_FUZZED(-85039) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))))), (_GLF_IDENTITY(1, max(1, 1)) | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), _GLF_IDENTITY(max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)), (max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0))) / 1)) ^ 0))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(80679) : 0))))))))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), max((0), (0))), _GLF_IDENTITY((0), ((0)) | ((0))))) ^ 0) : _GLF_FUZZED(-1201)))))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))))))), int(ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))))))), 0, 1)))))) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))), ~ (~ ((int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1)))))))) | 0)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), int(ivec3(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), (false ? _GLF_FUZZED(77898) : _GLF_IDENTITY(~ (1), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) * ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * (ivec2(1, 1) | ivec2(0, 0))), ivec2(ivec3(ivec2(1, 0), 0))))), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0 ^ ((1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1))))))), (max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))) / 1))), 1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), int(_GLF_IDENTITY(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)) : _GLF_FUZZED(-43954))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(1, (1) >> 0)))), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), (_GLF_IDENTITY(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)) : _GLF_FUZZED(-43954))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(1, (1) >> 0)))), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), (true ? _GLF_IDENTITY(ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)) : _GLF_FUZZED(-43954))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(1, (1) >> 0)))), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), (ivec4(~ (1), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(-67463, max(-67463, -67463))) : _GLF_IDENTITY(0, (0) ^ 0)) : _GLF_FUZZED(-43954))))), ivec2(ivec3(ivec2(1, 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(0), int(0))) ^ (_GLF_IDENTITY(1, (1) >> 0)))), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))) << ivec4(0, 0, 0, 0)) : _GLF_FUZZED(ivec4(-22459, 51786, 24735, 19370))))) + (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0)))))))))) % subgroup_size))), 0u ^ (((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) - ((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(4), int(4)))), int(ivec4(~ (_GLF_IDENTITY(1, int(ivec2(1, 0)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), _GLF_IDENTITY(0, min(0, 0))))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec4(ivec2(0, 0), 1, (0 << _GLF_IDENTITY(int(8), int(8)))))) | (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, 0 + (1))), ivec2(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(8), int(8))) + (_GLF_IDENTITY(0, (0) / 1))), 0) + (ivec2(1, 1)))))), (int(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) | (ivec2(1, 1))))) | 0)))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) - 0)), int(ivec4(~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), _GLF_IDENTITY(((1)) >> 0, clamp(((1)) >> 0, ((1)) >> 0, ((1)) >> 0)))) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) ^ 0) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-68287) : int(5)))) / 1)))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), 0), 0))))), (true ? _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), 0), 0))))) : _GLF_FUZZED(179))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1))), 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0))))), (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (_GLF_IDENTITY(1, int(ivec2(1, 0)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))), 0 ^ ((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))))) / 1))), 1))))))), 0 | (max(_GLF_IDENTITY(~ (1), int(ivec4(~ (1), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), _GLF_IDENTITY(~ (1), int(ivec4(~ (_GLF_IDENTITY(1, int(ivec2(1, 0)))), 1, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0), ivec2(ivec3(ivec2(1, 0), 0))))), (1 | _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))), 0 ^ ((_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), _GLF_IDENTITY((1), ((1)) >> 0)))))) / 1))), 1)))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), (1), (1))), int(ivec4(~ (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, (0 >> _GLF_IDENTITY(int(7), int(7))))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) ^ 0), (0 >> _GLF_IDENTITY(int(4), int(4))) | (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) ^ 0)))))), ivec2(ivec3(ivec2(_GLF_IDENTITY(1, (1) ^ 0), 0), 0)))), (int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-67463) : _GLF_IDENTITY(0, (0) ^ 0)))), ivec2(ivec3(ivec2(1, 0), 0))))) ^ 0)), (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(min(_GLF_IDENTITY(1, ~ (~ (1))), 1), min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), 0 | (min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))))))))) % subgroup_size)))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))) || false)) && true))))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (true ? _GLF_IDENTITY(3, 1 * (3)) : _GLF_FUZZED(37967)))), int(3)), (true ? _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(17989) : int(3)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.0) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(int(3), int(3))) ^ 0)) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)))) : _GLF_FUZZED(4594)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(-12008 & 0, clamp(-12008 & 0, _GLF_IDENTITY(-12008 & 0, (_GLF_IDENTITY(-12008 & 0, (-12008 & 0) * 1)) << 0), _GLF_IDENTITY(-12008 & 0, max(-12008 & 0, -12008 & 0))))), ((_GLF_IDENTITY(-12008 & 0, clamp(-12008 & 0, _GLF_IDENTITY(-12008 & 0, (_GLF_IDENTITY(-12008 & 0, (-12008 & 0) * 1)) << 0), _GLF_IDENTITY(-12008 & 0, max(-12008 & 0, -12008 & 0)))))) / 1) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(vec2(15.18, -9540.9397).t)), vec2(_GLF_FUZZED(-581.311), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))), bool(bool(_GLF_IDENTITY(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) + _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))))), injectionSwitch.y)), (int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))) * 1)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((-12008 & 0), ((-12008 & 0)) ^ 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), bool(bool(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((-12008 & 0), ((-12008 & 0)) ^ 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), bool(bool(_injected_loop_counter < (_GLF_IDENTITY((-12008 & 0), ((-12008 & 0)) ^ 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((-12008 & 0), ((-12008 & 0)) ^ 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), bool(bool(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY((-12008 & 0), ((-12008 & 0)) ^ 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)), bool(bool(_injected_loop_counter < (_GLF_IDENTITY((-12008 & 0), ((-12008 & 0)) ^ 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0)))))))), false)))), bvec2(bvec4(bvec2(_injected_loop_counter < ((-12008 & 0) ^ _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))), 1 * ((int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0)), false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true))) && true), false))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))))[1]), vec2(_GLF_FUZZED(vec3(_GLF_IDENTITY(2.5, (true ? 2.5 : _GLF_FUZZED(dot(vec3(144.566, -99.39, 1.8), vec3(2.3, -574.298, 6502.4153))))), -2.3, -431.098).x), _GLF_FUZZED(859.436)), bvec2(false, false))).y))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)), (bool(bvec4(false, true, true, false))) && true), _GLF_IDENTITY(false, ! (! (false))), true, false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true)))))))))), (! (! (_GLF_DEAD(false)))) && true))))))
      return;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))) && true, ! (! (_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))) && true, ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(0 & 85042, ~ (~ (0 & 85042)))) ^ (1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-195.430), (true ? injectionSwitch.y : _GLF_FUZZED(-195.430)) / 1.0)))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(abs(0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(abs(0.0), 1.0))))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))), true)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true), false, _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)))), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))))), false || (! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false))))), false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), false)))), true))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))) * (_injected_loop_counter ++)), (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))) * (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)))) - 0))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(! (_GLF_DEAD(false)), true, true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))), false, false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, true)))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))), false)))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, false || (true)), true)))))))))), _GLF_IDENTITY(false, ! (! (false))))), bool(bool(bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, false || (true)), true)))))))))), _GLF_IDENTITY(false, ! (! (false))))))))))))))
      break;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(24840) : _injected_loop_counter --)), (0 >> _GLF_IDENTITY(int(1), int(1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(24840) : _injected_loop_counter --)), (_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(24840) : _injected_loop_counter --))) | 0))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, false, true)))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5491.1138 / 5429.9617))), float(injectionSwitch.y), bool(true))), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(81.79, -1294.0393)) : injectionSwitch)), 0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(81.79, -1294.0393)) : injectionSwitch)), 0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-386.329) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-386.329) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true)))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (true))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) ^ (read))) / 1u))), 4, 64, 4);
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), 1 * (int(_injected_loop_counter))))) != (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
                return;
               break;
              }
             break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((! (bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)), (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), true))) && true)), (false) && true)))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                continue;
               return;
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.0)), float(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y)), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(77.15) : 0.0)) + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), clamp(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(77.15) : 0.0)) + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(77.15) : 0.0)) + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), (false ? _GLF_FUZZED(-653.359) : float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(77.15) : 0.0)) + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(77.15) : 0.0)) + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-8.1)), float(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), bool(true)))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(log2(-894.237)) : injectionSwitch.x)), 0.0 + (injectionSwitch.x)), 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) + 0.0))) / _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, abs(1.0), 0.0), vec3(0.0, 1.0, 0.0)))), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(31.94) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y)), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0)), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), mat2(mat4x3(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), mat2(mat4x3(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))))), false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.8)), bool(false))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(_GLF_FUZZED(-23.49)), float(0.0 + (injectionSwitch.x)), bool(true)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x)) + 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(-84.02))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))), max(float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))), float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))))))))), 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, log(1.0), 0.0))))) > injectionSwitch.y))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(31.94) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y)), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0)), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), mat2(mat4x3(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), mat2(mat4x3(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))))), false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.8)), bool(false))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(_GLF_FUZZED(-23.49)), float(0.0 + (injectionSwitch.x)), bool(true)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x)) + 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(-84.02))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))), max(float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))), float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))))))))), 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, log(1.0), 0.0))))) > injectionSwitch.y))) && true))), ((! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(31.94) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0))))) > injectionSwitch.y)), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) - 0.0)), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), mat2(mat4x3(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))), _GLF_IDENTITY(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))), mat2(mat4x3(mat2(mat4x2(mat2(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))))))))))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(8.9), _GLF_FUZZED(8.6)), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true))))) * (injectionSwitch))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), bvec2(true, true)))).y) - log(1.0))))))), false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.8)), bool(false))), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), mix(float(_GLF_FUZZED(-23.49)), float(0.0 + (injectionSwitch.x)), bool(true)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), sin(0.0)))))) + (injectionSwitch.x)) + 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (false ? _GLF_FUZZED(-5.5) : _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) : _GLF_FUZZED(-84.02))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))), max(float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))), float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.x), clamp(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x))), log(1.0))))))))), 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, log(1.0), 0.0))))) > injectionSwitch.y))) && true)))) || false)) && true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.8, -87.34)))).y, (injectionSwitch.y) - abs(0.0))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false))), true && (false))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        continue;
       break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) && true))
  return;
}
