#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec2(false, true)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (uint(uint(0u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (uint(uint(0u)))))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (uint(uint(0u)))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), 0u ^ (uint(uint(0u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))), log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) * (vec2(1.0, 0.0))), vec2(0.0, 1.0))) * _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), exp(0.0)), vec2(0.0, 1.0)), float(mat2(dot(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), exp(0.0)), vec2(0.0, 1.0)), 1.0, 1.0, 0.0))), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))), dot(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.8) : 1.0)), 1.0)), 0.0), vec2(0.0, 1.0))), 1.0), _GLF_IDENTITY((true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) - sin(vec2(0.0, 0.0))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))), log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(0.0, 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(exp(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.3) : exp(0.0)))), vec2(0.0, 1.0)))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(0.4, -72.03, 13.86, 15.86))), mat2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat2x4(vec2(0.0, 0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), sqrt(0.0), 1.0, 0.0))))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(radians(145.981)) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), clamp(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), abs(sqrt(1.0)), log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(float(_GLF_FUZZED(-2.6)), clamp(float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)), float(_GLF_FUZZED(-2.6)))), abs(sqrt(1.0)), log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + 0.0)), float(1.0), bool(true)))))), log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(0.4, -72.03, 13.86, 15.86))), ((true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-183.926))), 0.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) / 1.0), min(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) / 1.0), _GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) / 1.0))), _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-16.77))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * ((injectionSwitch.x))) / 1.0))), log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))[0], _GLF_FUZZED(-2.0)), vec2(_GLF_FUZZED(-6.7), (vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))[1]), bvec2(false, true))), vec2(0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(0.4, -72.03, 13.86, 15.86)))) - mat2(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat3(_GLF_IDENTITY((true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))), log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)))), 1.0) : _GLF_FUZZED(mat2(0.4, -72.03, 13.86, 15.86))), ((_GLF_IDENTITY(true, (true) && true) ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) - sin(vec2(0.0, 0.0))).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))), log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))), max(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) * _GLF_IDENTITY(dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)), dot(vec2(0.0, exp(0.0)), vec2(0.0, 1.0)))))), dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(0.0, 1.0))), 1.0) : _GLF_FUZZED(mat2(0.4, -72.03, 13.86, 15.86)))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))) / 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.8)))) / 1.0))) : _GLF_FUZZED(179.414)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED(subgroup_base)))))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) ^ 0u), ((0u) >> 0u) << 0u)), clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) ^ 0u), ((0u) >> 0u) << 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) ^ 0u), ((0u) >> 0u) << 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) ^ 0u), ((0u) >> 0u) << 0u)))), (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), 1u * (_GLF_FUZZED(subgroup_base))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), 1u * (_GLF_FUZZED(subgroup_base)))))))))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))))) + subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))), uint(uvec2((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))), 1u))) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, 0u))), min(subgroup_base, subgroup_base)), subgroup_base))))))) >> 0u)) / 1u))) + subgroup_local_id), clamp((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u))))), (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))) >> 0u)) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))), ~ (~ (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))))) | 0u))) >> 0u)) / 1u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u))))), (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))) >> 0u)) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))), ~ (~ (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))))) | 0u))) >> 0u)) / 1u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u))))), (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))) >> 0u)) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))), ~ (~ (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))))) | 0u))) >> 0u)) / 1u)), 1u))), 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)))), 0u | (_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u))))) + subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))) ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u))) + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(1u, (1u) << (0u | 0u))))) + _GLF_IDENTITY(subgroup_base, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), clamp(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u))), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u)))), uint(uvec3(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u)))), 1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (186561u & 0u) ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_base), (true ? 0u : _GLF_FUZZED(subgroup_base)) | 0u))))) >> 0u)) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, _GLF_IDENTITY(0u, (0u) - 0u), 1u), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), (uvec3(subgroup_base, 0u, 1u)) | uvec3(0u, 0u, 0u)), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && (true)) ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))), (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base)))) * 1u))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u)) : _GLF_FUZZED(workgroup_size)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), (uvec3(subgroup_base, 0u, 1u)) | uvec3(0u, 0u, 0u)), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && (true)) ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))), (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base)))) * 1u))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u)) : _GLF_FUZZED(workgroup_size)))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), (uvec3(subgroup_base, 0u, 1u)) | uvec3(0u, 0u, 0u)), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, (0u ^ 1u), 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && (true)) ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))), (_GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base)))) * 1u))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u)) : _GLF_FUZZED(workgroup_size))))) >> 0u))))) + subgroup_local_id))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))) + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_base, 0u, 1u), ~ (~ (uvec3(subgroup_base, 0u, 1u)))), max(uvec3(subgroup_base, 0u, 1u), uvec3(subgroup_base, 0u, 1u)))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp(_GLF_IDENTITY((subgroup_base), uint(uint((subgroup_base)))), _GLF_IDENTITY((subgroup_base), min((subgroup_base), (subgroup_base))), (subgroup_base))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) >> 0u)) / 1u))) + subgroup_local_id))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id, max(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id, workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id))))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), vec2(mat2x4(min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) + sin(vec2(0.0, 0.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) - 0) | 0))), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, _GLF_IDENTITY((64) | 0, 0 ^ ((64) | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)), min(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)), max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)), (max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0))) | (max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0))))), 0 | (max(_GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)), min(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)), max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0)), (max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0))) | (max(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0))), _GLF_IDENTITY(64, (64) | 0))))))))), 2)) | (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64)))))) | 0))), 2)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(1.0), abs(1.0), length(0.0), 1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, sqrt(1.0), abs(1.0), length(0.0), 1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(mat4x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0, sqrt(1.0), abs(1.0), length(0.0), 1.0, 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))).y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), true, true)))))))) || false), false, true))) && true)), false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && true)) && true)), (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true))), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0)), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0))))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, (false) || false)), false)), ! (_GLF_IDENTITY(! (bool(bvec2((_GLF_IDENTITY(false, (false) || false)), false))), ! (! (! (bool(bvec2((_GLF_IDENTITY(false, (false) || false)), false)))))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), true), false, false))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true))), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), true), false, false)))))))))))), bool(bvec4(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), true), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), true), false, false)))))))))))), true, false, false))))), (false) || _GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false), true, true))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), true, false, true))), ((bool(bvec4(_GLF_DEAD(false), true, false, true)))) && true) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
