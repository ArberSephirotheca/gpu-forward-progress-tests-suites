#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 int _f0;
 mat2 _f1;
 vec2 _f2;
 mat2x4 _f3;
 uvec2 _f4;
 mat4x3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 int _f1;
 uint _f2;
 bvec3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 uvec4 _f1;
 uvec2 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
 mat2x3 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 vec2 _f1;
 mat2 _f2;
 bool _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 uint workgroup_size;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_8 {
 float _f0;
 mat3 _f1;
 bvec3 _f2;
 uint _f3;
 vec3 _f4;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 _GLF_struct_8 _f1;
 uint _f2;
} ;

struct _GLF_struct_6 {
 bool _f0;
 ivec3 _f1;
 bool _f2;
 uvec4 _f3;
 mat4x2 _f4;
 bvec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 ivec2 _f1;
 bool _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_5 {
 uint workgroup_id;
 mat2 _f0;
} ;

struct _GLF_struct_2 {
 uint _f0;
 mat4x3 _f1;
 vec4 _f2;
 mat2x4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 int _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 int _f1;
 mat3 _f2;
 ivec2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 uint num_workgroup;
 uvec3 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(bvec3(true), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))) && true))))), _GLF_struct_7(_GLF_struct_6(true, ivec3(1), true, uvec4(1u), mat4x2(1.0), bvec3(true), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9597.3268)), bool(false))), float(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.3))), 1.0, 0.0, 0.0))))), gl_SubgroupSize), _GLF_struct_9(uvec2(1u), _GLF_struct_8(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)), tan(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.9)), bool(false)))), bvec3(_GLF_IDENTITY(true, ! (! (true)))), 1u, vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0))), 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true)))))) && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(94140u) : 0u)), 0u), ~ (~ (uvec2(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(94140u) : 0u)), 0u)))))))), clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), clamp(_GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), min(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups))), min(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(160616u, 194941u, 79470u)) : min(gl_NumWorkGroups, gl_NumWorkGroups))))))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))) | uvec3(0u, 0u, 0u)))).x, uvec3(1u), _GLF_struct_3(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((1.0), (1.0))) + 0.0), (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, max(_GLF_IDENTITY((1.0) + 0.0, float(mat3x2((1.0) + 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0))), (1.0) + 0.0)))) / 1.0)), _GLF_struct_0(uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) | (1u)), 1u))), 1, mat3(1.0), ivec2(1), uvec4(1u)), _GLF_struct_1(bvec4(true), 1), _GLF_struct_2(1u, mat4x3(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-315.935)), bool(false))), mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-315.935)), bool(false))), mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-315.935)), bool(false))), mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-315.935)), bool(false))), mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-315.935)), bool(false))), mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((65.06 + -5.9))), bool(false))))), 1.0))) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), mat2x4(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0))), uvec2(1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))), bvec3(_GLF_IDENTITY(true, false || (true))), mat4x2(1.0), _GLF_struct_14(_GLF_struct_11(mat3x4(1.0), uvec4(1u), uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), min(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), mat2x4(1.0), mat2x3(1.0), mat2x3(1.0), ivec4(1)), vec2(1.0), mat2(1.0), true, _GLF_struct_12(bvec2(true), 1, 1u, bvec3(true), bvec4(true)), _GLF_struct_13(1, mat2(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.7)), bool(false)))), mat2x4(1.0), uvec2(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u))))), 0u)))))), mat4x3(1.0), vec2(1.0)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, sqrt(1.0))), clamp(vec2(mat4(injectionSwitch, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, sqrt(1.0))), vec2(mat4(injectionSwitch, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, sqrt(1.0))), vec2(mat4(injectionSwitch, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, sqrt(1.0)))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.4, -61.42)) : injectionSwitch)), injectionSwitch)).y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1602.3167)), _GLF_IDENTITY(bool(false), (bool(false)) || false)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0)), 1.0)))))))))))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, abs(1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec2(1.0, abs(1.0)))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))), (true ? dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))) : _GLF_FUZZED(-6.2)))), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), sin(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, abs(1.0))))))), float(mat2x4(float(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(0.0)), (true ? vec3(0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(vec3(3110.3554, -209.703, 0.8)))), vec3(1.0, 1.0, sqrt(1.0))), (true ? dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))) : _GLF_FUZZED(-6.2)))), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(5278.0511)), float(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(2.5)))), bool(true))), sin(0.0))), 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0)))), injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, abs(1.0)), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec2(1.0, abs(1.0)))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))), (true ? dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))) : _GLF_FUZZED(-6.2)))), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), sin(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, abs(1.0))))))), float(mat2x4(float(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, sqrt(0.0)), (true ? vec3(0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(vec3(3110.3554, -209.703, 0.8)))), vec3(1.0, 1.0, sqrt(1.0))), (true ? dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, sqrt(1.0))) : _GLF_FUZZED(-6.2)))), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(5278.0511)), float(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(2.5)))), bool(true))), sin(0.0))), 0.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0)))), injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), false, false, false)), true && (bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)))))))), false, false, false))))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, log(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(cos(0.0)), 0.0, exp(0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.2)), float(1.0), bool(true)))) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y))))), false, false, false)), false || (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(cos(0.0)), 0.0, exp(0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.2)), float(1.0), bool(true)))) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y))))), false, false, false)))), true && (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5452.1573))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y))))), false, false, false))))) && true)), ! (! (! ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-515.937)), bool(false))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-515.937)), bool(false))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-515.937)), bool(false))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))))))))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.3))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, sqrt(0.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.2)), bool(false))), 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, length(vec2(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, length(vec2(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-6.5)), bool(false))), injectionSwitch.y))))), false, false, false)), true && (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.0) : 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(374.017)), bool(false))), abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3039.4998)), bool(false))))))))), injectionSwitch.y))))), false, false, _GLF_IDENTITY(false, ! (! (false)))))))) && true)))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-6.7, -29.80, 7110.0374).y)), float(0.0), bool(true))))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-149.417, -9.7, 3309.8618, -8.9, 77.56, -58.04, 5.5, -0.1, -5.6, -9115.2639, 3.3, 438.347, 1.5, -50.41, -825.001, 88.82)) : mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), mix(float(_GLF_FUZZED(-0.3)), float(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), bool(true)))))), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))))) || false)), false, false, false)), true && (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-5452.1573))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, sin(0.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), (false ? _GLF_FUZZED((+ (288.219))) : float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5452.1573))))), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))))), injectionSwitch.y))))), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))) && true)), ! (! (! ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-515.937)), bool(false))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-714.223)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.5))), abs(0.0)), mat4(1.0) * (mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(481.836)), bool(false))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0), clamp(vec2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, cos(0.0), 1.0, sqrt(1.0), tan(0.0), 0.0, 1.0, log(1.0))), (float(mat4x2(1.0, cos(0.0), 1.0, sqrt(1.0), tan(0.0), 0.0, 1.0, log(1.0)))) + 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.3)), bool(false))))), 1.0, 1.0, 0.0))), 1.0), vec2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))), 1.0), min(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))), 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2(float(mat4x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 1.0)))), 1.0))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(0.0)))))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.2))), abs(0.0)))))), 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-6.5)), bool(false))), injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))))) || false)), false, false)), true && (bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0)), transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(0.0))))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3039.4998)), bool(false))))))))), injectionSwitch.y))))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (false)))))))) && true))))))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_WorkGroupID.x, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f3.workgroup_size * _GLF_struct_replacement_5.workgroup_id, min(_GLF_struct_replacement_15._f3.workgroup_size * _GLF_struct_replacement_5.workgroup_id, _GLF_struct_replacement_15._f3.workgroup_size * _GLF_struct_replacement_5.workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f3.workgroup_size, ~ (~ (_GLF_struct_replacement_15._f3.workgroup_size))) * _GLF_struct_replacement_5.workgroup_id, min(_GLF_struct_replacement_15._f3.workgroup_size * _GLF_struct_replacement_5.workgroup_id, _GLF_struct_replacement_15._f3.workgroup_size * _GLF_struct_replacement_5.workgroup_id))) * ((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, (1u ^ 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 0u)))) >> 0u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) / 1u)) | 0u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec4(1u, 1u, (1u ^ 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) << uvec4(0u, 0u, 0u, 0u)))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_10._f3.subgroup_size, (subgroup_id * _GLF_struct_replacement_10._f3.subgroup_size) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-163.319, 6.2, 5.4).z), _GLF_FUZZED(-3.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, (_GLF_struct_replacement_10._f3.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, ~ (~ (_GLF_struct_replacement_10._f3.subgroup_size))), _GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u, 0u | (_GLF_IDENTITY((_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u, clamp((_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u, (_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u, (_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u)))))), (false ? _GLF_FUZZED(workgroup_base) : 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, (_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u), (_GLF_IDENTITY(_GLF_struct_replacement_10._f3.subgroup_size, (_GLF_struct_replacement_10._f3.subgroup_size) ^ 0u)) ^ 0u))))))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f3.subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))) && true), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true, false, _GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), true, true)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))) || false, true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), true, true)))), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))) && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)))))))))))))))))))), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) * vec2(1.0, 1.0)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), 1.0), vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) / vec2(1.0, 1.0)), 1.0), 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0)), mat4x2(mat4(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) / vec2(1.0, 1.0)), 1.0), 0.0, sqrt(0.0), 0.0, 0.0, abs(0.0))))))))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, _GLF_IDENTITY((read), (_GLF_IDENTITY(true ? (read) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(read) : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? (read) : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((true ? (read) : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(uint(uint((true ? (read) : _GLF_FUZZED(workgroup_base)))), clamp(uint(uint((true ? (read) : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(uint(uint((true ? (read) : _GLF_FUZZED(workgroup_base)))), (uint(uint((true ? (read) : _GLF_FUZZED(workgroup_base))))) ^ 0u), uint(uint((true ? (read) : _GLF_FUZZED(workgroup_base))))))) - 0u, uint(uvec2((true ? (read) : _GLF_FUZZED(workgroup_base)) - 0u, 1u)))), true ? (read) : _GLF_FUZZED(workgroup_base), true ? (read) : _GLF_FUZZED(workgroup_base))))) << 0u)) >> 0u), _GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(sign(96389))), max((true ? 4 : _GLF_FUZZED(sign(96389))), (true ? 4 : _GLF_FUZZED(sign(96389)))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, false, false)))) && true, ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) < injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_DEAD(false)), false)), bvec2(bvec3(bvec2(bvec2(bool(_GLF_DEAD(false)), false)), true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_DEAD(false)), false)), bvec2(bvec3(bvec2(bvec2(bool(_GLF_DEAD(false)), false)), true))))))))) || false)), ! (_GLF_IDENTITY(! (true && (bool(bool(_GLF_DEAD(false))))), (! (true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (bool(_GLF_DEAD(false))) || false))))) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(48013, -24501))) : injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(_GLF_IDENTITY(-9.6, (false ? _GLF_FUZZED(7.0) : -9.6)))), bvec2(false, false))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), bvec2(false, false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-86.12 + -4.2))), float(0.0), bool(true))), 0.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), bvec2(false, false))), 0.0, 0.0)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), bvec2(false, false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-573.714), (_GLF_IDENTITY(_GLF_FUZZED(-573.714), max(_GLF_FUZZED(-573.714), _GLF_IDENTITY(_GLF_FUZZED(-573.714), clamp(_GLF_FUZZED(-573.714), _GLF_FUZZED(-573.714), _GLF_FUZZED(-573.714)))))) * 1.0), _GLF_FUZZED(-9.6)), bvec2(false, false)) : _GLF_FUZZED(injectionSwitch)))), 0.0, 0.0)), _GLF_IDENTITY((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), min(vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6))))) * vec2(1.0, 1.0)), bvec2(false, false))), 0.0, 0.0))) / vec2(1.0, 1.0), vec2(mat3x4((vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), min(vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6))))) * vec2(1.0, 1.0)), bvec2(false, false))), 0.0, 0.0))) / vec2(1.0, 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), sqrt(1.0), 1.0)))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), (true ? ivec3(1, 1, 1) : _GLF_FUZZED(ivec3(-84168, 45779, 22534))))))) >> 0)]), vec2(_GLF_FUZZED(-573.714), _GLF_FUZZED(-9.6)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec4(bvec2(bvec2(bvec2(false, false))), true, true))), false)))))), 0.0, 0.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
