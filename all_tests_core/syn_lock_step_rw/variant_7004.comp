#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(float(174344u))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(64.66), _GLF_FUZZED(143.895)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) - sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(991.974)), bool(false)))), float(_GLF_FUZZED(-2.5)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), float(_GLF_FUZZED(float(174344u))), bool(false)))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(float(174344u))), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(float(174344u))), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(float(174344u))), bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), clamp((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), mix(float(_GLF_FUZZED(-1.6)), float((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), bool(true)))))) * 1.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) - 0.0)))))), float(_GLF_FUZZED(float(174344u))), bool(false)))) && true), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).y)), ((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).y), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))).y)) && true)))))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], 1u * (gl_WorkGroupSize[1])), gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, (true ? _GLF_IDENTITY(4779.2320, (true ? 4779.2320 : _GLF_FUZZED(0.9))) : _GLF_FUZZED(5.7))), mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true))), mix(float(_GLF_FUZZED(5373.7717)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))) * 1.0), bool(true)))), bool(true)))) - 0.0)), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, _GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)), (false ? _GLF_FUZZED(2.5) : mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * 1.0), bool(true)))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, determinant(mat3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)) + (injectionSwitch.y))), _GLF_IDENTITY((float(injectionSwitch.y)) * 1.0, mix(float(_GLF_FUZZED(-840.782)), float((float(injectionSwitch.y)) * 1.0), bool(true)))), bool(true))))), (bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.2, (false ? _GLF_FUZZED(-4.5) : 8.2)))), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, (true ? _GLF_IDENTITY(4779.2320, (true ? 4779.2320 : _GLF_FUZZED(0.9))) : _GLF_FUZZED(5.7))), mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), clamp(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true))), mix(float(_GLF_FUZZED(5373.7717)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))) * 1.0), bool(true)))), bool(true)))) - 0.0)), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, _GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)), (false ? _GLF_FUZZED(2.5) : mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * 1.0), bool(true)))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), clamp(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, determinant(mat3(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)) + (injectionSwitch.y))), _GLF_IDENTITY((float(injectionSwitch.y)) * 1.0, mix(float(_GLF_FUZZED(-840.782)), float((float(injectionSwitch.y)) * 1.0), bool(true)))), bool(true))))), (bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.2, (false ? _GLF_FUZZED(-4.5) : 8.2)))), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true))), mix(float(_GLF_FUZZED(5373.7717)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y), (float(injectionSwitch.y)) * 1.0), bool(true)))), bool(true)))) - 0.0)), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(4779.2320, _GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(_GLF_IDENTITY(false, true && (false)))), (false ? _GLF_FUZZED(2.5) : mix(float(4779.2320), _GLF_IDENTITY(float(_GLF_FUZZED(-72.99)), clamp(float(_GLF_FUZZED(-72.99)), _GLF_IDENTITY(float(_GLF_FUZZED(-72.99)), max(float(_GLF_FUZZED(-72.99)), float(_GLF_FUZZED(-72.99)))), float(_GLF_FUZZED(-72.99)))), bool(false))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-455.180))))) * 1.0), bool(true)))))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, _GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)), mix(float(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), float(_GLF_FUZZED(-0.4)), bool(false))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat3x2(_GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)), mix(float(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), float(_GLF_FUZZED(-0.4)), bool(false))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0)), mat3(1.0) * (transpose(mat3x2(_GLF_IDENTITY(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)), mix(float(mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false))), float(_GLF_FUZZED(-0.4)), bool(false))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), 1.0, 0.0))))))))), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(_GLF_IDENTITY(true, false || (true))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))), (bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec2(mat2(1.0) * (injectionSwitch))))).y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(_GLF_IDENTITY(-72.99, mix(float(_GLF_FUZZED(-873.827)), float(_GLF_IDENTITY(-72.99, mix(float(_GLF_FUZZED(-43.43)), float(_GLF_IDENTITY(-72.99, clamp(-72.99, -72.99, -72.99))), bool(true)))), bool(true))))), bool(false))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)), max(mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)), clamp(mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true)), mix(float(_GLF_FUZZED(8.2)), float(_GLF_IDENTITY(4779.2320, mix(float(4779.2320), float(_GLF_FUZZED(-72.99)), bool(false)))), bool(true))))))))))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), _GLF_IDENTITY(bool(true), (bool(true)) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))) && true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! ((! (_GLF_DEAD(false)))), bool(bvec2(! ((! (_GLF_DEAD(false)))), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, abs(1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7897.3569) : 1.0)), 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, abs(1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7897.3569) : 1.0)), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)) * (mat2(1.0) * (injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)) * (mat2(1.0) * (injectionSwitch)))).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) - sqrt(0.0))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (injectionSwitch.y) - sqrt(0.0))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.6) : injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))), true)))), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2504.9386)), float(injectionSwitch.y), bool(true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false)), (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false)), true && (bool(bvec4(true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), false))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, false, true, false))))) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))), true, false)), (bool(bvec3(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))), true, false))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), true))), ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), true)))) && true)), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), true), true)))))))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), true), true)))))))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))))), ((_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), true), true), true)))))))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))))) && true)))))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true)))), false, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))), true && ((! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true)))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))))))))), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), true))), (! (bool(bvec2(_GLF_DEAD(false), true)))) || false)), false, false, false)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))), true)))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) || false), false, false)))))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) || false)), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) || false)), true))) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))), true)))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) || false), false, false)))))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) || false)), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) || false)), true))) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_IDENTITY(true, false || (true)))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false)))))), (bool((! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), false, false)))))))), false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))), bool(bvec3(false || (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(false), true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), bool(bvec4((! (bool(bvec2(_GLF_DEAD(false), true)))), false, false, false))))))), true, false))))))))), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), cos(0.0), 1.0))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY((bool(_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY((bool(_GLF_DEAD(false))), ((bool(_GLF_DEAD(false)))) && true), true, true, true)))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.2)), bool(false)))) * 1.0) > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), max(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), ((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))) * 1u), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u))))) | 0u)))), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - (0u ^ 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, (1u & 1u))))) % subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))) : _GLF_FUZZED(virtual_gid))))))) : _GLF_FUZZED(workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u))))) | 0u)))), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - (0u ^ 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, (1u & 1u))))) % subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))) : _GLF_FUZZED(virtual_gid))))))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u))))) | 0u)))), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - (0u ^ 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, (1u & 1u))))) % subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))) : _GLF_FUZZED(virtual_gid))))))) : _GLF_FUZZED(workgroup_id))) | ((true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 1u * (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 1u, 1u), (uvec4(subgroup_size, 0u, 1u, 1u)) | (uvec4(subgroup_size, 0u, 1u, 1u))))) | 0u)))), subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - (0u ^ 0u)), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u, (1u & 1u))))) % subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))))) : _GLF_FUZZED(virtual_gid))))))) : _GLF_FUZZED(workgroup_id)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))) || false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0)), mix(float(float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-114.897), mix(float(_GLF_FUZZED(-114.897)), float(_GLF_FUZZED(-621.220)), bool(false)))), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-408.653, (false ? _GLF_FUZZED(9147.2484) : -408.653))) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0)), float(float(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-408.653, (false ? _GLF_FUZZED(9147.2484) : -408.653))) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0)), float(mat2x3(false ? _GLF_FUZZED(_GLF_IDENTITY(-408.653, (false ? _GLF_FUZZED(9147.2484) : -408.653))) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(515.317) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0)), mix(float(float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-114.897), mix(float(_GLF_FUZZED(-114.897)), float(_GLF_FUZZED(_GLF_IDENTITY(-621.220, clamp(-621.220, -621.220, -621.220)))), bool(false)))), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-408.653, (false ? _GLF_FUZZED(9147.2484) : -408.653))) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)), float(float(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-408.653, (false ? _GLF_FUZZED(9147.2484) : -408.653))) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)), float(mat2x3(false ? _GLF_FUZZED(_GLF_IDENTITY(-408.653, (false ? _GLF_FUZZED(9147.2484) : -408.653))) : float(mat4x2(injectionSwitch.x, 1.0, 1.0, log(1.0), 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(515.317) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(515.317) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 0.0)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(10958, 0 ^ (10958))))), 4))) << 0), (4) ^ 0), _GLF_IDENTITY(64, 0 | (64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)), false))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.9, 1.7))) : injectionSwitch)).y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.9, 1.7))) : injectionSwitch)).y)), false)))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false)))))), false || ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.9, 1.7))) : injectionSwitch)).y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fract(vec2(8.9, 1.7))) : injectionSwitch)).y)), false)))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false)))))))) && true))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), clamp(_GLF_IDENTITY(read, 0u ^ (read)), _GLF_IDENTITY(read, 0u ^ (read)), _GLF_IDENTITY(read, 0u ^ (read)))), _GLF_IDENTITY((read) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3866.1864))))), uint(uvec2((_GLF_IDENTITY(read, uint(uvec4(_GLF_IDENTITY(read, (read) - 0u), 0u, 0u, 0u)))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2957.2680)), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(1.8)), float(float(injectionSwitch.x)), bool(true))), bool(true))))))), 1u)))), 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (false ? _GLF_FUZZED(-74545) : _GLF_IDENTITY(4, (4) * 1))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(ivec3(_GLF_IDENTITY(4, (4) / 1), 0, 0))))) : _GLF_FUZZED(ivec2(-94625, -43175)[0]))) : _GLF_FUZZED(36606))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED(-3.1)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-69.89)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), false, true, true)))) ? injectionSwitch : _GLF_FUZZED(vec2(6275.0079, 55.04)))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, abs(1.0), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
