#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id;
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.7, -878.641)))).y))))
  {
   _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) * uvec2(1u, 1u))) >> uvec2(0u, 0u)), ~ (~ (GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)));
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.x = subgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.x = subgroup_id, (GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.x = subgroup_id) / (1u | 0u))) / 1u);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true)))))))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), true))))) && true)))))), false, _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 do
  {
   GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.y = subgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.w = _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 0u)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.w, clamp(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.w, GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.w, GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.w));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, true && ((false) || false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), min(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), clamp(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))), clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))))))) | uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(192443u, 14626u, 52058u)) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), (true ? min(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(192443u, _GLF_IDENTITY(14626u, (false ? _GLF_FUZZED(packHalf2x16(vec2(477.229, -7.7))) : _GLF_IDENTITY(14626u, 0u | (14626u)))), _GLF_IDENTITY(52058u, (52058u) >> 0u)), (_GLF_IDENTITY(uvec3(192443u, _GLF_IDENTITY(14626u, (false ? _GLF_FUZZED(packHalf2x16(vec2(477.229, -7.7))) : _GLF_IDENTITY(14626u, 0u | (14626u)))), _GLF_IDENTITY(52058u, (52058u) >> 0u)), (uvec3(192443u, _GLF_IDENTITY(14626u, (false ? _GLF_FUZZED(packHalf2x16(vec2(477.229, -7.7))) : _GLF_IDENTITY(14626u, 0u | (14626u)))), _GLF_IDENTITY(52058u, (52058u) >> 0u))) ^ uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(uvec3(8u), (uvec3(8u)) * uvec3(1u, 1u, 1u)))))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(189390u, 68846u, 143440u)))))) - uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY(uint(uvec2(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) | 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? subgroup_id : subgroup_id)) : uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))) ^ (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), uint(8u)))), uvec2(0u, 0u) + (uvec2(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), uint(8u))))))), uint(uvec2(uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u))))), ~ (~ (uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (~ (_GLF_IDENTITY(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u)))))), min(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))), (uint(_GLF_IDENTITY(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), min(uvec2(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u)), _GLF_IDENTITY(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY((uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), min(_GLF_IDENTITY((uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (false ? _GLF_FUZZED(uvec2(143542u, 7822u)) : (uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))), (uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))) | ((uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) ^ uvec2(0u, 0u))) | _GLF_IDENTITY((uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (false ? _GLF_FUZZED(uvec2(137508u, 12427u)) : (uvec2(0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))))) >> 0u)))))))).x) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), clamp(_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))))))))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), uvec3(uvec4(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), 0u)))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))))))), uvec3(uvec4(~ (_GLF_IDENTITY(clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))), ~ (~ (clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)))))))))))), 1u)))))))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.z = _GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), exp(0.0), 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), exp(0.0), 0.0, 0.0))))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))))) && true))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(58747))) ^ (1 ^ 1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.y = GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.z;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), min(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))).x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(8144.4875)), float(injectionSwitch[1]), bool(true))))))).x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))), true, true))) && true, ((bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))) && true) && true))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u);
 uint subgroup_base = GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.x * GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.y;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
  {
   GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.x = _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.x + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id) << uvec2(0u, 0u), (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id) << uvec2(0u, 0u), ((GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id) << uvec2(0u, 0u)) >> uvec2(0u, 0u))) * uvec2(1u, 1u))), (true ? GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id : _GLF_FUZZED(uvec2(15981u, 98524u)))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))), uvec4(0u, 0u, 0u, 0u) | ((_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))))) << (_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id) : uvec2(0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))))), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id) : uvec2(0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))))))))))), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(8u), uvec2(8u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, (GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id) << uvec2(0u, 0u)), (_GLF_IDENTITY(true, false || (true)) ? GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id : _GLF_FUZZED(uvec2(_GLF_IDENTITY(15981u, (15981u) ^ 0u), 98524u)))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))) << (uvec4(uvec2(42541u, 88115u), 73701u, 26011u) & uvec4(0u, 0u, 0u, 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))) << (uvec4(uvec2(42541u, 88115u), 73701u, 26011u) & uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))) << (uvec4(uvec2(42541u, 88115u), 73701u, 26011u) & uvec4(0u, 0u, 0u, 0u))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u), (true ? uvec4(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)), 0u) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id)))) - (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)))) << (uvec4(uvec2(42541u, 88115u), 73701u, 26011u) & uvec4(0u, 0u, 0u, 0u)))))))))) << (uvec2(0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)))))).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.w = virtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.w = virtual_gid, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.w = virtual_gid))) / 1u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.72) : injectionSwitch.y))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.72) : injectionSwitch.y))))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.72) : injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-26.72) : injectionSwitch.y)), 1.0, exp(0.0), 1.0, 1.0, 0.0)))))) || false)))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.x + ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, min(0, 0))), min(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((-13776 ^ (46128 | 25316))) : 0))))), _GLF_IDENTITY(uint(uvec2(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, 0), (min(0, 0)) | 0)) ^ 0))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec2(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, min(0, 0))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) / 1.0), injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec2(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, min(0, 0))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) / 1.0), injectionSwitch.x)))), (uint(uvec2(GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) ^ _GLF_IDENTITY(0, min(0, 0))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) / 1.0), injectionSwitch.x))))) >> 0u)) << 0u)) * 1u))))) % GLF_merged3_0_2_49_2_1_13_3_1_17GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenum_workgroupsubgroup_local_id.xy.y);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.x = next_virtual_gid;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(50.03), _GLF_FUZZED(-3.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid, min(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid)).w], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(false, ! (! (false))), true, true))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.z = read;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.x], uint(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-35246) : _GLF_IDENTITY(1, min(1, 1)))))))), 0, 1)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), 0 | ((4))))) << 0), int(int(_GLF_IDENTITY(4, (4) << 0)))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0), mix(vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-73.98)), vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0))[1]), bvec2(true, true)))))) / 1.0) < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, log(1.0)), (false ? _GLF_FUZZED(vec2(-8006.7541, -6657.4920)) : vec2(injectionSwitch.x, log(1.0)))))) > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))))) || false))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 else
  {
  }
 atomicStore(checker[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.w], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_11next_virtual_gidnum_workgroupreadvirtual_gid.z, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) >> 0), 4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   barrier();
  }
}
