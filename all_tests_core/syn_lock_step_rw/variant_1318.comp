#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7221.0157) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, sqrt(0.0), 1.0, 0.0)))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(vec3(771.052, -8.7, 3.4).s)), bool(false)))), bool(true))), min(0.0, 0.0)), 0.0)), (vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0))))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 0.0)), (vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) + vec2(0.0, 0.0))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0)) / vec2(1.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / exp(0.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) + (1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.5)), float(1.0), bool(true)))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, true))), false || (_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))), false))) || false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))) || (_GLF_DEAD(false))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(459.727, 0.3)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))).y), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(vec4(-8.8, -28.69, -8.7, -261.916))))))), injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u)), 0u + (clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))))))))), clamp(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, _GLF_IDENTITY(clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))), (clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u)))))) - 0u))))), _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))))))), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))))))), ~ (~ (uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u)))))))))))), uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | _GLF_IDENTITY(138279u, (138279u) / 1u))) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))))), _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))))))), uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (0u) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))))))))), uvec3(uvec4(gl_NumWorkGroups, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, clamp((0u) ^ 0u, (_GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), (false ? _GLF_FUZZED((108220u | 138279u)) : (0u))) ^ 0u, ((0u) ^ 0u) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) / 1u))))))))))), (uvec3(uvec4(gl_NumWorkGroups, 0u))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))).x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || false))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (false))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, true)))))), _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (false))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch.y : _GLF_FUZZED(6741.2506)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))))) && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))))) && (false))), ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))))) && (false)))) || false))))), (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, (true) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (false))))), (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (false))))), (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && (false))))), (injectionSwitch.x > injectionSwitch.y)))), false), false, false))))))), true, false, true)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x, (false ? _GLF_FUZZED(-284.342) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], _GLF_IDENTITY(injectionSwitch[1], abs(0.0) + (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bool(! (! ((false)))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), false || ((false))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((false)))))) && true)))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false))), false || (! (false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false)))))))), false, false))))))), (bool(bvec2(_GLF_DEAD(false), false))) || false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec2(7.2, -6.2).yxy.g), _GLF_FUZZED(189.745)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true), true, false))) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, false || (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, length(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), cos(0.0), exp(0.0), 0.0, abs(0.0), 0.0, 0.0))).x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(injectionSwitch, injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0)), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0))) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(355.071)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), ! (! (((false)))))), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-127.721) : 0.0)), 1.0)), (false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-329.404, min(-329.404, -329.404))) : _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), min(float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)), float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))))))))) > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (workgroup_size)) * workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, true, true)), true)))), (bool(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) && true), true, true)), true))))) && true)))), ! (! (_GLF_DEAD(false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-15.72)), vec2(_GLF_FUZZED(348.988), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true)) ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)])) : _GLF_FUZZED(degrees(vec2(88.56, 6.5))))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x))) + (injectionSwitch)).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) || false)))))) && true)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), true && (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, false)), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size, 0u + (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (false ? _GLF_FUZZED(84875u) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))))))) * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size))), (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u) - 0u)))) * subgroup_size) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size, 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))) * subgroup_size))) ^ 0u))) | 0u)) ^ 0u)))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(min(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ 0u))), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(0u, (0u) | 0u) | (1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))), uint(_GLF_IDENTITY(uvec4(min(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (subgroup_local_id))), 0u | (1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))), (72857u & 0u), 1u, 0u), (uvec4(min(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), 0u | (1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))))), _GLF_IDENTITY((72857u & 0u), ((72857u & 0u)) ^ 0u), 1u, 0u)) | (uvec4(min(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), 0u | (1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) >> (0u & 68735u))))), (72857u & 0u), 1u, 0u))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))), 1u, 1u)) * (subgroup_local_id))) ^ 0u) : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size), _GLF_IDENTITY(0u + (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(~ (workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), max(uvec3(_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id))), 0u, 1u), _GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), (uvec3(~ (workgroup_id), 0u, 1u)) >> uvec3(0u, 0u, 0u))))))))))), max(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(~ (workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), max(uvec3(_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id))), 0u, 1u), _GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), (uvec3(~ (workgroup_id), 0u, 1u)) >> uvec3(0u, 0u, 0u))))))))))), _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(~ (workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), max(uvec3(_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id))), 0u, 1u), _GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), (uvec3(~ (workgroup_id), 0u, 1u)) >> uvec3(0u, 0u, 0u))))))))))))))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), min((~ (1u)), (~ (1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, min(_GLF_IDENTITY((1u) ^ 0u, clamp((1u) ^ 0u, (1u) ^ 0u, _GLF_IDENTITY((1u) ^ _GLF_IDENTITY(0u, (0u) + 0u), ((_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 1u)))) ^ 0u) | 0u))), _GLF_IDENTITY((1u) ^ 0u, 0u ^ ((1u) ^ 0u))))), _GLF_IDENTITY((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(127522u)), ((true ? 0u : _GLF_FUZZED(127522u))) | ((true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(127522u), (_GLF_FUZZED(127522u)) | (_GLF_IDENTITY(_GLF_FUZZED(127522u), min(_GLF_FUZZED(127522u), _GLF_FUZZED(127522u))))))))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u)), (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << (0u & 196686u)) : _GLF_FUZZED(127522u))), 0u))))), max(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u)), (true ? (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u)) : _GLF_FUZZED(workgroup_base)))), 0u))))), ~ (_GLF_IDENTITY(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) | (0u)) : _GLF_FUZZED(127522u)))) / 1u), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))), ~ (~ ((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) | (0u)) : _GLF_FUZZED(127522u)))) / 1u), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))))))))), min((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(127522u)))) ^ 0u)) / 1u), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))), (4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(127522u)))) / 1u), 0u), _GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), (_GLF_IDENTITY(~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), (false ? _GLF_FUZZED(subgroup_id) : ~ (~ (~ (min(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(127522u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((true ? 0u : _GLF_FUZZED(127522u)), ~ (~ ((true ? 0u : _GLF_FUZZED(127522u)))))), 0u + (~ (_GLF_IDENTITY((true ? 0u : _GLF_FUZZED(127522u)), ~ (~ ((true ? 0u : _GLF_FUZZED(127522u))))))))))), 0u))))))) + 0u), clamp(~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))))))), ~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))))) : _GLF_FUZZED(workgroup_id)))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u))), 0u)), ~ (~ (~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u))), 0u))))))))), ((_GLF_IDENTITY(4036u, (4036u) / (1u | 1u)) & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(127522u), max(_GLF_IDENTITY(_GLF_FUZZED(127522u), max(_GLF_FUZZED(127522u), _GLF_FUZZED(127522u))), _GLF_FUZZED(127522u))), (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(127522u), 0u ^ (true ? 0u : _GLF_FUZZED(127522u)))) >> _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))))))), 0u))))))) << 0u)))) | (157545u & 0u)) + (_GLF_IDENTITY(1u, ~ (~ (1u))))), 1u, 1u)) * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), clamp((subgroup_local_id), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), clamp((subgroup_local_id), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max(_GLF_IDENTITY(uint((subgroup_local_id)), uint(uvec2(uint((subgroup_local_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint((subgroup_local_id))))))) - 0u)) : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size)) * 1u)), uint(uvec2(0u + (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : ~ (_GLF_IDENTITY(~ (workgroup_id), uint(_GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), max(uvec3(_GLF_IDENTITY(~ (workgroup_id), 0u | (~ (workgroup_id))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) << 0u), 1u), _GLF_IDENTITY(uvec3(~ (workgroup_id), 0u, 1u), (uvec3(~ (workgroup_id), 0u, 1u)) >> uvec3(0u, 0u, 0u))))))))))))) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), uint(uvec2(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), 0u))) : _GLF_FUZZED(uint(5.2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, min(_GLF_IDENTITY((1u) ^ 0u, clamp((1u) ^ 0u, (1u) ^ 0u, _GLF_IDENTITY((1u) ^ _GLF_IDENTITY(0u, (0u) + 0u), ((1u) ^ 0u) | 0u))), _GLF_IDENTITY((1u) ^ 0u, 0u ^ _GLF_IDENTITY(((1u) ^ 0u), clamp(((1u) ^ 0u), _GLF_IDENTITY(((1u) ^ 0u), 0u + (((1u) ^ 0u))), _GLF_IDENTITY(((1u) ^ 0u), clamp(((1u) ^ 0u), ((1u) ^ 0u), ((1u) ^ 0u))))))))), _GLF_IDENTITY((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(127522u)), ((true ? 0u : _GLF_FUZZED(127522u))) | ((true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(127522u), (_GLF_FUZZED(127522u)) | (_GLF_IDENTITY(_GLF_FUZZED(127522u), min(_GLF_FUZZED(127522u), _GLF_FUZZED(127522u))))))))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) << 0u))) : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u)))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec2((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << (0u & 196686u)) : _GLF_FUZZED(127522u))), 0u))))), max(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u)), (true ? (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u)) : _GLF_FUZZED(workgroup_base)))), 0u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))))), 0u))))), uint(uvec3((_GLF_IDENTITY(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u ^ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))))), 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u | 1u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) | (0u))) + 0u) : _GLF_FUZZED(127522u)))) / 1u), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))), min((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(127522u), (true ? 0u : _GLF_FUZZED(127522u)) >> 0u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(127522u)))) / 1u), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(127522u, uint(uvec2(127522u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u)))))), (_GLF_IDENTITY(4036u, (true ? 4036u : _GLF_FUZZED(virtual_gid))) & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(127522u)))) / 1u), 0u), _GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), max(_GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))) | (_GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))) << 0u))), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))), clamp(~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))))) : _GLF_FUZZED(workgroup_id)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), max(_GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))) | (_GLF_IDENTITY(~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u))), (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))) << 0u))), ~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))), clamp(~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (~ (~ (min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u)))))))) : _GLF_FUZZED(workgroup_id))) | 0u))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | ((uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (_GLF_IDENTITY((4036u & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u))), 0u)), _GLF_IDENTITY(~ (~ (~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u))), 0u)))), ~ (~ (~ (~ (~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(127522u))), 0u)))))))))))), ((_GLF_IDENTITY(4036u, (4036u) / (1u | 1u)) & _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? 0u : _GLF_FUZZED(127522u))), 0u), ~ (~ (min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(127522u), (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(127522u), 0u ^ (true ? 0u : _GLF_FUZZED(127522u)))) >> 0u))), 0u))))))) << 0u)))) | (157545u & 0u)) + (_GLF_IDENTITY(1u, ~ (~ (1u))))), 1u, 1u)) * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))))), clamp((subgroup_local_id), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(_GLF_IDENTITY(uint((subgroup_local_id)), uint(uvec2(uint((subgroup_local_id)), uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))))))) - 0u)) : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size)) * 1u)), 0u))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3((injectionSwitch), abs(0.0)), (vec3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (injectionSwitch))), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))))) * mat3(1.0)), vec3(mat3(_GLF_IDENTITY(vec3((injectionSwitch), abs(0.0)), (vec3((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (injectionSwitch))), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), abs(0.0))))) * mat3(1.0)), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0)))))) * mat2(1.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (vec2(1.0, 1.0) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-8843.0317), _GLF_FUZZED(-55.07)), vec2((vec2(vec4((injectionSwitch), 1.0, 0.0)))[0], (vec2(vec4((injectionSwitch), 1.0, 0.0)))[1]), bvec2(true, true))))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(vec3((injectionSwitch), abs(0.0)), (vec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (injectionSwitch))), abs(0.0))) * mat3(1.0))))) * mat2(1.0))).y))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false)))))), false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 0u, 0u, 0u)))) | 0u) : _GLF_FUZZED(subgroup_size)))], _GLF_IDENTITY(read, 0u | _GLF_IDENTITY((read), min((read), _GLF_IDENTITY((read), 0u ^ ((read)))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), (false ? _GLF_FUZZED(vec2(-3.2, 8921.2534)) : _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? injectionSwitch : _GLF_FUZZED(vec2(7.2, -8294.8892)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(7.2, -8294.8892)))).x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? injectionSwitch : _GLF_FUZZED(vec2(7.2, -8294.8892)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))), false), false, false)))))) ? injectionSwitch : _GLF_FUZZED(vec2(7.2, -8294.8892)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-797.576)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(true, ! (! (true))))) ? injectionSwitch : _GLF_FUZZED(vec2(7.2, -8294.8892)))).x > injectionSwitch.y), false, true), true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
