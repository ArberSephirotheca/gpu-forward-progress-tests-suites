#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true, false))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))))))) && true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true, false)))))))), false, false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))), bool(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2162.6510))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)) && true))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, abs(0.0), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), round(length(normalize(1.0)))), mat3x2(mat3x2(mat3x2(injectionSwitch.y, 1.0, abs(0.0), 1.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), round(length(normalize(1.0))))))))))))))), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true), true))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))), true), true))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))) | (~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))))), (workgroup_base) * 1u) + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u)))), _GLF_IDENTITY((0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_size))), clamp(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_size))), uint(uvec4(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_size))), 1u, 1u, 0u))), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_FUZZED(workgroup_size)))))), _GLF_IDENTITY(((0u | _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((0u | _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u))))), clamp(((0u | _GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, (0u) ^ 0u))), min(~ ((_GLF_IDENTITY(0u, (0u) ^ 0u))), ~ ((_GLF_IDENTITY(0u, (0u) ^ 0u)))))))) | 0u)))), ((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | ((0u) ^ 0u)), min(_GLF_IDENTITY((0u) ^ 0u, (_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u)) | 0u), _GLF_IDENTITY((0u) ^ 0u, uint(uvec3((0u) ^ 0u, 1u, 0u))))))), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | ((0u) ^ 0u)), min(_GLF_IDENTITY((0u) ^ 0u, (_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u)) | 0u), _GLF_IDENTITY((0u) ^ 0u, uint(uvec3((0u) ^ 0u, 1u, 0u))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | ((0u) ^ 0u)), min(_GLF_IDENTITY((0u) ^ 0u, (_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u)) | 0u), _GLF_IDENTITY((0u) ^ 0u, uint(uvec3((0u) ^ 0u, 1u, 0u))))))), uint(uvec2(1u * (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) | ((0u) ^ 0u)), min(_GLF_IDENTITY((0u) ^ 0u, (_GLF_IDENTITY((0u) ^ 0u, ((0u) ^ 0u) ^ 0u)) | 0u), _GLF_IDENTITY((0u) ^ 0u, uint(uvec3((0u) ^ 0u, 1u, 0u))))))), 0u)))))) * 1u)))), ((0u | _GLF_IDENTITY(0u, _GLF_IDENTITY(1u * (_GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) / 1u))) * (_GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY(1u * (_GLF_IDENTITY(0u, (0u) ^ 0u)), uint(uvec2(1u * (_GLF_IDENTITY(0u, (0u) ^ 0u)), 1u)))) >> 0u)) / 1u)))))))) / 1u) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u)))) + (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) - 0u)), uint(8u)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), 1u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))), ! (! ((! (false)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false))))))), false || ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), true, false)))))))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), 0 ^ ((0))))), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(_GLF_IDENTITY(ivec4(64, (-26752 & 0), 1, 1), ivec4(0, 0, 0, 0) | (ivec4(64, (-26752 & 0), 1, 1)))))))), 2))), (true ? _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), 0 ^ ((0))))), 1, 1)), ~ (~ (int(ivec4(_GLF_IDENTITY(64, 0 + (64)), (-26752 & 0), 1, 1)))))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & _GLF_IDENTITY(0, (0) / 1)), 1, 1)), ~ (~ (int(_GLF_IDENTITY(ivec4(64, (_GLF_IDENTITY(-26752, max(-26752, -26752)) & 0), 1, 1), ivec4(0, 0, 0, 0) | (ivec4(64, _GLF_IDENTITY((-26752 & 0), min((-26752 & 0), (-26752 & 0))), 1, 1)))))))), 2))) : _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_size)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, (-26752 & _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1), 0))), 1, 1), (_GLF_IDENTITY(ivec4(64, (-26752 & 0), 1, 1), ivec4(0, 0, 0, 0) + (ivec4(64, (-26752 & 0), 1, _GLF_IDENTITY(1, (-7775 & 0) ^ (1)))))) << ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0), (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0), (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0), (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0), (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0), (mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), sin(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x)))), ~ (~ (int(ivec4(64, (_GLF_IDENTITY(-26752 & 0, (-26752 & 0) | (_GLF_IDENTITY(-26752 & 0, int(_GLF_IDENTITY(ivec3(-26752 & 0, 0, 1), (ivec3(-26752 & 0, 0, 1)) ^ ivec3(0, 0, 0))))))), 1, 1)))))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, ~ (~ (64)))), min(~ (_GLF_IDENTITY(64, ~ (~ (64)))), ~ (_GLF_IDENTITY(64, ~ (~ (64)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY((-26752 & _GLF_IDENTITY(0, (0) / (0 ^ 1))), 0 ^ ((-26752 & 0))), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY((-26752 & _GLF_IDENTITY(0, (0) / (0 ^ 1))), 0 ^ ((-26752 & 0))), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))), (false ? _GLF_FUZZED(-82583) : _GLF_IDENTITY(int(ivec4(64, _GLF_IDENTITY((-26752 & _GLF_IDENTITY(0, (0) / (0 ^ 1))), 0 ^ ((-26752 & 0))), 1, 1)), ~ (_GLF_IDENTITY(~ (int(ivec4(64, (-26752 & 0), 1, 1))), (true ? ~ (int(ivec4(64, (-26752 & 0), 1, 1))) : _GLF_FUZZED(49604)))))))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, ~ (~ (3u))), (true ? _GLF_IDENTITY(3u, ~ (~ (3u))) : _GLF_FUZZED(100160u)))), uint(3u))), _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), _GLF_IDENTITY((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0, ((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0) - 0), 1, 0), (ivec3(_GLF_IDENTITY((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0, ((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0) - 0), 1, 0)) | (ivec3(14604, -88006, 35608) & ivec3(0, 0, 0)))))))), 2), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & _GLF_IDENTITY(0, ~ (~ (0)))), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0)), (_GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))) | 0)), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, clamp(64, 64, 64)))), (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), uint(3u))), (~ (_GLF_IDENTITY(uint(3u), uint(3u)))) | (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))))), 1u), (uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), clamp(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)))), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, 0 ^ (_GLF_IDENTITY(-26752, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (-26752)))) & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) - uvec4(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(_GLF_IDENTITY(-23855, (_GLF_IDENTITY(-23855, (_GLF_IDENTITY(-23855, (false ? _GLF_FUZZED(-1478) : -23855))) >> 0)) | (-23855))))) & 0), 1, 1)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(ivec4(64, (-26752 & 0), 1, 1)))), ~ (~ ((~ (int(ivec4(64, (-26752 & 0), 1, 1))))))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0) | 0)), 1, 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (int(ivec4(64, (-26752 & 0), 1, 1))), clamp(~ (int(ivec4(64, (-26752 & 0), 1, 1))), ~ (int(ivec4(64, (-26752 & 0), 1, 1))), ~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), _GLF_IDENTITY((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))), ~ (~ ((~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))))) << 0))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(_GLF_IDENTITY(-26752, ~ (~ (-26752))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(-26752, max(_GLF_IDENTITY(-26752, (false ? _GLF_FUZZED(-65968) : -26752)), _GLF_IDENTITY(-26752, 0 ^ (-26752)))) : _GLF_FUZZED(-23855))) & 0), 1, 1)), (int(ivec4(64, (_GLF_IDENTITY(_GLF_IDENTITY(-26752, ~ (~ (-26752))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(-26752, max(_GLF_IDENTITY(-26752, (false ? _GLF_FUZZED(-65968) : -26752)), _GLF_IDENTITY(-26752, 0 ^ (-26752)))) : _GLF_FUZZED(-23855))) & 0), 1, 1))) << 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), clamp(int(ivec4(64, (-26752 & 0), 1, 1)), _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), clamp(int(ivec4(64, (-26752 & 0), 1, 1)), int(ivec4(64, (-26752 & 0), 1, 1)), int(ivec4(64, (-26752 & 0), 1, 1)))), int(ivec4(64, (-26752 & 0), 1, 1)))))), (~ _GLF_IDENTITY((~ (int(ivec4(64, (-26752 & 0), 1, 1)))), ~ (~ (_GLF_IDENTITY((~ (int(ivec4(64, (-26752 & 0), 1, 1)))), ((~ (int(ivec4(64, (-26752 & 0), 1, 1))))) >> 0))))) << 0))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) - uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(ivec4(64, (-26752 & _GLF_IDENTITY(0, min(0, 0))), 1, 1)))), min((~ (int(ivec4(64, (-26752 & _GLF_IDENTITY(0, min(0, 0))), 1, 1)))), _GLF_IDENTITY((~ (int(ivec4(64, (-26752 & _GLF_IDENTITY(0, min(0, 0))), 1, 1)))), ((~ (int(ivec4(64, (-26752 & _GLF_IDENTITY(0, min(0, 0))), 1, 1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(64, (64) * 1), (_GLF_IDENTITY(-26752 & 0, ~ (~ (_GLF_IDENTITY(-26752, ~ (_GLF_IDENTITY(~ (-26752), int(int(~ (-26752)))))) & 0)))), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? _GLF_IDENTITY(-26752, ~ (~ (-26752))) : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74285) : 1))) | (1)), 1)))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))), 2), _GLF_IDENTITY(0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2)), ~ (~ (_GLF_IDENTITY(0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2)), max(_GLF_IDENTITY(0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2)), (false ? _GLF_FUZZED(subgroup_local_id) : 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2)))), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2)))))))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) - uvec4(0u, 0u, 0u, 0u)))) | (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(-23855))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), (~ (~ (int(ivec4(64, (-26752 & 0), 1, 1))))) << 0))), 2), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), 2))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u), (uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, (true ? -26752 : _GLF_FUZZED(_GLF_IDENTITY(-23855, clamp(-23855, -23855, -23855))))) & 0), 1, 1)), _GLF_IDENTITY(~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))), (~ (~ (int(ivec4(64, (_GLF_IDENTITY(-26752 & 0, (_GLF_IDENTITY(-26752 & 0, (-26752 & 0) | 0)) - 0)), 1, 1))))) << 0))), 2), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)))], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(64, (-26752 & 0), 1, 1)))))), _GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2, (2) | (2)) : _GLF_FUZZED(-54501)))))), 1u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u)) - uvec4(0u, 0u, 0u, 0u))))))))), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (_GLF_IDENTITY(-26752, _GLF_IDENTITY((-26752), 0 + ((-26752))) ^ 0) & _GLF_IDENTITY(0, int(ivec4(0, 1, 0, (0 << _GLF_IDENTITY(int(0), int(0))))))), 1, 1)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), (true ? int(ivec4(64, (-26752 & 0), 1, 1)) : _GLF_FUZZED(-27202)))), (_GLF_IDENTITY((int(ivec4(64, (_GLF_IDENTITY(-26752, 0 | (_GLF_IDENTITY(-26752, 0 | (_GLF_IDENTITY(-26752, min(-26752, -26752)))))) & 0), 1, 1))), int(_GLF_IDENTITY(ivec3((int(ivec4(64, (-26752 & 0), 1, 1))), 0, 1), clamp(ivec3((int(ivec4(64, (-26752 & 0), 1, 1))), 0, 1), ivec3((int(ivec4(64, (-26752 & 0), 1, 1))), 0, 1), _GLF_IDENTITY(ivec3((int(ivec4(64, (-26752 & 0), 1, 1))), 0, 1), _GLF_IDENTITY(ivec3(ivec3(ivec3((int(ivec4(64, (-26752 & 0), 1, 1))), 0, 1))), ~ (~ (ivec3(ivec3(ivec3((int(ivec4(64, (-26752 & 0), 1, 1))), 0, 1)))))))))))) | ((int(ivec4(64, (-26752 & 0), 1, 1)))))))), 2), 0u ^ (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, (-26752 & 0), 1, 1)), ~ (~ (int(ivec4(_GLF_IDENTITY(64, 1 * (64)), (-26752 & 0), 1, 1)))))), 2))), 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))))) / (1u ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) - 0u))))) | 0u)), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) / (1u ^ 0u))) << 0u), 1u))) : _GLF_FUZZED(uvec4(15943u, 138738u, 122116u, 59336u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(31.47, -72.01)) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-1.8)), bool(false)))))) && true)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-131.633), _GLF_FUZZED(5.6)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6.3)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false)))), ! (! (bool(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (false)) || false))))))))))))))))) || false), bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), false, false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))))) | 0u))], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4))))) | 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(72.11)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}
