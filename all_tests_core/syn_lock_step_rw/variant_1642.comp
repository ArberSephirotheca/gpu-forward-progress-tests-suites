#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))) && true), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true && ((_GLF_DEAD(false))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) && true)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         barrier();
        }
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).y)) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.6, -7932.2464)) : injectionSwitch)).y) / 1.0)), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.6, -7932.2464)) : injectionSwitch)).y) / 1.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.6, -7932.2464)) : injectionSwitch)).y) / 1.0)), false, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))), false, true, true))))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true)))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))))))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec3(bool(_GLF_IDENTITY(false, true && (false))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true))) || false))), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-60.89, 34.51, 4.8, -1136.1582)) : mat2(1.0)))), injectionSwitch)).y))) && true)) && _GLF_IDENTITY(true, (true) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.0)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), injectionSwitch[1])).x > injectionSwitch.y)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupSize.x, 1u)), (uint(uvec2(gl_WorkGroupSize.x, 1u))) | (uint(uvec2(gl_WorkGroupSize.x, 1u))))))), 0u, _GLF_IDENTITY(1u, (1u) * (1u & 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), max(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), min(0u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), min(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), uint(0u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u + (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) >> (0u | 0u))))) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u), uint(_GLF_IDENTITY(0u, uint(uint(0u))))), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(clamp(min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))))), min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))))), min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))))), uint(_GLF_IDENTITY(uvec2(clamp(min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(packSnorm2x16(injectionSwitch)))), (true ? 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), clamp(_GLF_IDENTITY(uint(0u), 0u | (uint(0u))), uint(0u), uint(0u)))) | (uint(0u))), uint(0u)) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u)))) + 0u)) : _GLF_FUZZED(subgroup_size))))), min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))))), min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), 0u ^ (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))))))), 0u), uvec2(0u, 0u) | (uvec2(clamp(min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(77043u))), _GLF_IDENTITY(uint(0u), uint(0u)))) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))) << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))))), min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))), ~ (~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))))))), min(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size), 0u | (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))))), ~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)))))), 0u))))))))), clamp(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (true ? _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))) : _GLF_FUZZED(171342u))), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))))))) << 0u)), min(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))))))) << 0u)), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))))))) << 0u))))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u))) | 0u))))))), 1u)))))), ~ (~ (uint(uvec4(gl_WorkGroupSize.x, 0u, 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u))), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u + (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec2(uint(0u), 1u), (_GLF_IDENTITY(uvec2(uint(0u), 1u), ~ (~ (uvec2(uint(0u), 1u))))) ^ uvec2(0u, 0u))))))), (_GLF_IDENTITY(true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size), (true ? 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)) : _GLF_FUZZED(subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : 0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) * (0u ^ 1u)))) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)), (1u | 0u) * (_GLF_IDENTITY((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)), ((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))) << 0u))))))))), clamp(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))), (_GLF_IDENTITY((uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))), (true ? (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))) : _GLF_FUZZED(84286u)))) << 0u))))) << 0u))), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((uint(0u)))) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u))), ((uint(0u))) | ((uint(0u)))))))) << 0u))), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), uint(_GLF_IDENTITY(uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u), clamp(uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, uint(uint(8u)))))), 1u), uvec4((uint(0u)), 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 1u), uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | _GLF_IDENTITY(((uint(0u))), (((uint(0u)))) ^ 0u)))))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), 1u), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u))), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u + (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec2(uint(0u), 1u), (_GLF_IDENTITY(uvec2(uint(0u), 1u), ~ (~ (uvec2(uint(0u), 1u))))) ^ uvec2(0u, 0u))))))), (_GLF_IDENTITY(true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size), (true ? 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)) : _GLF_FUZZED(subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : 0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) * (0u ^ 1u)))) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)), (1u | 0u) * (_GLF_IDENTITY((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)), ((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))) << 0u))))))))), clamp(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))), (_GLF_IDENTITY((uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))), (true ? (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))) : _GLF_FUZZED(84286u)))) << 0u))))) << 0u))), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((uint(0u)))) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u))), ((uint(0u))) | ((uint(0u)))))))) << 0u))), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), uint(_GLF_IDENTITY(uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u), clamp(uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, uint(uint(8u)))))), 1u), uvec4((uint(0u)), 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 1u), uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | _GLF_IDENTITY(((uint(0u))), (((uint(0u)))) ^ 0u)))))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), 1u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u))), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u + (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 1u)), min(uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uvec2(uint(0u), 1u), (_GLF_IDENTITY(uvec2(uint(0u), 1u), ~ (~ (uvec2(uint(0u), 1u))))) ^ uvec2(0u, 0u))))))), (_GLF_IDENTITY(true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size), (true ? 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)) : _GLF_FUZZED(subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : 0u << _GLF_IDENTITY(uint(0u), uint(0u)))), 0u ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) * (0u ^ 1u)))) : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), _GLF_IDENTITY((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)), (1u | 0u) * (_GLF_IDENTITY((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size)), ((true ? 0u << _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(subgroup_size))) << 0u))))))))), clamp(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << 0u)), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))), (_GLF_IDENTITY((uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))), (true ? (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u)))) : _GLF_FUZZED(84286u)))) << 0u))))) << 0u))), max(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((uint(0u)))) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | 0u))), ((uint(0u))) | ((uint(0u)))))))) << 0u))), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)), uint(_GLF_IDENTITY(uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u), clamp(uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, uint(uint(8u)))))), 1u), uvec4((uint(0u)), 0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 1u), uvec4((uint(0u)), 0u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 1u))))) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | ((uint(0u))))))), (uint(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), ((uint(0u))) | _GLF_IDENTITY(((uint(0u))), (((uint(0u)))) ^ 0u)))))) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))), 1u)) >> uvec2(0u, 0u)) : _GLF_FUZZED(uvec2(23457u, 87920u)))))))))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(false, false, true)), false))))))))), false, true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(injectionSwitch.y, 1.0))))))), true))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-5945.9451)), _GLF_FUZZED(6.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))) + 0u)) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (subgroup_id))))) * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u)) | (subgroup_local_id)) + 1)) * _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u), (1u))))))) | _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), min(((subgroup_local_id + 1)), ((subgroup_local_id + 1)))))))) % subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED((~ 12054))))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u)) | (subgroup_local_id), uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u)) | (subgroup_local_id), 0u, 0u)))) + 1)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0))))))))) % subgroup_size), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u)) | (subgroup_local_id)) + 1)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) | _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) % subgroup_size), 1u, 0u, 0u), min(uvec4((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), uint(uvec2((subgroup_local_id), 1u)))) / 1u))) - 0u)) | (subgroup_local_id)) + 1)) * _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u, ~ (~ (1u))))))) | _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) % subgroup_size), 1u, 0u, 0u), uvec4((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u)) | (subgroup_local_id)) + 1)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) | _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) % subgroup_size), 1u, 0u, 0u))))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u, ((_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) - 0u) / 1u))) | (subgroup_local_id)) + 1)) * _GLF_IDENTITY(1u, ~ (~ (1u))))) | _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) % subgroup_size)))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) && true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(cos(injectionSwitch)) : injectionSwitch)).y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - vec2(0.0, 0.0))).y, injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), float(mat3(float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(9469.6501)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(vec3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0)))), bool(true))))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)), (float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))) - 0.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), min(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))).y))), 1.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), injectionSwitch.x), sqrt(1.0), round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4x3(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), min(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))))), (true ? float(mat3((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), 1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.7)), float(0.0), bool(true)))), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(-6563.3481)))))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.y), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) ? _GLF_FUZZED(-208.913) : clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)))) - 0.0))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.7)), vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), bvec2(false, true)))))) - vec2(0.0, 0.0)).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))) + 0u)) | (next_virtual_gid))], uint(1), 4, 64, 4);
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
