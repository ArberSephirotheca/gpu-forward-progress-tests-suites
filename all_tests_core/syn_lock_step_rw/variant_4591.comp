#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat4x3 _f0;
 bool _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_1 {
 uint read;
 ivec2 _f0;
 uvec2 _f1;
 vec2 _f2;
 mat3x4 _f3;
 mat2x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 ivec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 _GLF_struct_3 _f1;
 ivec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 + (5))) | (5))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), min((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 + (5))) | (5))), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 + (5))) | (5))), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(32279) : int(4))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, (0 >> _GLF_IDENTITY(int(4), int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 | 1)))) != _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) * 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
            break;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, true), true)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false), (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))) || false)) || false))))))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, true, true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, true, true))))), false))), ! (! (false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(! (_GLF_IDENTITY(true, (true) || false)), true, true, true))))), false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-507.963))), _GLF_FUZZED(131.896)), vec2(_GLF_FUZZED(-911.642), (injectionSwitch)[1]), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2(_GLF_FUZZED(916.943), _GLF_FUZZED(7.0)), bvec2(false, false))), injectionSwitch)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
        return;
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true)))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x)))), clamp(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))))), gl_NumWorkGroups.x)), _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * 1u, (true ? (gl_NumWorkGroups.x) * 1u : _GLF_FUZZED(subgroup_id)))))))) : _GLF_FUZZED(subgroup_local_id)), clamp((true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * 1u, (true ? (gl_NumWorkGroups.x) * 1u : _GLF_FUZZED(subgroup_id)))))))) : _GLF_FUZZED(subgroup_local_id)), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * 1u, (true ? (gl_NumWorkGroups.x) * 1u : _GLF_FUZZED(subgroup_id)))))))) : _GLF_FUZZED(subgroup_local_id)), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * 1u, (true ? (gl_NumWorkGroups.x) * 1u : _GLF_FUZZED(subgroup_id)))))))) : _GLF_FUZZED(subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) << 0u), 0u + (~ (gl_NumWorkGroups.x)))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x), 0u + (~ (gl_NumWorkGroups.x)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))))), gl_NumWorkGroups.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * 1u, (true ? (gl_NumWorkGroups.x) * 1u : _GLF_FUZZED(subgroup_id))))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))) : min(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))), (true ? _GLF_IDENTITY(~ (gl_NumWorkGroups.x), 0u + (~ (gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) * 1u, (true ? (gl_NumWorkGroups.x) * 1u : _GLF_FUZZED(subgroup_id)))))))) - 0u)) : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_local_id)));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_DEAD(false)), false, true, true)), true && (bool(bvec4(true && (_GLF_DEAD(false)), false, true, true)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true); _injected_loop_counter --)
            {
             do
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true))));
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 1u), max(uvec2(0u, 1u), uvec2(0u, 1u)))), (uint(_GLF_IDENTITY(uvec2(0u, 1u), max(uvec2(0u, 1u), uvec2(0u, 1u))))) + 0u)), 0u, 0u) | ((gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))) - _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(135470u))), 0u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uvec3(70416u, 150360u, 128821u)))))), gl_WorkGroupID), uvec3(uvec3(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uvec3(70416u, 150360u, 128821u)))))), gl_WorkGroupID)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 1u), max(uvec2(0u, 1u), uvec2(0u, 1u)))), (uint(_GLF_IDENTITY(uvec2(0u, 1u), max(uvec2(0u, 1u), uvec2(0u, 1u))))) + 0u)), 0u, 0u) | ((gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))) - _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(135470u))), 0u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) ? (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u)))), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uvec3(70416u, 150360u, 128821u)))))), gl_WorkGroupID), uvec3(uvec3(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), min(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))), _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) * uvec3(1u, 1u, 1u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uvec3(70416u, 150360u, 128821u)))))), gl_WorkGroupID))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(199002u, 44198u, 192752u)), ~ (~ (_GLF_FUZZED(uvec3(199002u, 44198u, 192752u))))))).x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), max(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), ((0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) * 1u))), 0u + (subgroup_id))), 0u | (max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))), subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) * 1u))), 0u + (subgroup_id)))))), _GLF_IDENTITY(1u, min(1u, 1u)) * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), (subgroup_id))), ((subgroup_id)) | 0u)) << 0u)) * subgroup_size, subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(8.5))), injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), 0u + (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), uint(uvec3((subgroup_local_id), 0u, 0u))), (subgroup_local_id))))) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(subgroup_size)))), uint(uint(~ (_GLF_FUZZED(subgroup_size)))))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u) : _GLF_FUZZED(subgroup_size))) >> 0u)) + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size)) << (0u ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)), min((false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size)) << (0u ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)), min((false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size)) << (0u ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)), min((false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(194144u) : ((subgroup_local_id + 1) % subgroup_size)))))) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (subgroup_local_id) + _GLF_IDENTITY(0u, (0u) - 0u)) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (subgroup_local_id)))), (subgroup_local_id) + 0u) : _GLF_FUZZED(subgroup_size))) >> 0u)) + 1, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u)) + _GLF_IDENTITY(0u, (0u) - 0u)) : _GLF_FUZZED(subgroup_size)), 0u | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u)) + _GLF_IDENTITY(0u, (0u) - 0u)) : _GLF_FUZZED(subgroup_size)), ~ (~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) / 1u)) + _GLF_IDENTITY(0u, (0u) - 0u)) : _GLF_FUZZED(subgroup_size))))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u | 0u) | (0u)))) ^ (subgroup_local_id)))), (subgroup_local_id) + 0u) : _GLF_FUZZED(subgroup_size))) >> 0u)) + 1 : _GLF_FUZZED(workgroup_id)))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))) : _GLF_FUZZED(num_workgroup)))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) << (0u ^ 0u)), (false ? _GLF_FUZZED(194144u) : ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, sqrt(0.0)))), injectionSwitch.x)))));
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.4) : 1.0))), _GLF_struct_3(_GLF_struct_0(mat2(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), ~ (_GLF_IDENTITY(~ (uvec3(1u)), clamp(~ (uvec3(1u)), ~ (uvec3(1u)), ~ (uvec3(1u)))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))) ^ (uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)))), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), uvec3(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (false ? _GLF_FUZZED(uvec3(113079u, 142202u, 56680u)) : uvec3(0u, 0u, 0u) ^ (uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ (uvec3(1u))))), uvec3(1u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (false ? _GLF_FUZZED(uvec3(113079u, 142202u, 56680u)) : uvec3(0u, 0u, 0u) ^ (uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ (uvec3(1u))))), uvec3(1u))), (false ? _GLF_FUZZED(uvec3(126015u, 137548u, 9879u)) : _GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (false ? _GLF_FUZZED(uvec3(113079u, 142202u, 56680u)) : uvec3(0u, 0u, 0u) ^ (uvec3(1u))))) | (uvec3(0u, 0u, 0u) ^ (uvec3(1u))))), uvec3(1u)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), uvec3(1u))), min(_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))), 1u), (uvec4(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))), 1u)) / uvec4(1u, 1u, 1u, 1u))))) >> (uvec3(0u, 0u, 0u) & uvec3(9619u, 72077u, 117222u)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), min(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), _GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))))) ^ uvec3(0u, 0u, 0u))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u)))) ^ uvec3(0u, 0u, 0u)))), 1u)))) : _GLF_FUZZED(uvec3(123346u, 177010u, 98518u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(1u)), min(uvec3(uvec3(1u)), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u)), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u))), (~ (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u)))) | (~ (uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), 0u | ((_GLF_IDENTITY(1u, 0u ^ (1u))))) << 0u)))))))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (uvec3(1u)), (uvec3(0u, 0u, 0u) ^ (uvec3(1u))) | (uvec3(0u, 0u, 0u) ^ (uvec3(1u))))), _GLF_IDENTITY(uvec3(1u), uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u) ^ (uvec3(1u))))), uvec3(1u))), _GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) - uvec3(0u, 0u, 0u), ((uvec3(1u)) - uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))))))))), ivec2(1), mat4x3(1.0)), _GLF_struct_1(atomicLoad(buf[virtual_gid], 4, 64, 2), ivec2(1), uvec2(1u), _GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(6.8), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(3.5)), bvec2(true, false)), vec2(mat4x2(mix(vec2(_GLF_FUZZED(6.8), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(3.5)), bvec2(true, false)), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, log(1.0), 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, log(1.0), 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), 0.0)))), vec2(1.0))), mat3x4(1.0), mat2x4(1.0), mat4x3(1.0)), _GLF_struct_2(mat4x3(1.0), true, mat4x3(1.0))), ivec3(1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), (_GLF_IDENTITY(int(int((4))), (true ? int(int((4))) : _GLF_FUZZED(-15856)))) - 0)) >> 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), true && (true))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), false || ((true))), (! (true)) || false))), true, true)))))))
                  return;
                }
               return;
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(52085)))), bool(bvec3(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 1, 1))))), int(1)), (true ? 0 << _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(52085)))), false, false)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1))))) && true); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false, false, false))), true), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))) || (false))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) || (false))), true), false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || (false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))) && true))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))) && true))))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), _GLF_IDENTITY(bool(bvec3((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))) && true))))), true), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec3((! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))) && true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, false, true)))) && true))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 1, (_GLF_IDENTITY(0 ^ 1, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 1), 0 | ((false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 1))))) | (0 ^ 1)), 0 ^ (_GLF_IDENTITY(0 ^ 1, (_GLF_IDENTITY(0 ^ 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 0 ^ 1))) | (0 ^ 1))))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 ^ 1), max((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0)) ^ 1), _GLF_IDENTITY((0 ^ 1), ((_GLF_IDENTITY(0, (0) + 0) ^ 1)) << 0)))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 ^ 1), max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), (_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) - 0)) << 0)))), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - 0))) ^ 1), _GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ _GLF_IDENTITY(1, max(1, 1))), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (0) - 0))))) << 0)), max(~ (_GLF_IDENTITY(max(_GLF_IDENTITY((0 ^ 1), (_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) ^ 0)) << ((9431 & 0) << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0), (_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)) | (_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), _GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))), clamp((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))), _GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))), ~ (~ ((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)))))))) << 0)))))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) | (_GLF_IDENTITY((1), ((1)) * 1))))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, (0) << 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(_GLF_IDENTITY(ivec3((0 ^ 1), _GLF_IDENTITY(1, (1) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), 1), ~ (~ (ivec3((0 ^ 1), _GLF_IDENTITY(1, (1) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)))))), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), _GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, (_GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, 0 | (_GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, int(ivec3((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, 0, 0)))))) * 1)))))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) | (_GLF_IDENTITY((1), ((1)) * 1))))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, (0) << 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(_GLF_IDENTITY(ivec3((0 ^ 1), _GLF_IDENTITY(1, (1) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), 1), ~ (~ (ivec3((0 ^ 1), _GLF_IDENTITY(1, (1) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)))))), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), _GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, (_GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, 0 | (_GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, int(ivec3((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, 0, 0)))))) * 1)))))), 1), (ivec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) | (_GLF_IDENTITY((1), ((1)) * 1))))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, (0) << 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(_GLF_IDENTITY(ivec3((0 ^ 1), _GLF_IDENTITY(1, (1) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), 1), ~ (~ (ivec3((0 ^ 1), _GLF_IDENTITY(1, (1) >> (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), 1)))))), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), _GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, (_GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, 0 | (_GLF_IDENTITY((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, int(ivec3((max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0, 0, 0)))))) * 1)))))), 1)) ^ ivec2(0, 0)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), int(1)))))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))))))), ((_GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0), 0), (ivec2(_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0), 0)) | (ivec2(_GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0), 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, (0) << 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, (0) << 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, max(((0 ^ 1)) << 0, ((0 ^ 1)) << 0))))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, (_GLF_IDENTITY(((0 ^ 1)) << 0, 0 + (((0 ^ 1)) << 0))) - 0))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ _GLF_IDENTITY(1, (1) / 1)), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, max(((0 ^ 1)) << 0, ((0 ^ 1)) << 0))))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, (_GLF_IDENTITY(((0 ^ 1)) << 0, 0 + (((0 ^ 1)) << 0))) - 0))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ _GLF_IDENTITY(1, (1) / 1)), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((_GLF_IDENTITY(0 ^ 1, (0 ^ 1) | (0 >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, max(((0 ^ 1)) << 0, ((0 ^ 1)) << 0))))) << 0)), max(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, (_GLF_IDENTITY(((0 ^ 1)) << 0, 0 + (((0 ^ 1)) << 0))) - 0))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ _GLF_IDENTITY(1, (1) / 1)), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY((0 ^ 1), ((0 ^ _GLF_IDENTITY(1, max(1, 1)))) << 0)), (max((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0))) << 0))), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0))) << 0))), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, (((0 ^ 1)) << 0) | (_GLF_IDENTITY(((0 ^ 1)) << 0, (((0 ^ 1)) << 0) | (((0 ^ 1)) << 0)))))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((_GLF_IDENTITY(0 ^ 1, int(ivec3(0 ^ 1, 1, (0 & -20128)))))) << 0))) << 0))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(max((0 ^ _GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY((0 ^ 1), ((0 ^ _GLF_IDENTITY(1, max(1, 1)))) << 0)), (max((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | 0) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0))) << 0))), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0)), (max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((0 ^ 1), int(ivec3((0 ^ 1), 1, 1))), ((0 ^ 1)) << 0))) << 0))), (max((_GLF_IDENTITY(0, int(int(0))) ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << 0))) << 0))))), ~ (_GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(((0 ^ 1)) << 0, (((0 ^ 1)) << 0) | (_GLF_IDENTITY(((0 ^ 1)) << 0, (((0 ^ 1)) << 0) | (((0 ^ 1)) << 0)))))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((_GLF_IDENTITY(0 ^ 1, int(ivec3(0 ^ 1, 1, (0 & -20128)))))) << 0))) << 0)))))) - 0) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), (int(_GLF_IDENTITY(1, max(1, 1)))) | (int(_GLF_IDENTITY(1, max(1, 1))))), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(_GLF_IDENTITY(7, (7) >> 0))) - 0))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))))))) / 1))))) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, _GLF_IDENTITY(1, (1) / 1), 1))))) - 0)))), (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-69168))))) ^ (_GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), max(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0)))) * 1))), min(max((0 ^ 1), _GLF_IDENTITY((_GLF_IDENTITY(0, int(int(0))) ^ 1), ((0 ^ 1)) << _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (0) << 0)))), _GLF_IDENTITY(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0))) ^ 1)) << _GLF_IDENTITY(0, (0) >> 0))), (max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0))) ^ 1)) << _GLF_IDENTITY(0, (0) >> 0)))) | 0)))))), false || (_injected_loop_counter != _GLF_IDENTITY((0 ^ 1), 0 ^ (_GLF_IDENTITY((0 ^ 1), _GLF_IDENTITY(max((_GLF_IDENTITY(0 ^ _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 0 ^ (0 ^ 1))), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), max(_GLF_IDENTITY(0, _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), max((0), (0))), _GLF_IDENTITY((0), max((0), (0))))) >> 0), _GLF_IDENTITY(0, (0) >> 0)))) * 1, ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), max(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0)))) * 1) | ((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), max(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, (0) >> 0)))) * 1))))), min(max((0 ^ 1), _GLF_IDENTITY((0 ^ 1), ((0 ^ 1)) << _GLF_IDENTITY(0, (0) >> 0))), max((0 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), min(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1)))))), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), min(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1)))))), (int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), min(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1))))))) | (int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), min(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), _GLF_IDENTITY(ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1), ivec4(0, 0, 0, 0) + (ivec4((_GLF_IDENTITY(0 ^ 1, min(0 ^ 1, 0 ^ 1))), 1, 1, 1))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0))) ^ 1, ~ (~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) >> 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), ~ (_GLF_IDENTITY(~ (~ (~ (0))), max(~ (~ (~ (0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (0)), 0 | (_GLF_IDENTITY(~ (~ (0)), 0 ^ (_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) - 0)))))), 0 | (~ (~ (~ (0))))))))))) | 0))) ^ 1))))) << _GLF_IDENTITY(0, (0) >> 0))))))))))) && true)); _GLF_IDENTITY(_injected_loop_counter ++, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                      break;
                     break;
                    }
                   break;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-281.446))), injectionSwitch.x)))) > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.0)), vec2(_GLF_FUZZED(vec3(7106.4492, -45.14, -515.937).r), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(214.430), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))], _GLF_FUZZED(-834.811)), bvec2(true, false))).y))), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    break;
                   break;
                  }
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                    continue;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, true && (true)))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false))))))))))))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true)))), true))), bvec3(bvec4(bvec3(true, true, true), false))), false))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), _GLF_IDENTITY(false, (false) && true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(true, true, true), false))), false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.4) : injectionSwitch.x)) < injectionSwitch.y)))))))))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   return;
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), (int(ivec3(1, 1, 1))) | (int(ivec3(1, 1, 1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))) > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          break;
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-54.10)), float(injectionSwitch.y), bool(true)))))))));
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_DEAD(false)))))) && true))
                    break;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
                      continue;
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
                    continue;
                  }
                }
              }
            }
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
          {
           do
            {
             for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-156.027)), vec2(_GLF_FUZZED(-594.699), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x < injectionSwitch.y))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))
          return;
         break;
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(612.546), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(96.18)), bvec2(true, false))).x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec3(_GLF_IDENTITY(1, (1) | (1)), 0, 0))) : _GLF_FUZZED(56325))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         subgroupBarrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
          break;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f1._f1.read, (_GLF_struct_replacement_4._f1._f1.read) << (0u | 0u)), uint(uvec2(_GLF_struct_replacement_4._f1._f1.read, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 0u, 0u), max(uvec4(0u, 1u, 0u, 0u), uvec4(0u, 1u, 0u, 0u))))), _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) - 0u)), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(1u, 1u, 1u))))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) | (_GLF_IDENTITY(4, (4) | (4)))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) | (4))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
}
