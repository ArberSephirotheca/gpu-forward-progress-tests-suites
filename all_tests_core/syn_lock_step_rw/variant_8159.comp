#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)), 1.0, 1.0))).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3143.1180), _GLF_FUZZED(-707.594)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-116.941, -3.5)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(-0.5, 1.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(4.0)), bool(false))))).y, float(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))), true && (! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))), true && (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 1.0)), 0.0 + (float(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-33.97)), vec2(_GLF_FUZZED(1.9), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(max(-8611.3958, mix(-20.64, _GLF_IDENTITY(-568.132, 1.0 * (-568.132)), true))))), float(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(false, true), true), false)))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), false))))))))))))).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], max(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))[0], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])))), log(1.0), log(1.0), exp(0.0), length(0.0), tan(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[0])), determinant(mat4(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], max(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))[0], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])))), log(1.0), log(1.0), exp(0.0), length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-49.85)), float(0.0), bool(true)))), tan(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.0)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x), sqrt(1.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-99.17, max(-99.17, _GLF_IDENTITY(-99.17, mix(float(_GLF_FUZZED(-9213.4672)), float(-99.17), bool(true)))))) : 1.0)), 1.0, 1.0)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-467.050), (_GLF_IDENTITY(_GLF_FUZZED(-467.050), float(mat3x4(_GLF_FUZZED(-467.050), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(-467.050), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp(-517.715)) : 1.0)), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_FUZZED(-467.050), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, log(1.0), 1.0))) * (1.0)), 0.0))) - 0.0))), float(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(abs(-399.728)) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4x2(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))), 0.0, 1.0, 0.0)))), bool(true)), (true ? mix(float(_GLF_FUZZED(-467.050)), float(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)))), bool(true)) : _GLF_IDENTITY(_GLF_FUZZED(8218.1770), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0)))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch))[0], 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(1.0), float(mat4x2(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.3), min(_GLF_FUZZED(4.3), _GLF_FUZZED(4.3)))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.58)), bool(false))) + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-29688))), bool(false)))))))) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0)), 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(acosh(7998.7810), float(mat2x3(acosh(7998.7810), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), exp(abs(0.0)), 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-467.050)), float(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.2)), float(1.0), bool(true))))))), 0.0, 1.0, 0.0)))), bool(true))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 1.0, 1.0)))))), 1.0)))))))))), false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], max(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))[0], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])))), log(1.0), log(1.0), exp(0.0), length(0.0), tan(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[0])), determinant(mat4(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], max(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))[0], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])))), log(1.0), log(1.0), exp(0.0), length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-49.85)), float(0.0), bool(true)))), tan(0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[0])))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.0)), float(0.0), bool(true))), 0.0, 0.0)), injectionSwitch.x), sqrt(1.0), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0)), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-99.17, max(-99.17, _GLF_IDENTITY(-99.17, mix(float(_GLF_FUZZED(-9213.4672)), float(-99.17), bool(true)))))) : 1.0)), 1.0, 1.0)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-467.050), (_GLF_IDENTITY(_GLF_FUZZED(-467.050), float(mat3x4(_GLF_FUZZED(-467.050), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(-467.050), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp(-517.715)) : 1.0)), 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_FUZZED(-467.050), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, log(1.0), 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, log(1.0), 1.0))) * (1.0)), 0.0))) - 0.0))), float(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(abs(-399.728)) : _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(mat4x2(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))), 0.0, 1.0, 0.0)))), bool(true)), (true ? mix(float(_GLF_FUZZED(-467.050)), float(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0)))), bool(true)) : _GLF_IDENTITY(_GLF_FUZZED(8218.1770), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)), clamp(float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(8218.1770), mix(float(_GLF_FUZZED(8218.1770)), float(_GLF_FUZZED(-2.5)), bool(false))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0)))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0)))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch))[0], 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), min(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(sqrt(1.0), float(mat4x2(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), 1.0 * (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4.3), min(_GLF_FUZZED(4.3), _GLF_FUZZED(4.3)))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.58)), bool(false))) + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-29688))), bool(false)))))))) - 0.0), 0.0, 1.0)), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(1.0, 1.0)), 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(acosh(7998.7810), float(mat2x3(acosh(7998.7810), _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), exp(abs(0.0)), 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-467.050)), float(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat2(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.2)), float(1.0), bool(true))))))), 0.0, 1.0, 0.0)))), bool(true))), round(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 1.0, 1.0)))))), 1.0)))))))))), false, false)))), false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false || (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), ! (! (bool(_GLF_DEAD(false))))))) && true)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(929.710, 524.764)) : (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(325.908), ((false ? _GLF_FUZZED(vec2(929.710, 524.764)) : (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_IDENTITY(((false ? _GLF_FUZZED(vec2(929.710, 524.764)) : (injectionSwitch) * mat2(1.0)))[0], min(((false ? _GLF_FUZZED(vec2(929.710, 524.764)) : (injectionSwitch) * mat2(1.0)))[0], ((false ? _GLF_FUZZED(vec2(929.710, 524.764)) : (injectionSwitch) * mat2(1.0)))[0])), _GLF_FUZZED(9.9)), bvec2(true, false))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(72.89)), float(injectionSwitch.x), bool(true)))) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || _GLF_IDENTITY(false, ! (! (false))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))), true, false)), _GLF_IDENTITY(false || (bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))), ! (! (false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, max(3, 3)))) / 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ~ (_GLF_IDENTITY(~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), clamp(_GLF_IDENTITY(~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), (~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))) ^ ivec2(0, 0)), ~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), ivec2(0, 0) ^ (~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), max(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0 + (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))), ~ (~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))), (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ~ (~ (ivec2(_injected_loop_counter, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))), ~ (~ (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) ^ 0)) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), clamp((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))), ~ (~ (ivec2(_injected_loop_counter, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(5), int(5)))) | 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ~ (~ ((1 << _GLF_IDENTITY(int(5), int(5)))))))) >> _GLF_IDENTITY(int(5), int(5))))))))))))) - 0))))), _injected_loop_counter)) != int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, max((0.0) / 1.0, (0.0) / 1.0))), injectionSwitch.x), mix(float(_GLF_FUZZED(5.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, (true) || false)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6073.5966, 9.4)))), injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x4(1.8, 1.0, 73.48, 45.66, 333.681, _GLF_IDENTITY(357.126, clamp(_GLF_IDENTITY(357.126, float(mat4x3(357.126, 1.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 357.126, 357.126)), 3917.1354, -1.1)) : mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), log(1.0), abs(0.0), cos(0.0), 1.0, 0.0)), min(float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), log(1.0), abs(0.0), cos(0.0), 1.0, 0.0)), float(mat4x2(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), log(1.0), abs(0.0), cos(0.0), 1.0, 0.0)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false)), true && (bool(bvec2(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.0) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (0 & 32939) + (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 0), ~ (_GLF_IDENTITY(~ ((0 ^ 0)), clamp(~ ((0 ^ 0)), ~ ((0 ^ 0)), _GLF_IDENTITY(~ ((0 ^ 0)), (~ ((0 ^ 0))) ^ 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, 0 + (4)), 0)))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), clamp(_GLF_IDENTITY((int(4)), ((int(4))) - 0), (int(4)), (int(4)))) / 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) / 1, ((int(4)) / 1) + 0))), 0 | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)), int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), max(ivec2(4, 0), ivec2(4, 0)))))), (int(4)) / 1)), 0, (0 >> _GLF_IDENTITY(int(6), int(6)))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))), ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_size, (true ? false ? _GLF_FUZZED(num_workgroup) : workgroup_size : _GLF_FUZZED(subgroup_id))))) * workgroup_id) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | 0u, ~ (~ ((workgroup_size * workgroup_id) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (0u ^ 0u), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ (0u ^ 0u)) >> 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | 0u, ~ (~ ((workgroup_size * workgroup_id) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (0u)), 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ (0u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u))))) - (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / ((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))) ^ 0u) ^ 0u)), workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : workgroup_size * workgroup_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, false, true))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 0u, (179781u & 0u)))))), _GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), min(uint(uint(subgroup_id * subgroup_size)), uint(uint(subgroup_id * subgroup_size))))), 0u, 1u))) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) >> 0u)], 4, 64, _GLF_IDENTITY(0, ~ (~ (0))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true), false, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read), clamp(_GLF_IDENTITY(uint(read), 0u ^ (uint(read))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read), (uint(read)) | 0u), uint(uvec2(uint(read), 0u))), uint(read)))), (false ? _GLF_FUZZED((+ num_workgroup)) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read), clamp(uint(read), _GLF_IDENTITY(uint(read), uint(uvec2(uint(read), 0u))), uint(read)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(read), clamp(uint(read), _GLF_IDENTITY(uint(read), uint(uvec2(uint(read), 0u))), uint(_GLF_IDENTITY(read, (false ? _GLF_FUZZED(read) : read))))))), 0u ^ ((uint(_GLF_IDENTITY(uint(read), clamp(uint(read), _GLF_IDENTITY(uint(read), uint(uvec2(uint(read), 0u))), uint(_GLF_IDENTITY(read, (false ? _GLF_FUZZED(read) : read))))))))) ^ 0u)))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, min(4, 4))), (0 << _GLF_IDENTITY(int(5), int(5))) | (0 ^ (_GLF_IDENTITY(4, min(4, 4)))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
