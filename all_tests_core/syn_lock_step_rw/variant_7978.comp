#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, int(ivec3((0) / 1, 0, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (-57349 & (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, int(ivec3(1, 0, 0))) ^ 0)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)), false, true, true))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)), false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 0, 1))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
        {
         barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, true, false)), (_GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec4(_injected_loop_counter != 1, true, true, _GLF_IDENTITY(false, ! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((bool(bvec4(_injected_loop_counter != 1, true, true, _GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! ((bool(bvec4(_injected_loop_counter != 1, true, true, _GLF_IDENTITY(false, ! (! (false))))))), ! (! (! ((bool(bvec4(_injected_loop_counter != 1, true, true, _GLF_IDENTITY(false, ! (! (false)))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) || false))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(bool(bvec4(false, false, true, true))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           do
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))), false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.0)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) || false)))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) && true, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(152.775), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(25.92)), bvec2(true, false))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.8, -6411.6268)))))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, exp(0.0), 1.0, 1.0))).y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.0)), bool(false)), mix(float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.0)), bool(false))), float(_GLF_FUZZED(-2813.7243)), bool(false)))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(vec4(678.858, 3.1, 6.8, -879.435))))).x > injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.0)), bool(false))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)))) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / exp(vec2(0.0, 0.0))).y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))), false, false, false)))))) || false)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-77.71)), float(injectionSwitch.y), bool(true))))) && true, _GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (! (! (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (! (! (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)) || false), true), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (! (! (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)) && true)), (! (! (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)) || false), true), false)))))))))))))))))), _GLF_IDENTITY(false, bool(bool(false))), true, false)))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(8.1, mix(float(_GLF_IDENTITY(8.1, (8.1) - 0.0)), float(_GLF_FUZZED(-75.98)), bool(false))))), bool(false))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.1)), bool(false))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, ! (! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                        barrier();
                       barrier();
                      }
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0)))); _injected_loop_counter --)
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                          {
                           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 & (1 | 0)))); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                    }
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                    barrier();
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))))); _injected_loop_counter --)
                    {
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-2.4, -1.5)) : (injectionSwitch))), (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y))));
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))) && true))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(39.88)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1239.6126)), bool(false)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 17335)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.8))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false))))), true, true, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))) || false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), true, _GLF_IDENTITY(false, ! (! (false)))), true))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec3(-8731.0791, -5859.6030, 8.9).yz, mix(vec2((_GLF_IDENTITY(vec3(-8731.0791, -5859.6030, 8.9).yz, max(vec3(-8731.0791, -5859.6030, 8.9).yz, vec3(-8731.0791, -5859.6030, 8.9).yz)))[0], _GLF_FUZZED(79.28)), vec2(_GLF_FUZZED(6.9), (vec3(-8731.0791, -5859.6030, 8.9).yz)[1]), bvec2(false, true)))))).x > injectionSwitch.y))))
  {
   do
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], 1.0 * (injectionSwitch[1])))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), max(_GLF_IDENTITY(float(float(injectionSwitch.y)), (true ? float(float(injectionSwitch.y)) : _GLF_FUZZED(-5.6))), float(float(injectionSwitch.y)))))))))))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false))), false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.6)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(0.6)))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8983.7690 + 9.4))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.6))))))))) || false)), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.6)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), true, _GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_IDENTITY(false, (false) || false) || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(0.6)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))) || false))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) || false), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.6)))))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), _GLF_IDENTITY(true, ! (! (true))), false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.6))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.6))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.6))))))), bool(bool((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.6)))))))))), true && (false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.6))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(vec2(min(injectionSwitch, injectionSwitch))))))).y : _GLF_FUZZED(0.6))))))))), bool(bool((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.6))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(178244u, 19835u, 70762u)))).x, max(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec3(178244u, 19835u, 70762u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(178244u, 19835u, 70762u), ~ (~ (uvec3(178244u, 19835u, 70762u))))), min(~ (_GLF_IDENTITY(uvec3(178244u, 19835u, 70762u), ~ (~ (uvec3(178244u, 19835u, 70762u))))), ~ (_GLF_IDENTITY(uvec3(178244u, 19835u, 70762u), ~ (~ (uvec3(178244u, 19835u, 70762u)))))))))))).x, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(178244u, 19835u, 70762u)))).x)), (gl_NumWorkGroups.x) * 1u), gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(98905u, 172830u, 150520u)) : gl_WorkGroupSize)).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))), (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))) && true))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, _GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), false, true, _GLF_IDENTITY(true, (true) || false))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) && true))), true))) && true)), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y))) && true))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             for(int _injected_loop_counter = (0 & (22374 ^ -67070)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec3(-7.1, 87.72, 1.5).p)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y), true && (true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.8)), bvec2(true, false)))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y))))), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), (false ? _GLF_FUZZED(vec2(1.9, 0.8)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch))[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))).y), false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(55.24) : injectionSwitch[0])))), injectionSwitch[1]))) * mat2(1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y))), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0)))))[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(55.24) : injectionSwitch[0])))), injectionSwitch[1]))) * mat2(1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y))), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0)))))[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false)))))) || false))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.0))))).y))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1]))) * mat2(1.0)).y))), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), min(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y))), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false))))))), false, true)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0)))], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.8, -625.621)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[1])))).y), false))))))), false, true))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-168.918, 6428.8070))))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).y), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, abs(0.0), 0.0)), (vec2(vec4(injectionSwitch, abs(0.0), 0.0))) * vec2(1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + vec2(0.0, 0.0))))).y), false))))))), false, true)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-2.2), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1]))[0], max((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[0])), _GLF_FUZZED(-7.8)), bvec2(true, false))))) * mat2(1.0)).y), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5151.5840), _GLF_FUZZED(733.740)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))) + 0.0)))) * mat2(1.0)).y), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[_GLF_IDENTITY(0, 1 * (0))], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).y), false))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (! (bool(bvec2(false, false))))), ! (! (! _GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false))))))))))), true))) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (1 & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.4)), bool(false))), 1.0, 1.0)), injectionSwitch.y)) : _GLF_FUZZED(subgroup_local_id))) * (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) << 0u))), _GLF_IDENTITY(max(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) ^ 0u))), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))) * 1u) * (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), (max(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) ^ 0u))), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))) * 1u) * (_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))) << _GLF_IDENTITY(0u, uint(uint(0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))) || false))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), true, false)))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)))))), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id))))))) | (1u ^ 1u)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(68.36)), vec2(_GLF_FUZZED(4.0), (injectionSwitch)[1]), bvec2(false, true))))).y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, min(0u, 0u)), 1u)), ~ (~ (uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))) + 0u, ((_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) | 0u)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(uvec3(58869u, 32343u, 118488u)[2]) : _GLF_IDENTITY(uint(0u), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec3(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y)), uint(uint(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y))))))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u), 0u)) * uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, max(1u, 1u)))), 1u)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), (uint(2u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.4))), injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec3(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)) * uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, max(1u, 1u)))), 1u))))) ^ 0u)))), 0u | (uint(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, min(0u, 0u)), 1u)), ~ (~ (uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))) + 0u, ((_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) | 0u)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(uvec3(58869u, 32343u, 118488u)[2]) : _GLF_IDENTITY(uint(0u), uint(0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec3(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y)), uint(uint(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2835.2786))), vec2(_GLF_FUZZED(-63.34), (injectionSwitch)[1]), bvec2(false, true))).y))))))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) >> 0u), 0u)) * uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, max(1u, 1u)))), 1u)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u), (uint(2u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.4))), injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ((uvec3(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)) * uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, max(1u, 1u)))), 1u))))) ^ 0u)))))))) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(2u, (2u) >> 0u))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u | (uint(2u))), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) - 0u)), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0), _GLF_ONE(1.0, injectionSwitch.y)))))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY(((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)), (((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u))) | (((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u))))) | (((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u))))) ^ uvec3(0u, 0u, 0u)))), min((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (_GLF_IDENTITY(2u, min(2u, 2u))))), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) + 0u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ ((uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(170730u) : ~ ((uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), min(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), float(vec2(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0)))), 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2118.5682), _GLF_FUZZED(3888.8460)), bvec2(false, false))).y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), max((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED((workgroup_base * uvec3(25138u, 30278u, 172770u))) : (uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u))))), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) * 1u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) ^ 0u), 0u))))))), ((0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(169288u) : _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))) / 1u)), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), 0u ^ (uint(2u))))), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u))))), max((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), uint(uvec4(uint(1u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u)))), max(uint(uint(1u)), uint(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u)), uint(_GLF_IDENTITY(uint(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))), (uint(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u)))) | 0u)))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(2u, 2u), (max(2u, 2u)) | (max(2u, 2u))))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(96152))), float(1.0), bool(true))), injectionSwitch.y)))) * uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(199624u, 137092u)) : uvec2(1u, 1u)))) | (uvec2(1u, 1u))))), 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))), (true ? (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))), (true ? (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) : _GLF_FUZZED(subgroup_local_id))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u)))))))))))))))), (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, max(0u, 0u)), 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) / ((((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u | (uint(2u))), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), min((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), min((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), min((_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u)))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) / 1u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec2(uint(0u), 0u)), (uint(uvec2(uint(0u), 0u))) | (uint(uvec2(uint(0u), 0u)))))))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6190.4416)), bool(false))), clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(417.905))))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, (0u) | (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(uint(1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)))))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, ~ (~ (2u))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u))))), max((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), _GLF_IDENTITY(max(uint(uint(1u)), uint(uint(1u))), (_GLF_IDENTITY(max(uint(uint(1u)), uint(uint(1u))), min(max(uint(uint(1u)), uint(uint(1u))), max(uint(uint(1u)), uint(uint(1u)))))) | (max(uint(uint(1u)), uint(uint(1u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY((uint(0u)), (false ? _GLF_FUZZED(virtual_gid) : (uint(0u)))))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), uint(0u)))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, max(2u, 2u))), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) ^ 0u)) >> 0u))), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))) << uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), max(uint(uint(1u)), uint(_GLF_IDENTITY(uint(1u), uint(uvec2(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(subgroup_local_id))), 1u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), min((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u)))) << 0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(max(2u, 2u), max(max(2u, 2u), max(2u, 2u))))), uint(2u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(2u), uint(2u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) ^ ((uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) / 1u)), _GLF_IDENTITY(uint(2u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : uint(2u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u + (1u)))))))) << uvec3(0u, 0u, 0u))))))))))))))))) | (0u ^ 0u))) | (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : ~ (workgroup_base))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_FUZZED(subgroup_size), (1u ^ 1u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (uint(uvec3(_GLF_FUZZED(subgroup_size), (1u ^ 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) >> 0u)))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))), false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), true))))) ? _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size))))) ^ 0u)))), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size)))))) / 1u) : subgroup_size)), (0u | 0u)))) : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) ^ 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | (0u ^ 0u)), ~ (~ (0u ^ _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) ^ uvec3(0u, 0u, 0u)))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) >> 0u, ((workgroup_base) >> 0u) ^ 0u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) >> 0u, ((workgroup_base) >> 0u) ^ 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) >> 0u, ((workgroup_base) >> 0u) ^ 0u)))) | 0u), 1u)), (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) >> 0u, ((workgroup_base) >> 0u) ^ 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))) >> 0u, ((workgroup_base) >> 0u) ^ 0u)))) | 0u), 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) ^ 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u ^ 0u, ~ (_GLF_IDENTITY(~ (0u ^ 0u), (~ (0u ^ 0u)) + 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) ^ 0u)))), (~ ((_GLF_IDENTITY(0u ^ 0u, ~ (~ (0u ^ 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) ^ 0u))))) * 1u)))))), uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 1u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, clamp(2u, 2u, 2u))) | (2u))) - 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))), (_GLF_IDENTITY(true, ! (! (true)))) && true) ? _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : subgroup_size), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : subgroup_size), ((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), uint(uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), 0u)))) : subgroup_size)) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, 0u | ((workgroup_size) + 0u)))) | 0u), workgroup_size))), 0u | _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), max((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size))))))))) : subgroup_size, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))) | (_GLF_FUZZED(workgroup_size))))) : subgroup_size, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_FUZZED(workgroup_size))))) : subgroup_size, false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_FUZZED(workgroup_size))))) : subgroup_size, false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | _GLF_IDENTITY((_GLF_FUZZED(workgroup_size)), (_GLF_IDENTITY((_GLF_FUZZED(workgroup_size)), ((_GLF_FUZZED(workgroup_size))) | 0u)) << 0u)))) : subgroup_size))) | 0u)) + 0u)) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], 0u + (_GLF_IDENTITY((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], clamp((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], (uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], _GLF_IDENTITY((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], ((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2]) / 1u))))), 0u | (_GLF_IDENTITY((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], 0u + (_GLF_IDENTITY((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], clamp((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], (uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], _GLF_IDENTITY((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2], ((uvec3(104602u, 112374u, _GLF_IDENTITY(172096u, ~ (~ (172096u)))) >> uvec3(28664u, 92759u, 28257u))[2]) / 1u)))))))) : _GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, max(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, max(false ? _GLF_FUZZED(workgroup_size) : subgroup_size, false ? _GLF_FUZZED(workgroup_size) : subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u), max(_GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u), _GLF_IDENTITY(0u | 0u, (0u | 0u) + 0u))))))) : _GLF_FUZZED(subgroup_size)))))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0 ^ _GLF_IDENTITY(0, ~ (~ (0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, (1) | 0)))), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 86463)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), max(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))), ~ (~ (int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))))))))), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), 1, 1))) | 0)))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), 1, 1))) | 0))))) | ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), min(~ (int(4)), ~ (int(4)))))), 1, 1))) | 0)))))) >> _GLF_IDENTITY(int(4), int(4))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * 1)), max(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))))))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (int(4))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (~ (int(4)))))), 1, 1))) | 0)))), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), 1, _GLF_IDENTITY(1, min(1, 1)))), (int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), 1, 1))) | 0))))) | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), ~ (~ (int(4)))), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, (4) | (0 | 0)))))), 1, 1))) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ (~ (4))))) : _GLF_FUZZED((+ _injected_loop_counter)))))) ^ (0 & 19411))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
