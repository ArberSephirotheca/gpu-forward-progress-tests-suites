#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true, false, true))), true, false)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true, false, true))), true, false)))))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), true, false, true))), true, false)))))), false), true, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(6.7, 7856.9710, -9.0, 6230.1406, 42.38, 44.42)) : mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((! (! ((! (false))))), ! (! ((! (! ((! (false)))))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) || false)), ! (! ((! (! ((! (false)))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) || false)), ! (! ((! (! ((! (false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) || false)), ! (! ((! (! ((! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3((_GLF_IDENTITY(! ((! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) || false)), ! (! ((! (! ((! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, false, true)))))) && true), _GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(5885.2634), _GLF_FUZZED(-1608.4956)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) || false)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (false)), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-65.07)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(determinant(mat3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((true ? -7499.8558 : -4.1)))), 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), float(float(determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, sin(0.0), 1.0, sqrt(0.0), 0.0))), 0.0)), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(float(vec2(float(mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0)), min(float(vec2(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0)), float(vec2(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED((true ? -7915.4934 : 61.32))), float((1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 0.0)))), _GLF_IDENTITY((1.0), ((1.0)) / 1.0) - 0.0), 1.0)), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(vec2(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0, 0.0)))), 1.0)), min(float(vec2(float(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat3x2(mat3x4(7.9, 63.16, 2.9, 2.0, 3520.6048, 7.2, -39.62, 46.87, -360.793, -1219.7691, -25.56, 5300.0282)) * step(-0.2, vec3(3282.2834, 7.5, 2.4)))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-8.0)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, exp(0.0), round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(738.634)), float(0.0), bool(true))))))), mix(float(_GLF_FUZZED(9186.1673)), float(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_FUZZED(1.3)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 0.0))))), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(-3.6))), (_GLF_IDENTITY(float(float(_GLF_FUZZED(-3.6))), (false ? _GLF_FUZZED(606.024) : float(float(_GLF_FUZZED(-3.6)))))) / 1.0))), bool(false)))), 0.0, 1.0)) * (float(vec2(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(738.634)), float(0.0), bool(true))))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9186.1673, (9186.1673) * 1.0))), float(float(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(9895.4246, 572.590, 9.9, 3.4, -89.87, 4342.6038, 8.3, 2569.9773, -0.8)) : mat3(0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))))))), bool(_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))) > injectionSwitch.y)))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-234.985), (vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0)))[1]), vec2((vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0)))[0], _GLF_FUZZED(7.0)), bvec2(true, false)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) - 0.0)) - 0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), min(1.0, 1.0)))))))), 1.0, 0.0)), (float(mat3(0.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.8)), float(1.0), bool(true))), 1.0)))), 1.0, 0.0))) - 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.5, min(-5.5, _GLF_IDENTITY(-5.5, (-5.5) + 0.0))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), float(vec4(injectionSwitch.x, tan(0.0), 0.0, exp(0.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-6.3)), mix(float(_GLF_FUZZED(-7157.7217)), float((true ? 1.0 : _GLF_FUZZED(-6.3))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0))))) / 1.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0))))) / 1.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0))))) / 1.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec2(((injectionSwitch.x > injectionSwitch.y)) || false, true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec3(bvec4(bvec3(false, false, true), true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false), false), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true))))), false), false), true)))), true)))))), _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), true)))))), true, false)), true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false), true)))))), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], float(mat3x2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, max(0, 0)), 0))], 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(2159.9501))))), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)), min(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), workgroup_size)), workgroup_size)), (workgroup_size) | (workgroup_size)))), workgroup_size)) * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) ^ 0u, ((workgroup_id) ^ 0u) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | 0u))), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))), min(_GLF_IDENTITY(uint(1u), 0u + (uint(_GLF_IDENTITY(1u, (1u) / 1u)))), _GLF_IDENTITY(uint(1u), 0u + (uint(1u)))))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (1u)))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (min((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(1u, 1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (_GLF_IDENTITY(min((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(20987u))))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (0u | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), uint(1u))) | (0u | 0u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), (_GLF_IDENTITY(~ (uint(1u)), min(~ (uint(1u)), ~ (uint(1u))))) | (~ (uint(1u))))))), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), (_GLF_IDENTITY(~ (uint(1u)), min(~ (uint(1u)), ~ (uint(1u))))) | (~ (uint(1u)))))))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u))))), min(min((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(20987u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(workgroup_size))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), (_GLF_IDENTITY(~ (uint(1u)), min(~ (uint(1u)), ~ (uint(1u))))) | (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), uint(1u)))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u))))), min((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(20987u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u)), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (_GLF_IDENTITY(~ (uint(1u)), (_GLF_IDENTITY(~ (uint(1u)), min(~ (uint(1u)), ~ (uint(1u))))) | (~ (uint(1u)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u | 0u))))))))))))))), _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) - 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))));
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (~ (subgroup_id)))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), (_GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u)) | ((~ (subgroup_id)))), _GLF_IDENTITY(max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_local_id)))))), _GLF_IDENTITY(1u * (max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id)))), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_local_id))))))), (1u * (max(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id)))), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ (subgroup_id)))), (~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_local_id)))))))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ _GLF_IDENTITY((subgroup_id), 0u | (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u)))))), (~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_local_id)))))))) << 0u, ((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), (~ (subgroup_id)), (~ _GLF_IDENTITY((subgroup_id), 0u | (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u)))))), (~ _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(atomicAnd(subgroup_size, subgroup_local_id)))))))) << 0u) | 0u))) / 1u), ((~ (subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u), (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u)) | (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u)))) >> 0u)), (_GLF_IDENTITY((~ (subgroup_id)), clamp((_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((~ atomicAdd(workgroup_size, _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec3(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) + uvec3(0u, 0u, 0u))))))))))))), (~ (subgroup_id)), (~ (subgroup_id))))) | ((~ (subgroup_id)))), uint(uvec3((~ (subgroup_id)), 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u), 0u | (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), _GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u), _GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u))), (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) ^ 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), subgroup_id))), (~ (subgroup_id)) ^ 0u)))) >> 0u)), (_GLF_IDENTITY((~ (subgroup_id)), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 1u)))), 0u | (~ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((~ atomicAdd(workgroup_size, workgroup_id))))))))), (~ (subgroup_id)), (~ (subgroup_id))))) | ((_GLF_IDENTITY(~ (subgroup_id), max(_GLF_IDENTITY(~ (subgroup_id), 0u ^ (~ (subgroup_id))), ~ (subgroup_id)))))), uint(uvec3((~ (subgroup_id)), 0u, 1u)))) ^ 0u)))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))))))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))), max((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))), (_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))))) / 1u), ((~ (subgroup_id))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (17788u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec3((~ (subgroup_id)), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(102395u))))))) << 0u)) / 1u))))))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size)), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))))))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))), max((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))), (_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))))) / 1u), ((~ (subgroup_id))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (17788u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec3((~ (subgroup_id)), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(102395u))))))) << 0u)) / 1u))))))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size)), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)), ~ (~ (((subgroup_id))))) | ((subgroup_id))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))))))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_id)), min((~ (subgroup_id)), (~ (subgroup_id)))), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))), max((_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u)), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u))) | 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))) / 1u)))))), (~ (subgroup_id))))), (_GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), clamp((~ (subgroup_id)), _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) - 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((subgroup_id), 0u, 0u, 1u), (uvec4((subgroup_id), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))) ^ 0u))))), (~ (subgroup_id))))))) / 1u), ((~ (subgroup_id))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) - (17788u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec3((~ (subgroup_id)), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(102395u))))))) << 0u)) / 1u))))))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size))))) - (0u ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt(injectionSwitch)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(232.210, -553.740)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.0, 1.6)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_DEAD(false), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(min(~ (workgroup_base), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), ((workgroup_base)) | 0u)), min(_GLF_IDENTITY(min(~ (workgroup_base), ~ (workgroup_base)), clamp(min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), ~ (workgroup_base)))), min(~ (workgroup_base), ~ _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))), min(~ (workgroup_base), ~ (workgroup_base)))), _GLF_IDENTITY(min(~ (workgroup_base), ~ (workgroup_base)), (min(~ (workgroup_base), ~ (workgroup_base))) >> 0u)))))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, sqrt(0.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(workgroup_size))) + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], (buf[virtual_gid]) - 0u), 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || false))) && (false))) || false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-45.27)), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), (true ? mat3(injectionSwitch.x, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(mat3(-4291.3213, 21.55, -23.44, 26.27, 7.2, 5.0, -210.345, 1892.9884, 99.24))))))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.18), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))), 1.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-70.18), (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.4)), bvec2(true, false))), 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))).y, 1.0 * (injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_DEAD(false), false)))), (bool(bool(bool(bvec2(_GLF_DEAD(false), false))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.2))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2687.6943))) > injectionSwitch.y))), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))), mix(float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), float(_GLF_FUZZED(7.8)), bool(false))))) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true, true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true)))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)) && true))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
