#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8584.8083)), bvec2(true, false))))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8584.8083)), bvec2(true, false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8584.8083)), bvec2(true, false))))), min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8584.8083)), bvec2(true, false))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8584.8083)), bvec2(true, false))))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8584.8083)), bvec2(true, false))))))).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(-126.868), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED((7888.9772 + -921.410))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (float(float(injectionSwitch.y)))), max(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y))))), injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(float(injectionSwitch.y)), determinant(mat2(1.0, 1.0, 0.0, 1.0)) * (float(float(injectionSwitch.y)))), max(float(float(injectionSwitch.y)), float(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y))))), injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false)))))) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))))))))
      barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true)))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true))))), (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), true, true)))))) && true)))))))), true, false, true)))) && true)))))))))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base)) / 1u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base)) / 1u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base)) / 1u)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base), (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : 1u)))) * (workgroup_base)) / 1u))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id)))) ^ 0u) : _GLF_FUZZED((subgroup_id)))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id), ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_id)) << 0u)) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (true ? ~ (subgroup_local_id) : _GLF_FUZZED(workgroup_id))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-16494) : 1))), clamp((false ? _GLF_FUZZED(-85053) : 1), (false ? _GLF_FUZZED(-85053) : 1), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), 1 * (_GLF_FUZZED(-85053))) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) / 1))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (true ? ~ (subgroup_local_id) : _GLF_FUZZED(workgroup_id))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-16494) : 1))), clamp((false ? _GLF_FUZZED(-85053) : 1), (false ? _GLF_FUZZED(-85053) : 1), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), 1 * (_GLF_FUZZED(-85053))) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) / 1))))), ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (true ? ~ (subgroup_local_id) : _GLF_FUZZED(workgroup_id))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-16494) : 1))), clamp((false ? _GLF_FUZZED(-85053) : 1), (false ? _GLF_FUZZED(-85053) : 1), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), 1 * (_GLF_FUZZED(-85053))) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) / 1)))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u, 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) % subgroup_size, _GLF_IDENTITY(0u, (0u) << 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | (1))), (true ? (false ? _GLF_FUZZED(-85053) : 1) : _GLF_FUZZED(-45968))))) % subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED(-85053) : 1))) % subgroup_size), (true ? _GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size), (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))) - 0u) : _GLF_FUZZED((subgroup_local_id % _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))), clamp(~ (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) | (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)))))))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) : _GLF_FUZZED(virtual_gid)))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))))) % subgroup_size, (1u | 1u) * ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))) % subgroup_size)))), max(~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) | (1)))), (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size : _GLF_FUZZED(subgroup_local_id))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size), (_GLF_IDENTITY(max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) | (1)))), (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size : _GLF_FUZZED(subgroup_local_id))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size), (true ? max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, (1) | (1)))), (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size : _GLF_FUZZED(subgroup_local_id))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))) - (0u | 0u))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))))))), max((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size, _GLF_IDENTITY(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), clamp(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false) ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), _GLF_IDENTITY(~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-39929))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))) || false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, false, false))), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))) || false)))))) ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), max(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), _GLF_IDENTITY(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))))) % subgroup_size)), (~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))), max(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0)))) + 0), _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), 0 | (_GLF_IDENTITY((false ? _GLF_FUZZED(-85053) : 1), ((false ? _GLF_FUZZED(-85053) : 1)) | 0))))))) % subgroup_size))) / 1u))))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), (false ? _GLF_FUZZED(-85053) : 1)), 0u, 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))))) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), 0u, 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED((virtual_gid * subgroup_local_id)))), subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), uint(uvec4(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), 0u, 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))))) % subgroup_size)))), clamp(~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1))))) - 0u)))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-85053) : 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-85053) : 1, min(false ? _GLF_FUZZED(-85053) : 1, false ? _GLF_FUZZED(-85053) : 1)))))))))) % subgroup_size)), max(~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (true ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1)), (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (true ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1))))) % subgroup_size), 0u + (~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false) ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false) ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1), 0 ^ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false) ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1)))) / 1))) % subgroup_size)))), ((_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (true ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1), 0 + (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (true ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1), ((false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (true ? _GLF_FUZZED(-85053) : _GLF_FUZZED(-30187))) : 1)) | 0))))) % subgroup_size), 0u + (~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(_GLF_FUZZED(-85053), min(_GLF_FUZZED(-85053), _GLF_FUZZED(-85053))) : _GLF_FUZZED(-30187))) : 1))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(_GLF_FUZZED(-85053), min(_GLF_FUZZED(-85053), _GLF_FUZZED(-85053))) : _GLF_FUZZED(-30187))) : 1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-85053), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(_GLF_FUZZED(-85053), min(_GLF_FUZZED(-85053), _GLF_FUZZED(-85053))) : _GLF_FUZZED(-30187))) : 1))) % subgroup_size))))))) | 0u), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (false ? _GLF_FUZZED(-85053) : 1))) % subgroup_size))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true)))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | 0u) + 0u), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x)) > injectionSwitch.y, false, false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45189) : 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45189) : _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1))))))), _GLF_IDENTITY(max(~ _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45189) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))) || false)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))) ? _GLF_FUZZED(45189) : 1))) : _GLF_FUZZED(((-4260 << -14551) | 53621))), ((0 >> _GLF_IDENTITY(int(3), int(3))) | 0) ^ ((_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))) || false)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))) ? _GLF_FUZZED(45189) : 1))) : _GLF_FUZZED(((-4260 << -14551) | 53621)))))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45189) : 1)))), (max(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45189) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) | (1))))))), ~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(45189) : 1))))) << _GLF_IDENTITY(0, min(0, 0))))) / 1) : _GLF_FUZZED(_GLF_IDENTITY(ivec3(44849, _GLF_IDENTITY(-88092, _GLF_IDENTITY(0, int(ivec3(0, 1, (1 & (1 & 1))))) + (_GLF_IDENTITY(_GLF_IDENTITY(-88092, 0 ^ (-88092)), ~ (~ (_GLF_IDENTITY(-88092, 0 ^ (-88092))))))), -38944)[2], _GLF_IDENTITY((_GLF_IDENTITY(ivec3(44849, _GLF_IDENTITY(-88092, _GLF_IDENTITY(0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092))), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)) + (_GLF_IDENTITY(-88092, 0 ^ (_GLF_IDENTITY(-88092, 0 + (_GLF_IDENTITY(-88092, (-88092) ^ 0)))))), (0 + (_GLF_IDENTITY(-88092, _GLF_IDENTITY(0, max(0, 0)) ^ (-88092)))) >> 0), 0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092)))))) | (0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092)))))), _GLF_IDENTITY(-38944, (_GLF_IDENTITY(-38944, (-38944) | 0)) << 0))[2], min(ivec3(44849, _GLF_IDENTITY(-88092, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(-88092, 0 ^ (-88092)), (_GLF_IDENTITY(-88092, 0 ^ (-88092))) | (_GLF_IDENTITY(-88092, 0 ^ (-88092)))))), -38944)[2], ivec3(44849, _GLF_IDENTITY(-88092, _GLF_IDENTITY(0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092))), (0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092)))) ^ 0)), -38944)[2]))) << 0, 0 ^ ((_GLF_IDENTITY(ivec3(44849, _GLF_IDENTITY(-88092, _GLF_IDENTITY(0 + (_GLF_IDENTITY(-88092, _GLF_IDENTITY(0, min(0, 0)) ^ (-88092))), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092))), min(_GLF_IDENTITY(0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092))), (0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092)))) >> 0), 0 + _GLF_IDENTITY((_GLF_IDENTITY(-88092, 0 ^ (-88092))), ((_GLF_IDENTITY(-88092, 0 ^ (-88092)))) | ((_GLF_IDENTITY(-88092, 0 ^ (-88092)))))))) | (0 + (_GLF_IDENTITY(-88092, _GLF_IDENTITY(0 ^ (-88092), min(0 ^ (-88092), 0 ^ (-88092)))))))), -38944)[2], min(ivec3(44849, _GLF_IDENTITY(-88092, 0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092)))), -38944)[2], ivec3(44849, _GLF_IDENTITY(-88092, 0 + (_GLF_IDENTITY(-88092, 0 ^ (-88092)))), -38944)[2]))) << _GLF_IDENTITY(0, (0) * (0 ^ 1))))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid))) ^ 0u) : _GLF_FUZZED(virtual_gid))), min(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)), virtual_gid))], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-73646) : _GLF_IDENTITY(64, (64) - 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
