#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 mat3x4 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_17 {
 ivec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 mat3x4 _f1;
 mat2 _f2;
 bvec3 _f3;
 int _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_14 {
 bvec4 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 bvec3 _f3;
 mat4 _f4;
 int _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 ivec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 mat4 _f3;
 ivec3 _f4;
 mat4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_12 _f0;
 mat4x2 _f1;
 mat4 _f2;
 float _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
 _GLF_struct_15 _f6;
} ;

struct _GLF_struct_20 {
 uint workgroup_base;
 bvec2 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 uint _f1;
 mat2x3 _f2;
 uint subgroup_local_id;
 ivec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 uvec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 mat3x4 _f1;
 float _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat4x3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
} ;

struct _GLF_struct_2 {
 float _f0;
 vec3 _f1;
 mat3x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 ivec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 uint subgroup_size;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 float _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 mat3x4 _f1;
 vec2 _f2;
 ivec3 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(87.91, (false ? _GLF_FUZZED(-9378.8166) : _GLF_IDENTITY(87.91, min(87.91, 87.91))))), _GLF_FUZZED(float(30541))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(_GLF_struct_0(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(1.0), bool(true)))), ivec4(_GLF_IDENTITY(1, max(1, 1))), uvec2(1u)), gl_SubgroupSize, mat2x4(1.0), _GLF_struct_1(uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) + mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(7890.2877)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mat3(mat3(mat3(1.0))), (mat3(mat3(mat3(1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, abs(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0)))), _GLF_struct_2(1.0, vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(27.92)))), mat3x2(1.0), mat3(1.0)), 1.0), mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4815.4105)), bool(false)))), vec2(1.0), ivec3(1), _GLF_struct_7(_GLF_struct_4(ivec4(1), mat4x3(1.0), bvec3(true)), _GLF_struct_5(mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), bool(false))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.30)), bool(false))), 0.0)), 0.0, 0.0)), 1.0, 1.0, sqrt(1.0)), mat3(mat4(mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))), float(_GLF_FUZZED(-2.5)), bool(false))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch.y), float(mat2x4(true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, abs(sqrt(0.0)), 1.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch.y)))) + 0.0))), 1.0, 1.0, sqrt(1.0)))))))), mat3x2(1.0)), _GLF_struct_6(vec4(1.0), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, mat3x4(1.0))), _GLF_struct_8(mat2(1.0), uvec4(1u), ivec4(1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true, false))))))))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))))), (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acosh(6.8)) : injectionSwitch.x)) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract(vec2(505.079, -633.043), vec2(1.1, 36.31), 6795.8916)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(412.945, -0.7), (true ? vec2(412.945, -0.7) : _GLF_FUZZED(vec2(2.8, -822.061)))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))) || false))))))) : injectionSwitch)).y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(412.945, clamp(412.945, 412.945, _GLF_IDENTITY(412.945, (false ? _GLF_FUZZED(-6.0) : 412.945)))), -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, 1 * (0))) << 0)], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(mat3(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (true ? dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-2650.9180)))), 1.0, sqrt(0.0)))), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((_GLF_IDENTITY(vec2(412.945, -0.7), min(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2((vec2(412.945, -0.7))[0], (vec2(412.945, -0.7))[1]), vec2(_GLF_FUZZED((-8.2 * -6.9)), _GLF_FUZZED(-9566.4548)), bvec2(false, false))), _GLF_IDENTITY(vec2(412.945, -0.7), max(vec2(412.945, -0.7), vec2(412.945, -0.7))))))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-984.217, (_GLF_IDENTITY(-984.217, (-984.217) - abs(0.0))) - 0.0)), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7))[0], tan(0.0) + (_GLF_IDENTITY((vec2(412.945, -0.7))[0], float(vec3((vec2(412.945, -0.7))[0], 1.0, 0.0))))), _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(-62.22)), bool(false)))))))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7)), clamp((vec2(412.945, -0.7)), (vec2(412.945, -0.7)), (vec2(412.945, -0.7))))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0)))))))), (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7)), max((vec2(412.945, -0.7)), (vec2(412.945, -0.7))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))), _GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(_GLF_IDENTITY(float((vec2(412.945, -0.7))[1]), mix(float(float((vec2(412.945, -0.7))[1])), float(_GLF_FUZZED(17.87)), bool(false))), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(vec2(412.945, -0.7), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, min(-0.7, -0.7))))), mat2(1.0) * (vec2(412.945, -0.7))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), vec2(mat3x2(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))))))))))) : injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7))[1], (false ? _GLF_FUZZED(193.392) : (vec2(412.945, -0.7))[1])), mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7))[1], (false ? _GLF_FUZZED(193.392) : (vec2(412.945, -0.7))[1])), mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(412.945, clamp(412.945, 412.945, _GLF_IDENTITY(412.945, (false ? _GLF_FUZZED(-6.0) : 412.945)))), -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, 1 * (0))) << 0)], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(mat3(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (true ? dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-2650.9180)))), 1.0, sqrt(0.0)))), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((_GLF_IDENTITY(vec2(412.945, -0.7), min(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2((vec2(412.945, -0.7))[0], (vec2(412.945, -0.7))[1]), vec2(_GLF_FUZZED((-8.2 * -6.9)), _GLF_FUZZED(-9566.4548)), bvec2(false, false))), _GLF_IDENTITY(vec2(412.945, -0.7), max(vec2(412.945, -0.7), vec2(412.945, -0.7))))))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-984.217, (_GLF_IDENTITY(-984.217, (-984.217) - abs(0.0))) - 0.0)), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7))[0], tan(0.0) + (_GLF_IDENTITY((vec2(412.945, -0.7))[0], float(vec3((vec2(412.945, -0.7))[0], 1.0, 0.0))))), _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(-62.22)), bool(false)))))))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7)), clamp((vec2(412.945, -0.7)), (vec2(412.945, -0.7)), (vec2(412.945, -0.7))))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0)))))))), (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7)), max((vec2(412.945, -0.7)), (vec2(412.945, -0.7))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))), _GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(_GLF_IDENTITY(float((vec2(412.945, -0.7))[1]), mix(float(float((vec2(412.945, -0.7))[1])), float(_GLF_FUZZED(17.87)), bool(false))), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(vec2(412.945, -0.7), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, min(-0.7, -0.7))))), mat2(1.0) * (vec2(412.945, -0.7))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), vec2(mat3x2(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))))))))))) : injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7))[1], (false ? _GLF_FUZZED(193.392) : (vec2(412.945, -0.7))[1])), mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7))[1], (false ? _GLF_FUZZED(193.392) : (vec2(412.945, -0.7))[1])), mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, _GLF_IDENTITY(-0.7, clamp(-0.7, -0.7, _GLF_IDENTITY(-0.7, min(-0.7, -0.7))))), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(412.945, clamp(412.945, 412.945, _GLF_IDENTITY(412.945, (false ? _GLF_FUZZED(-6.0) : 412.945)))), -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)], clamp(_GLF_IDENTITY((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)], clamp(_GLF_IDENTITY((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)], 1.0 * ((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)])), (vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)], (vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)])), (vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)], _GLF_IDENTITY((vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)], (false ? _GLF_FUZZED(-2.2) : (vec2(412.945, -0.7))[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) << 0) * (0))) << 0)])))), _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1))]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(mat3(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), max(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, abs(1.0), 0.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (true ? dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-2650.9180)))), 1.0, sqrt(0.0)))), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((_GLF_IDENTITY(vec2(412.945, -0.7), min(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2((vec2(412.945, -0.7))[0], (vec2(412.945, -0.7))[1]), vec2(_GLF_FUZZED((-8.2 * -6.9)), _GLF_FUZZED(-9566.4548)), bvec2(false, false))), _GLF_IDENTITY(vec2(412.945, -0.7), max(vec2(412.945, -0.7), vec2(412.945, -0.7))))))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-984.217, (_GLF_IDENTITY(-984.217, (-984.217) - abs(0.0))) - 0.0)), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(412.945, -0.7), max(vec2(412.945, -0.7), vec2(412.945, -0.7))))[0], tan(0.0) + (_GLF_IDENTITY((vec2(412.945, -0.7))[0], float(vec3((vec2(_GLF_IDENTITY(412.945, (_GLF_IDENTITY(412.945, (false ? _GLF_FUZZED(-5711.3038) : 412.945))) * _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), -0.7))[0], 1.0, 0.0))))), _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (vec2(412.945, -0.7)) : _GLF_FUZZED(intBitsToFloat(ivec2(-24141, 2096)))))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(_GLF_IDENTITY(float((vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(-62.22)), bool(false)))))))[1]), (false ? _GLF_FUZZED(5.0) : float((vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, mix(float(-0.7), float(_GLF_FUZZED(-62.22)), bool(false)))))))[1]))), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))))) * mat2(1.0))), 1.0, 0.0)), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))), mat2(1.0) * (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))))), (mat2(1.0) * (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2(_GLF_IDENTITY((vec2(412.945, -0.7)), clamp((vec2(412.945, -0.7)), (vec2(412.945, -0.7)), (vec2(412.945, -0.7))))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))) * mat2(1.0))), 1.0, 0.0)))))))), (_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7)), max((vec2(412.945, -0.7)), (vec2(412.945, -0.7))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), _GLF_IDENTITY(vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], _GLF_IDENTITY(mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)), (mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false))) / exp(0.0)))), mat2(1.0) * (vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], _GLF_IDENTITY(mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)), (mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false))) / exp(0.0)))))), bvec2(true, true))))), _GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(_GLF_IDENTITY(float((vec2(412.945, -0.7))[1]), mix(float(float((vec2(412.945, -0.7))[1])), float(_GLF_FUZZED(17.87)), bool(false))), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true))), _GLF_IDENTITY(vec2(412.945, -0.7), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(412.945, _GLF_IDENTITY(-0.7, min(-0.7, _GLF_IDENTITY(-0.7, min(-0.7, -0.7))))), mat2(1.0) * (vec2(412.945, -0.7))))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, _GLF_IDENTITY(-0.7, min(_GLF_IDENTITY(-0.7, max(-0.7, -0.7)), _GLF_IDENTITY(-0.7, (true ? -0.7 : _GLF_FUZZED(8.4)))))))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), vec2(mat3x2(mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY((vec2(412.945, -0.7))[1], mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false))))))))))))) : injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7))[1], (false ? _GLF_FUZZED(193.392) : (vec2(412.945, -0.7))[1])), mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(412.945, -0.7), mix(vec2(_GLF_FUZZED(-984.217), _GLF_FUZZED(-235.267)), vec2((vec2(412.945, -0.7))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(412.945, -0.7))[1], (false ? _GLF_FUZZED(193.392) : (vec2(412.945, -0.7))[1])), mix(float((vec2(412.945, -0.7))[1]), float(_GLF_FUZZED(3.1)), bool(false)))), bvec2(true, true)))) : injectionSwitch)).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.8)), bool(false))), mix(float(_GLF_FUZZED(vec4(vec3(-86.45, -704.349, -52.36), -3.0).g)), float(injectionSwitch.y), bool(true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (true ? float(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) : _GLF_FUZZED(689.036)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0))))), injectionSwitch)).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_10(mat4x2(1.0), 1u, mat2x3(1.0), gl_SubgroupInvocationID, ivec4(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 1))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(vec2(-3.1, -532.290).s)), max((true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(vec2(-3.1, -532.290).s)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(vec2(-3.1, -532.290).s))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0))).y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * sqrt(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.3))), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), _GLF_IDENTITY(max(~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))), max(max(~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))), max(~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))))))) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) ^ uvec3(0u, 0u, 0u))), ~ (~ (gl_WorkGroupSize))), max(max(~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))), max(~ (~ (gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize))))))) + uvec3(0u, 0u, 0u))))))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.7)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atanh(injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0))).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))) && true))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6397.3495)))) * (injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3690.7882)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-41.33)), bool(false))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(clamp(31.03, -9.6, -63.73)) : _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), clamp((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-2.7), ((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))[1]), vec2(((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))[0], _GLF_FUZZED(-0.4)), bvec2(true, false))))))).x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), _GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)) * (injectionSwitch.x)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(workgroup_size * workgroup_id, bvec2(true), _GLF_struct_16(_GLF_struct_12(mat3(1.0), mat2x4(1.0), mat2x3(1.0), mat4(1.0), ivec3(1), mat4(1.0), uvec2(1u)), mat4x2(1.0), mat4(1.0), 1.0, _GLF_struct_13(mat3x2(1.0), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(74.20)), float(1.0), bool(true)))), mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.8)), float(1.0), bool(true)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, clamp(1, 1, 1))), (ivec4(1)) + ivec4(0, 0, 0, 0)), mat2(1.0)), _GLF_struct_14(bvec4(true), mat3x4(1.0), ivec4(1), bvec3(true), mat4(1.0), 1, bvec4(true)), _GLF_struct_15(ivec4(1), mat3x4(1.0), mat2(1.0), bvec3(true), 1, mat3x2(1.0))), _GLF_struct_19(_GLF_struct_17(ivec4(1), uvec3(1u)), _GLF_struct_18(mat3x4(1.0), uvec2(1u), mat4x3(1.0), _GLF_IDENTITY(ivec3(1), ivec3(ivec3(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false, false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), bool(bool(bool((_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), (! (! (false))) || false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(1.0))))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_struct_replacement_20.workgroup_base + subgroup_base + _GLF_struct_replacement_11._f0.subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_20.workgroup_base + subgroup_base, 1u * (_GLF_struct_replacement_20.workgroup_base + subgroup_base)) + ((_GLF_struct_replacement_11._f0.subgroup_local_id + 1) % _GLF_struct_replacement_9._f0.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), cos(0.0), 0.0))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true)))))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, (read) * uint(_GLF_ONE(1.0, injectionSwitch.y))), read))) | (read)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(tanh(injectionSwitch))))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
