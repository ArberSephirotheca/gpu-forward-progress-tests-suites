#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 bvec4 _f0;
 mat4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 uint virtual_gid;
 ivec3 _f3;
} ;

struct _GLF_struct_21 {
 bvec4 _f0;
 _GLF_struct_19 _f1;
 bool _f2;
 vec2 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 vec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_16 {
 bvec2 _f0;
 bool _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
} ;

struct _GLF_struct_14 {
 int _f0;
 uvec4 _f1;
 mat4 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 int _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 uvec2 _f1;
 mat4 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_11 _f0;
 uint _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_21 _f5;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 uvec3 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 mat4x2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uint _f1;
 ivec3 _f2;
 mat4 _f3;
 uvec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_5 {
 bool _f0;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 ivec3 _f1;
 uint _f2;
 int _f3;
 uvec3 _f4;
 vec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_8 {
 mat3x4 _f0;
 _GLF_struct_4 _f1;
 uvec4 _f2;
 ivec2 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_9 {
 float _f0;
 _GLF_struct_3 _f1;
 vec3 _f2;
 mat3 _f3;
 bvec2 _f4;
 uint workgroup_base;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 mat3x4 _f1;
 _GLF_struct_0 _f2;
 uint _f3;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 int _f1;
 vec3 _f2;
 uint subgroup_id;
 vec4 _f3;
 _GLF_struct_1 _f4;
 uvec2 _f5;
 mat4x3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)) * (uvec3(1u))), (uvec3(0u, 0u, 0u) & uvec3(33974u, 182598u, 145718u)) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))))), (max(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u)))))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))))) * (uvec3(1u))), (uvec3(0u, 0u, 0u) & uvec3(33974u, 182598u, 145718u)) | (_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))) + (0u ^ 0u)))) / uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)), 1, vec3(1.0), gl_SubgroupID, vec4(1.0), _GLF_struct_1(bvec4(true), mat3x4(1.0), _GLF_struct_0(uvec2(1u), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0)))), 1u), uvec2(_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), mat4x3(1.0));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))) && true))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || false))) || false, (_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || false))) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)))))))) || false, ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || false))) || false, (_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || false))) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)))))))) || false, ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || false))) || false, (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), (bool((_GLF_DEAD(false)))) || _GLF_IDENTITY(false, ! (! (false)))))) || false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)))))))) || false)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(-83639))), bool(false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), max((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), clamp((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))))))).y))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), max((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), clamp((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))))))).y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), max((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), clamp((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))))))).y))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), max((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), clamp((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))))))).y))))))))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1])))).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1])))).y), true)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1])))).y), true))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))).y)))), false || (_GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))).y)))), false || ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))).y))))))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))).y))))))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))))).y))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), 1.0, 1.0)))).y)))))))))))))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false)))))) || false), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_IDENTITY(_GLF_FUZZED(-6.6), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_FUZZED(-6.6)))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat2x4(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0)))) > injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3078.9999), _GLF_FUZZED(float(45268))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.8, 53.02), min(_GLF_IDENTITY(vec2(-7.8, 53.02), (_GLF_IDENTITY(vec2(-7.8, 53.02), mat2(1.0) * (vec2(-7.8, 53.02)))) / vec2(1.0, 1.0)), vec2(-7.8, 53.02)))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))))))))), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))))))), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))))))))) && true))))))) || false))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), true, true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, round(length(normalize(1.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, round(length(normalize(1.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))))))))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))), true, false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, false)), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, false)), (bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, false))) || false)))))))))) || false), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), true))), (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_IDENTITY(_GLF_FUZZED(-6.6), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_FUZZED(-6.6)))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat2x4(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0)))) > injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3078.9999), _GLF_FUZZED(float(45268))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3078.9999), _GLF_FUZZED(float(45268))), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.8, 53.02), min(_GLF_IDENTITY(vec2(-7.8, 53.02), (_GLF_IDENTITY(vec2(-7.8, 53.02), mat2(1.0) * (vec2(-7.8, 53.02)))) / vec2(1.0, 1.0)), vec2(-7.8, 53.02)))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-89.83) : injectionSwitch.y))) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-18.30)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), bool(true)))), float(_GLF_FUZZED(-95.69)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true)))) + 0.0), 1.0)), 1.0))))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), false, true)))) || false)))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), false, true)))) || false))))))))) && true)), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), true, true, false))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))))))))) && true))))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))))) && true))), true, true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, round(length(normalize(1.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, round(length(normalize(1.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))))))))))), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))), true, false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, false)), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, false)), (bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-6.6)), mix(float(float(_GLF_FUZZED(-6.6))), float(_GLF_FUZZED(-0.5)), bool(false))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))))))) || false, false))) || false)))))))))) || false), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), true))), (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), bool(bvec2(false, false))))), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_IDENTITY(_GLF_FUZZED(-6.6), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_FUZZED(-6.6)))), bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat2x4(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0)))) > injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3078.9999), _GLF_FUZZED(float(45268))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3078.9999), _GLF_FUZZED(float(45268))), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.8, 53.02), min(_GLF_IDENTITY(vec2(-7.8, 53.02), (_GLF_IDENTITY(vec2(-7.8, 53.02), mat2(1.0) * (vec2(-7.8, 53.02)))) / vec2(1.0, 1.0)), vec2(-7.8, 53.02)))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat2x4(_GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-89.83) : injectionSwitch.y))) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-18.30)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), bool(true)))), float(_GLF_FUZZED(-95.69)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.4)), float(1.0), bool(true)))) + 0.0), 1.0)), 1.0))))) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), false, true)))) || false)))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true)))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), false, true)))) || false))))))))) && true)), (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))), true, true, false))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))), true, true, true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, 53.02)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))))))))))))))))) && true))))))) || false))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(1.0, _GLF_struct_3(vec2(1.0), ivec3(1)), _GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-254.883, 40.86, -0.5)))), vec3(1.0))), mat3(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), workgroup_size * workgroup_id, _GLF_struct_8(mat3x4(1.0), _GLF_struct_4(mat4x3(1.0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) << 0), 1))) - 0), _GLF_IDENTITY(1, (1) ^ 0))), (false ? _GLF_FUZZED((35025 / max(69509, -36152))) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) ^ 0)), 0 ^ (max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) ^ 0))))), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) ^ 0)))) / 1)))), 1u, 1, uvec3(1u), vec4(1.0), 1u), uvec4(1u), ivec2(1), _GLF_struct_5(true), _GLF_struct_6(mat4x3(1.0), 1u, _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (ivec3(1)) * ivec3(1, 1, 1)), (ivec3(1)) << _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) | (ivec3(0, 0, 0)))), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(344.142)), float(1.0), bool(true))), float(vec3(1.0, 0.0, 0.0)))), uvec4(1u), uvec2(1u)), _GLF_struct_7(bvec4(true), uvec3(1u), bvec4(_GLF_IDENTITY(true, ! (! (true)))), mat4x3(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED((-5407.8537 - 4.1))), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(6.2), mix(float(_GLF_FUZZED(6.2)), float(_GLF_FUZZED(-3.0)), bool(false)))))), mat2x4(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_11(_GLF_struct_10(mat2x3(1.0)), mat3x4(1.0)), 1u, _GLF_struct_12(uvec3(1u)), _GLF_struct_15(mat4x3(1.0), uvec2(_GLF_IDENTITY(1u, (0u & 189125u) + (1u))), mat4(1.0), _GLF_struct_13(mat2x3(1.0), 1, mat3x4(1.0)), _GLF_struct_14(1, _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, 0u | (1u))), (uvec4(_GLF_IDENTITY(1u, 0u | (1u)))) | uvec4(0u, 0u, 0u, 0u)), mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(_GLF_IDENTITY(mat4x2(mat2(1.0, 0.0, 1.0, 0.0)), mat2(1.0) * (mat4x2(mat2(1.0, 0.0, 1.0, 0.0))))))))), mat4x2(1.0)), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(1.0, (1.0) - sin(0.0))))), bool(true))))), _GLF_struct_18(mat2x3(1.0), _GLF_struct_16(bvec2(true), true, mat4x3(1.0)), _GLF_struct_17(bvec2(true), vec2(1.0), mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_struct_21(bvec4(_GLF_IDENTITY(true, false || (true))), _GLF_struct_19(bvec3(true), mat4x2(1.0), mat2(1.0), _GLF_IDENTITY(_GLF_struct_replacement_9.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_2.subgroup_id * subgroup_size, (_GLF_struct_replacement_2.subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY((_GLF_struct_replacement_9.workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) | ((_GLF_struct_replacement_9.workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size))) + 0u) + subgroup_local_id, ivec3(1)), true, _GLF_IDENTITY(vec2(1.0), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(-492.310)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, true))) : _GLF_FUZZED(mat4x2(-181.202, 5147.5162, 2600.7226, -8442.9503, -1.7, -1041.3683, 6.7, 46.37)[3])))), max(vec2(vec2(1.0)), vec2(vec2(1.0)))))), _GLF_struct_20(bvec4(true), mat4(1.0), mat3x2(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), (true && (! (false))) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))), bvec2(bvec3(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))), true))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_9.workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), ((subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) % subgroup_size);
 uint read = atomicLoad(buf[_GLF_struct_replacement_22._f5._f1.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     break;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-21.51)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, 0.0 + (0.0)))) * 1.0), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, mix(float(_GLF_FUZZED(float(184827u))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x), bool(true))))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_22._f5._f1.virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))) && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))) && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false))))))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))) && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(bvec2((false), true), true, false))))))))), false, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4259.9118, -563.798)))))).x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), _GLF_IDENTITY(clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4)), (clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))) / 1.0)))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false)))))))), false))))))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 0.0 + ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))), (_GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4)))) / 1.0))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), false, false, false)))))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))), clamp(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))), mix(float(_GLF_FUZZED(18.96)), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))), min(true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))), true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4)))))), bool(true))), true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(true ? (injectionSwitch.x) : _GLF_FUZZED(1.1), float(mat4x3(true ? (injectionSwitch.x) : _GLF_FUZZED(1.1), 0.0, determinant(mat2(0.0, 0.0, 0.0, sin(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, exp(0.0)))))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3628.5993), _GLF_FUZZED(-10.72)), bvec2(false, _GLF_IDENTITY(false, true && (false))))).y), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(exp(0.0))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0), min(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0), _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), max(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(31.60)), float(_GLF_FUZZED(3.4)), bool(true))), _GLF_FUZZED(3.4))), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), false, false, false)))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(exp(0.0))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0), min(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0), _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), max(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(31.60)), float(_GLF_FUZZED(3.4)), bool(true))), _GLF_FUZZED(3.4))), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), false, false, false)))))), bool(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(exp(0.0))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0), min(_GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0), _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (injectionSwitch.x))) - log(1.0)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(3.4), max(_GLF_IDENTITY(_GLF_FUZZED(3.4), mix(float(_GLF_FUZZED(31.60)), float(_GLF_FUZZED(3.4)), bool(true))), _GLF_FUZZED(3.4))), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(1.1))))), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - log(1.0)), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(3.4), clamp(_GLF_FUZZED(3.4), _GLF_FUZZED(3.4), _GLF_FUZZED(3.4))))))) < injectionSwitch.y), false, false, false))))))))))))))) && true)))))))
  return;
}
