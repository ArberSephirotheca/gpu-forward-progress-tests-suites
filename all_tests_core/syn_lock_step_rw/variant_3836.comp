#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, true)))) && true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(7.4)))) - 0.0))) && (false)) || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, false))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)), max(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 1u))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))))), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 1u))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), 0u, 0u, 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((workgroup_size), ~ (_GLF_IDENTITY(~ ((workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(~ ((workgroup_size)), (_GLF_IDENTITY(~ ((workgroup_size)), (~ ((workgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0u)) | (~ ((workgroup_size))), (true ? (_GLF_IDENTITY(~ ((workgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_size)), (~ ((workgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ ((workgroup_size)), (~ ((workgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << 0u)) | (~ ((workgroup_size))) : _GLF_FUZZED(num_workgroup))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), cos(vec2(0.0, 0.0)) * (min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), cos(vec2(0.0, 0.0)) * (min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(88.82), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(88.82) : _GLF_FUZZED(atan(98.42, 78.49)))))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(88.82))) > injectionSwitch.y), true, true))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), (true ? injectionSwitch.x : _GLF_FUZZED(88.82))) > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), false || (true && (_GLF_DEAD(false)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u) * (workgroup_base)))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), subgroup_size, subgroup_size))) | (subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ 0), (subgroup_local_id + 1) - 0u)) / 1u)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))), _GLF_IDENTITY(0u + (~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))))), clamp(0u + (~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))))), 0u + (~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))))), 0u + (~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))))))))) / 1u) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))), 0u + _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> ((0u & 114386u) << _GLF_IDENTITY(uint(3u), uint(3u)))), (subgroup_local_id))))), ((~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))))) | (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))), uint(uvec2((_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))), 1u)))), ((~ (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))))) - 0u)))) * 1u)))) / 1u) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u))) - 0u), _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1)))))) % subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), (_GLF_IDENTITY((1), max((1), (1)))) | (_GLF_IDENTITY((1), max((1), (1))))))) ^ 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), (_GLF_IDENTITY((1), max((1), (1)))) | (_GLF_IDENTITY((1), max((1), (1))))), (_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), (_GLF_IDENTITY((1), max((1), (1)))) | (_GLF_IDENTITY((1), max((1), (1)))))) * 1))) ^ 0), (true ? _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(ivec4(-93025, 61618, 8721, -44229)[3]))))), (_GLF_IDENTITY((1), max((1), (1)))) | (_GLF_IDENTITY((1), max((1), (1))))))) ^ 0) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(subgroup_id))), (subgroup_local_id + 1) - 0u)) / _GLF_IDENTITY(1u, (1u) * _GLF_IDENTITY(1u, (1u) >> 0u)))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)), uint(_GLF_IDENTITY(uvec4((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)), 0u, (0u ^ 0u), 0u), (uvec4((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)), 0u, (0u ^ 0u), 0u)) | (uvec4((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % subgroup_size) - (0u ^ 0u)), 0u, (0u ^ 0u), 0u))))))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))) | (subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u);
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_size)))], _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(max((~ (4)), (~ (4))), 0 ^ (_GLF_IDENTITY(max((~ (4)), (~ (4))), (max((~ (4)), (~ (4)))) * 1)))))), int(int(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY(~ (~ (~ (~ (4)))), (~ (~ (~ (~ (4))))) >> 0))))))))), _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(1.0, 0.0, 1.0)))))) > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false))))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), max(_GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), (max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) / 1.0), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), 0.0 + (float(vec2(0.0, 1.0))))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED((- 5721.8127))), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))))))), bool(true))))), _GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), float(vec4(max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), sin(0.0), 0.0, 0.0)))), float(_GLF_FUZZED(-87.21)), bool(false))))), 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0), (mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0), (mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0), (mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0), (mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0)))), (float(_GLF_IDENTITY(mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0), (mat3(0.0, 1.0, sqrt(1.0), abs(1.0), log(1.0), 1.0, 1.0, tan(0.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(injectionSwitch.y, tan(0.0), cos(0.0), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), max(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 1.0, 1.0, 1.0))))) / 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-6.2), (false ? _GLF_FUZZED(-285.960) : _GLF_IDENTITY(_GLF_FUZZED(-6.2), (true ? _GLF_FUZZED(-6.2) : _GLF_FUZZED(-7441.7924))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))) + _GLF_IDENTITY((mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(-49795, _GLF_IDENTITY((-49795) | 0, ((-49795) | 0) << 0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-3.8)), float(1.0), bool(true)))), bool(true))), 1.0)), ((mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(-49795, _GLF_IDENTITY((-49795) | 0, ((-49795) | 0) << 0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-3.8)), float(1.0), bool(true)))), bool(true))), 1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 0 + (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.3))) > injectionSwitch.y))))
  return;
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u | (virtual_gid), 1u * (_GLF_IDENTITY(0u | (virtual_gid), _GLF_IDENTITY(1u * (0u | (virtual_gid)), ~ (~ (1u * _GLF_IDENTITY((0u | (virtual_gid)), ((0u | (virtual_gid))) ^ 0u)))))))))), (virtual_gid) >> 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (1u))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) << 0u), _GLF_IDENTITY(0u, (0u) * 1u) | (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid) >> 0u, ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))))) >> 0u) << 0u), (_GLF_IDENTITY((virtual_gid) >> 0u, ((virtual_gid) >> 0u) << 0u)) + 0u))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u, 0u, 1u))))))))))], _GLF_IDENTITY(read, clamp(read, read, read)), _GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-4592.0981)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)))).x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), false, false, true))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))), false, false, true))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)))), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, false, true))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))))))) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || false)), false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
