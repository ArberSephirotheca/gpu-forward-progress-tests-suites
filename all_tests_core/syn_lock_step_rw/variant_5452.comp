#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(-77.68), _GLF_FUZZED(-6.2)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(-77.68), _GLF_FUZZED(-6.2)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), min(vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), vec2(mat3x4(injectionSwitch, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)))))) - vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(-77.68), _GLF_FUZZED(-6.2)), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), vec2(_GLF_FUZZED(-77.68), _GLF_FUZZED(-6.2)), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false))) / vec2(1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, 0u | (0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))), clamp(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (0u & 122300u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (0u & 122300u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) | (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))))), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u + (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), uint(1u)))) << 0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))), uint(1u)))), uvec3(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))))), clamp(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (0u & 122300u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (0u & 122300u), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) | (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))))), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), min(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u + (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), uint(1u)))) << 0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED(workgroup_base))), uint(1u))))))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u)))) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) ^ 0u)))), uint(1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u)), uint(_GLF_IDENTITY(uvec2((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec2((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2((true ? _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) ^ uvec2(0u, 0u))) ^ (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(1u), uvec2(1u))))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), ((_GLF_IDENTITY(1u, 0u ^ (1u)))) << 0u) / 1u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uint(1u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) * _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | 0u)))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))))) | 0u) >> 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), 1u * ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) - 0u)) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) - 0u)), uint(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) ^ 0u) : _GLF_FUZZED(workgroup_id)))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), ((1u) | (1u)) ^ 0u))), uint(1u)))), _GLF_IDENTITY(~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), max((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), max(_GLF_IDENTITY(~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), uvec3(_GLF_IDENTITY(uvec3(~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), uvec3(0u, 0u, 0u) | (uvec3(~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> uvec3(0u, 0u, 0u)))))))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, max((subgroup_local_id) >> 0u, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) | ((subgroup_local_id) >> 0u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))) * 1u))), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) | (_GLF_IDENTITY((workgroup_base) / 1u, (true ? (workgroup_base) / 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ~ (~ ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))) | (subgroup_size)))))))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) >> 0u)) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ((4)) >> 0)) << 0) | 0)) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true))))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true))))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))), false || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), 0.0, 0.0, sin(0.0), 0.0, 1.0)))))))))), false, true))))) && true))))))), true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))), 4)), 1, 0)), int(ivec4(int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0)), 1, 1, (0 & 10838))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
