#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 mat2x3 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_38 {
 mat2x4 _f0;
 vec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_37 {
 bvec2 _f0;
 ivec2 _f1;
 vec4 _f2;
 vec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_40 {
 _GLF_struct_37 _f0;
 _GLF_struct_38 _f1;
 mat4x3 _f2;
 uint _f3;
 vec2 _f4;
 _GLF_struct_39 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_35 {
 mat2 _f0;
} ;

struct _GLF_struct_34 {
 mat2x3 _f0;
} ;

struct _GLF_struct_36 {
 _GLF_struct_34 _f0;
 _GLF_struct_35 _f1;
} ;

struct _GLF_struct_32 {
 mat3 _f0;
 bool _f1;
 mat2x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_33 {
 bvec3 _f0;
 _GLF_struct_32 _f1;
} ;

struct _GLF_struct_41 {
 _GLF_struct_33 _f0;
 _GLF_struct_36 _f1;
 uint read;
 _GLF_struct_40 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_29 {
 mat4x2 _f0;
 bool _f1;
 vec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_30 {
 vec3 _f0;
 ivec3 _f1;
 uint subgroup_id;
 mat3 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_27 {
 uint _f0;
 mat2x4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 uvec2 _f1;
 bool _f2;
 int _f3;
 vec4 _f4;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 bvec4 _f1;
 _GLF_struct_27 _f2;
} ;

struct _GLF_struct_25 {
 bvec3 _f0;
} ;

struct _GLF_struct_23 {
 mat2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_22 {
 mat4x2 _f0;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 mat2x4 _f1;
 bool _f2;
 vec3 _f3;
 mat3x4 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_24 {
 mat4x2 _f0;
 mat2x4 _f1;
 _GLF_struct_21 _f2;
 bvec4 _f3;
 _GLF_struct_22 _f4;
 _GLF_struct_23 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 uvec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_31 {
 _GLF_struct_20 _f0;
 _GLF_struct_24 _f1;
 uvec2 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_28 _f4;
 _GLF_struct_30 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_17 {
 ivec4 _f0;
 _GLF_struct_16 _f1;
 uint _f2;
 mat2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 uint _f1;
 uint virtual_gid;
} ;

struct _GLF_struct_18 {
 float _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_17 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 vec2 _f1;
 bvec3 _f2;
 mat3x4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 uint _f2;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 ivec2 _f1;
 vec4 _f2;
 mat2 _f3;
 bool _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 uvec3 _f1;
 mat3 _f2;
 uvec4 _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 ivec2 _f1;
 mat2 _f2;
 float _f3;
 ivec2 _f4;
 mat4x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 bvec4 _f1;
 vec3 _f2;
 mat2x3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 float _f1;
 vec3 _f2;
 mat3x2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 uvec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 mat2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 uint next_virtual_gid;
 mat4x3 _f5;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_6 _f2;
 bool _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_13 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_20(_GLF_struct_19(bvec3(true), uvec3(1u), ivec3(1)), ivec4(1)), _GLF_struct_24(mat4x2(1.0), mat2x4(1.0), _GLF_struct_21(vec2(1.0), mat2x4(1.0), true, vec3(1.0), mat3x4(1.0), uvec3(1u)), bvec4(true), _GLF_struct_22(mat4x2(1.0)), _GLF_struct_23(mat2(1.0), ivec2(1)), bvec3(true)), uvec2(1u), _GLF_struct_25(bvec3(true)), _GLF_struct_28(_GLF_struct_26(mat2x4(1.0), uvec2(1u), true, 1, vec4(1.0)), bvec4(true), _GLF_struct_27(1u, mat2x4(1.0), ivec4(1))), _GLF_struct_30(vec3(1.0), ivec3(1), gl_SubgroupID, mat3(1.0), _GLF_struct_29(mat4x2(1.0), true, vec4(1.0), ivec4(1))), mat4x2(1.0));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(1.0, _GLF_struct_15(mat2x3(1.0), 1u, workgroup_base + _GLF_struct_replacement_31._f5.subgroup_id * subgroup_size + subgroup_local_id), _GLF_struct_17(ivec4(1), _GLF_struct_16(mat4(1.0), mat2x4(1.0), uvec2(1u)), 1u, mat2(1.0), vec2(1.0)), mat4x2(1.0));
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_0(ivec3(1)), _GLF_struct_4(uvec4(1u), _GLF_struct_1(bvec2(true)), vec4(1.0), _GLF_struct_2(uvec2(1u), ivec3(1), mat3x4(1.0), mat2(1.0), mat2x3(1.0)), _GLF_struct_3(mat4x2(1.0), uvec2(1u), ivec3(1)), workgroup_base + _GLF_struct_replacement_31._f5.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), mat4x3(1.0)), _GLF_struct_6(_GLF_struct_5(mat3(1.0)), 1.0, vec3(1.0), mat3x2(1.0), mat4x3(1.0)), true, _GLF_struct_10(_GLF_struct_7(mat3(1.0), ivec2(1), mat2(1.0), 1.0, ivec2(1), mat4x2(1.0), mat4x3(1.0)), bvec4(true), vec3(1.0), mat2x3(1.0), _GLF_struct_8(uvec4(1u), uvec3(1u), mat3(1.0), uvec4(1u), 1, mat2x4(1.0)), _GLF_struct_9(mat2(1.0), ivec2(1), vec4(1.0), mat2(1.0), true, mat4x2(1.0))), _GLF_struct_13(_GLF_struct_11(bvec4(true), vec2(1.0), bvec3(true), mat3x4(1.0), mat3(1.0)), _GLF_struct_12(1u, mat4x2(1.0)), 1u));
 _GLF_struct_41 _GLF_struct_replacement_41 = _GLF_struct_41(_GLF_struct_33(bvec3(true), _GLF_struct_32(mat3(1.0), true, mat2x3(1.0), mat3x4(1.0))), _GLF_struct_36(_GLF_struct_34(mat2x3(1.0)), _GLF_struct_35(mat2(1.0))), atomicLoad(buf[_GLF_struct_replacement_18._f1.virtual_gid], 4, 64, 0), _GLF_struct_40(_GLF_struct_37(bvec2(true), ivec2(1), vec4(1.0), vec4(1.0), bvec2(true)), _GLF_struct_38(mat2x4(1.0), vec2(1.0), ivec3(1)), mat4x3(1.0), 1u, vec2(1.0), _GLF_struct_39(mat2x3(1.0), mat3x4(1.0), ivec2(1), mat2(1.0)), vec2(1.0)), ivec2(1));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     atomicStore(buf[_GLF_struct_replacement_14._f1.next_virtual_gid], uint(1), 4, 64, 4);
    }
  }
 atomicStore(checker[_GLF_struct_replacement_18._f1.virtual_gid], _GLF_struct_replacement_41.read, 4, 64, 4);
}
