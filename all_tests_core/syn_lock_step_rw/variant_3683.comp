#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 ivec3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 ivec3 _f1;
 ivec4 _f2;
 _GLF_struct_7 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat2x4 _f1;
 uint num_workgroup;
 int _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 uint _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_1 {
 int _f0;
 ivec2 _f1;
 float _f2;
 mat3x4 _f3;
 mat3x4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 bvec4 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 bvec2 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.x = subgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     _GLF_struct_replacement_4.GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.x;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y = subgroup_local_id;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_6(_GLF_struct_5(mat4x3(1.0), mat2x4(1.0), gl_NumWorkGroups.x, 1), mat3(1.0)), 1u, _GLF_struct_8(vec2(1.0), ivec3(1), ivec4(1), _GLF_struct_7(ivec3(1), uvec4(1u)), mat2x4(1.0)));
 _GLF_struct_replacement_4.GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = _GLF_struct_replacement_9._f0._f0.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.w;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z = workgroup_base;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.z + GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x * _GLF_struct_replacement_4.GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.y = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.z + GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x * _GLF_struct_replacement_4.GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y + ((GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y + 1) % _GLF_struct_replacement_4.GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y);
 uint read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.y], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) & 1)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(checker[GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12subgroup_sizevirtual_gidworkgroup_baseworkgroup_id.y], read, 4, 64, 4);
    }
  }
}
