#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))))), true && (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false))), (false) || false)))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false))), (false) || false)))) || false))), bool(bvec4(! ((_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false))), (false) || false)))) || false))), false, true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((+ 0.1) - 2.3)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-44.52)), bvec2(true, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(68939u)), _GLF_FUZZED(-36.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))).x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(68939u)), _GLF_FUZZED(-36.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))).x, 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(68939u)), _GLF_FUZZED(-36.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))).x, 0.0, 0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(68939u)), _GLF_FUZZED(-36.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))).x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(68939u)), _GLF_FUZZED(-36.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))).x, 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y)), mat3x2(mat3(mat3x2(injectionSwitch, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(68939u)), _GLF_FUZZED(-36.50)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))).x, 0.0, 0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))) > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) >> 0u, min((gl_NumWorkGroups.x) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)))))).x) >> 0u)))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)).x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)).x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED((_GLF_IDENTITY(num_workgroup --, (_GLF_IDENTITY(61668u, ~ (~ (_GLF_IDENTITY(61668u, 1u * (_GLF_IDENTITY(61668u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(61668u, (61668u) | (61668u))))))))) & 0u) ^ (num_workgroup --)))) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x))), (~ (gl_WorkGroupSize.x)) << 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))) << 0u), (workgroup_size * workgroup_id) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u), (~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_local_id))))) + 0u), ~ (workgroup_base))))), 0u, 1u, 1u))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) >> 0u), (~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_local_id))))) + 0u), ~ (workgroup_base))))), 0u, 1u, 1u))) + subgroup_id * subgroup_size) << 0u) + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), uint(uint(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), uint(uint(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(171u))) | (workgroup_base)))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, 0u ^ ((subgroup_id) / 1u))) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), max(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), uint(uvec3(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), _GLF_IDENTITY((uint(subgroup_id * subgroup_size)), ((uint(subgroup_id * subgroup_size))) ^ 0u) / 1u), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size))), min(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size)))))) / 1u), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), 0u + (uint(subgroup_id * subgroup_size))), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u ^ 0u) | (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size, subgroup_size))))), uint(subgroup_id * subgroup_size))))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (0u & 188719u) + (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), 1u * (clamp(subgroup_size, subgroup_size, subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), 1u * (clamp(subgroup_size, subgroup_size, subgroup_size))))))))))), _GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), (_GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), max(_GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), _GLF_IDENTITY((max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | (_GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), uint(uvec3(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u, 0u)))), 0u | ((max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))) | (_GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), uint(uvec3(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), 1u, 0u))))))), _GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), 0u | (max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))))) | (max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)), (uint(subgroup_id * subgroup_size)) ^ 0u), uint(subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u), 0u)))), uint(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size))))))) + subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)), 1u * (0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) : _GLF_FUZZED(workgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec4(virtual_gid, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4(virtual_gid, 0u, _GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12.76) : injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(12.76, min(_GLF_IDENTITY(12.76, (12.76) * 1.0), _GLF_IDENTITY(12.76, max(12.76, 12.76))))) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12.76) : injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(1593.5226)), max(_GLF_IDENTITY(float(_GLF_FUZZED(1593.5226)), (float(_GLF_FUZZED(1593.5226))) / 1.0), float(_GLF_FUZZED(1593.5226)))), bool(false))))) > injectionSwitch.y)) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) && true)), ! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) && true, false || ((false) && true)))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true))), (! (! (_GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), true, true))))), _GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), bool(bvec4(! _GLF_IDENTITY((bool(bool(true))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! ((bool(bool(true)))))))), false, true, false)))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(bool(bool(! (_GLF_IDENTITY(false, (false) && true)))), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) | 0)), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(1 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6))) ^ (-49792 & _GLF_IDENTITY(0, ~ (~ (0)))))) >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(-49792 & 0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))), 0 | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796))), (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))) | (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))))))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((-49792 & 0), (_GLF_IDENTITY((-49792 & 0), ((-49792 & 0)) >> 0)) - 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796))))))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(6)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), clamp((1 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) ^ 0), (1 << _GLF_IDENTITY(int(6), int(6))))))))) ^ 0) ^ (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(~ (-49792 & 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(~ _GLF_IDENTITY((-49792 & 0), max(_GLF_IDENTITY((-49792 & 0), (false ? _GLF_FUZZED(63263) : (-49792 & 0))), (-49792 & 0))), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 0 | (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((-49792 & 0), max(_GLF_IDENTITY((-49792 & 0), (false ? _GLF_FUZZED(63263) : (-49792 & 0))), (-49792 & 0))), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))), ((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)), ~ (~ ((_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))))) + 0))))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) ^ 0)))), (0 >> _GLF_IDENTITY(int(5), int(5))), 1)), (int(ivec3(1 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, min(6, 6)), 6))))))) ^ (_GLF_IDENTITY(-49792 & 0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))), 0 | (~ (_GLF_IDENTITY(~ (-49792 & 0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (_GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))))) : _GLF_FUZZED(81796), max(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (_GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))))) : _GLF_FUZZED(81796), true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (_GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))))) : _GLF_FUZZED(81796)))))))))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), 1 * ((1 << _GLF_IDENTITY(int(6), int(6))))) ^ (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796))))))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) ^ 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(-49792 & 0, min(-49792 & 0, -49792 & 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-49792, max(-49792, _GLF_IDENTITY(-49792, (-49792) ^ (0 >> _GLF_IDENTITY(int(6), int(6)))))) & 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (_GLF_IDENTITY(-49792 & 0, max(-49792 & 0, -49792 & 0))))) : _GLF_FUZZED(81796)), ((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796))) | (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), (_GLF_IDENTITY(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0), max(ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0), ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0)))), min(int(_GLF_IDENTITY(ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0), max(ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0), ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0)))), int(_GLF_IDENTITY(ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0), max(ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0), ivec3(true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796), 1, 0)))))))) / 1)), ~ (~ ((true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))))) + 0))))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) ^ 0)))), (0 >> _GLF_IDENTITY(int(5), int(5))), 1))) | 0), ~ (~ (int(ivec3(1 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) ^ (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-49792, (-49792) * 1) & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (_GLF_IDENTITY(-49792, (-49792) | (-49792)) & 0))) : _GLF_FUZZED(81796)))))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (6)))), min(1 << _GLF_IDENTITY(int(6), int(6)), 1 << _GLF_IDENTITY(int(6), int(6))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (-49792 & 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (-49792 & 0))), (true ? _GLF_IDENTITY(~ (-49792 & 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13627))) | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))), clamp((_GLF_IDENTITY(-49792 & _GLF_IDENTITY(0, (0) / 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (-49792 & 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (-49792 & 0))), (true ? _GLF_IDENTITY(~ (-49792 & 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13627))) | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))), (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (-49792 & 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(-49792, clamp(-49792, _GLF_IDENTITY(-49792, ~ (~ (-49792))), -49792)) & 0))), (true ? _GLF_IDENTITY(~ (-49792 & 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13627))) | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))), (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (-49792 & 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (-49792 & 0))), (true ? _GLF_IDENTITY(~ (-49792 & 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13627))) | (~ (-49792 & 0))) : _GLF_FUZZED(81796))))))))))) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(-49792 & 0, ~ (_GLF_IDENTITY(~ (-49792 & 0), (true ? _GLF_IDENTITY(~ (-49792 & 0), 0 | (~ (-49792 & 0))) : _GLF_FUZZED(81796)))))))))) >> _GLF_IDENTITY(int(6), int(6))), (0 >> _GLF_IDENTITY(int(5), int(5))), 1))))))) ^ (4)));
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
