#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat3x2 _f0;
 mat2x3 _f1;
 uvec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_4 {
 float _f0;
 bool _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 bool _f1;
 ivec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 vec2 _f2;
 ivec4 _f3;
 uvec3 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_1 {
 mat2x3 _f0;
 bvec3 _f1;
 bvec3 _f2;
 uint _f3;
 float _f4;
 ivec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 ivec2 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 _GLF_struct_0 _f1;
 ivec3 _f2;
 uint _f3;
 bvec2 _f4;
 _GLF_struct_1 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 ivec3 _f1;
 _GLF_struct_6 _f2;
 uint workgroup_id;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(810.929), _GLF_FUZZED(-4.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0)), (vec2(vec3(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), 1.0))) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-49.11)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4034.9064)), bool(false)))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4926.7409)), vec2(_GLF_FUZZED(7.1), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4926.7409)), vec2(_GLF_FUZZED(7.1), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(false, true))).y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ((false)) || false)))))) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), true && (! _GLF_IDENTITY((false), ((false)) || false)))))) && true)) && true, ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! _GLF_IDENTITY((false), ((false)) || false)), ! (! (true && (! _GLF_IDENTITY((false), ((false)) || false))))))), bool(bvec4(true && (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), ((false)) || false)))), _GLF_IDENTITY(false, (false) && true), true, true))))) && true)) && true) || false))))))), _GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))), ! (! ((false)))) || false, ((false) || false) && true))), true, _GLF_IDENTITY(false, true && (false)), false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))))) && true))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true)))) || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(exp(mix(-554.584, _GLF_IDENTITY(-95.95, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -95.95 : _GLF_FUZZED(0.4))), false))) : injectionSwitch.x)) > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)))))))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true))) || false), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true))) && true)), true, false)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || ((injectionSwitch.x > injectionSwitch.y))))) && true)), true, false))))))))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED((subgroup_id - subgroup_local_id))))), clamp(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED((subgroup_id - subgroup_local_id))))), (false ? _GLF_FUZZED(uvec2(198525u, 83452u)) : uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED((subgroup_id - subgroup_local_id))))))), uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED((subgroup_id - subgroup_local_id))))), uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED((subgroup_id - subgroup_local_id)))))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))), 0u ^ ((false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))) | 0u))), ((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), (uvec2(gl_NumWorkGroups.x, 1u)) << uvec2(0u, 0u)))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))) - 0u), (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), 1u))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u & 114087u))) : ~ (uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), (uvec2(gl_NumWorkGroups.x, 1u)) | (uvec2(gl_NumWorkGroups.x, 1u)))))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)).x)), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id), max(true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id), true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), ~ (~ (~ (gl_NumWorkGroups)))))), uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))))) - _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)))), (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))).x, 1u)), _GLF_IDENTITY(uint(uvec4(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((uvec3(93520u, 89938u, 189606u) | uvec3(183361u, 145653u, 189849u))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((uvec3(93520u, 89938u, 189606u) | uvec3(183361u, 145653u, 189849u))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(uvec3(195208u, 117710u, 103974u)) : _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED((uvec3(93520u, 89938u, 189606u) | uvec3(183361u, 145653u, 189849u))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))))))))))))) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), (uint(_GLF_IDENTITY(1u, max(1u, 1u)))) - 0u))))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uint(uvec4(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))).x, 1u)), (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))), 0u | ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u)), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) >> (0u ^ 0u)), uint(5u)))))) >> 0u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) - 0u), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) / 1u)) / 1u))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))) ^ 0u)))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), min(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u, min((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u, min((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u)))) << 0u)), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))).x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), uint(uvec4(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))).x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), 1u, 1u, 0u))))), clamp((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) / 1u)))), (uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) - 0u))) | (uvec2(gl_NumWorkGroups.x, 1u))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) << 0u))) : ~ _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 1u))), (_GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 1u))), ((uint(uvec2(gl_NumWorkGroups.x, 1u)))) >> 0u)) ^ 0u), clamp((uint(uvec2(gl_NumWorkGroups.x, 1u))), _GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 1u))), _GLF_IDENTITY(uint(uvec4((uint(uvec2(gl_NumWorkGroups.x, 1u))), 0u, 0u, 0u)), ~ (~ (uint(uvec4((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x, 1u))), 0u, 0u, 0u)))))), (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))) - 0u)) >> 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u), _GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u, 0u) + (gl_NumWorkGroups)), gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))))) - 0u)) >> (127887u & 0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), min(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))))), 0u ^ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), min(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))))))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), _GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, 1u), 0u)), clamp(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, 1u), 0u)), uvec2(uvec3(uvec2(gl_NumWorkGroups.x, 1u), 0u)), _GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, 1u), 0u)), uvec2(uvec2(_GLF_IDENTITY(uvec2(uvec3(uvec2(gl_NumWorkGroups.x, 1u), 0u)), (uvec2(uvec3(uvec2(gl_NumWorkGroups.x, 1u), 0u))) | uvec2(0u, 0u))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), min(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), min(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))), ~ (~ (clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) << 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), clamp(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))) | 0u)))), min(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (false ? _GLF_FUZZED(uvec3(150683u, 51974u, 76480u)) : uvec3(7u))))) ^ (gl_NumWorkGroups)).x, max(_GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (false ? _GLF_FUZZED(uvec3(150683u, 51974u, 76480u)) : uvec3(7u))))) ^ (gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (false ? _GLF_FUZZED(uvec3(150683u, 51974u, 76480u)) : uvec3(7u))))) ^ (gl_NumWorkGroups)).x)), 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u), 1u, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))))))), 0u | (uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) ^ 0u), 1u, 1u, ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u)))))))))) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))))))))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) >> 0u) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), min(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), 0u ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), 0u ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), 0u ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), max(uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, (1u) * 1u)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | uvec3(0u, 0u, 0u)))))))))))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) | (1))], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), uint(uint(clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], 0u | (gl_NumWorkGroups[2])))).x, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) | 0u))).x, gl_NumWorkGroups.x))))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) ^ uvec3(0u, 0u, 0u))), gl_NumWorkGroups))) * uvec3(1u, 1u, 1u)), uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))) - 0u)), clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), (uint(uvec2(gl_NumWorkGroups.x, 1u))) - (0u | 0u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))) >> 0u)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), uint(uvec3(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))) << (1u ^ 1u)), 1u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), (uint(uvec2(gl_NumWorkGroups.x, 1u))) >> 0u))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))).x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u), (true ? uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) >> 0u), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 1u) : _GLF_FUZZED(uvec4(68054u, 100167u, 114434u, 142588u))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_NumWorkGroups.x)), 1u)))))))), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), ((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))) | ((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_FUZZED(subgroup_id)), clamp(uint(_GLF_FUZZED(subgroup_id)), uint(_GLF_FUZZED(subgroup_id)), uint(_GLF_FUZZED(subgroup_id))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_FUZZED(subgroup_id)), clamp(uint(_GLF_FUZZED(subgroup_id)), uint(_GLF_FUZZED(subgroup_id)), uint(_GLF_FUZZED(subgroup_id))))))))) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (0u | 0u), 0u), (uvec3(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (0u | 0u), 0u)) | uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))) ^ 0u))), (0u | 0u), 0u), (uvec3(_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))), (0u | 0u), 0u)) | uvec3(_GLF_IDENTITY(0u, (0u) - (0u | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), 0u, 0u)))) ^ 0u))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))))))))), max(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))))))))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))))))))))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))))))))))))), 1u * (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)))), gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))))))))), max(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u)) - 0u)))))), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)))))) - 0u), 1u)))))))), _GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u)) - 0u)))))), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)))))) - 0u), 1u)))))))))), (uint(uint(false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u)) - 0u)))))), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)))))) - 0u), 1u))))))))))) ^ 0u)))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(subgroup_id)))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) - 0u), 1u), (false ? _GLF_FUZZED(uvec2(92232u, 170320u)) : uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) - 0u), 1u))))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u)))), 0u | (~ (_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u)))))), ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u))))))) | ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u)))))))))))))))) | (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uint(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)))))) : _GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))), ~ (_GLF_IDENTITY(~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), max(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) - 0u), 1u)))), 0u | (~ ((uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) - 0u), 1u))))))))))))))))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), clamp(_GLF_IDENTITY(uint(uvec2(gl_NumWorkGroups.x, 1u)), min(uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u)))), uint(uvec2(gl_NumWorkGroups.x, 1u)), uint(uvec2(gl_NumWorkGroups.x, 1u))))), (false ? _GLF_FUZZED(subgroup_id) : ~ _GLF_IDENTITY((uint(uvec2(gl_NumWorkGroups.x, 1u))), ((uint(uvec2(gl_NumWorkGroups.x, 1u)))) * 1u)))), clamp((_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), 1u))).x, uint(uvec4(gl_NumWorkGroups.x, 1u, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), (uvec2(gl_NumWorkGroups.x, 1u)) + uvec2(0u, 0u)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id, subgroup_id))) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u))))))))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), clamp((_GLF_IDENTITY(~ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))))).x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))))).x))), 1u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups.x, 1u), (true ? uvec2(gl_NumWorkGroups.x, 1u) : _GLF_FUZZED(uvec2(198951u, 110994u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) : gl_NumWorkGroups.x)), 1u))), max(false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) : gl_NumWorkGroups.x)), 1u))), false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) : gl_NumWorkGroups.x)), 1u)))))))), (_GLF_IDENTITY(~ (uint(uvec2(gl_NumWorkGroups.x, 1u))), (false ? _GLF_FUZZED(subgroup_id) : ~ (uint(uvec2(gl_NumWorkGroups.x, 1u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), min(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_size))))))), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))), max((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) | uvec3(0u, 0u, 0u))).x : _GLF_FUZZED(subgroup_local_id))))))) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) >> 0u), 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))), min((_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))).x : _GLF_FUZZED(subgroup_local_id)))))))) - 0u))))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), false)), true), bvec3(bvec4(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, false))), false)), true), false)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6255.1227, clamp(_GLF_IDENTITY(-6255.1227, _GLF_IDENTITY((-6255.1227), max((-6255.1227), (-6255.1227))) / 1.0), _GLF_IDENTITY(-6255.1227, (true ? -6255.1227 : _GLF_FUZZED(_GLF_IDENTITY(-99.76, max(-99.76, _GLF_IDENTITY(-99.76, (false ? _GLF_FUZZED(9.0) : -99.76))))))), -6255.1227)))), float(0.0), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6255.1227)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6255.1227)), float(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (false ? _GLF_FUZZED(-31.34) : float(0.0))), float(_GLF_FUZZED((- -5509.7857))), bool(false)))), bool(true))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0), (mat3x4(0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0)) * mat3(1.0)))), 0.0)), float(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6255.1227)), float(0.0), bool(true))), 1.0, sqrt(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x4(0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-0.4)), bool(false)))), 0.0, sqrt(1.0), 1.0, 0.0, 0.0))))))).y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(7.4)), bool(false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-3.2)), bool(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (gl_WorkGroupSize)).x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(bvec2(true), _GLF_struct_0(ivec3(1), ivec2(1), ivec4(1)), ivec3(1), 1u, bvec2(true), _GLF_struct_1(mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true))))), false)))))), bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), 1u, _GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) ^ ivec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8091.8496)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-262.667) : _GLF_ZERO(0.0, injectionSwitch.x)))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))))), _GLF_ZERO(0.0, injectionSwitch.x)), ((ivec2(1)) ^ ivec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-8091.8496)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (true), true && (true && (true))))))), _GLF_ZERO(0.0, injectionSwitch.x))) / ivec2(1, 1))), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | uvec2(0u, 0u))), bvec4(true)), ivec3(1), _GLF_struct_6(_GLF_struct_3(mat3x4(1.0), true, ivec3(1), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (float(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))) - 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), true, bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ((true) || false) && true)) && true)))))), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((float(false) + 37.74))), float(1.0), bool(true)))), ivec4(1), uvec3(1u), _GLF_struct_5(mat3x2(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-5.2), (true ? 1.0 : _GLF_FUZZED(-5.2)) - 0.0), (true ? 1.0 : _GLF_FUZZED(-5.2)) / sqrt(1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-5.2), (true ? 1.0 : _GLF_FUZZED(-5.2)) / sqrt(1.0)), float(mat2x4(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-5.2), (true ? 1.0 : _GLF_FUZZED(-5.2)) / sqrt(1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(4.7)), min(float(_GLF_FUZZED(4.7)), float(_GLF_FUZZED(4.7)))), bool(false)))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << 0u))), 1u, 1u), (clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), (1u))) << 0u))), 1u, 1u)) - 0u), (clamp(1u, 1u, 1u)) >> 0u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), (1u))) << 0u))), 1u, 1u), (clamp(1u, 1u, 1u)) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << 0u))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((clamp(1u, 1u, 1u)), ((clamp(1u, 1u, 1u))) >> 0u) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))), 1u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << 0u))), 1u, 1u), _GLF_IDENTITY((clamp(1u, 1u, 1u)), uint(uvec4((clamp(1u, 1u, 1u)), (0u | 0u), 1u, 0u))) >> 0u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << 0u))), 1u, 1u), (clamp(1u, 1u, 1u)) >> 0u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) << 0u))), 1u, 1u), _GLF_IDENTITY((clamp(1u, 1u, 1u)), max(_GLF_IDENTITY((clamp(1u, 1u, 1u)), clamp((clamp(1u, 1u, 1u)), (clamp(1u, 1u, 1u)), (clamp(1u, 1u, 1u)))), (clamp(1u, 1u, 1u)))) >> 0u))))))), 1u)), gl_WorkGroupID.x, mat4x2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2.9))), vec2(_GLF_FUZZED((5.7 + -636.648)), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true), true))), true), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) && true)))), true, true), bvec3(bvec4(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), true)))))), true && (! (! (bool(_GLF_IDENTITY(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), true, true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), true)), true))), true)))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec3(false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).y))))))))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)) || false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_7.workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_7.workgroup_id) | (workgroup_size * _GLF_struct_replacement_7.workgroup_id), (false ? _GLF_FUZZED((true ? subgroup_id : num_workgroup)) : (workgroup_size * _GLF_struct_replacement_7.workgroup_id) | (workgroup_size * _GLF_struct_replacement_7.workgroup_id))), (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_7.workgroup_id) | (workgroup_size * _GLF_struct_replacement_7.workgroup_id), (false ? _GLF_FUZZED((true ? subgroup_id : num_workgroup)) : (workgroup_size * _GLF_struct_replacement_7.workgroup_id) | (workgroup_size * _GLF_struct_replacement_7.workgroup_id)))) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) >> 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) >> 0u)))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))), (max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) >> 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) >> 0u)))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) ^ 0u), (max(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_base))), subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) >> 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) >> 0u)))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))) | (0u & 61686u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
                return;
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, false))))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (true)))), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, ! (! (true)))), true))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), false, true, true)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(0.0, 1.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0)), 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))), false || (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))), (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))), false, false)), _GLF_IDENTITY(false || (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false || (false || (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))), true, true))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ((subgroup_local_id + 1)) << 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-31801, -81572))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-31801, -81572))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-31801, -81572))))).y), float(_GLF_FUZZED(-481.087)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(-31801, -81572))))).y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false, true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(3.9, -2.4)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y)), false || ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y)))), true, false, false)))), (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-645.869, 0.3)) : injectionSwitch)).y)))), true, false, false))))) || false)))))))) || false))))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-906.374, 5.0, 2311.8107, 72.38, 841.117, 319.348, -2.4, -502.361) * vec4(-9.7, 34.50, 18.21, 8446.9237))) : injectionSwitch))[1])).y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-906.374, 5.0, 2311.8107, 72.38, 841.117, 319.348, -2.4, -502.361) * vec4(-9.7, 34.50, 18.21, 8446.9237))) : injectionSwitch))[1])).y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-906.374, 5.0, 2311.8107, 72.38, 841.117, 319.348, -2.4, -502.361) * vec4(-9.7, 34.50, 18.21, 8446.9237))) : injectionSwitch))[1])).y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false) || (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-906.374, 5.0, 2311.8107, 72.38, 841.117, 319.348, -2.4, -502.361) * vec4(-9.7, 34.50, 18.21, 8446.9237))) : injectionSwitch))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), 1))])).y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, true))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), clamp((buf[virtual_gid]), (buf[virtual_gid]), (buf[virtual_gid]))) | (41652u & 0u)), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, (0 >> _GLF_IDENTITY(int(4), int(4))))), max(int(ivec2(64, (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec2(64, (0 >> _GLF_IDENTITY(int(4), int(4)))))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))) && true)) || false)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) ^ 0)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], read, 4, _GLF_IDENTITY(64, (64) / 1), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
}
