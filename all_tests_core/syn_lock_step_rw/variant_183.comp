#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bool((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))))) || false)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(-3666.3845), _GLF_FUZZED(-0.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[0], ((_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[0]) + 0.0), (_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat2(exp(0.0), 0.0, 0.0, 1.0)), sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) * vec2(1.0, 1.0)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))) > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))) > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0)))) > injectionSwitch.y))))), false, true))), true, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) && true), false, false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) && true))))))), false), false)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(1.2)))) > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), true, false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))) && true))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false)))))))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), true && (true && (false))), ! (! (true && (false)))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), true)))))))))))))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))) / vec2(1.0, 1.0))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))) / vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(4.5), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))) / vec2(1.0, 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), (vec2(mat3(injectionSwitch, log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))) / vec2(1.0, 1.0))))[0], _GLF_FUZZED(-9304.3954)), bvec2(true, false))))).x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2630.8781), _GLF_FUZZED(79.61)), bvec2(false, false))), injectionSwitch)).y) || false))))))), (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2630.8781), _GLF_FUZZED(79.61)), bvec2(false, false))), injectionSwitch)).y) || false))))))), false || (! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), false, true, true))) || false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-6400.6183), _GLF_FUZZED(0.5)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))[1]), vec2(_GLF_FUZZED(2630.8781), _GLF_FUZZED(79.61)), bvec2(false, false))), injectionSwitch)).y) || false)))))))))) || false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-778.254)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(_GLF_IDENTITY(72.63, (_GLF_IDENTITY(72.63, 1.0 * (72.63))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), float(cos(0.0)), bool(true))) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y) || false)))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-491.098))), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) / 1.0)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(mix(4.3, 0.5, true)), max(_GLF_FUZZED(mix(4.3, 0.5, true)), _GLF_FUZZED(mix(4.3, 0.5, true)))))), 1.0)), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), (mat2(injectionSwitch, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true, true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bool(bool(bool(! (_GLF_IDENTITY(false, (false) && true)))))), true && (bool(bool(bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), max(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-4749.9699, mix(float(-4749.9699), float(_GLF_FUZZED(float(false))), bool(false)))), max(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0 * (round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (length(normalize(vec3(1.0, 1.0, 1.0)))) - 0.0), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))))) * (injectionSwitch.y))))))) || false)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(((+ -80.66) + -82.23))), float(vec3(float(_GLF_FUZZED(((+ -80.66) + -82.23))), 1.0, 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(cos(0.0)))), sin(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, tan(0.0)), transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(cos(0.0)))), sin(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, tan(0.0)), (mat4x3(_GLF_IDENTITY((injectionSwitch.x) / 1.0, ((injectionSwitch.x) / 1.0) - 0.0), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, round(length(normalize(cos(0.0)))), sin(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, tan(0.0))) * mat4(1.0)))))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? _GLF_IDENTITY(+ -80.66, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) * (+ -80.66)) : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + _GLF_IDENTITY(-80.66, mix(float(_GLF_IDENTITY(-80.66, max(-80.66, -80.66))), float(_GLF_FUZZED((false ? -657.912 : -3102.9460))), bool(false))) : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))) > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), max(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(cos(vec2(0.0, 0.0)))).y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), log(1.0), sqrt(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sqrt(0.0))))[0], injectionSwitch[1])).y))))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(((+ -80.66) + -82.23))), float(vec3(float(_GLF_FUZZED(((+ -80.66) + -82.23))), 1.0, 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))) + 0.0)))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(((+ -80.66) + -82.23))), float(vec3(float(_GLF_FUZZED(((+ -80.66) + -82.23))), 1.0, 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.4) : injectionSwitch.y)), injectionSwitch.y))))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23)), max(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23)), _GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), max(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), (true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699)) * 1.0), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), bool(bvec4(bool(bvec3(! (false), false, true)), true, true, true))))))) ? injectionSwitch.y : _GLF_FUZZED(-4749.9699))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) / 1.0), 1.0)))) * (injectionSwitch.y)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)))))) : _GLF_FUZZED(1.9)))))), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false, bool(bool((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(((+ -80.66) + -82.23))), float(vec3(float(_GLF_FUZZED(((+ -80.66) + -82.23))), 1.0, 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? _GLF_IDENTITY(+ -80.66, float(mat2(+ -80.66, 1.0, 0.0, 0.0))) : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + _GLF_IDENTITY(-80.66, (false ? _GLF_FUZZED(30.81) : -80.66)) : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true)), min(mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? _GLF_IDENTITY(+ -80.66, float(mat2(+ -80.66, 1.0, 0.0, 0.0))) : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + _GLF_IDENTITY(-80.66, (false ? _GLF_FUZZED(30.81) : -80.66)) : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? _GLF_IDENTITY(+ -80.66, float(mat2(+ -80.66, 1.0, 0.0, 0.0))) : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + _GLF_IDENTITY(-80.66, (false ? _GLF_FUZZED(30.81) : -80.66)) : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true)), 0.0 + (mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? _GLF_IDENTITY(+ -80.66, float(mat2(+ -80.66, 1.0, 0.0, 0.0))) : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), min((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + _GLF_IDENTITY(-80.66, (false ? _GLF_FUZZED(30.81) : -80.66)) : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))))))) > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), max(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y))))), (false ? _GLF_FUZZED(-7606.7748) : max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), max(true ? injectionSwitch.y : _GLF_FUZZED(-4749.9699), true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-4749.9699, min(_GLF_IDENTITY(-4749.9699, clamp(-4749.9699, -4749.9699, _GLF_IDENTITY(-4749.9699, max(-4749.9699, -4749.9699)))), _GLF_IDENTITY(-4749.9699, (-4749.9699) / 1.0)))))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-511.682) : (injectionSwitch)[0])), _GLF_FUZZED(-848.392)), vec2(_GLF_FUZZED(-383.151), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0) + (normalize(vec3(1.0, 1.0, 1.0)))))))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0))).y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x))) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(((+ -80.66) + -82.23))), float(vec3(float(_GLF_FUZZED(((+ -80.66) + -82.23))), 1.0, 1.0))), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, determinant(mat2(0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), log(1.0))), 1.0, 0.0, 1.0, sqrt(1.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0)))))) + 0.0)), bool(true))) > injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))), max(_GLF_IDENTITY((_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_IDENTITY(_GLF_FUZZED(183.540), (true ? _GLF_FUZZED(_GLF_IDENTITY(183.540, (false ? _GLF_FUZZED(smoothstep(-1277.5347, 470.210, -3397.6561)) : 183.540))) : _GLF_FUZZED(252.549)))))), min((_GLF_IDENTITY(+ -80.66, (true ? _GLF_IDENTITY(+ -80.66, (+ -80.66) - 0.0) : _GLF_FUZZED(183.540)))), (_GLF_IDENTITY(_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(_GLF_IDENTITY(183.540, (183.540) - sin(0.0))))), 0.0 + (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(183.540, (183.540) - sin(0.0)), (false ? _GLF_FUZZED(6954.2765) : _GLF_IDENTITY(183.540, (183.540) - sin(0.0)))))))))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))), (_GLF_IDENTITY(_GLF_IDENTITY(+ -80.66, min(+ -80.66, + -80.66)), (_GLF_IDENTITY(true ? + -80.66 : _GLF_FUZZED(183.540), mix(float(_GLF_FUZZED(3930.6595)), float(true ? + -80.66 : _GLF_FUZZED(183.540)), bool(true)))))), (_GLF_IDENTITY(+ -80.66, (true ? + -80.66 : _GLF_FUZZED(183.540)))))) + -82.23))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))) || false))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)) && true) || false)) || false)))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u), 0u)), max(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 1u, 0u), (uvec3(gl_WorkGroupSize.x, 1u, 0u)) ^ ((uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) ^ uvec3(1u, 1u, 1u)))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u), 0u)), max(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 1u, 0u), (uvec3(gl_WorkGroupSize.x, 1u, 0u)) ^ ((uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) ^ uvec3(1u, 1u, 1u))))))))), (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u), 0u)), max(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), uint(_GLF_IDENTITY(uvec3(gl_WorkGroupSize.x, 1u, 0u), (uvec3(gl_WorkGroupSize.x, 1u, 0u)) ^ ((uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u)) ^ uvec3(1u, 1u, 1u)))))))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), ((gl_WorkGroupSize.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))), max(_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))), 0u | (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))))), ~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))))))))) >> 0u), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), ((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))) >> 0u), _GLF_IDENTITY((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), ((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))) >> 0u), _GLF_IDENTITY((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))), ((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u))))) >> 0u)))) | ((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8849.7815), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))), injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8849.7815), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9330.4280) : 1.0)), 1.0))))), injectionSwitch)).y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) || (false), (false || (false)) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), false, false, false))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), false, false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, false || (true))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, false || (true))))), false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(vec3(-3.8, -958.816, 8.6))))).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && (false)), bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(4.7, 594.445, _GLF_IDENTITY(-5374.1717, mix(float(_GLF_FUZZED(-3779.6862)), float(_GLF_IDENTITY(-5374.1717, clamp(-5374.1717, -5374.1717, -5374.1717))), bool(true))), -937.245)) : mat2(1.0)))) - mat2(0.0, 0.0, 0.0, 0.0))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)))) / 1.0)), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), 0.0 + (_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0))), 0.0, tan(0.0), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(1.0), 0.0, 0.0)), clamp(float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(1.0), 0.0, 0.0)), float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(1.0), 0.0, 0.0)), float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(1.0), 0.0, 0.0)))))), 1.0, 1.0))))))) / vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(570.524, -1.3)))), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x2(vec2(1.0, 1.0), cos(0.0), 1.0, 1.0, 0.0, 0.0, 1.0))), vec2(1.0, 1.0)))))), 0.0, 0.0, sqrt(0.0), 0.0, tan(0.0), log(1.0), 1.0, 1.0))))))) / vec2(1.0, 1.0))))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.6)), bool(false))), 1.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), clamp(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0), ((mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), clamp(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(0.0, 0.0) + (((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0))), injectionSwitch))) * mat2(1.0)))) / vec2(1.0, 1.0))).y), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(-7374.5254)) : 1.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), max(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-339.469, 2.2)) : (injectionSwitch))), (injectionSwitch)))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0)) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), sqrt(0.0) + (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - sin(vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - sin(vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - sin(vec2(0.0, 0.0)))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))), (false ? _GLF_FUZZED(-20.54) : _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))), min(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), sqrt(0.0) + (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))), mix(float(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))), min(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(vec3(((injectionSwitch) * mat2(1.0)), 0.0))))) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y), sqrt(0.0) + (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y)))), float(_GLF_FUZZED(9.6)), bool(false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (false) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), _GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), (_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), bool(bvec4(true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), false, true, true)))) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5568.7846) : injectionSwitch.y)))), 1.0, 0.0, 1.0)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(false, false), false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(false, false), false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(false, false), false)))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, _GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(false, false), false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(false, false), false)))))), false, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))) ^ (workgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u)), ~ (~ (0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec4(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u)), ~ (~ (0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u)), ~ (~ (0u ^ ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u)))))))) & 161237u))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) | (0u)) ^ (workgroup_size), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u & 161237u), ((0u & 161237u)) | ((0u & 161237u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u & 161237u), ((0u & 161237u)) | ((0u & 161237u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u & 161237u), ((0u & 161237u)) | ((0u & 161237u))))), clamp((_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u & 161237u), ((0u & 161237u)) | ((0u & 161237u))))), (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u & 161237u), ((0u & 161237u)) | ((0u & 161237u))))), (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY((0u & 161237u), ((0u & 161237u)) | ((0u & 161237u)))))))) / (0u ^ 1u))))) | (0u)) ^ (workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u), (_GLF_IDENTITY(0u, (0u) ^ (0u & 161237u))) | (0u)) ^ (_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u & 161237u))) | (0u)) ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u & 161237u))) | (0u)) ^ (workgroup_size)) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u & 161237u))) | (0u)) ^ (workgroup_size), (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u & 161237u))) | (0u)) ^ (workgroup_size) : _GLF_FUZZED(subgroup_id)))))), (_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), uint(uint(~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) ^ 0u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), uint(uint(~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) ^ 0u))))), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), uint(uint(~ (workgroup_size)))), ~ (_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) ^ 0u))))))))))))) / 1u)) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))), uint(0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, determinant(mat3(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9781.5782) : 1.0)))) : _GLF_FUZZED(dot(vec3(4.2, 16.02, 3.7), vec3(2.5, -769.132, 102.936))))), 0.0, 0.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(1.0, 0.0, 0.0)))))).y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) | (workgroup_base)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) + (0u | 0u)))) | (0u))) + 0u)), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), clamp(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u), ~ (~ ((_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u)))))) + 0u)), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u))))) ^ 0u)), ((workgroup_base)) | 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u))))) ^ 0u) * subgroup_size : _GLF_FUZZED(num_workgroup))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(57074u)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(57074u)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(57074u)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y)))))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(57074u)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) || ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(4978.5630), (injectionSwitch)[1])) * vec2(1.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED((- float(57074u)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y)))))))))) && true))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat2x3(_GLF_FUZZED(injectionSwitch), cos(0.0), 0.0, 0.0, abs(0.0)))) : (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))) - vec2(0.0, 0.0)) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0)), vec2(mat4x3(vec2(mat3x4(_GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), cos(0.0), 1.0, 1.0)), round(length(normalize(1.0))), 0.0, 1.0, cos(0.0), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) : (injectionSwitch) * mat2(1.0), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (false ? _GLF_FUZZED(vec2(1549.4193, -636.182)) : _GLF_FUZZED(injectionSwitch))) : (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), max(false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0), false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(false, false || (false)), false)))), true, true))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), true, true), bvec3(bvec4(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), true, true), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), true, true), bvec3(bvec4(bvec3(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false))), true, true), true))))))))))), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true))) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true))) && true), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true))) && true, ! (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true))) && true, ((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true))) && true) || false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.3, -7.1)) : injectionSwitch))) - tan(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(false, true))), true)), false || (bool(bvec4(false, true, false, true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false)))))) || false), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), true, false, true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false)))))) || false), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), true, false, true)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false)))))) || false), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), true, false, true))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false)))))) || false), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), true, false, true)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, _GLF_IDENTITY(true, (true) && true))))))) || false)))))) || false), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), true, false, true))))) || false), false, true)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || (bool(bvec4(false, true, false, true)))), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || _GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(bool((bool(bvec4(false, true, false, true)))))))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))), ! (! (_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false)))))))), _GLF_IDENTITY(false, (false) && true), true)), _GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_IDENTITY(false, (false) && true), true))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_IDENTITY(false, (false) && true), true))) && true, ! (! ((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_IDENTITY(false, (false) && true), true))) && true)))), true && (! (_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_IDENTITY(false, (false) && true), true))) && true, ! (! ((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), _GLF_IDENTITY(false, (false) && true), true))) && true))))))))), false || _GLF_IDENTITY((bool(bvec4(false, true, false, true))), _GLF_IDENTITY(((bool(bvec4(false, true, false, true)))) || false, ! (! (((bool(bvec4(false, true, false, true)))) || false))))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || _GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(bvec2((bool(bvec4(false, true, false, true))), false), bvec2(bvec3(bvec2((bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))), false), true)))))), false || (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) && true))), true)), false || _GLF_IDENTITY((bool(bvec4(false, true, false, true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((bool(bvec4(false, true, false, true))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((bool(bvec4(false, true, false, true))), false), bvec2(bvec2(bvec2((bool(bvec4(false, true, false, true))), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2((bool(bvec4(false, true, false, true))), false), bvec2(bvec2(bvec2((bool(bvec4(false, true, false, true))), false))))), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2((bool(bvec4(false, true, false, true))), false), bvec2(bvec2(bvec2((bool(bvec4(false, true, false, true))), false))))), false)))))))), bvec2(bvec3(bvec2((bool(bvec4(false, true, false, true))), _GLF_IDENTITY(false, (false) || false)), true)))))))))), true, false, true)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0 * (injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))) && true), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) - log(vec2(1.0, 1.0))), 0.0)), (vec2(vec3(_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (vec2(0.0, 0.0) + (injectionSwitch)) - log(vec2(1.0, 1.0))), 0.0))) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), _GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))))))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), min((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (~ (_GLF_IDENTITY(1, (1) * 1)))), 1)))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), max(_GLF_IDENTITY(1, (1) * 1), 1))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-12429))))), (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), clamp((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))))))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), 0))))), min(~ (_GLF_IDENTITY(1, (1) * 1)), ~ (_GLF_IDENTITY(1, (1) * 1)))))), 1)))))))) << 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), 0 | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) << (0 | 0)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 ^ (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, ((1) * 1) - (0 >> _GLF_IDENTITY(int(8), int(8))))), 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, (1) * 1), 1), (_GLF_IDENTITY(max(_GLF_IDENTITY(1, (1) * 1), 1), _GLF_IDENTITY(int(int(max(_GLF_IDENTITY(1, (1) * 1), 1))), 0 ^ (int(int(max(_GLF_IDENTITY(1, (1) * 1), 1))))))) - (0 << _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (1) | (1))), 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) * 1, (false ? _GLF_FUZZED(67387) : _GLF_IDENTITY((1) * 1, ((1) * 1) - 0)))), 1)))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, (1 & 1), 1)))) * 1), _GLF_IDENTITY(1, (1) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 + ((1))) * 1), 1)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))) | 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) / 1)))))))))) << 0) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)))))))))))) << 0)))), _GLF_IDENTITY(0u + _GLF_IDENTITY((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) << 0))), ((uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) << 0)))) ^ 0u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u + (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) << 0))), (0u + (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) << 0)))) - 0u)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.5))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true, false, true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))))) && true, _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))))) && true, false, true)), (bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))))))) && true, false, true))) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.2)), bool(false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.97), _GLF_FUZZED(_GLF_IDENTITY(1.8, (1.8) / 1.0))), bvec2(false, false))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.97), _GLF_FUZZED(_GLF_IDENTITY(1.8, (1.8) / 1.0))), bvec2(false, false))).y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))))))))))
  barrier();
}
