#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 mat2x3 _f0;
 mat3 _f1;
 bool _f2;
 mat4 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_36 {
 mat4x3 _f0;
 uint _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 mat2x4 _f4;
 ivec3 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 uvec2 _f1;
 bvec4 _f2;
 _GLF_struct_37 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_34 {
 ivec2 _f0;
} ;

struct _GLF_struct_33 {
 int _f0;
 bvec2 _f1;
 uvec2 _f2;
 ivec3 _f3;
 bvec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_35 {
 float _f0;
 uvec4 _f1;
 int _f2;
 _GLF_struct_33 _f3;
 bvec4 _f4;
 _GLF_struct_34 _f5;
} ;

struct _GLF_struct_31 {
 mat4x3 _f0;
 vec4 _f1;
 bvec3 _f2;
 uvec3 _f3;
 vec2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_30 {
 mat4 _f0;
 int _f1;
 ivec2 _f2;
 mat4 _f3;
 vec3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_29 {
 bvec3 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_28 {
 mat4 _f0;
 mat3x4 _f1;
 int _f2;
 bvec2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_32 {
 bvec4 _f0;
 _GLF_struct_28 _f1;
 vec4 _f2;
 _GLF_struct_29 _f3;
 uvec2 _f4;
 _GLF_struct_30 _f5;
 _GLF_struct_31 _f6;
} ;

struct _GLF_struct_26 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 ivec4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
} ;

struct _GLF_struct_24 {
 mat4x3 _f0;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 bvec4 _f1;
 vec2 _f2;
 mat3 _f3;
 uvec3 _f4;
 bool _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_21 {
 ivec4 _f0;
 mat3x2 _f1;
 ivec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_23 {
 mat3 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 mat4 _f3;
 vec3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_39 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_27 _f2;
 uint subgroup_base;
 _GLF_struct_32 _f3;
 mat2x3 _f4;
 _GLF_struct_35 _f5;
 _GLF_struct_38 _f6;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 mat2x4 _f1;
 mat3x4 _f2;
 bvec2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 uvec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_15 {
 uvec4 _f0;
 bool _f1;
 bool _f2;
} ;

struct _GLF_struct_14 {
 uint subgroup_local_id;
 uvec3 _f0;
 ivec4 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 uvec2 _f1;
 uint _f2;
 uvec4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_12 {
 uint _f0;
 mat3x2 _f1;
 uvec4 _f2;
 bvec4 _f3;
 mat3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
 vec3 _f4;
 uvec2 _f5;
 _GLF_struct_15 _f6;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 uvec3 _f1;
 mat2 _f2;
 mat4x2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 bvec3 _f4;
 mat3x4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 bvec2 _f1;
 uint _f2;
 uint _f3;
 mat3x4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 vec3 _f4;
 _GLF_struct_10 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_20 {
 bvec2 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_16 _f2;
 ivec4 _f3;
 uvec3 _f4;
 _GLF_struct_19 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 mat4x3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat2x4 _f1;
 ivec3 _f2;
 uint _f3;
 uint subgroup_size;
 mat3x4 _f4;
 int _f5;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 mat4x3 _f1;
 float _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 ivec4 _f1;
 vec4 _f2;
 bvec2 _f3;
 mat2 _f4;
 mat3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 bool _f1;
 _GLF_struct_1 _f2;
 mat2x3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 ivec4 _f1;
 _GLF_struct_5 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(float(-87734)), 1.0 * (_GLF_FUZZED(float(-87734))))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))))[1]), bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), false, true, false))), true))).y))))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))) && true)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2x4(1.0), ivec4(1), _GLF_struct_5(_GLF_struct_0(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))), ((1)) | (_GLF_IDENTITY((1), 0 | ((1)))))) : _GLF_FUZZED(84879)))) >> 0)), ivec4(1), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-640.232, -3.9).g)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false))), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-640.232, -3.9).g)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false))), max(mix(float(_GLF_FUZZED(vec2(-640.232, -3.9).g)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false))), mix(float(_GLF_FUZZED(vec2(-640.232, -3.9).g)), float(1.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))) || false))))))))), bvec2(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat2(1.0)))), mat2(mat4(transpose(transpose(transpose(mat2(1.0))))))))))))), mat3(1.0), mat4(1.0)), _GLF_IDENTITY(true, (true) && true), _GLF_struct_1(mat2(1.0), mat4x3(1.0), 1.0, ivec3(1)), mat2x3(1.0), _GLF_struct_2(true, mat2x4(1.0), ivec3(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), 0 | (_GLF_IDENTITY(~ (int(1)), max(~ (int(1)), ~ (int(1)))))))), int(1))), (true ? _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), 0 | (_GLF_IDENTITY(~ (int(1)), max(~ (int(1)), ~ (int(1)))))))), int(1))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), 0 | (_GLF_IDENTITY(~ (int(1)), max(~ (int(1)), ~ (int(1)))))))), int(1))), int(ivec2((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), 0 | (_GLF_IDENTITY(~ (int(1)), max(~ (int(1)), ~ (int(1)))))))), int(1))), 1)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), 0 | (_GLF_IDENTITY(~ (int(1)), max(~ (int(1)), ~ (int(1)))))))), int(1))))) : _GLF_FUZZED(-63008))))), 1u, gl_SubgroupSize, mat3x4(1.0), 1), _GLF_struct_3(ivec3(1), mat4x3(1.0), vec2(1.0)), _GLF_struct_4(mat2x3(1.0))));
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(bvec2(true), _GLF_struct_11(mat2x3(1.0), _GLF_struct_7(bvec3(true), mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 1.0)))))), _GLF_struct_8(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || false)), bvec2(true), 1u, 1u, mat3x4(1.0), mat2(1.0)), _GLF_struct_9(ivec3(1), uvec4(1u), mat2x3(1.0), uvec3(1u), bvec3(true), mat3x4(1.0), mat2(1.0)), vec3(1.0), _GLF_struct_10(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3(vec4(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-291.723) : cos(0.0))), 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))), min(_GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))), _GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))))), _GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), abs(1.0), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), vec2(mat3x4(mat2(1.0) * (vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))), max(vec4(mat3(vec4(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))), 0.0, 0.0)), abs(1.0), 0.0, 0.0)), _GLF_IDENTITY(vec4(mat3(vec4(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))), 0.0, 0.0)), abs(1.0), 0.0, 0.0)), min(vec4(mat3(vec4(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))), 0.0, 0.0)), abs(1.0), 0.0, 0.0)), vec4(mat3(vec4(1.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, cos(0.0), 1.0, 1.0))), 0.0, 0.0)), abs(1.0), 0.0, 0.0))))))), uvec3(1u), mat2(1.0), mat4x2(1.0), vec2(1.0)), ivec3(1)), _GLF_struct_16(uvec4(1u), _GLF_struct_12(1u, mat3x2(1.0), uvec4(1u), bvec4(true), mat3(1.0), bvec3(true)), _GLF_struct_13(ivec3(1), uvec2(1u), 1u, uvec4(1u), mat3x2(1.0)), _GLF_struct_14(gl_SubgroupInvocationID, _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), ivec4(1), ivec4(1)), vec3(1.0), uvec2(1u), _GLF_struct_15(uvec4(1u), true, true)), _GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1))), _GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))), _GLF_struct_19(_GLF_struct_17(mat4x2(1.0), 1.0, 1u), _GLF_struct_18(vec2(1.0), mat2x4(1.0), mat3x4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_IDENTITY(true, bool(bvec2(true, true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))))), false, false))), bvec4(_GLF_IDENTITY(true, true && (true)))), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec3(1u)), vec2(1.0));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) && true)), true, false))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.6))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(4.2)), bool(false)))))) && _GLF_IDENTITY(true, (true) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), max((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), true && (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))) || false)))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false)))))), max(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))))), _GLF_IDENTITY(mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false)), mix(float(_GLF_IDENTITY(mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false)), min(mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false)), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false))))), float(_GLF_FUZZED((+ 69.28))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), exp(tan(0.0)) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) * 1.0)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))))))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (true ? _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) + 0.0) : _GLF_FUZZED(-3.5)))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_FUZZED(30.14)), bool(false)))), max(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(3.5, (true ? 3.5 : _GLF_FUZZED(floor(9501.4513)))))), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false))))), float(_GLF_IDENTITY(_GLF_FUZZED(30.14), max(_GLF_FUZZED(30.14), _GLF_FUZZED(30.14)))), bool(_GLF_IDENTITY(false, true && (false)))))), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), float(_GLF_FUZZED(30.14)), _GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))))))))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y) || false)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3496.8784)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), true, false))), bvec2(bvec3(bvec2(bvec2(false, true)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), true, false))), bvec2(bvec3(bvec2(bvec2(false, true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true)), true, true))), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))), true, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))), false, false)))), false))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false))))))))), false))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), bvec2(bvec3(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))), false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false, false)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false)))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(false, true)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))), true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, true))))))), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))))))), false)))), true)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true))))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(false, true)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(false, true)), true), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true))))))), true))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false, false)))), false))))))), true, false)))))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.3) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(624.700)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x4(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, 0))])), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sin(0.0)))), _GLF_FUZZED((true ? 3025.2475 : 3.6))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-94.41, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp(69.34)) : -94.41))), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))))), 0u))), (gl_WorkGroupID) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), clamp((workgroup_size) | (workgroup_size), (workgroup_size) | (workgroup_size), _GLF_IDENTITY((workgroup_size) | (workgroup_size), ((workgroup_size) | (workgroup_size)) << 0u)))), (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), clamp((workgroup_size) | (workgroup_size), _GLF_IDENTITY((workgroup_size), 0u | (_GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size))))) | (workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))), clamp(~ (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))), ~ (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))), 0u | (~ (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size)))))))))) | (workgroup_size), ((workgroup_size) | (workgroup_size)) << 0u)))) : _GLF_FUZZED(num_workgroup))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)))))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true)))))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9736.9824, -29.23)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_23(mat3(1.0), _GLF_struct_21(ivec4(1), mat3x2(1.0), ivec2(1), mat4(1.0)), _GLF_struct_22(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(vec2(3.5, -915.060).x)), min(float(_GLF_FUZZED(vec2(3.5, -915.060).x)), float(_GLF_FUZZED(vec2(3.5, -915.060).x)))), bool(false)))), bvec4(true), vec2(1.0), mat3(1.0), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), min(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), _GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u)))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), min(_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), _GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), _GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))))))) << 0u)))) >> 0u)))), true, ivec3(1)), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-1198.5941, -8758.7129, -632.119, 7.8, 6.6, 8.3, -4.2, 610.166, -94.30, -1.2, 3.9, 6.0, -8.0, 835.686, 117.770, -0.2))))) / mat4(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(mat4(4.6, 7.1, _GLF_IDENTITY(-415.679, max(-415.679, _GLF_IDENTITY(-415.679, clamp(-415.679, -415.679, _GLF_IDENTITY(-415.679, min(-415.679, -415.679)))))), 8596.1619, -3.1, 8305.0315, 3.2, -3568.3856, -1278.5113, -0.2, -60.39, 3270.6632, -8.7, 21.45, 287.200, 58.49)), (false ? _GLF_FUZZED(mat4(2940.8061, 749.866, -116.071, -3462.9631, -3.9, -839.761, -33.77, 5.0, -9.5, 8818.2999, -5.2, 663.076, 2.3, _GLF_IDENTITY(1.6, 0.0 + (_GLF_IDENTITY(1.6, min(1.6, 1.6)))), 4769.3673, _GLF_IDENTITY(-209.166, (true ? -209.166 : _GLF_FUZZED(-2.3))))) : _GLF_FUZZED(mat4(4.6, 7.1, -415.679, 8596.1619, -3.1, 8305.0315, 3.2, _GLF_IDENTITY(-3568.3856, (-3568.3856) * 1.0), -1278.5113, -0.2, -60.39, 3270.6632, -8.7, 21.45, 287.200, 58.49))))), mat4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + ((true ? mat4(1.0) : _GLF_FUZZED(_GLF_IDENTITY(mat4(_GLF_IDENTITY(4.6, max(4.6, 4.6)), 7.1, -415.679, 8596.1619, -3.1, 8305.0315, 3.2, -3568.3856, -1278.5113, -0.2, _GLF_IDENTITY(-60.39, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-60.39, clamp(-60.39, -60.39, -60.39)), float(mat3(-60.39, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(acosh(42.84)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 3270.6632, -8.7, 21.45, 287.200, 58.49), transpose(transpose(mat4(_GLF_IDENTITY(4.6, max(4.6, 4.6)), 7.1, -415.679, 8596.1619, -3.1, 8305.0315, 3.2, -3568.3856, -1278.5113, -0.2, _GLF_IDENTITY(_GLF_IDENTITY(-60.39, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-60.39, clamp(-60.39, -60.39, -60.39)), float(mat3(-60.39, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), float(mat4x2(_GLF_IDENTITY(-60.39, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(-60.39, clamp(-60.39, -60.39, -60.39)), float(mat3(-60.39, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 3270.6632, -8.7, 21.45, 287.200, 58.49))))))))), vec3(1.0), uvec3(1u)), _GLF_struct_24(mat4x3(1.0)), _GLF_struct_27(vec4(1.0), _GLF_struct_25(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))))), (false ? _GLF_FUZZED(-80.50) : _GLF_IDENTITY(_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))))), (_GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0)))))) / 1.0))) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), mix(float(_GLF_FUZZED(86.58)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0 * (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false)))))), bool(true))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(refract(-140.869, -83.21, min(816.919, -823.770))) : 0.0)), 0.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0)), (_GLF_IDENTITY(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), 0.0, 0.0, sqrt(0.0)), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(mat3(0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0))), mat4x3(_GLF_IDENTITY(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true)))))), transpose(transpose(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true)))))))))))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(mat3(0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0))), mat4x3(_GLF_IDENTITY(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true)))))), transpose(transpose(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true)))))))))))), transpose(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(mat4x3(mat3(0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0))), mat4x3(_GLF_IDENTITY(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true)))))), transpose(transpose(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true))))))))))))), transpose(transpose(transpose(mat3(_GLF_IDENTITY(mat4x3(mat3(0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0))), mat4x3(_GLF_IDENTITY(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true)))))), transpose(transpose(mat4(mat4x3(mat3(0.0, 0.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-165.506)), float(sqrt(0.0)), bool(true))))))))))))))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), max(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 0.0, round(length(normalize(1.0)))))), 1.0, 1.0, 1.0, 1.0))), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-2.4), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(-230.896), _GLF_FUZZED((5.3 / -5.2))), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), 0.0, 1.0, sin(sin(0.0)), 0.0)), (false ? _GLF_FUZZED(-6918.0361) : float(mat3x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, cos(0.0), 1.0)), (_GLF_IDENTITY(float(mat2(1.0, 1.0, cos(0.0), 1.0)), min(float(mat2(1.0, 1.0, cos(0.0), 1.0)), float(mat2(1.0, 1.0, cos(0.0), 1.0))))) - 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), determinant(mat3(0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, sin(sin(0.0)), 0.0))))))))), ivec4(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))), bvec3(true)), _GLF_struct_26(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), clamp(1.0, 1.0, 1.0))), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), _GLF_IDENTITY(bool(bvec4(! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))))), (true && (true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))), true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))), false || (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))))), ! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))))), (true && (true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))), ! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))))))))), (true && (true)) || false), (_GLF_IDENTITY(true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((true), bool(bvec4((true), false, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))), false, true, false)), bool(bvec2(bool(bvec4(! ((_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))), false, true, false)), false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bvec4((true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), true, true)))), ! (! (! (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))))))))), (true && (true)) || false)) && true))))))))))), GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.y * _GLF_struct_replacement_6._f2._f4.subgroup_size, _GLF_struct_32(bvec4(true), _GLF_struct_28(mat4(1.0), mat3x4(1.0), 1, bvec2(true), uvec2(1u)), vec4(1.0), _GLF_struct_29(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(true), mat4x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), ivec4(1)), uvec2(1u), _GLF_struct_30(mat4(1.0), 1, ivec2(1), mat4(1.0), vec3(1.0), mat3x4(1.0)), _GLF_struct_31(mat4x3(1.0), vec4(1.0), bvec3(true), uvec3(1u), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(vec2(-9.5, 22.44))))) / vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))), mat2x3(1.0), _GLF_struct_35(1.0, uvec4(1u), _GLF_IDENTITY(1, min(1, 1)), _GLF_struct_33(1, bvec2(true), uvec2(1u), ivec3(1), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), false))), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), bvec4(true), _GLF_struct_34(ivec2(1))), _GLF_struct_38(_GLF_struct_36(mat4x3(1.0), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), min(clamp(1u, 1u, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base)))))), clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))))), mat3x2(1.0), mat3x2(1.0), mat2x4(1.0), ivec3(1), vec4(1.0)), uvec2(1u), bvec4(true), _GLF_struct_37(mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1088.1376)), bool(false)))), float(_GLF_FUZZED(-749.659)), bool(false))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-48.63) : 1.0)))), 1.0, 1.0, 1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(2.1, -6.6, _GLF_IDENTITY(-3170.1182, mix(float(_GLF_FUZZED(3956.1091)), float(-3170.1182), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 9.4, _GLF_IDENTITY(-4.5, float(mat2x3(_GLF_IDENTITY(-4.5, (true ? -4.5 : _GLF_FUZZED(-1.8))), 0.0, 1.0, 0.0, 1.0, 0.0))), -5.1, 69.63, 3113.1644, -5.9)))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.5))), 0.0, 0.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5237.6174) : 0.0))))))), mat3(mat3(mat3(1.0))))) * mat3(1.0)), _GLF_IDENTITY(true, true && (true)), mat4(1.0), mat2x3(1.0)), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, min((_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0)) : _GLF_FUZZED(-0.5)))), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-61.30) : 1.0)))), mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-61.30) : 1.0))))), float(_GLF_FUZZED(-5.4)), bool(false)))))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 1.0)) / 1.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base + _GLF_struct_replacement_20._f2._f3.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((- -36.20))), bool(false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y : _GLF_FUZZED(5.5)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z, max(GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z, GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z)) + _GLF_struct_replacement_39.subgroup_base, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base))))))), 0u | (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), _GLF_IDENTITY(((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)))), min(((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)))), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base), ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base)) | ((GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + _GLF_struct_replacement_39.subgroup_base))))))))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_20._f2._f3.subgroup_local_id + 1), 0u | ((_GLF_struct_replacement_20._f2._f3.subgroup_local_id + 1))) % _GLF_struct_replacement_6._f2._f4.subgroup_size), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-85.89)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(3.1)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((-68.29 + -3761.9122)), _GLF_FUZZED(-47.99)), bvec2(false, false))).y)), false, false))) ? _GLF_IDENTITY(((_GLF_struct_replacement_20._f2._f3.subgroup_local_id + 1) % _GLF_struct_replacement_6._f2._f4.subgroup_size), _GLF_IDENTITY(~ (~ (((_GLF_struct_replacement_20._f2._f3.subgroup_local_id + 1) % _GLF_struct_replacement_6._f2._f4.subgroup_size))), uint(uvec3(~ (~ (((_GLF_struct_replacement_20._f2._f3.subgroup_local_id + 1) % _GLF_struct_replacement_6._f2._f4.subgroup_size))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(75.51, -7.7)))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(75.51, -7.7)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(75.51, -7.7)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(75.51, -7.7)))).y) / 1.0)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY((2) ^ 0, min((2) ^ 0, (2) ^ 0))), ((_GLF_IDENTITY((2) ^ 0, min((2) ^ 0, (2) ^ 0)))) | (0 | 0)) | (1 ^ 1)))) : _GLF_FUZZED(virtual_gid)), min((true ? atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), clamp(~ (buf[virtual_gid]), ~ (buf[virtual_gid]), ~ (buf[virtual_gid]))))), 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), ((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid))) - 0u)))), clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, (_GLF_IDENTITY((2) ^ 0, min((2) ^ 0, (2) ^ 0))) | (1 ^ 1)))) : _GLF_FUZZED(virtual_gid)), min((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), ((true ? atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) << 0), _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid))) - 0u)))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, (_GLF_IDENTITY((2) ^ 0, min((2) ^ 0, _GLF_IDENTITY((2) ^ 0, 0 + ((2) ^ 0))))) | (1 ^ 1)))) : _GLF_FUZZED(virtual_gid)), min((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) ^ 0)) : _GLF_FUZZED(virtual_gid)), ((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid))) - 0u)))), _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, (_GLF_IDENTITY((2) ^ 0, min((2) ^ 0, (2) ^ 0))) | (1 ^ 1)))) : _GLF_FUZZED(virtual_gid)), min((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY((true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid)), ((_GLF_IDENTITY(true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid), max(true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid), _GLF_IDENTITY(true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid), uint(uvec4(true ? atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) ^ 0)) : _GLF_FUZZED(virtual_gid), (82942u & 0u), 1u, 0u))))))) - 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false)))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))), false, false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log2(vec2(-8.6, -346.551))) : injectionSwitch)).x < injectionSwitch.y)), false, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0, 0.0, 1.0, 1.0, length(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.1))))))), (1.0) * 1.0) : _GLF_FUZZED(_GLF_IDENTITY(55.50, min(55.50, 55.50)))))), float(_GLF_FUZZED(-38.70)), _GLF_IDENTITY(bool(false), false || (bool(false)))))), vec2(1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))), dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.9)), float(0.0), bool(true))), injectionSwitch.x)))), 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 1.0)), 0.0, 0.0, 0.0)))), transpose(transpose(mat3x2(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), length(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(610.404))), 0.0, 1.0, 0.0, 0.0, 0.0)))))))), max(vec2(_GLF_IDENTITY(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(91.09)), float(length(vec3(0.0, 0.0, 0.0))), bool(true)))), max((_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(91.09)), float(length(vec3(0.0, 0.0, 0.0))), bool(true)))), (_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(91.09)), float(length(vec3(0.0, 0.0, 0.0))), bool(true)))))) - 0.0), 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), transpose(transpose(mat3x2(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1))]), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))), (vec2(_GLF_IDENTITY(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0))), 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, cos(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))) / vec2(1.0, 1.0)))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec3(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0, 1.0, 0.0))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(_GLF_IDENTITY(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), _GLF_IDENTITY(min(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)), clamp(_GLF_IDENTITY(min(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)), min(min(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)), min(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)))), min(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)), min(vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0), vec3(max(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)))))))) > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false, ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false, ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false, ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false, ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false)))) || false))), true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), true))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), min(float(vec3(injectionSwitch.y, 1.0, 1.0)), float(vec3(injectionSwitch.y, 1.0, 1.0))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(length(0.0), float(vec2(_GLF_IDENTITY(length(0.0), (true ? length(0.0) : _GLF_FUZZED(-728.877))), 0.0))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
