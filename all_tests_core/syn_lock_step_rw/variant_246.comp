#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 ivec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 uint num_workgroup;
 bvec2 _f2;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 float _f1;
 ivec3 _f2;
 vec2 _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_8 {
 uint _f0;
 float _f1;
 vec2 _f2;
 int _f3;
 uvec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 uint _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 vec3 _f1;
 int _f2;
 int _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat2x3 _f1;
 mat2x3 _f2;
 float _f3;
 bvec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 bool _f1;
 ivec4 _f2;
 mat2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 mat3x4 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat4 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_1 {
 uint subgroup_local_id;
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false, false, false)))))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_1(gl_SubgroupInvocationID, _GLF_struct_0(vec2(1.0), mat2x3(1.0))), _GLF_struct_3(_GLF_struct_2(bvec4(true), mat4(1.0), mat2x3(1.0)), mat2x3(1.0)), _GLF_struct_7(_GLF_struct_4(vec2(1.0), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (true)), ivec4(1), mat2(1.0), mat4x2(1.0)), _GLF_struct_5(1, mat2x3(1.0), mat2x3(1.0), 1.0, bvec3(true), vec2(1.0)), mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_struct_6(ivec2(1), vec3(1.0), _GLF_IDENTITY(1, ~ (~ (1))), 1, ivec2(1))), _GLF_struct_10(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), (mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(-68.91) : _GLF_IDENTITY(1.0, max(1.0, 1.0))))) + 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) - mat4(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.8)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_struct_8(1u, 1.0, vec2(1.0), 1, uvec2(1u), mat4(1.0)), _GLF_struct_9(ivec3(1), 1.0, ivec3(1), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY((false ? -8.5 : -0.1), ((false ? -8.5 : -0.1)) / 1.0))), bool(false)))), uvec4(1u), 1), _GLF_IDENTITY(1u, 0u + _GLF_IDENTITY((1u), max((1u), (1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, false)))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), true, true)))) && true)))))
      return;
    }
   else
    {
    }
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_13(_GLF_struct_12(ivec4(1))), _GLF_struct_14(ivec2(1), uvec4(1u)), _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))));
 for(int _injected_loop_counter = ((1 ^ 0) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          continue;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       return;
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, tan(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))).y))))
  barrier();
 GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-45.76) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, exp(0.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0)))) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, exp(log(1.0)), 1.0, 0.0, 1.0)), (float(mat2x3(injectionSwitch.y, 0.0, exp(log(1.0)), 1.0, 0.0, 1.0))) - 0.0))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec2(144348u, 133470u).yyy) : (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, false)))), (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-23.18))) > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, true))))))))) && true)) || false))), (! (_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(false, (false) || false)))), true && _GLF_IDENTITY((bool((! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(_GLF_IDENTITY((bool((! (_GLF_IDENTITY(false, (false) || false))))), ! (! ((bool((! (_GLF_IDENTITY(false, (false) || false)))))))), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_11._f0.subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u) | (_GLF_IDENTITY(_GLF_struct_replacement_11._f0.subgroup_local_id, (_GLF_struct_replacement_11._f0.subgroup_local_id) * 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(155.679))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((+ -9415.9170) + -6.0))), bool(false))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x = virtual_gid, 0u ^ (GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x = virtual_gid));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((_GLF_IDENTITY(_GLF_struct_replacement_11._f0.subgroup_local_id, 1u * (_GLF_struct_replacement_11._f0.subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 1u, 1u, 0u), min(uvec4(subgroup_size, 1u, 1u, 0u), uvec4(subgroup_size, 1u, 1u, 0u)))))) | 0u), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size), ~ (~ (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(int(ivec3(4, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0))), 0)))), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), ((_GLF_IDENTITY(int(ivec3(4, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0))), 0)))), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))))) + 0) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), _GLF_IDENTITY(min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))), (min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(-84730))), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) << (0 & -63078)))) | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))))))) / 1) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, _GLF_IDENTITY(0, min(0, 0)))), int(ivec3(4, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) << 0), 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))), (false ? _GLF_FUZZED(-76784) : _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))))) << 0)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, _GLF_IDENTITY(0, max(0, 0)), 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) - (0 << _GLF_IDENTITY(int(4), int(4)))), 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730)), min((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, 0), (_GLF_IDENTITY(ivec3(4, 0, 0), min(ivec3(4, 0, 0), ivec3(4, 0, 0)))) << ivec3(0, 0, 0))), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))), (_GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) | 0)) : _GLF_FUZZED(-84730))), _GLF_IDENTITY((0 | 0), 0 ^ (_GLF_IDENTITY((0 | 0), min((0 | 0), (0 | 0)))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(68430))))))), 0, 0)), min(int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) | (ivec3(4, 0, 0)))), int(ivec3(4, 0, 0))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730)) ^ 0))), (0 | 0))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), _GLF_IDENTITY(int(ivec3(4, 0, 0)), 0 ^ (int(ivec3(4, 0, 0))))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 0, 0)), 1 * (int(ivec3(4, 0, 0)))), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(_GLF_IDENTITY(-84730, (-84730) | (-84730))))), (0 | 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) + ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(-84730))), (0 | 0)), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(_GLF_IDENTITY(ivec3(4, 0, 0), (ivec3(4, 0, 0)) + ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(-84730))), (0 | 0))) >> ivec2(0, 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(_GLF_IDENTITY(ivec3(4, 0, 0), (_GLF_IDENTITY(ivec3(4, 0, 0), ivec3(0, 0, 0) ^ (ivec3(4, 0, 0)))) - ivec3(0, 0, 0))), int(ivec3(4, 0, 0))))), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (true))))) ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)))), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))))))))) ^ ivec2(0, 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, max(4, 4)), 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), min(int(4), int(4)))), min(int(_GLF_IDENTITY(int(4), min(int(4), int(4)))), int(_GLF_IDENTITY(int(4), min(int(4), int(4))))))), 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-59067) : _GLF_IDENTITY(4, (4) - 0))), 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(_GLF_IDENTITY(int(ivec3(4, 0, 0)), (int(ivec3(4, 0, 0))) | 0), int(ivec3(4, 0, 0))))) : _GLF_IDENTITY(_GLF_FUZZED(-84730), (_GLF_FUZZED(-84730)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(78865))), 4, 4)), 0, 0))))) : _GLF_FUZZED(-84730))), (_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (~ (int(8))))))))))), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, min(4, 4)), 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) ^ 0), 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), _GLF_IDENTITY(min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))), min(min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(_GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), _GLF_IDENTITY(min(int(ivec3(4, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (0)) + (0)))), int(ivec3(4, 0, 0))), (min(int(ivec3(4, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (0)) + (0)))), int(ivec3(4, 0, 0)))) | (min(int(ivec3(4, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 + (0)) + (0)))), int(ivec3(4, 0, 0))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730)) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))), (0 | 0))))), min(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, _GLF_IDENTITY(0, (0) | (0)), 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, 0), ~ (_GLF_IDENTITY(~ (ivec3(4, 0, 0)), ~ (_GLF_IDENTITY(~ (~ (ivec3(4, 0, 0))), ~ (~ (~ (~ (ivec3(4, 0, 0))))))))))), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(52105) : 0)), 0)))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, _GLF_IDENTITY(0, (0) ^ 0), 0)), int(ivec3(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), 4)), 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), _GLF_IDENTITY(min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-83982) : _GLF_IDENTITY(min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))), (min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0)))) >> 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(_GLF_IDENTITY(ivec3(4, 0, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(4, 0, 0) : _GLF_FUZZED(ivec3(-44458, -81253, 88900))))), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))))), (0 | 0)), _GLF_IDENTITY(clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6)))), 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)))), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))), (true ? _GLF_IDENTITY(clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6)))), 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)))), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))), _GLF_IDENTITY(ivec2(ivec3(clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6)))), 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)))), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))), 1)), (ivec2(ivec3(clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6)))), 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, 0)), int(ivec3(4, 0, 0))))), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), min(int(ivec3(4, 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), 0)))), int(ivec3(4, 0, 0))))) : _GLF_FUZZED(-84730))), (0 | 0))), 1))) - ivec2(0, 0))) : _GLF_FUZZED(ivec2(92430, -45985)))))))) : _GLF_FUZZED(-99825))) : _GLF_FUZZED(87630))))) / 1), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u | (uint(1))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(ivec3(_GLF_IDENTITY(4, ~ (~ (4))), 0, 0))), 1, 1, 1)))) >> 0));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[GLF_merged4_0_1_11_1_1_14_2_1_12_3_1_14virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x], read, _GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(int(4), int(4)))), 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(vec2(-9.8, -2137.3170))))).y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
  }
}
