#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), clamp(vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), vec2(mat3(injectionSwitch, 1.0, log(1.0), 1.0, 1.0, abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(0.7), clamp(_GLF_FUZZED(0.7), _GLF_FUZZED(0.7), _GLF_FUZZED(0.7))) : _GLF_FUZZED(8425.4843)))), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false)), ! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true)), (false ? _GLF_FUZZED(sinh(_GLF_IDENTITY(-8.2, float(mat3x2(_GLF_IDENTITY(-8.2, mix(float(_GLF_IDENTITY(-8.2, (-8.2) / 1.0)), float(_GLF_FUZZED(129.212)), bool(false))), 0.0, abs(0.0), 1.0, log(1.0), 0.0))))) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true)), (false ? _GLF_FUZZED(sinh(-8.2)) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x), bool(true)), mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), false)))))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))))), float(_GLF_FUZZED(8255.9926)), bool(false))))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)), (true ? float(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)) : _GLF_FUZZED(7318.7033))), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_FUZZED(5965.0943)), vec2(_GLF_FUZZED(9.1), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)))))).x, mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), true && (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.9)), clamp(float(_GLF_FUZZED(-7.9)), float(_GLF_FUZZED(-7.9)), float(_GLF_FUZZED(-7.9)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))) || false, ((_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-7.9, float(mat2(-7.9, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) && true)) && true)), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), true && (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.9)), clamp(float(_GLF_FUZZED(-7.9)), float(_GLF_FUZZED(-7.9)), float(_GLF_FUZZED(-7.9)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))) || false) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) || false))))))))) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, ((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.9)), max(float(_GLF_FUZZED(-7.9)), float(_GLF_FUZZED(-7.9)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.9), clamp(_GLF_FUZZED(-7.9), _GLF_FUZZED(-7.9), _GLF_FUZZED(-7.9)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false) && true)) || false), false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), ! (! (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false))))), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), ! (! (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), ! (! (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false))))), false, false, false)), true, true, false))))))), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), ! (! (((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))))) || false, false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false)))))), (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false), true && (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) && true))))) || false, false)), (bool(bvec2((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, false))) || false))))))) || false))))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))))) || false)), (bool(bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)), clamp(_GLF_IDENTITY((float(injectionSwitch.x)), clamp((float(injectionSwitch.x)), (float(injectionSwitch.x)), (float(injectionSwitch.x)))), (float(injectionSwitch.x)), (float(injectionSwitch.x)))) / exp(0.0)), bool(true))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (true))))))) > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), bool(bvec2(! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false)))))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.9)), max(float(_GLF_FUZZED(-7.9)), float(_GLF_FUZZED(-7.9)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))) || false, ((_GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))) || false) && true)))) || false))) || false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) || false, ! (! (_GLF_IDENTITY((! (false)) || false, true && ((! (false)) || false)))))))), _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false)))))), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), ! (! (! (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, abs(0.0)), (mat3x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, abs(0.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), true), true))), bvec2(bvec4(bvec2(! (_GLF_DEAD(false)), true), false, _GLF_IDENTITY(true, ! (! (true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 5.1))), bool(false))), 0.0, 0.0, 0.0, 1.0))), injectionSwitch)).x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), (bool(bvec4(! (false), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.5)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0)), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))) > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true), false)))), (bool(_GLF_DEAD(false))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))), (false) || false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(92229u))), float(injectionSwitch.y), bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)))))) && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | _GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u + (_GLF_FUZZED(workgroup_id))) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u)))), 0u + (_GLF_IDENTITY((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u))), (false ? _GLF_FUZZED(188248u) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u)))))))), ((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))), (false ? _GLF_FUZZED(subgroup_size) : uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u)))), (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))) << 0u), 0u ^ (_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u ^ (8u))))))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)))))) >> 0u))), _GLF_IDENTITY(((workgroup_size * workgroup_id) | _GLF_IDENTITY((0u ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(true ? 8u : _GLF_FUZZED(subgroup_local_id), (true ? 8u : _GLF_FUZZED(subgroup_local_id)) | (true ? 8u : _GLF_FUZZED(subgroup_local_id)))))), uint(8u)))), ((0u ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(subgroup_local_id)))), uint(8u))))) | (1u ^ 1u))) ^ 0u, ~ (~ (((workgroup_size * workgroup_id) | _GLF_IDENTITY((0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(subgroup_local_id)))), (uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(subgroup_local_id))))) / 1u), uint(8u)))), ((0u ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(subgroup_local_id)))), uint(8u))))) | (1u ^ 1u))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | (_GLF_IDENTITY(0u ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (_GLF_IDENTITY(true, true && (true)) ? 0u ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) : _GLF_FUZZED(subgroup_id)))), ((workgroup_size * workgroup_id) | (0u ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), (true ? (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) : _GLF_FUZZED(_GLF_IDENTITY(packUnorm4x8(vec4(-12.48, -24.43, 66.28, -2.6)), ~ (~ (packUnorm4x8(vec4(-12.48, -24.43, 66.28, -2.6)))))))))) ^ 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED((workgroup_id * subgroup_local_id)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) - 0u), (workgroup_size * workgroup_id) ^ 0u), workgroup_size * workgroup_id))) | _GLF_IDENTITY((0u ^ (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(8u, (8u) / 1u))))))), (0u | 0u) | ((0u ^ (0u >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(8u, (8u) / 1u))))))))), ((workgroup_size * workgroup_id) | (0u ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | _GLF_IDENTITY((uint(8u)), ((uint(_GLF_IDENTITY(8u, min(8u, 8u))))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) - 0u))))), (false ? _GLF_FUZZED(133915u) : _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), max(uint(8u), uint(8u))), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))), clamp((0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))), (0u >> _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), 0u | (uint(8u)))))), min(uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), 0u | (uint(8u)))))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), 0u | (uint(8u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | (8u))), 0u | (uint(8u)))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), 0u ^ (_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))), 0u | (uint(8u)))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), max(_GLF_IDENTITY(uint(8u), 0u | (uint(8u))), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))), uint(uint(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), 0u | (uint(8u)))))))))))))))))) ^ 0u)) : _GLF_FUZZED(subgroup_local_id)))) / 1u);
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(0u, (0u) << 0u), 0u)))))) | (subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6399.4687)))) + 0.0), 0.0)), 1.0, 1.0), (true ? mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-676.340, -2776.7402, -5908.0838)))), vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 1.0, 1.0) : _GLF_FUZZED((- mat2x3(-708.047, 3031.1113, 6.9, 384.653, 671.430, 1.1)))))), (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6399.4687)))) + 0.0), 0.0)), 1.0, 1.0), (true ? mat2x3(injectionSwitch, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-676.340, -2776.7402, -5908.0838)))), vec3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 1.0, 1.0) : _GLF_FUZZED((- mat2x3(-708.047, 3031.1113, 6.9, 384.653, 671.430, 1.1))))))) + abs(vec2(0.0, 0.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))), _GLF_IDENTITY((1u & 1u) * (subgroup_local_id + 1), (_GLF_IDENTITY((1u & 1u) * (subgroup_local_id + 1), (true ? (1u & 1u) * (subgroup_local_id + 1) : _GLF_FUZZED(199212u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) % subgroup_size))), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), (false ? _GLF_FUZZED(uvec4(workgroup_size, uvec3(101485u, 180027u, 163725u))[0]) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u))))), (0u ^ 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * (1u ^ 0u)))) % subgroup_size, uint(uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)))) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u))))), (0u ^ 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2(_GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))) % subgroup_size, (0u ^ 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))) - 0u))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id)), (_GLF_IDENTITY(clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id)), (clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))) >> 0u)) | (clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))))))) + 0u), 1u, 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, (0u ^ 1u)))), max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec2(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))), (0u ^ 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), min(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), subgroup_local_id)) + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))))))), (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))))))))) | (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1) : _GLF_FUZZED(workgroup_size))) % subgroup_size, (0u ^ 1u)), (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u))) | (uvec2((subgroup_local_id + 1) % subgroup_size, (0u ^ 1u)))))))))))))) + 0u), 1u, 0u))))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))) || false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), 4, 64, 2);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY(4, int(ivec3(4, 1, _GLF_IDENTITY(0, (0) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), 0 | (int(int(64)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64))))) | 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), 0 | (int(int(64)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64))))) | 0))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), 0 | (int(int(64)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64))))) | 0)))))) - 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), 0 | (int(int(64)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64))))) | 0))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(int(64)), 0 | (int(int(64)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64)))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(64, min(64, 64)))), 0 | (int(int(64))))) | 0)))))) - 0))) ^ 0))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), max((4), (4)))) | ((4))) + 0) : _GLF_FUZZED(-57347))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true, false, true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))), false, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-532.501)), bool(false))) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(809.445), _GLF_FUZZED(-598.433)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)), true)), (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) < injectionSwitch.y), false, false, false)))), true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, mix(float(_GLF_FUZZED(59.83)), float((injectionSwitch.x) + 0.0), bool(true)))) < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))), (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), false)), false))))))), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))))))) && true)))), true)), (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && _GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((false))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((false))), ! (! (true && _GLF_IDENTITY((false), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || ((false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0)), mat2(1.0) * (vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, log(1.0), 1.0, 1.0))))).y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4(1.1, -280.937, -2.4, 9940.8307, -8.7, -58.39, 8.0, 9337.5822, 6.7, -15.18, 9727.3799, 1284.7220, -9796.6407, 59.94, -98.97, -0.8))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0)))))), 0.0)), 0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0)))))), 0.0)), 0.0)), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0)))))), 0.0)), 0.0)))))), mat3(1.0) * (transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0)))))), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0)), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(float(mat4(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (true ? dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(96.06)))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0), 0.0, 0.0)), 0.0 + (float(mat4(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), (true ? dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(96.06)))), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0), 0.0, 0.0)))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 1.0, 0.0)))))), 0.0)), 0.0)))))))))))).x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))))), true))) && true))))) && true)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true, ! (! ((bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_IDENTITY(false, (false) && true) || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false), true, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false), true, true, true))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false), true, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false), true, true, true))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false), true, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) || false), true, true, true))) && true)) || false)))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), true && _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || _GLF_IDENTITY(((false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), true && (((false)))), bool(bvec2(_GLF_IDENTITY(((false)), true && (((false)))), false))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-31.00)), float(injectionSwitch.y), bool(true))))), false, true, false))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, true, false)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), ! (! ((true))))) && true), true, false, false)), (bool(bvec4(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true))))))), false, false))) || false)))))), ((bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-31.00)), float(injectionSwitch.y), bool(true))))), false, true, false))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), false, true, false)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((true), (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), ! (! ((true))))) && true), true, false, false)), (bool(bvec4(_GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (! ((true))))) && true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true))))))), false, false))) || false))))))) && true) && true))))) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(true, false, true)), false || (bool(bvec3(true, false, true))))), false || (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), false || (bool(bvec3(true, false, true))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(true, false, true)), false || (bool(bvec3(true, false, true))))), false || (! (_GLF_IDENTITY(bool(bvec3(true, false, true)), false || (bool(bvec3(true, false, true))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bvec3(true, false, true))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) >> 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
