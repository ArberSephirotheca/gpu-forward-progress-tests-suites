#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - length(tan(vec2(0.0, 0.0)))))) && (false))))
                  barrier();
                }
               barrier();
              }
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), bool(bvec4(bool(bool(_GLF_IDENTITY(true, true && (true)))), false, true, true)))), (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))))
          barrier();
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, _GLF_IDENTITY(false, ! (! (false))))))))), false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), max((0), (0)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), max((0), (0)))), (~ (_GLF_IDENTITY((0), max((0), (0))))) >> 0)) / 1))) | (0))), 0 | (~ (_GLF_IDENTITY(0, (0) | (0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-512.386), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-512.386), clamp(_GLF_FUZZED(-512.386), _GLF_FUZZED(-512.386), _GLF_FUZZED(-512.386))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0))), 0.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-512.386), clamp(_GLF_FUZZED(-512.386), _GLF_FUZZED(-512.386), _GLF_FUZZED(-512.386))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0))), 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-512.386), clamp(_GLF_FUZZED(-512.386), _GLF_FUZZED(-512.386), _GLF_FUZZED(-512.386))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0)), dot(vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0), vec2(1.0, 1.0))), 0.0, 0.0))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y))))), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.6) : injectionSwitch.y))))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (true) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || (_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, false))))))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))), false), true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (true) && true)))), false), true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (true) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (true) && true)))), false), false, false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || _GLF_IDENTITY((_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, false)))), bool(bvec4((_GLF_IDENTITY((true) && true, bool(bvec2((true) && true, false)))), true, false, true)))))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true) && true, true && (_GLF_IDENTITY((true), ((true)) && true) && true)))))), false), _GLF_IDENTITY(true, true && (true)))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), true && (! (_GLF_IDENTITY(true, (true) && true)))), false), true)))))))) || false))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-73.02, (-73.02) - 0.0))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(95.25))))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-44.68)), _GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) / 1.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false))), true)))));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, ! (! (((false)) || false))))) || false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ((false) || false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, true)))) || false) && true))), false || (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))), true && (true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))))))))), (bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))), false || (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true) || false) && true, ! (! ((_GLF_IDENTITY((false), ((false)) && true) || false) && true)))))), true && (true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, ! (! (_GLF_IDENTITY((false), ((false)) && true) || false)))) && true)))))))))) && true))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))), (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) || false)))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false)))))), (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), true)))), (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), true))))) && true)))), true))))))))) && true, false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true && (((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.3)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-92737, -7216))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-59.73, (-59.73) * 1.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-59.73)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y))))))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), bool(bvec3(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (false), bool(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false))))), false))), _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), true))))), false, false))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false))), (false) || false)) && true))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), ! (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), true && (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_IDENTITY(false, (false) && true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) && true), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! (! ((false) || false)), ! (! (! (! ((false) || false))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true)))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))))), bool(bvec3(! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))))), false, false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))), false || (((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, true, true)))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (false), false), false)))))), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), (bool(bvec3((false), false, false))) || false))), false))), _GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || _GLF_IDENTITY(false, false || (false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))))) && true)) || false)))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, ! (! (((false)) || false))))) || false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ((false) || false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, true)))) || false) && true))), false || (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))), true && (true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))))))))), (bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true))), false || (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true) || false) && true, ! (! ((_GLF_IDENTITY((false), ((false)) && true) || false) && true)))))), true && (true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, ! (! (_GLF_IDENTITY((false), ((false)) && true) || false)))) && true)))))))))) && true))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))), (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) || false)))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false)))))), (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), true)))), (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), true))))) && true)))), true))))))))) && true, false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true && (((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.3)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-92737, -7216))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-59.73, (-59.73) * 1.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-59.73)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y))))))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), bool(bvec3(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (false), bool(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false))))), false))), _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), true))))), false, false))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false))), (false) || false)) && true))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), ! (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), true && (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_IDENTITY(false, (false) && true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) && true), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! (! ((false) || false)), ! (! (! (! ((false) || false))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true)))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true))))), ! (_GLF_IDENTITY(! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))))), bool(bvec3(! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))))), false, false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))), false || (((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, true, true)))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (false), false), false)))))), false))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), (bool(bvec3((false), false, false))) || false))), false))), _GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || _GLF_IDENTITY(false, false || (false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))))) && true)) || false)))) && true)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false))))))) || false, ! (! (((false)) || false))))) || false))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), false || (! ((false) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false))))))) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec2(_GLF_IDENTITY((false), ((false)) && true), true))) || false) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), true, false)))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, true)))) || false), ((_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, true)))) || false)) && true) && true))), false || (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), ((false)) && true) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), true && (true && (! _GLF_IDENTITY((_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true)), bool(bvec3((_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), ((false)) && true) || false) && true)), true, true)))))))))), (bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)))), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false)) || false) && true))), false || (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true) || false) && true, ! (! ((_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) && true) || false) && true)))))), true && (true && (! (_GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), (! (((false)) && true)) || false)))) || false), true && ((_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), (! (((false)) && true)) || false)))) || false)))))) && true)))))))))) && true))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))) && true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))))), ! (! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), false || (bool((false)))))))))))))) && true)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.3)), vec2(_GLF_FUZZED(7.9), (injectionSwitch)[1]), bvec2(false, true))))).y)))), true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))), (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), (false) || false))))) && true), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)))), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)), false, false)), false)))) || false)))) && (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true)), false)))))))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) || false)))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false)))))), (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))))))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (false))), true)))), (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true))))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true)))))))) || false))))), true))))) && true)))), true))))))))) && true, false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), (! (_GLF_IDENTITY((false) || false, ((_GLF_IDENTITY(false, false || (false))) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true && (((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.3)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-92737, -7216))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-59.73, (-59.73) * 1.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-59.73)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y))))))))))), true && (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true && (((false) || false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-5.3), clamp(_GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3), _GLF_FUZZED(-5.3)))), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-92737, -7216))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)))), false || _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(_GLF_IDENTITY(-59.73, (-59.73) * 1.0))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y), bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.1), _GLF_FUZZED(-59.73)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-3684.0097)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))).y))))))))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), true, true))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), _GLF_IDENTITY(true, true && (true)) && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), false))), (false) || false))), _GLF_IDENTITY(false, ! (! (false))) || (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), false))), (false) || false))))))) && _GLF_IDENTITY(true, (true) || false)))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), false))), (_GLF_IDENTITY(false, (false) && true)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), ! (! (false || _GLF_IDENTITY((false), ! (! ((false)))))))), bool(bvec3(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), ! (! (false || _GLF_IDENTITY((false), ! (! ((false)))))))), bool(bvec3(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))).y)), false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) || (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (false), ! (! (false || (false))))), (bool(_GLF_IDENTITY(false || (false), ! (! (false || (false)))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false))))), false))), _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), true))))), false, false))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), false))), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) || false, true && ((false) || false)), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false) || false, true && ((false) || false)), true, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false))))), false))), (false) || false)) && true))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, (false) && true)))))) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), true && (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true)))), true && (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false)))))), (false) || false))))) && true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))) || _GLF_IDENTITY(false, (false) && true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, ! (! (false)))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (false))))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true)))))), false))), (false) || false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true) && true), true, false), true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), false))), (false) || false))))) && true))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))) || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), true, true, true)))), _GLF_IDENTITY((false), ((false)) || false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))) && true), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) && true)))) && true)), (false) || false))))) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! (! ((false) || false)), ! (! (! (! ((false) || false))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false)))))))), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bool(false || (false)), _GLF_IDENTITY(bool(bvec4(bool(false || (false)), false, true, false)), bool(bvec2(bool(bvec4(bool(false || (false)), false, true, false)), true)))))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true)))))), true)))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))))) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), false)), (bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), false))) || false)), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), false))), (false) || false))))) && true))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true)))), bool(bvec2((bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true)))), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))), false))) && true)), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec2(bvec2(bool(bvec2(false, true)), true)))))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true))))), ! (! ((! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) && true)))))))))), ! (! (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))))), bool(bvec4(! (_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), (false || (false)) || false))))), false, false, true)))))), false))), (false) || false))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) || false)) && true))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) || false)) && true))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))))) || false)) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (false), ! (! (true && (false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))))), bool(bvec2(bool(bool(bool(bvec3(false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY((false), ((false)) && true) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))), bool(bvec3(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))), false, true))))), bool(bvec3(! (! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))), (false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || false))))) && true)))))), false, false))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (false) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))), false || (((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (false) || false))))) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, true, true)))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (false), false), false)))))), false))), (false) || false))))) && true), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))) || (false)), false)))))))), _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, true, true)))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false)))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec2(false || (false), false), bvec2(bvec3(bvec2(false || (false), false), false)))))), false))), (false) || false))))) && true), true))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), (bool(bvec3((false), false, false))) || false))), false))), _GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), (false) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), true))))), (false) || _GLF_IDENTITY(false, false || (false))))))) && true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (false) && true)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-678.984)), vec2(_GLF_FUZZED(-4739.3375), (injectionSwitch)[1]), bvec2(false, true))).y))), (false) || false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))), true))))))) && true)) || false)))) && true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | 0), 0))], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-34.67), min(_GLF_IDENTITY(_GLF_FUZZED(-34.67), (true ? _GLF_FUZZED(-34.67) : _GLF_FUZZED(6543.4456))), _GLF_FUZZED(-34.67))), _GLF_FUZZED(-1159.7173)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3369.3751)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-48.76, clamp(_GLF_IDENTITY(-48.76, min(_GLF_IDENTITY(-48.76, min(-48.76, -48.76)), -48.76)), -48.76, -48.76))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-48.76, clamp(_GLF_IDENTITY(-48.76, min(_GLF_IDENTITY(-48.76, min(-48.76, -48.76)), -48.76)), -48.76, -48.76))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) / 1.0)), injectionSwitch.y)))), false))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-34.67), (_GLF_FUZZED(-34.67)) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(tan(0.0), 1.0)) : _GLF_FUZZED(-29.77))))), _GLF_IDENTITY(_GLF_FUZZED(-1159.7173), min(_GLF_FUZZED(-1159.7173), _GLF_FUZZED(-1159.7173)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-48.76) : injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false)))) : _GLF_FUZZED(vec2(77.26, -78.58)))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-235.436), clamp(_GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(-235.436), clamp(_GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436))), _GLF_FUZZED(-235.436)), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(-235.436), clamp(_GLF_IDENTITY(_GLF_FUZZED(-235.436), clamp(_GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436), _GLF_IDENTITY(_GLF_FUZZED(-235.436), min(_GLF_IDENTITY(_GLF_FUZZED(-235.436), (_GLF_FUZZED(-235.436)) - 0.0), _GLF_FUZZED(-235.436))))), _GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436))), _GLF_FUZZED(-235.436)), (true ? min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-235.436), clamp(_GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436))), clamp(_GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436))), _GLF_IDENTITY(_GLF_FUZZED(-235.436), (false ? _GLF_FUZZED(-3320.8506) : _GLF_IDENTITY(_GLF_FUZZED(-235.436), (_GLF_FUZZED(-235.436)) + 0.0)))) : _GLF_FUZZED(6.1))), min(_GLF_IDENTITY(_GLF_FUZZED(-235.436), clamp(_GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436), _GLF_FUZZED(-235.436))), _GLF_FUZZED(-235.436))))), _GLF_FUZZED(78.96)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0))))), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0)))))) * mat2(1.0)))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))) * (1))], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0))) + ((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1), min(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1), min(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))))))]))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0))))), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))) * mat2(1.0)))[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))))))], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))) / 1.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))), mix(vec2((vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))) / 1.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))[0], _GLF_FUZZED(-8.6)), vec2(_GLF_FUZZED(-9467.3866), (vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))) / 1.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))[1]), bvec2(false, true))), vec2(0.0, 1.0))) + ((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), min(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), max(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), clamp((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | ((1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 | (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6))), min(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), int(6)))))) | (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * (1))]))))), clamp(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0))))), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0)))))) * mat2(1.0)))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (0 & 31107) ^ _GLF_IDENTITY((int(6)), ~ (~ ((int(6)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, (6) / 1), 6, 6))), int(6))) * (1))], (false ? _GLF_FUZZED(uintBitsToFloat(num_workgroup)) : (injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (0 & 31107) ^ (int(6))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, (6) / 1), 6, 6))), int(6)), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(_GLF_IDENTITY(6, (6) / 1), 6, 6))), int(6))) * 1)) * (1))])), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), (dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0))) * 1.0)))) * 1.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0)), (dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))))))), vec2(0.0, 1.0))) * 1.0)))) * 1.0))) * 1.0) + ((injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))]))))), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED((-7.4 / 1269.0005)), _GLF_FUZZED(-1.6)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), 0.0, 1.0, 0.0, 1.0))))), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0)))))) * mat2(1.0)))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0))) + ((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, ((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), ((1)) ^ 0), (1), (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1)), max(_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) + 0)), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1)), _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : int(6))))) >> _GLF_IDENTITY(int(6), int(6))) * (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), min(int(ivec2(1, 0)), int(ivec2(1, 0)))))) << (0 >> _GLF_IDENTITY(int(2), int(2))))))))) - 0)]))))), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, 1.0), mat2x3(mat4(mat2x3((injectionSwitch), _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (0.0) * 1.0), cos(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) / 1.0)))))), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2x3(mat4(mat2x3((injectionSwitch), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), 0.0, 1.0)))))) * mat2(1.0)))[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 + (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 + (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 + (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), (1 ^ 0) * (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0 + (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, 6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))) * (1))], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0)))), vec2(0.0, 1.0))) + _GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))]), max(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (1))]), ((injectionSwitch)[_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 | (_GLF_IDENTITY(6, (6) | 0)))))) * (1))])))))))))) - vec2(0.0, 0.0)), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat4x2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))[1], float(mat4x2((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-82.36)), bool(false))), 0.0, 1.0))), (injectionSwitch)[1]))), float(_GLF_FUZZED(1.3)), bool(false))), clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), 0 | ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) - 0)))) >> _GLF_IDENTITY(int(6), int(6))))) * (1))], mix(float((injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), 0 | ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), 1 * (_GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6)))), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))) * (1))]), float(_GLF_FUZZED(9.4)), bool(false)))))))), bvec2(true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0)))), clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) != ((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))));
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(197570u))), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-148.483) : injectionSwitch.y))), bool(true)))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   barrier();
                  }
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(1), int(1)), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(1), int(1))) | (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))))))))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(549.424))), injectionSwitch.x)) > injectionSwitch.y)))))))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), ! (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) ^ 0))) >> _GLF_IDENTITY(int(7), int(7))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED((atomicAdd(_injected_loop_counter, -16133) << _injected_loop_counter)) : int(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-82.81), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-73863))), bvec2(true, false))).y)), true, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))) && true))))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
                    barrier();
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(3), int(3))) + (_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) ^ 0))))))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6429.1860)), bvec2(true, false))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))), true && (! ((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))))))))), (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))), true && (! ((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))))))))), (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))), true && (! ((_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true))))))))))))), (injectionSwitch.x < injectionSwitch.y))))))), false)))), true, true)))))))
                      barrier();
                    }
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
                      {
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))));
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(atomicExchange(workgroup_id, 103136u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id))))) + 0u);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | 0u) + subgroup_local_id) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 1u, (1u ^ 0u)), uvec3(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), (uvec3(1u, 0u, 1u)) | (uvec3(1u, 0u, 1u))))), 1u)), (1u ^ 0u)))))))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 1u, (1u ^ 0u)), uvec3(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), (uvec3(1u, 0u, 1u)) | (uvec3(1u, 0u, 1u))))), 1u)), (1u ^ 0u)))))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 1u, (1u ^ 0u)), uvec3(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), (uvec3(1u, 0u, 1u)) | (uvec3(1u, 0u, 1u))))), 1u)), (1u ^ 0u)))))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))) * subgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 1u, (1u ^ 0u)), uvec3(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), (uvec3(1u, 0u, 1u)) | (uvec3(1u, 0u, 1u))))), 1u)), (1u ^ 0u)))))))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), subgroup_id)), subgroup_id)))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size) - 0u), 1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), min(uint(uint(1u)), uint(uint(1u)))))))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (subgroup_id)), (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))))))))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) * 1u), (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))))), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | (subgroup_id)), (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))))))))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u, (1u ^ 0u))), min(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 0u)))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) ^ 0u)), 1u, (1u ^ 0u))), uvec3(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) * 1u), (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)), 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))))), subgroup_size, subgroup_size)), 1u, (1u ^ 0u))))))))))) ^ uvec3(0u, 0u, 0u)), max(uvec3(uvec3(uvec3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_id)))) | (subgroup_id)) * subgroup_size, ~ (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size), ~ (~ ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size)))))), 1u, _GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY(uint(uvec3((1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (true ? uint(uvec3((1u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) : _GLF_FUZZED(workgroup_base))))))), uvec3(uvec3(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 1u, (1u ^ 0u))))))))))) | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id))) | (subgroup_id)) * subgroup_size, 1u, (1u ^ 0u)), ~ (~ (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id))) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u), 1u)), ~ (~ (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ 0u), 1u))))), (1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) | (0u), ~ (~ ((_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)))))))))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, 1u, (1u ^ 0u)), uvec3(0u, 0u, 0u) + (uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, 1u, (1u ^ 0u)))), ~ (~ (_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) | (subgroup_id)), uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) | (subgroup_id)), 1u, 1u, 0u))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) | (subgroup_id)), uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) | (subgroup_id)), 1u, 1u, 0u))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) | (subgroup_id)), uint(uvec4(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) << 0u) | (subgroup_id)), 1u, 1u, 0u))), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size) / 1u)))), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY(uint(uint((1u ^ 0u))), ~ (~ (uint(uint((1u ^ _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))))))))), min(_GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY(uint(uint((1u ^ 0u))), ~ (~ (uint(uint((1u ^ _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY(uint(uint((1u ^ 0u))), ~ (~ (uint(uint((1u ^ _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u)))))))))), (_GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY(uint(uint((1u ^ 0u))), ~ (~ (uint(uint((1u ^ _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))))))))))) | 0u)))), uvec3(0u, 0u, 0u) + (uvec3(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size, 1u, (1u ^ 0u)))))))))))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, (0 & ivec3(36961, 45899, -60483).s) ^ (1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), min((0), (0))), ~ (~ ((0)))) | 0)) / 1));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, sqrt(1.0)), transpose(transpose(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0))))), sqrt(1.0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))))));
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) ^ 0) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))))) * 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(2)) - 0))), int(2)))); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false))))))))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(ivec2(-31165, -48803).t) : int(6)))) | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), ~ (~ (ivec3(1, 0, 0)))))), (1) - 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, false)))))))))))))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
          {
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)))), bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)))), 0.0, exp(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - tan(vec2(0.0, 0.0))).y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - tan(vec2(0.0, 0.0))).y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5617.0698) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - tan(vec2(0.0, 0.0))).y, injectionSwitch.y))))), float(_GLF_FUZZED(-9.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y))))), true))))))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1)))) >> _GLF_IDENTITY((0 | 0), 0 | ((0 | 0)))))
              {
               barrier();
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.7)), float(injectionSwitch.y), bool(true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.1))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-158.297)), bool(false)))))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(14.87) : injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.1)), bool(false))))), 0.0)))))))))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(130.097)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, exp(0.0)), vec3(1.0, 1.0, 0.0)))))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) && true), false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.3)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))), false, false))))))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)))), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false, (((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false, ! (! (((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false))))), false || (bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false, ! (! (((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false)))))))), _GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false), false || (_GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false), ((((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(_GLF_DEAD(false), true, false))), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))), false))), false || (bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && true))), bool(bvec3(_GLF_DEAD(false), true, false))), false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(_GLF_DEAD(false), true, false))), false))), false || (bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), bool(bvec3(_GLF_DEAD(false), true, false))), false)))))), true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-71.22) : max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) / 1.0), bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) / 1.0)), bool(bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0 + (injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true)))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
}
