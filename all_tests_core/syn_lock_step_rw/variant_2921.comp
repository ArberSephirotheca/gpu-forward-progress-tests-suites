#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 barrier();
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 0, 1, (0 << _GLF_IDENTITY(int(4), int(4)))))) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)))) || false) || false)))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), ~ (~ (int(6))))))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(6087.8868)), vec2(_GLF_FUZZED(-8943.1788), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))[1]), bvec2(false, true)))) / vec2(1.0, 1.0))).y))))
                  {
                   do
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) || false))
  {
   for(int _injected_loop_counter = (0 | (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) ^ (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(min(0u, 0u), 0u | (_GLF_IDENTITY(min(0u, 0u), (true ? min(0u, 0u) : _GLF_FUZZED(106000u))))), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uint(uvec4(_GLF_IDENTITY(min(0u, 0u), 0u | (_GLF_IDENTITY(min(0u, 0u), (true ? min(0u, 0u) : _GLF_FUZZED(106000u))))), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4(_GLF_IDENTITY(min(0u, 0u), 0u | (_GLF_IDENTITY(min(0u, 0u), (true ? min(0u, 0u) : _GLF_FUZZED(106000u))))), (1u ^ 1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), min(min(0u, 0u), min(0u, 0u))))) ^ 0u, ((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u) | ((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (1u) | (1u)), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | _GLF_IDENTITY(((1u ^ 0u)), clamp(((1u ^ 0u)), ((1u ^ 0u)), ((1u ^ 0u)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? _GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), min((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))) / 1u))) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u))))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), uint(uint(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)))))), 0u, 1u, 0u))))), (_GLF_IDENTITY((1u ^ 0u), (true ? (1u ^ 0u) : _GLF_FUZZED(subgroup_size)))) | ((1u ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), clamp((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), ((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))) >> 0u))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))), ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u)))) | ((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | 0u), 0u))))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, min((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))) | ((1u ^ 0u)))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (0u | 0u) | (1u)), 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, min((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec3(workgroup_size, 1u, 0u), min(uvec3(workgroup_size, 1u, 0u), uvec3(workgroup_size, 1u, 0u)))))))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)), max((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)), _GLF_IDENTITY((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)), ~ (~ ((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)))))))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec2(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, (1u | 0u)), ~ (~ (uvec2(0u, (1u | 0u)))))))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(0u, max(0u, 0u)), 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u, 1u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u, 1u, 0u))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u, 1u, 0u))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), uint(uvec4(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), 0u, 1u, 0u)))))) - 0u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(clamp(-5.6, -51.14, -6.1)))), injectionSwitch.y))))))))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) - 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))), ((uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) - 0u) * (min(0u, 0u))))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)))) - 0u))), ((1u ^ 0u)) | ((1u ^ 0u)))), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), uint(uint((_GLF_IDENTITY(0u, min(0u, 0u)))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))) : _GLF_FUZZED(num_workgroup))), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u, 0u ^ ((_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(workgroup_size))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))))))) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, max(1u, 1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, max(1u, 1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, max(1u, 1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, max(1u, 1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, max(1u, 1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u))))))) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, min(1u, 1u))))))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / (1u & 1u)), 0u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), _GLF_IDENTITY((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)), 0u ^ ((true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))))) * 1u)), 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))))), ((1u ^ 0u)) | ((1u ^ 0u)))) + subgroup_local_id) | 0u)) - 0u, (true ? (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u)))))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, max(1u, 1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) ^ 0u), 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (_GLF_IDENTITY(1u, (1u) | (1u)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))), ((1u ^ 0u)) | ((1u ^ 0u)))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / (1u & 1u)), 0u))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)))), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u | (0u)), 0u)))), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), _GLF_IDENTITY(0u ^ (min(0u, 0u)), (0u ^ (min(0u, 0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (45084u & 0u))) | (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), uint(uint(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)))))))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u))), ~ (~ ((_GLF_IDENTITY(0u, min(0u, 0u)))))))) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id)))) >> 0u), 0u, 1u, 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u ^ (min(0u, 0u))))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))) | (uint(uvec4(_GLF_IDENTITY((1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)), (true ? (1u ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u)) : _GLF_FUZZED(subgroup_id))), 0u, 1u, 0u))))))), ((1u ^ 0u)) | ((1u ^ 0u)))) + subgroup_local_id) | 0u)) - 0u : _GLF_FUZZED(subgroup_id))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 & (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 do
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
