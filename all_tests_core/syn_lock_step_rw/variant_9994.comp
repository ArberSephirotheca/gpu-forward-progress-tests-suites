#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, abs(1.0), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-859.212)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))), injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))), (bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))) && true))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep((vec2(-153.023, 215.564) + 76.43), injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, exp(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 0.0))), abs(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)), (true ? mat4x2(injectionSwitch, 1.0, exp(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), abs(1.0), 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(5.3, -7698.2361, 3841.2444, -9.4, 7877.2305, 5.4, 0.4, -56.35)))))).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(6868.2013) : injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3x2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])), vec2(1.0, 1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])))), exp(0.0), 0.0, 0.0, 1.0))) - vec2(0.0, 0.0))))))))).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0) : _GLF_FUZZED(-35409)))], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))), true && (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))), bool(bool(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))))))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[_GLF_IDENTITY(0, (0) << 0)], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9556.3848)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch))[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))).y))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0))))[1])))))).y, (false ? _GLF_FUZZED(-1768.2735) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) / vec3(1.0, 1.0, 1.0))))[1])))))).y)))))), false || (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, log(1.0), log(1.0), 0.0, 1.0, abs(length(vec3(0.0, 0.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), clamp(vec3(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec3(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec3(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(exp(0.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))))), min(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0)))) / vec2(1.0, 1.0))[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-33121) : 0))], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5773.9556))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(46.65, max(46.65, 46.65))))) : _GLF_FUZZED(normalize(-4234.4640)))), mix(float(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(_GLF_IDENTITY(46.65, max(_GLF_IDENTITY(46.65, min(_GLF_IDENTITY(46.65, (false ? _GLF_FUZZED(5.6) : 46.65)), 46.65)), 46.65))))) : _GLF_FUZZED(normalize(-4234.4640))))), float(_GLF_FUZZED(8.5)), bool(false))), injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))).y)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(1.4, 6.1, 4.9, -76.43)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.0) : 0.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0), (mat4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)) + mat4(_GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))))), 1.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0), (true ? mat2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2(22.87, -53.62, 185.574, 92.62))))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) + abs(0.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(length(injectionSwitch)))), 0.0, 0.0), (mat4(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-52.74) : injectionSwitch[1])), injectionSwitch[1], injectionSwitch[1]))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, determinant(mat3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8.5))), float(1.0), bool(true))))), 1.0)), 1.0, 0.0, 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))), mix(vec2(_GLF_FUZZED(1.4), _GLF_FUZZED(-59.58)), vec2(((_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-254.197, -4267.0817)) : vec2(injectionSwitch[0], injectionSwitch[1])))) - vec2(0.0, 0.0))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec4(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 1.0, 1.0, 1.0))), injectionSwitch[1]), _GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), (min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))))) - vec2(0.0, 0.0)), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true))))).y)))))))))) && true)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))), max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))), min(~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))), ~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))), clamp(~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))), ~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694)))), ~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694))))))))), int(int(_GLF_IDENTITY(6, ~ (~ (6))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(6, ~ (~ _GLF_IDENTITY((6), (true ? (6) : _GLF_FUZZED(94694))))), int(int(_GLF_IDENTITY(6, ~ (~ (6)))))))) | 0), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
           for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, max(0, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (false)))), (! ((_GLF_IDENTITY(false, false || (false))))) && true)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, _GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * 1u), (((subgroup_size) * 1u) | ((subgroup_size) * 1u)) | (_GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * 1u), (((subgroup_size) * 1u) | ((subgroup_size) * 1u)) | (_GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * 1u), 0u + (((subgroup_size) * 1u) | ((subgroup_size) * 1u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, (_GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u))) | ((subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u, clamp((_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u)), ((subgroup_size) * 1u) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u) * 1u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u)))) + 0u)))) + 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u)))), uint(uvec4(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size) * 1u), (((subgroup_size) * 1u)) | _GLF_IDENTITY(0u, (0u) * 1u)) | ((subgroup_size) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u))), (((subgroup_size) * 1u) | ((subgroup_size) * 1u)) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u))), (((subgroup_size) * 1u) | ((subgroup_size) * 1u)) ^ 0u), (true ? _GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * _GLF_IDENTITY(1u, max(1u, 1u))), (((subgroup_size) * 1u) | ((subgroup_size) * 1u)) ^ 0u) : _GLF_FUZZED(subgroup_local_id))))))) >> 0u)))), 0u, 0u, 1u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) + 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.23)))))), float(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.23)))))), 1.0, 0.0, 0.0, 0.0, exp(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.23)))))), float(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.23)))))), 1.0, 0.0, 0.0, 0.0, exp(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.23)))))), float(mat2x3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(98.23)))))), 1.0, 0.0, 0.0, 0.0, exp(0.0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 1, (0 << _GLF_IDENTITY(int(5), int(5))))))) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u))) >> 0u), virtual_gid), uint(uvec4(_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid), (true ? max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid) : _GLF_FUZZED(next_virtual_gid))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(workgroup_size))), uint(7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(virtual_gid)))), uint(7u))))), 0u))), (_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(((virtual_gid)), (((virtual_gid))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)), ((virtual_gid)) ^ 0u))) >> 0u), virtual_gid), uint(uvec4(_GLF_IDENTITY(max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid), (true ? max(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), virtual_gid) : _GLF_FUZZED(next_virtual_gid))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(workgroup_size))), uint(7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(virtual_gid)))), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(7u, 1u), clamp(uvec2(7u, 1u), uvec2(7u, 1u), uvec2(7u, 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(7u, 1u), clamp(uvec2(7u, 1u), uvec2(7u, 1u), uvec2(7u, 1u)))), 0u + (uint(_GLF_IDENTITY(uvec2(7u, 1u), clamp(uvec2(7u, 1u), uvec2(7u, 1u), uvec2(7u, 1u))))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))), 0u)))) / 1u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (1u) << 0u))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x)), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.6) : injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x, (false ? _GLF_FUZZED(757.833) : _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x)) > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, log(1.0)))).x > injectionSwitch.y)))), true && (true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, log(1.0))), min(vec2(vec3(injectionSwitch, log(1.0))), vec2(vec3(injectionSwitch, log(1.0)))))).x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(-91300 & 0, (-91300 & _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-699.939), _GLF_FUZZED(93.43)), bvec2(false, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true))), true)), true)), true))))))))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) | 0), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), (~ (_GLF_IDENTITY((4), ((4)) >> 0))) | (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((4)), ~ (_GLF_IDENTITY(~ (((4))), clamp(~ (((4))), ~ (((4))), ~ (((4))))))), clamp(((4)), ((4)), ((4)))), (~ ((4))) / 1))))) - 0));
 if(_GLF_DEAD(false))
  barrier();
}
