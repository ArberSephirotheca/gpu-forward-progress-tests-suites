#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 ivec3 _f0;
} ;

struct _GLF_struct_0 {
 float _f0;
 uint _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
 mat2x3 _f1;
 int _f2;
 uint _f3;
 _GLF_struct_0 _f4;
 ivec3 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 uint _f1;
 float _f2;
 _GLF_struct_2 _f3;
 bvec2 _f4;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + abs(0.0))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))), false)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))))), false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false)))))))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false)))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(false, false || (false)), false)))))))), false)))), false)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 1.0, 0.0, abs(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.3)), float(1.0), bool(true)))), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(815.942) : float(mat4x3(1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), vec2(1.0, 0.0)))), 1.0, tan(0.0), 0.0, 1.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))), (bool(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false)))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-469.604, max(-469.604, _GLF_IDENTITY(-469.604, (-469.604) / 1.0))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ((bool(false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), ((! _GLF_IDENTITY(_GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))), (bool(_GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false)))))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(false)), ((bool(false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-469.604, max(-469.604, _GLF_IDENTITY(-469.604, (-469.604) / 1.0))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ((bool(false))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))) && true), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), bool(bvec2(bool(false), false))), true, false, false))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false, true), false)), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (! (bool(false))), true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (! (bool(false))), true, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (! (bool(false))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (bool(false))), _GLF_IDENTITY(bool(bvec2(! (! (bool(false))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(! (! (bool(false))), false)), ! (! (bool(bvec2(! (! (bool(false))), false))))))))), true, true)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (! (bool(false))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (! (bool(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true)))))), false)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(! (! (bool(false))), true, _GLF_IDENTITY(true, (true) && true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! (false)), true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false)), true))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(-361.643))), determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)))) + (_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0))) : _GLF_FUZZED(-361.643))))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(191639u, 113531u))) : (injectionSwitch)))[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0))))) : _GLF_FUZZED(-361.643))), (injectionSwitch)[1])) + vec2(0.0, 0.0)), vec2(_GLF_FUZZED(620.042), _GLF_FUZZED(1927.6044)), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), bool(_GLF_IDENTITY(true, false || (true)))))), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3(injectionSwitch[1], 1.0, log(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0), (mat3(injectionSwitch[1], 1.0, log(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(317.082) : 0.0))) - length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false)))), float(_GLF_FUZZED(0.5)), bool(false))), injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-140.455, -3823.7092, -727.901, -3474.3075, 3.9, -5.2, intBitsToFloat(70272), trunc(8.1), 50.91)))))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1]))[1]))))[0], mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-140.455, -3823.7092, -727.901, -3474.3075, 3.9, -5.2, intBitsToFloat(70272), trunc(8.1), 50.91)))))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1]))[1]))))[0]), float(_GLF_FUZZED(vec2(-9.6, 64.82).yxy.s)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), max((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(795.203, -11.47)))))[0], mix(float(_GLF_FUZZED(-348.950)), float(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(acos(0.5)) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(distance(48.09, 2555.1359)) : _GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(6), int(6))))], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0]))))))), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(0.5, min(0.5, 0.5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.5, min(0.5, 0.5)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.5, min(0.5, 0.5))), min(float(_GLF_IDENTITY(0.5, min(0.5, 0.5))), float(_GLF_IDENTITY(0.5, min(0.5, 0.5))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.5, min(0.5, 0.5)), (false ? _GLF_FUZZED(8.9) : _GLF_IDENTITY(0.5, min(0.5, 0.5)))), _GLF_IDENTITY(0.5, min(0.5, 0.5)))))), bool(false))), injectionSwitch[1])))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0)))))).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), bool(_GLF_IDENTITY(true, false || (true)))))), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3(injectionSwitch[1], 1.0, log(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0), (mat3(injectionSwitch[1], 1.0, log(1.0), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false)))), float(_GLF_FUZZED(0.5)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false)))), float(_GLF_FUZZED(0.5)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false))), (_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-348.950)), float(injectionSwitch[0]), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), false || (bool(true)))) || false)))) - 0.0)), float(_GLF_FUZZED(0.5)), bool(false)))) - 0.0) : _GLF_FUZZED(-684.420))), injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch)))[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1]))[1]))))[0], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(2.1, 94.14, 5.9).y), _GLF_FUZZED(2464.4129)), bvec2(false, false)))) * vec2(1.0, 1.0))[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(-348.950), min(_GLF_FUZZED(-348.950), _GLF_FUZZED(-348.950)))), float(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(acos(0.5)) : _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(distance(48.09, 2555.1359)) : _GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], determinant(mat4(0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)) + (injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[0], injectionSwitch[0]))))))), bool(true)))), float(_GLF_FUZZED(_GLF_IDENTITY(0.5, min(_GLF_IDENTITY(0.5, min(0.5, _GLF_IDENTITY(0.5, clamp(_GLF_IDENTITY(0.5, max(0.5, 0.5)), 0.5, 0.5)))), 0.5)))), bool(false))), injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))) && true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (_GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat3(1.0), 1u, 1.0, _GLF_struct_2(1.0, mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1, 1u, _GLF_struct_0(1.0, 1u), ivec3(1), _GLF_struct_1(ivec3(1))), bvec2(true), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u)).x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), _GLF_IDENTITY(bvec2(bvec4(bvec2((true), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((true), false), false, false)), false)))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), false), false, true)))))) || false)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(mat4((injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), exp(0.0), 0.0, sqrt(1.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) * 1.0))))))), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), false))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), false))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), true, true)), false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2359.0991)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), false, true))))), false)), true, false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, ~ (~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id))), 0u ^ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, ~ (~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id))))), _GLF_IDENTITY((_GLF_struct_replacement_3.workgroup_size * workgroup_id), min(_GLF_IDENTITY((_GLF_struct_replacement_3.workgroup_size * workgroup_id), ((_GLF_struct_replacement_3.workgroup_size * workgroup_id)) << 0u), _GLF_IDENTITY((_GLF_struct_replacement_3.workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) << 0u)), ~ (~ ((_GLF_struct_replacement_3.workgroup_size * workgroup_id)))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_struct_replacement_3.workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_3.workgroup_size * workgroup_id), max((_GLF_struct_replacement_3.workgroup_size * workgroup_id), (_GLF_struct_replacement_3.workgroup_size * workgroup_id))) << 0u), ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id)), clamp((~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id)), (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, (_GLF_struct_replacement_3.workgroup_size * workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_size * workgroup_id, (_GLF_struct_replacement_3.workgroup_size * workgroup_id) | 0u)))))))), _GLF_IDENTITY((~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id)), max((~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id)), (~ (_GLF_struct_replacement_3.workgroup_size * workgroup_id)))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y) || false))), (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (true ? vec2(vec4(injectionSwitch, 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false))))), false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8232.0702), _GLF_FUZZED(5607.3711)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-87.22))), mix(float(_GLF_FUZZED(-67.05)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-87.22))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-87.22)))))), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) | 0u) + _GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))) + 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) << (0 << _GLF_IDENTITY(int(0), int(0)))))), (true ? _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) << (0 << _GLF_IDENTITY(int(0), int(0)))))) : _GLF_FUZZED(workgroup_base)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), max(min(subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), ~ (~ (min(subgroup_local_id, subgroup_local_id)))))))) - (1u ^ 1u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u), subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) << 0), _GLF_IDENTITY(1, (1) >> 0))))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))) + _GLF_IDENTITY(1, ~ (~ (1)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))), (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))) | (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))))) | (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), uint(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))))))) << (0u ^ 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), (min(subgroup_local_id, subgroup_local_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 | (_GLF_IDENTITY((~ (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((~ (1)), 0, 0, 0), (ivec4((~ (1)), 0, 0, 0)) ^ ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4((~ (1)), 0, 0, 0), (ivec4((~ (1)), 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))) ^ 0)))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(-52945)))), min((~ (1)), (~ (1))))) + 0)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))) / 1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (_GLF_IDENTITY(0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))), (true ? 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))) : _GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))))), (0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))) * 1u)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0))), ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0)))) >> 0))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | 0u))))) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), min((~ (1)), (~ (1)))))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))), 0u + ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1)))))))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), ~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) - 0u))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(64, min(64, 64)), 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-186.049)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-186.049)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-186.049)), float(injectionSwitch.x), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-186.049)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) : _GLF_FUZZED(sqrt(-9.4)))))) > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false))))))), true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))))), false, true, false))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED(vec4(-71.76, -9.6, -5.0, -0.0).x), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED(vec4(-71.76, -9.6, -5.0, -0.0).x), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED(vec4(-71.76, -9.6, -5.0, -0.0).x), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! _GLF_IDENTITY((bool(bool(false))), false || ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED(vec4(-71.76, -9.6, -5.0, -0.0).x), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), false || ((false)))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-38044) : 4))) * 1), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
