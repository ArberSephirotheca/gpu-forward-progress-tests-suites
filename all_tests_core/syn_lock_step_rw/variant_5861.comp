#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 float _f0;
 bvec3 _f1;
 ivec4 _f2;
 bvec2 _f3;
 uvec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 vec2 _f1;
 mat3x4 _f2;
 uvec4 _f3;
 mat4x3 _f4;
 uvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 ivec4 _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 int _f1;
 mat4x2 _f2;
 uvec2 _f3;
 mat2x4 _f4;
 bool _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
} ;

struct _GLF_struct_4 {
 float _f0;
 vec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 mat4x3 _f3;
 bool _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 int _f1;
 bvec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat4x2 _f1;
 uvec2 _f2;
 mat4 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 ivec2 _f0;
 ivec2 _f1;
 vec2 _f2;
 int _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 _GLF_struct_1 _f1;
 vec2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat2x3(1.0), _GLF_struct_1(_GLF_struct_0(gl_SubgroupID, ivec2(1), ivec2(1), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY((1), ((1)) >> _GLF_IDENTITY(0, clamp(0, 0, 0))) << 0))), vec2(1.0), _GLF_struct_3(1u, mat4x2(1.0), uvec2(1u), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat4(-52.30, _GLF_IDENTITY(-5.7, (_GLF_IDENTITY(-5.7, min(-5.7, -5.7))) - 0.0), 26.56, -118.549, -2210.1777, 433.093, _GLF_IDENTITY(-512.451, min(_GLF_IDENTITY(-512.451, float(mat4x2(-512.451, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), (-512.451) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.4)), bool(false))), determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))) + (0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), transpose(transpose(mat2x4(0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(8391.8156))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0)))))))))), -3.9, 4520.2199, _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))), 7.0)))), 3.3, -2.8, 903.485, -8288.3911, 7.9, 551.775), (_GLF_IDENTITY(mat4(-52.30, _GLF_IDENTITY(-5.7, (_GLF_IDENTITY(-5.7, max(-5.7, -5.7))) - 0.0), 26.56, -118.549, -2210.1777, 433.093, _GLF_IDENTITY(-512.451, min(_GLF_IDENTITY(-512.451, float(mat4x2(-512.451, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), (-512.451) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-34.97) : 0.0)), _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 0.0))), 0.0)), 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))))), -3.9, _GLF_IDENTITY(4520.2199, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(4520.2199, (4520.2199) / abs(1.0))), bool(true))), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(_GLF_IDENTITY(7.0, _GLF_IDENTITY(min(7.0, 7.0), max(min(7.0, 7.0), min(7.0, 7.0)))), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))), 7.0)))), 3.3, -2.8, 903.485, -8288.3911, 7.9, 551.775), transpose(transpose(mat4(-52.30, -5.7, 26.56, -118.549, -2210.1777, 433.093, _GLF_IDENTITY(-512.451, min(_GLF_IDENTITY(-512.451, float(mat4x2(-512.451, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), (-512.451) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6571.0748) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), transpose(transpose(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))))))), -3.9, 4520.2199, _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(_GLF_IDENTITY(7.0, min(7.0, _GLF_IDENTITY(7.0, min(7.0, 7.0)))), _GLF_IDENTITY(7.0, _GLF_IDENTITY(float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (_GLF_IDENTITY(float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)), min(float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)), float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))))))), 7.0)))), 3.3, -2.8, _GLF_IDENTITY(903.485, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-54.07) : 903.485)), -8288.3911, 7.9, 551.775))))) * mat4(1.0)), (true ? _GLF_IDENTITY(mat4(-52.30, -5.7, 26.56, -118.549, -2210.1777, 433.093, _GLF_IDENTITY(-512.451, min(_GLF_IDENTITY(-512.451, float(mat4x2(-512.451, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, _GLF_IDENTITY(-512.451, max(_GLF_IDENTITY(-512.451, max(_GLF_IDENTITY(-512.451, float(mat2(-512.451, 0.0, 0.0, 0.0))), -512.451)), _GLF_IDENTITY(-512.451, min(-512.451, -512.451)))))), (-512.451) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : 0.0)), 0.0)))), mix(float(_GLF_FUZZED((-32.87 * -9.0))), float(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.6) : 0.0)), 0.0))))), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-966.663) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-966.663) : 1.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)))), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (true ? transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), abs(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2656.6241) : 1.0)), 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.5)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), float(vec2(sin(0.0), 1.0))))), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat4(2.8, -8204.8067, -1.1, -7.5, -4247.9595, 667.893, 4.0, 664.077, 97.86, 6.4, -1140.7843, 52.25, -0.8, -38.94, 9.6, -6.1)))))))))), -3.9, 4520.2199, _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, _GLF_IDENTITY(max(7.0, _GLF_IDENTITY(7.0, 0.0 + (_GLF_IDENTITY(7.0, 1.0 * (7.0))))), max(max(7.0, 7.0), max(7.0, 7.0)))), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, _GLF_IDENTITY(max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(_GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)))) * determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)))))), float(mat2(max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(_GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))), (_GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)))) * determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0)))))), 0.0, 0.0, 1.0)))), 7.0)))), 3.3, -2.8, 903.485, -8288.3911, 7.9, 551.775), (_GLF_IDENTITY(mat4(-52.30, -5.7, 26.56, -118.549, -2210.1777, 433.093, _GLF_IDENTITY(-512.451, min(_GLF_IDENTITY(-512.451, float(mat4x2(-512.451, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), min(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), _GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), (true ? _GLF_IDENTITY(-512.451, max(-512.451, -512.451)) : _GLF_FUZZED(-0.7))))), (-512.451) - _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-0.0 - -920.048))), bvec2(true, false))).x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.9) : 0.0))))), sin(0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat3x4(sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat3x4(sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat4(1.0) * (mat3x4(sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0)))))))), 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat4(determinant(mat4(0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) + sin(0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.2)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-2.8, min(-2.8, _GLF_IDENTITY(-2.8, (false ? _GLF_FUZZED(-4.4) : -2.8))))), (injectionSwitch)[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1))))))]), bvec2(false, true))).x), abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(708.289)), bool(false))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), -3.9, 4520.2199, _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(7.0, max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))), _GLF_IDENTITY(7.0, mix(float(_GLF_FUZZED(-1.9)), float(7.0), bool(true))))))), 3.3, -2.8, _GLF_IDENTITY(903.485, (true ? 903.485 : _GLF_FUZZED(-3384.6355))), -8288.3911, 7.9, 551.775), transpose(transpose(mat4(-52.30, -5.7, 26.56, -118.549, -2210.1777, _GLF_IDENTITY(433.093, min(433.093, _GLF_IDENTITY(433.093, (433.093) * 1.0))), _GLF_IDENTITY(-512.451, min(_GLF_IDENTITY(-512.451, float(mat4x2(-512.451, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(-512.451, max(-512.451, -512.451)), (-512.451) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (true ? transpose(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat4(7.7, -99.03, 9.5, 8.3, -2.4, 75.55, -7.1, -195.192, 412.782, 948.054, -402.264, 351.446, 2.1, -1.7, -3.7, 3.0))))))))), (false ? _GLF_FUZZED(-6.3) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), abs(0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))) + 0.0), 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-82.72)), float(0.0), bool(true))) : _GLF_FUZZED(determinant(mat3(7.8, -933.006, -4.0, 19.53, -5376.7372, -3.3, -5531.7479, -9.8, -471.735))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.9)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.7)), bool(false)))) * 1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (true ? transpose(transpose(transpose(_GLF_IDENTITY(mat4(_GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), abs(0.0), 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(mat4(7.7, -99.03, 9.5, 8.3, -2.4, 75.55, -7.1, -195.192, 412.782, 948.054, -402.264, 351.446, 2.1, -1.7, -3.7, 3.0)))))))))))))), -3.9, 4520.2199, _GLF_IDENTITY(7.0, _GLF_IDENTITY(clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(_GLF_IDENTITY(7.0, 1.0 * (7.0)), max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))), 7.0))), min(clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(_GLF_IDENTITY(7.0, 1.0 * (7.0)), max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))), 7.0))), clamp(7.0, _GLF_IDENTITY(7.0, max(7.0, 7.0)), _GLF_IDENTITY(7.0, clamp(7.0, _GLF_IDENTITY(_GLF_IDENTITY(7.0, 1.0 * (7.0)), max(_GLF_IDENTITY(7.0, min(7.0, 7.0)), _GLF_IDENTITY(7.0, float(mat3x4(7.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, 1.0 * (0.0))), abs(0.0), tan(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0))))), 7.0)))))), 3.3, -2.8, _GLF_IDENTITY(903.485, clamp(903.485, _GLF_IDENTITY(903.485, max(903.485, 903.485)), 903.485)), -8288.3911, 7.9, 551.775))))) * mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-359.186))))) : _GLF_FUZZED(mat4(-7.5, _GLF_IDENTITY(-8.2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -8.2 : _GLF_FUZZED(-2.6))), 8.8, _GLF_IDENTITY(25.32, (true ? 25.32 : _GLF_FUZZED(vec3(2.2, -27.73, 9.3)[0]))), -70.76, -59.63, _GLF_IDENTITY(6069.6249, float(mat4x2(6069.6249, sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0)))), 58.32, 0.8, 37.33, 8.7, -15.05, -177.753, -71.44, -34.39, 1722.4390))))))), _GLF_struct_2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (! (true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, bool(bvec4((_GLF_IDENTITY(false, true && (false))) || false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), (_GLF_IDENTITY(false, true && (false))) || false)))))))), false, false))))))) || (! (true))) || false))))), _GLF_IDENTITY(1, 1 * (1)), bvec3(true), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(95.25)), bool(false))), max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(95.25)), bool(false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(95.25)), bool(false))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(1.0, 1.0))))), _GLF_struct_7(vec4(1.0), _GLF_struct_4(1.0, vec3(1.0), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.0) : 1.0)), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-4.0) : 1.0), (_GLF_IDENTITY((false ? _GLF_FUZZED(-4.0) : 1.0), (false ? _GLF_FUZZED(108.107) : (false ? _GLF_FUZZED(-4.0) : 1.0)))) - abs(0.0))), sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0))) / 1.0)))), _GLF_struct_5(mat3x2(1.0)), mat4x3(1.0), true, _GLF_struct_6(mat2(1.0), 1, mat4x2(1.0), uvec2(_GLF_IDENTITY(1u, 0u + (1u))), mat2x4(1.0), true, uvec3(1u))), _GLF_struct_12(_GLF_struct_8(bvec2(true), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(vec3(mat4x3(_GLF_IDENTITY(vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), (vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) - vec3(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0)))), (vec3(mat4x3(_GLF_IDENTITY(vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), (vec3(mat2x3(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))) - vec3(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0))))) - vec3(0.0, 0.0, 0.0))))), _GLF_struct_9(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), int(2))), 0)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0))) | 0)) - 0))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0))))), (0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0))) / 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), int(ivec3((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)), 1, 0))))), ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)))))) | (0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(-22747) : ~ (_GLF_IDENTITY(1, ~ (~ (1))))))))) | (1))) ^ 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)), (_GLF_IDENTITY(1, (1) | (1))) ^ 0))))))))) / 1)), vec2(1.0), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) + 0u)), mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), uvec3(1u)), _GLF_struct_10(mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))) + (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(2), ivec4(2)))), ivec4(1))), (false ? _GLF_FUZZED(ivec4(49024, -42594, -85489, _GLF_IDENTITY(-51001, 0 | _GLF_IDENTITY((-51001), int(ivec4(_GLF_IDENTITY((-51001), 0 ^ ((-51001))), 1, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), (0 | 1))))))) : _GLF_IDENTITY(ivec4(1), clamp(ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ivec4(1), _GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(findLSB(ivec4(-28940, -49031, -73986, -76421))))))))), 1u), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, min(0, 0)))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-18332) : 1))), min(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(1)))) * 1), int(1))), int(1))))))), clamp(ivec4(_GLF_IDENTITY(1, int(ivec2(1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), clamp(1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(int(1), 0 + (int(1)))) / 1, ((_GLF_IDENTITY(int(1), 0 + (int(1)))) / 1) >> 0))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) << 0)) / 1)) ^ _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0))))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) / 1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), _GLF_IDENTITY(int(1), 0 | (int(1))))))))), ivec4(_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))), int(ivec3(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))), 1, 0))))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, int(ivec2(1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) ^ 0))) | (0 << _GLF_IDENTITY(int(7), int(7))))), int(_GLF_IDENTITY(1, (1) | (1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))))))), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(1, min(1, 1))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), (_GLF_IDENTITY(int(1), min(int(1), int(1)))) | (_GLF_IDENTITY(int(1), min(int(1), int(1))))), int(1)))), max(ivec2(1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, ~ (~ (1)))), min(int(1), int(1))), int(1)))), ivec2(1, _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))), 0 | (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))))))))))))))), _GLF_struct_11(1.0, _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), ivec4(1), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true), false))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(true), false))))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (true))), false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))))), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), true, false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, bool(bool(true))), false))), true, true))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), true, false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, bool(bool(true))), false))), true, true))), false))), bvec2(bvec4(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), true, false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, bool(bool(true))), false))), true, true))), false))), true, false))), true)))))), uvec4(1u), mat4x3(1.0))));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (5548 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(float(true)))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1))))), 0 ^ ((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1)))))))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) || false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.2))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-798.017), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), bvec2(true, false))).y)))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false) || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true)))))) && true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_size * workgroup_id), clamp(_GLF_IDENTITY((workgroup_size * workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(((workgroup_size * workgroup_id)), (((workgroup_size * workgroup_id))) | 0u) >> 0u, (((workgroup_size * workgroup_id)) >> 0u) | (((workgroup_size * workgroup_id)) >> 0u))), (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_13._f1._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).y)))))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(6412.5054)), bvec2(false, false))), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0))) + 0.0)) + 0.0), _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, clamp(_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, ((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-85.21)), float(1.0), bool(true))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.2) : 1.0)), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))) + 0.0) - 0.0), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.8))), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), max((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))))))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) + 0.0)))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(6412.5054)), bvec2(false, false))), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0))) + 0.0)) + 0.0), _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, clamp(_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, ((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-85.21)), float(1.0), bool(true))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.2) : 1.0)), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))) + 0.0) - 0.0), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.8))), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), max((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))))))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) + 0.0)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(6412.5054)), bvec2(false, false))), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0))) + 0.0)) + 0.0), _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, clamp(_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, ((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-85.21)), float(1.0), bool(true))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.2) : 1.0)), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))) + 0.0) - 0.0), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.8))), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), max((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))))))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) + 0.0)))))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(6412.5054)), bvec2(false, false))), injectionSwitch)).x < injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0)), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 0.0, cos(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0))), 1.0)), sin(0.0), 1.0))) + 0.0)) + 0.0), _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, clamp(_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, ((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-85.21)), float(1.0), bool(true))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.2) : 1.0)), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))) + 0.0) - 0.0), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.8))), 1.0)), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), 1.0))) + 0.0, _GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (_GLF_IDENTITY((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), max((float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))))))), (float(mat4x3(injectionSwitch.y, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))))))))) + _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) + 0.0)))))))))))))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY((0 & 43224), clamp((_GLF_IDENTITY(0 & 43224, (0 & 43224) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, ~ (~ _GLF_IDENTITY((0 & 43224), (false ? _GLF_FUZZED(atomicAnd(_injected_loop_counter, -44672)) : (0 & 43224)))))), ((_GLF_IDENTITY(0 & 43224, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 0))) & 43224 : _GLF_FUZZED(19577))))) | ((_GLF_IDENTITY(0 & 43224, (0 & 43224) | (_GLF_IDENTITY(0 & 43224, (0 & 43224) << 0)))))), _GLF_IDENTITY((0 & 43224), max(_GLF_IDENTITY((0 & 43224), _GLF_IDENTITY(_GLF_IDENTITY(((0 & 43224)) ^ 0, ~ (~ (_GLF_IDENTITY(((0 & 43224)), (true ? _GLF_IDENTITY(((0 & 43224)), clamp(((0 & 43224)), ((0 & 43224)), ((0 & 43224)))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0))), int(ivec2(((0 & _GLF_IDENTITY(43224, (43224) | 0))) ^ 0, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)) & 43224, _GLF_IDENTITY(0 | (0 & 43224), (_GLF_IDENTITY(0 | (0 & 43224), (0 | (0 & 43224)) - 0)) ^ 0))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 | (0)) & 43224), _GLF_IDENTITY(_GLF_IDENTITY(clamp((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (0))) & 43224), (_GLF_IDENTITY((0 & 43224), min(_GLF_IDENTITY((0 & 43224), min((_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (true ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(_injected_loop_counter)))) << 0) : _GLF_FUZZED((~ _injected_loop_counter)))))), 0, 0)) & 43224, (0 & 43224) | (0 & 43224))), _GLF_IDENTITY((0 & _GLF_IDENTITY(43224, min(_GLF_IDENTITY(43224, min(43224, 43224)), 43224))), ((0 & _GLF_IDENTITY(43224, min(_GLF_IDENTITY(43224, min(43224, 43224)), 43224)))) / 1))), (0 & 43224)))) | ((0 & 43224))), _GLF_IDENTITY((0 & 43224), max((_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, max(0 & 43224, 0 & 43224)), (_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) << 0)) ^ 0) & 43224))) | (_GLF_IDENTITY(0 & 43224, max(0 & 43224, 0 & 43224))))), (_GLF_IDENTITY(0, (0) - 0) & 43224)))), (clamp((0 & 43224), _GLF_IDENTITY((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY((0 & 43224), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, max((0) - 0, (0) - 0))))))))) & 43224), min((0 & _GLF_IDENTITY(43224, 0 ^ (_GLF_IDENTITY(43224, min(43224, 43224))))), (0 & 43224))), (0 & 43224)))), ~ (~ ((_GLF_IDENTITY((0 & 43224), min(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) - 0) | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) - 0))))))) & 43224), min((_GLF_IDENTITY(0, 0 | (0)) & 43224), _GLF_IDENTITY((0 & 43224), (false ? _GLF_FUZZED(_injected_loop_counter) : (0 & 43224))))), (0 & 43224))))))) | ((0 & 43224))), _GLF_IDENTITY((0 & 43224), max((0 & _GLF_IDENTITY(43224, (43224) + _GLF_IDENTITY(0, (0) | (0 | 0)))), (0 & 43224))))) >> 0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((_injected_loop_counter / _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) : clamp((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (false ? _GLF_FUZZED(37012) : _GLF_IDENTITY(0, max(0, 0)))))) & 43224), _GLF_IDENTITY((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : _GLF_IDENTITY(43224, (43224) >> 0)))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))), _GLF_IDENTITY(min((0 & 43224), (0 & _GLF_IDENTITY(_GLF_IDENTITY(43224, int(ivec3(43224, 0, 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224)))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 ^ (_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))))))), _GLF_IDENTITY(min((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), 1 * ((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0))))) * 1)), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224)))), max(_GLF_IDENTITY((_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 ^ (_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))))))), _GLF_IDENTITY(min((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), 1 * ((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0))))) * 1)), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224)))), min((_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 ^ (_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))))))), _GLF_IDENTITY(min((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), 1 * ((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0))))) * 1)), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224)))), (_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 ^ (_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))))))), _GLF_IDENTITY(min((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), 1 * ((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0))))) * 1)), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224)))))), _GLF_IDENTITY((_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 ^ (_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))))))), _GLF_IDENTITY(min((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), 1 * ((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0))))) * 1)), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224)))), ((_GLF_IDENTITY((0 & _GLF_IDENTITY(43224, _GLF_IDENTITY((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))), ((_GLF_IDENTITY(43224, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224)))) | ((_GLF_IDENTITY(43224, (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-30083, clamp(-30083, -30083, -30083))) : 43224))))) - 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(0 & 43224, max(0 & 43224, _GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224)), 0 ^ (_GLF_IDENTITY(0 & 43224, clamp(0 & 43224, 0 & 43224, 0 & 43224))))))))), _GLF_IDENTITY(min((0 & 43224), _GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0)), 1 * ((_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), (_GLF_IDENTITY(0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)), ~ (~ (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224)))))) | 0))))) * 1)), (min((0 & 43224), (0 & _GLF_IDENTITY(43224, (false ? _GLF_FUZZED(_injected_loop_counter) : 43224))))) | 0)), (0 & 43224))))) - 0))))) | ((_GLF_IDENTITY(0 & 43224, (_GLF_IDENTITY(0 & 43224, (_GLF_IDENTITY(0 & 43224, ~ (~ (0 & 43224)))) >> 0)) / 1)))), _GLF_IDENTITY((0 & _GLF_IDENTITY(43224, (43224) - 0)), max(_GLF_IDENTITY((0 & 43224), min(_GLF_IDENTITY((0 & 43224), int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) & 43224, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(ivec4(_GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1, (1 ^ 0)))) & 43224 : _GLF_FUZZED(_injected_loop_counter))))))), _GLF_IDENTITY((0 & 43224), clamp((0 & 43224), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3((0), 1, 1)), (_GLF_IDENTITY(int(ivec3((0), 1, 1)), (false ? _GLF_FUZZED(35753) : int(ivec3((0), 1, 1))))) | (int(ivec3((0), 1, 1)))), (int(ivec3((_GLF_IDENTITY(0, max(0, 0))), 1, 1))) ^ 0)) | (0)) & 43224), (0 & 43224))))), (_GLF_IDENTITY(0 & 43224, (0 & 43224) | (_GLF_IDENTITY(0 & 43224, (0 & 43224) / 1)))))))))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(1 | 0, (1 | 0) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (_GLF_IDENTITY(5, clamp(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-41055))), _GLF_IDENTITY(5, 0 | (5)), 5)))))), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (5)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((~ (5)), clamp((~ (5)), (~ (5)), (~ (5)))))), 0 + ((~ (5)))))), int(5))))) | (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), ~ (~ (int(5)))))), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) | 0), 1), 1 * (clamp(1, _GLF_IDENTITY(1, (1) | 0), 1))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), false, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), max(max(workgroup_base, workgroup_base), max(workgroup_base, workgroup_base)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), (~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u)) * 1u)), max(_GLF_IDENTITY((~ (workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) ^ 0u)) - 0u, (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), ((_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(uint(uvec2(~ (workgroup_base), 1u)), (uint(uvec2(~ (workgroup_base), 1u))) >> (151323u & 0u))))) ^ 0u)) - 0u))), (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)), max((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uvec2((subgroup_local_id + 1), 1u))))) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) << 0), 64, 2);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ! (! ((false))))), (bool(_GLF_IDENTITY((false), ! (! ((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || _GLF_IDENTITY(false, false || (false))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) ? injectionSwitch.y : _GLF_FUZZED(exp(515.215))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1639.7390)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-60.08)), bool(false))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1))), false || (! (_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(true, true && (true)) && (_injected_loop_counter < 1)))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = (-50000 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0))))), 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) << 0), 4);
                  }
                 else
                  {
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))));
            }
           for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6486.5025)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             barrier();
            }
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || false)), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) || false)), ((! (false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((! (false))) || false), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((! (_GLF_IDENTITY(false, bool(bool(false)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))) && true)))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))) ? _GLF_FUZZED(atan(-701.841, 66.54)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false)))))
  barrier();
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), clamp((0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) : _GLF_FUZZED(-4.2))))) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), bool(bvec2(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) : _GLF_FUZZED(-4.2))))) + _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), true)))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, cos(0.0), 0.0), transpose(transpose(mat4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, log(1.0), 1.0, 0.0, 1.0, cos(0.0), 0.0)))))), 0.0) + (injectionSwitch)), injectionSwitch)).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, min(read, read))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (read))) ^ 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(read, min(read, read))) | (_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, (read) << 0u))))), max(((_GLF_IDENTITY(read, min(read, read))) | (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_local_id) : read))) | (_GLF_IDENTITY(read, (read) << 0u))))), ((_GLF_IDENTITY(read, min(read, read))) | (_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, _GLF_IDENTITY((read), 0u ^ (_GLF_IDENTITY((read), clamp((read), _GLF_IDENTITY((read), 1u * ((read))), (read))))) << 0u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(read, _GLF_IDENTITY(min(read, read), (min(read, read)) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, clamp(read, read, _GLF_IDENTITY(read, (read) | 0u)))) >> 0u), (read) | (read))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, 0u | (read)), read))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), (read) | _GLF_IDENTITY((read), _GLF_IDENTITY(((read)) | ((read)), clamp(((read)) | ((read)), ((read)) | ((read)), ((read)) | ((read)))))))), min(((_GLF_IDENTITY(read, min(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u | (read)), ~ (~ (_GLF_IDENTITY(read, 0u | (read))))), read))) | (_GLF_IDENTITY(read, (read) | (read)))), ((_GLF_IDENTITY(read, min(_GLF_IDENTITY(_GLF_IDENTITY(read, 0u | (read)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, 0u | (read))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(read, 0u | (read))), uint(uint(~ (_GLF_IDENTITY(read, 0u | (read))))))) ^ 0u))), read))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))) | (read)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), clamp(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ~ (~ (_GLF_IDENTITY(read, (read) | (read))))), _GLF_IDENTITY(read, (read) | (read))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), 0u + (_GLF_IDENTITY(read, (read) | (read))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), clamp(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ~ (~ (_GLF_IDENTITY(read, (read) | (read))))), _GLF_IDENTITY(read, (read) | (read))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), 0u + (_GLF_IDENTITY(read, (read) | (read))))), min((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), clamp(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ~ (~ (_GLF_IDENTITY(read, (read) | (read))))), _GLF_IDENTITY(read, (read) | (read))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), 0u + (_GLF_IDENTITY(read, (read) | (read))))), (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), clamp(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ~ (~ (_GLF_IDENTITY(read, (read) | (read))))), _GLF_IDENTITY(read, (read) | (read))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), 0u + (_GLF_IDENTITY(read, (read) | (read)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), clamp(_GLF_IDENTITY(read, (read) | (read)), _GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), ~ (~ (_GLF_IDENTITY(read, (read) | (read))))), _GLF_IDENTITY(read, (read) | (read))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (read)), 0u + (_GLF_IDENTITY(read, (read) | (read))))))))))))))))), (_GLF_IDENTITY(read, min(read, read))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp((1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 0u))))))), 4, 64, 4);
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_DEAD(false))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))))))))), ! (! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))))))))))))))))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
