#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_33 {
 mat4x2 _f0;
} ;

struct _GLF_struct_32 {
 mat3x2 _f0;
 mat4 _f1;
 uvec2 _f2;
 mat4 _f3;
 vec4 _f4;
 vec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_31 {
 uint _f0;
} ;

struct _GLF_struct_30 {
 ivec4 _f0;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 float _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_34 {
 mat4 _f0;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
 _GLF_struct_32 _f4;
 _GLF_struct_33 _f5;
 bool _f6;
} ;

struct _GLF_struct_27 {
 ivec3 _f0;
 ivec3 _f1;
 int _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_26 {
 vec4 _f0;
 mat4x2 _f1;
 vec2 _f2;
 vec4 _f3;
 float _f4;
 bvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 int _f2;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 mat4x2 _f1;
 uint _f2;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
} ;

struct _GLF_struct_35 {
 _GLF_struct_25 _f0;
 _GLF_struct_28 _f1;
 uint workgroup_id;
 _GLF_struct_34 _f2;
} ;

struct _GLF_struct_21 {
 ivec2 _f0;
 mat4 _f1;
 mat4x2 _f2;
 uint _f3;
 uint subgroup_size;
} ;

struct _GLF_struct_20 {
 uint _f0;
 vec4 _f1;
 mat2x4 _f2;
 mat3 _f3;
 mat4x3 _f4;
 int _f5;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 bvec2 _f1;
 ivec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_18 {
 uint _f0;
 bvec2 _f1;
 float _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_22 {
 bool _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_22 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_17 {
 uint subgroup_base;
 uvec3 _f0;
 mat3x2 _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 int _f1;
 uint _f2;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 _GLF_struct_13 _f4;
 bool _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 uint workgroup_base;
 uvec4 _f1;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 vec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 mat4 _f1;
 _GLF_struct_10 _f2;
 bvec4 _f3;
 uint num_workgroup;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 vec4 _f1;
 float _f2;
 uvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 uvec3 _f1;
 mat2 _f2;
 ivec2 _f3;
 mat4x2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat2 _f1;
 int _f2;
 vec2 _f3;
 vec3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat4x3 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 ivec4 _f0;
 int _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 ivec4 _f2;
 _GLF_struct_6 _f3;
 mat2x3 _f4;
 float _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) && true), false))))), true, true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), bool(true))) > injectionSwitch.y))) || false))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec4(bvec2(false, false), true, false)))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), true))), false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(uvec4(1u), _GLF_struct_0(gl_SubgroupID, ivec4(1), 1, bvec3(true)), ivec4(1), _GLF_struct_6(_GLF_struct_1(mat2x4(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.0) : 1.0))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(814.887, -3419.1900, 7.7, -86.75)))), 1, vec2(1.0), vec3(1.0), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.8)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0), (clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.8)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0)) / 1.0)))), _GLF_struct_2(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.8)), bool(false)))), uvec3(1u), mat2(1.0), ivec2(1), mat4x2(1.0), vec3(1.0)), mat4x3(1.0), _GLF_struct_3(ivec2(1), mat3x4(1.0)), _GLF_struct_4(vec4(1.0)), _GLF_struct_5(vec3(1.0), vec4(1.0), 1.0, _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), ivec2(1))), mat2x3(1.0), 1.0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! (false), true, true), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(false, (false) && true), false)))) || false), true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8961.5171) : injectionSwitch.y))) * 1.0))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, 1.0, 0.0, 1.0))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))).x > injectionSwitch.y)), true, true))) && true))))
        return;
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_22(true, _GLF_struct_18(_GLF_IDENTITY(1u, (1u) ^ 0u), bvec2(true), 1.0, bvec3(true)), _GLF_struct_19(vec3(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(true), true, false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))), ivec4(1), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-310.684)), float(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0)))), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((4.3 / 375.918))), float(0.0), bool(true)))))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))) / 1.0), 0.0)))), mix(float(float(mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : 1.0)), 1.0, 1.0), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(4.9), (_GLF_FUZZED(4.9)) - 0.0) : _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(-3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0), mix(float(_GLF_FUZZED(-6.1)), float(clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.9) : 1.0)), 1.0, 1.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bvec4(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true))))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), false, true))) || false)))) : _GLF_FUZZED(distance(vec3(4.1, 418.203, -224.870), _GLF_IDENTITY(vec3(-5.7, -671.753, -218.893), (vec3(-5.7, -671.753, -218.893)) - vec3(0.0, 0.0, 0.0))))))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-4790.6824)), bool(false)))))), _GLF_struct_20(1u, vec4(1.0), mat2x4(1.0), mat3(1.0), mat4x3(1.0), 1), _GLF_struct_21(ivec2(1), mat4(1.0), mat4x2(1.0), 1u, gl_SubgroupSize)), ivec3(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), clamp(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true), true, true, true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), true))), ((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), true)), (bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), true))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (bool(bvec4(false, true, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(6.2)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)), vec2((injectionSwitch)[0], _GLF_FUZZED(6.2)))), vec2(_GLF_FUZZED(1638.7428), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-52.74)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(905.643) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(1.9) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-183.244) : injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false))) || false))), true, true)), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false))) || false))), true, true)), false, false))))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false))) || false))), true, true)), false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.3, 8449.9107)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2((injectionSwitch))), clamp(vec2(vec2((injectionSwitch))), vec2(vec2((injectionSwitch))), vec2(vec2((injectionSwitch)))))) + vec2(0.0, 0.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(725.358)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(941.405)))) - 0.0)), bvec2(false, true))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(725.358)), vec2(_GLF_FUZZED(4.8), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(941.405)))) - 0.0)), bvec2(false, true))).y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) || false)) || (false))), bool(bvec2((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false))), (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(76.47)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)) || (false)))) && true)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(97.56) : injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-36.89)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-36.89)), bvec2(true, false)))) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-36.89)), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-36.89)), bvec2(true, false)))) * mat2(1.0)).x), float(_GLF_FUZZED(-3.1)), bool(false))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
              barrier();
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false)))))) && true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            barrier();
           return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4(1.0), _GLF_struct_9(_GLF_struct_8(mat3x2(1.0), bvec4(true))), _GLF_struct_11(bvec3(_GLF_IDENTITY(true, (true) && true)), mat4(1.0), _GLF_struct_10(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (~ (1u)) | (~ (1u)))), 0u | (_GLF_IDENTITY((~ (1u)), ((~ (1u))) | ((~ (1u))))))))), 1u * (~ (_GLF_IDENTITY(~ (1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (1u), (~ (1u)) * 1u))), ~ (~ ((~ (_GLF_IDENTITY(~ (1u), (~ (1u)) * 1u)))))))))))), vec4(1.0), mat4x2(1.0)), bvec4(true), gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(float(149105u))), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), _GLF_IDENTITY(vec2(-3599.6653, -0.0), min(vec2(-3599.6653, -0.0), _GLF_IDENTITY(vec2(-3599.6653, -0.0), vec2(vec3(vec2(-3599.6653, -0.0), 1.0)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, _GLF_IDENTITY(-779.712, (false ? _GLF_FUZZED(-9.6) : -779.712)), 8611.5210, -86.34, -9.4))) : -0.0), max((false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, _GLF_IDENTITY(-779.712, (false ? _GLF_FUZZED(-9.6) : -779.712)), 8611.5210, -86.34, -9.4))) : -0.0), (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, _GLF_IDENTITY(-779.712, (false ? _GLF_FUZZED(-9.6) : -779.712)), 8611.5210, -86.34, -9.4))) : -0.0))))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))) : injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch)), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-3599.6653, clamp(_GLF_IDENTITY(-3599.6653, (false ? _GLF_FUZZED(5.1) : -3599.6653)), -3599.6653, -3599.6653)), -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(_GLF_IDENTITY(-3599.6653, clamp(-3599.6653, _GLF_IDENTITY(-3599.6653, (-3599.6653) - 0.0), -3599.6653)), -0.0), vec2(-3599.6653, -0.0)))), _GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), min(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), (true ? min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))) : _GLF_FUZZED(vec2(-370.938, 5003.1618)))), 0.0, 1.0), mat2(mat3x4(mat2(_GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), (true ? min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))) : _GLF_FUZZED(vec2(-370.938, 5003.1618)))), 0.0, 1.0)))))), _GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), clamp(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), _GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))), mix(vec2(_GLF_FUZZED(-4242.9562), _GLF_FUZZED(670.022)), vec2((min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))))[0], (min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, _GLF_IDENTITY(-4.0, clamp(-4.0, -4.0, -4.0)), 9.8, _GLF_IDENTITY(8383.3264, max(_GLF_IDENTITY(8383.3264, min(_GLF_IDENTITY(8383.3264, clamp(8383.3264, 8383.3264, 8383.3264)), 8383.3264)), 8383.3264)), -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))))[1]), bvec2(true, true)))))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))) : injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, float(_GLF_IDENTITY(mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(0.0))) * mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), max(float(_GLF_FUZZED(-6216.4008)), _GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), (float(_GLF_FUZZED(-6216.4008))) - 0.0))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))))), 1.0, 1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), clamp(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, (true ? -1.1 : _GLF_FUZZED(-75.67))), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, _GLF_IDENTITY(-145.057, max(-145.057, -145.057)), -59.14, -779.712, 8611.5210, -86.34, -9.4))), (_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4)))) / 1.0), _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, _GLF_IDENTITY(-0.0, min(-0.0, -0.0))), vec2(-3599.6653, -0.0)))))) : injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(-423.830)), vec2((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, float(_GLF_IDENTITY(mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(0.0))) * mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), max(float(_GLF_FUZZED(-6216.4008)), _GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), (float(_GLF_FUZZED(-6216.4008))) - 0.0))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))))), 1.0, 1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), clamp(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, (true ? -1.1 : _GLF_FUZZED(-75.67))), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, _GLF_IDENTITY(-145.057, max(-145.057, -145.057)), -59.14, -779.712, 8611.5210, -86.34, -9.4))), (_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4)))) / 1.0), _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, _GLF_IDENTITY(-0.0, min(-0.0, -0.0))), vec2(-3599.6653, -0.0)))))) : injectionSwitch)[0], _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, float(_GLF_IDENTITY(mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(0.0))) * mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), max(float(_GLF_FUZZED(-6216.4008)), _GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), (float(_GLF_FUZZED(-6216.4008))) - 0.0))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))))), 1.0, 1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), clamp(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, (true ? -1.1 : _GLF_FUZZED(-75.67))), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, _GLF_IDENTITY(-145.057, max(-145.057, -145.057)), -59.14, -779.712, 8611.5210, -86.34, -9.4))), (_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4)))) / 1.0), _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, _GLF_IDENTITY(-0.0, min(-0.0, -0.0))), vec2(-3599.6653, -0.0)))))) : injectionSwitch)[1], float(_GLF_IDENTITY(vec3((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, float(_GLF_IDENTITY(mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(0.0))) * mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), max(float(_GLF_FUZZED(-6216.4008)), _GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), (float(_GLF_FUZZED(-6216.4008))) - 0.0))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))))), 1.0, 1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), clamp(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, (true ? -1.1 : _GLF_FUZZED(-75.67))), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, _GLF_IDENTITY(-145.057, max(-145.057, -145.057)), -59.14, -779.712, 8611.5210, -86.34, -9.4))), (_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4)))) / 1.0), _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, _GLF_IDENTITY(-0.0, min(-0.0, -0.0))), vec2(-3599.6653, -0.0)))))) : injectionSwitch)[1], 0.0, 0.0), (vec3((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, _GLF_IDENTITY(-0.0, clamp(-0.0, -0.0, -0.0)))))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(_GLF_IDENTITY(-0.0, float(_GLF_IDENTITY(mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (mat3x2(-0.0, 1.0, 1.0, sqrt(1.0), 0.0, length(0.0))) * mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), max(float(_GLF_FUZZED(-6216.4008)), _GLF_IDENTITY(float(_GLF_FUZZED(-6216.4008)), (float(_GLF_FUZZED(-6216.4008))) - 0.0))), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))))))), 1.0, 1.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), clamp(_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))), _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, (true ? -1.1 : _GLF_FUZZED(-75.67))), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, _GLF_IDENTITY(-145.057, max(-145.057, -145.057)), -59.14, -779.712, 8611.5210, -86.34, -9.4))), (_GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4)))) / 1.0), _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, _GLF_IDENTITY(-0.0, min(-0.0, -0.0))), vec2(-3599.6653, -0.0)))))) : injectionSwitch)[1], 0.0, 0.0)) / vec3(1.0, 1.0, 1.0))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, max(_GLF_IDENTITY(-1.1, clamp(-1.1, -1.1, -1.1)), -1.1)), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : _GLF_IDENTITY(-0.0, (-0.0) * exp(0.0))), (false ? _GLF_FUZZED(41.46) : _GLF_IDENTITY((false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, _GLF_IDENTITY(-8.5, clamp(-8.5, -8.5, _GLF_IDENTITY(-8.5, (false ? _GLF_FUZZED(0.3) : -8.5)))), 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0), mix(float(_GLF_FUZZED(-86.73)), float(_GLF_IDENTITY((false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0), mix(float(_GLF_FUZZED(-5.3)), float((false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0)), bool(true)))), bool(true))))))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), max(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, _GLF_IDENTITY(-1.1, max(-1.1, -1.1)), -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(_GLF_IDENTITY(-3599.6653, max(-3599.6653, _GLF_IDENTITY(-3599.6653, (-3599.6653) / 1.0))), -0.0), vec2(-3599.6653, -0.0)))))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-3599.6653, (true ? -3599.6653 : _GLF_FUZZED(-114.631))), -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), vec2(0.0, 0.0) + (_GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-3599.6653, (true ? -3599.6653 : _GLF_FUZZED(-114.631))), -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(_GLF_IDENTITY(_GLF_IDENTITY(-8770.8506, mix(float(_GLF_FUZZED(-6692.3352)), float(-8770.8506), bool(true))), (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(_GLF_IDENTITY(-8770.8506, mix(float(_GLF_FUZZED(-6692.3352)), float(-8770.8506), bool(true))), clamp(_GLF_IDENTITY(-8770.8506, mix(float(_GLF_FUZZED(-6692.3352)), float(-8770.8506), bool(true))), _GLF_IDENTITY(-8770.8506, mix(float(_GLF_FUZZED(-6692.3352)), float(-8770.8506), bool(true))), _GLF_IDENTITY(-8770.8506, mix(float(_GLF_FUZZED(-6692.3352)), float(-8770.8506), bool(true))))))), -1.1, -9.3, _GLF_IDENTITY(-8.5, max(_GLF_IDENTITY(-8.5, float(_GLF_IDENTITY(mat4x3(-8.5, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(-8.5, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -8.5)), 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, -86.34, -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), mix(vec2((_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))[0], (_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))[1]), vec2(_GLF_FUZZED(-13.65), _GLF_FUZZED(424.660)), bvec2(false, false))))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-3599.6653, -0.0), mat2(1.0) * (vec2(-3599.6653, -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0))))))) * mat2(1.0)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, _GLF_IDENTITY(-0.0, (false ? _GLF_FUZZED(determinant(mat4(-8770.8506, -1.1, -9.3, -8.5, 55.16, 1.5, -4.0, 9.8, 8383.3264, -778.697, -145.057, -59.14, -779.712, 8611.5210, _GLF_IDENTITY(-86.34, clamp(-86.34, _GLF_IDENTITY(-86.34, (true ? _GLF_IDENTITY(-86.34, (-86.34) + 0.0) : _GLF_FUZZED(-703.860))), _GLF_IDENTITY(-86.34, (true ? -86.34 : _GLF_FUZZED(3.3))))), -9.4))) : -0.0))), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))), _GLF_FUZZED(_GLF_IDENTITY(vec2(-3599.6653, -0.0), max(vec2(-3599.6653, -0.0), vec2(-3599.6653, -0.0)))))))) : injectionSwitch)).x)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true && (false), false, false), bvec3(bvec4(bvec3(true && (false), false, false), false))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) + vec2(0.0, 0.0)))))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, sqrt(cos(0.0)), 0.0))).y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, exp(0.0)))).x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 1.0)), (true ? _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 1.0)), min(float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 1.0)), float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 1.0, 1.0)))) : _GLF_FUZZED(-693.550))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(74.52)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1362.5184) : injectionSwitch.y))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-23.20) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0, 0.0))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))) || (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_35 _GLF_struct_replacement_35 = _GLF_struct_35(_GLF_struct_25(_GLF_struct_24(ivec3(1), mat4x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1u)), _GLF_struct_28(_GLF_struct_26(vec4(1.0), mat4x2(1.0), vec2(1.0), vec4(1.0), 1.0, _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))), mat2(1.0)), _GLF_struct_27(ivec3(1), ivec3(1), _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) | 0)), mat3(1.0), mat3x2(1.0)), 1), gl_WorkGroupID.x, _GLF_struct_34(mat4(1.0), _GLF_struct_29(ivec2(1), 1.0, mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(84.88)) : 1.0)), (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.0) : injectionSwitch.y)))) ? _GLF_FUZZED(tan(84.88)) : 1.0))) - 0.0), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), _GLF_struct_30(ivec4(_GLF_IDENTITY(1, (1) << 0))), _GLF_struct_31(1u), _GLF_struct_32(mat3x2(1.0), mat4(1.0), uvec2(1u), mat4(1.0), vec4(1.0), vec3(1.0), uvec3(1u)), _GLF_struct_33(mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0))), true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(_GLF_IDENTITY(65.73, (65.73) - 0.0))) : 1.0))))), (false ? _GLF_FUZZED(-490.921) : _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.2) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.2) : 0.0))) / exp(0.0)), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 1.0))) + 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(inversesqrt((injectionSwitch * -409.865))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(_GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-1.3, -775.031, -5.8)), (_GLF_FUZZED(vec3(-1.3, -775.031, -5.8))) / vec3(1.0, 1.0, 1.0)) : exp(vec3(0.0, 0.0, 0.0))))) * vec3(1.0, 1.0, 1.0)))), mix(vec3(_GLF_FUZZED(-86.19), ((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-1.3, -775.031, -5.8)), (_GLF_FUZZED(vec3(-1.3, -775.031, -5.8))) / vec3(1.0, 1.0, 1.0)) : exp(vec3(0.0, 0.0, 0.0))))) * vec3(1.0, 1.0, 1.0)))))[1], _GLF_FUZZED(-7.0)), vec3(((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-1.3, -775.031, -5.8)), (_GLF_FUZZED(vec3(-1.3, -775.031, -5.8))) / vec3(1.0, 1.0, 1.0)) : exp(vec3(0.0, 0.0, 0.0))))) * vec3(1.0, 1.0, 1.0)))))[0], _GLF_FUZZED(6152.6361), _GLF_IDENTITY(((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-1.3, -775.031, -5.8)), (_GLF_FUZZED(vec3(-1.3, -775.031, -5.8))) / vec3(1.0, 1.0, 1.0)) : exp(vec3(0.0, 0.0, 0.0))))) * vec3(1.0, 1.0, 1.0)))))[2], min(((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-1.3, -775.031, -5.8)), (_GLF_FUZZED(vec3(-1.3, -775.031, -5.8))) / vec3(1.0, 1.0, 1.0)) : exp(vec3(0.0, 0.0, 0.0))))) * vec3(1.0, 1.0, 1.0)))))[2], ((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * _GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(exp(vec3(0.0, 0.0, 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-1.3, -775.031, -5.8)), (_GLF_FUZZED(vec3(-1.3, -775.031, -5.8))) / vec3(1.0, 1.0, 1.0)) : exp(vec3(0.0, 0.0, 0.0))))) * vec3(1.0, 1.0, 1.0)))))[2]))), bvec3(true, false, true))) / vec3(1.0, 1.0, 1.0)), vec3(1.0))), bvec2(true), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(workgroup_size))), (1u) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u | (_GLF_IDENTITY(uint(8u), uint(8u))))))), mat3x2(1.0), _GLF_struct_13(uvec3(1u), 1, 1u), true), workgroup_size * _GLF_struct_replacement_35.workgroup_id, _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(64272u, 183844u, 85717u, 100637u)) : uvec4(1u))));
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_replacement_7._f1.subgroup_id * _GLF_struct_replacement_23._f0._f4.subgroup_size, uvec3(1u), mat3x2(1.0), _GLF_struct_16(uvec3(1u), mat2x4(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, ! (! (true)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool(_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, false))))))))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))))))), ! (_GLF_IDENTITY(! ((! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))))), bool(bvec2(_GLF_IDENTITY(! ((! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))))), bool(bvec2(! ((! ((! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))))))), false))), true))))))))) && (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), max(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), min(float(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0)), float(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))), 1.0, 0.0))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(39.21) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, float(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(false, (false) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(false, true))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))), true), false, true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_struct_replacement_15.workgroup_base) | (_GLF_struct_replacement_15.workgroup_base))) | (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_struct_replacement_15.workgroup_base) ^ 0u), _GLF_struct_replacement_15.workgroup_base))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_struct_replacement_15.workgroup_base) | (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, max(_GLF_struct_replacement_15.workgroup_base, _GLF_struct_replacement_15.workgroup_base)))))), _GLF_struct_replacement_15.workgroup_base))) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ~ (~ ((0u))))) | ((0u))) >> 0u))) | (_GLF_struct_replacement_15.workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_struct_replacement_15.workgroup_base) >> 0u), (_GLF_struct_replacement_15.workgroup_base) | (_GLF_struct_replacement_15.workgroup_base))) | (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_struct_replacement_15.workgroup_base) | (_GLF_struct_replacement_15.workgroup_base))))) | (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_15.workgroup_base, 0u ^ (_GLF_struct_replacement_15.workgroup_base)), _GLF_struct_replacement_15.workgroup_base))) >> ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | 0u)))) - (_GLF_IDENTITY(109224u & 0u, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) ? _GLF_FUZZED(workgroup_size) : 109224u & 0u))))) + _GLF_IDENTITY(_GLF_struct_replacement_17.subgroup_base, ~ (~ (_GLF_struct_replacement_17.subgroup_base))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-4.5))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, false || (true))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_15.workgroup_base + _GLF_struct_replacement_17.subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % _GLF_struct_replacement_23._f0._f4.subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)).x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0, mix(float(_GLF_FUZZED((-36.39 + 657.044))), float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0), bool(true)))), 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))), (true ? injectionSwitch[1] : _GLF_FUZZED(3.9)))), float(_GLF_FUZZED((910.788 - -5.7))), bool(false))))).x) / 1.0), 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(mat3x2(6.9, -4.0, 770.411, 3.5, -2003.2903, 56.86))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-91.81, 43.12)) : injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(978.822)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec2(-360.962, 4.5).y)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true))), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.1)), vec2(_GLF_FUZZED(3.4), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec3(bool(_GLF_IDENTITY(false, true && (false))), true, false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec3(bool(_GLF_IDENTITY(false, true && (false))), true, false))))) || false))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y, true)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(1), 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) >> (0 & _GLF_IDENTITY(-70676, ~ (~ (-70676))))))));
}
