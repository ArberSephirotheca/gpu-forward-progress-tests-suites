#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_41 {
 vec4 _f0;
} ;

struct _GLF_struct_42 {
 _GLF_struct_41 _f0;
} ;

struct _GLF_struct_39 {
 mat2x3 _f0;
 bvec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_40 {
 bool _f0;
 mat4 _f1;
 _GLF_struct_39 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_37 {
 uint _f0;
} ;

struct _GLF_struct_38 {
 bool _f0;
 _GLF_struct_37 _f1;
} ;

struct _GLF_struct_35 {
 bvec2 _f0;
} ;

struct _GLF_struct_34 {
 mat2 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 mat2 _f3;
 mat4 _f4;
 bool _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_33 {
 ivec4 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_36 {
 _GLF_struct_33 _f0;
 mat4x3 _f1;
 _GLF_struct_34 _f2;
 vec3 _f3;
 ivec3 _f4;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_43 {
 mat4 _f0;
 _GLF_struct_36 _f1;
 mat3 _f2;
 _GLF_struct_38 _f3;
 uint num_workgroup;
 _GLF_struct_40 _f4;
 _GLF_struct_42 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_32 {
 uint next_virtual_gid;
 vec3 _f0;
} ;

struct _GLF_struct_29 {
 uvec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_30 {
 int _f0;
 _GLF_struct_29 _f1;
 mat2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_27 {
 float _f0;
 ivec3 _f1;
 mat3 _f2;
 mat4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_26 {
 float _f0;
 vec3 _f1;
 mat2 _f2;
 ivec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_25 {
 mat3x4 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 ivec2 _f4;
 uvec2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_24 {
 uvec3 _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 _GLF_struct_24 _f1;
 uvec2 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_27 _f5;
 uint _f6;
} ;

struct _GLF_struct_22 {
 vec3 _f0;
 uvec2 _f1;
 uint workgroup_id;
 float _f2;
 float _f3;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 _GLF_struct_22 _f1;
 bool _f2;
 vec4 _f3;
} ;

struct _GLF_struct_20 {
 mat2x3 _f0;
 int _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
} ;

struct _GLF_struct_31 {
 _GLF_struct_21 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_30 _f3;
} ;

struct _GLF_struct_17 {
 uvec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 bvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_15 {
 mat2x3 _f0;
 vec2 _f1;
 uint _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 uint _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 ivec3 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 ivec2 _f1;
 vec3 _f2;
 mat3 _f3;
 uvec3 _f4;
 int _f5;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 ivec3 _f1;
 ivec2 _f2;
 int _f3;
 ivec3 _f4;
 mat4x3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 mat2x3 _f1;
 ivec4 _f2;
 _GLF_struct_9 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_4 {
 bool _f0;
 float _f1;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 mat4x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 float _f1;
 uvec3 _f2;
 bvec2 _f3;
 ivec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat2 _f1;
 mat2x4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_5 _f0;
 uint workgroup_size;
 _GLF_struct_7 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_18 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_43 _GLF_struct_replacement_43 = _GLF_struct_43(mat4(1.0), _GLF_struct_36(_GLF_struct_33(ivec4(1), mat2x4(1.0), mat4x3(1.0)), mat4x3(1.0), _GLF_struct_34(mat2(1.0), uvec4(1u), mat3x2(1.0), mat2(1.0), mat4(1.0), true, bvec2(true)), vec3(1.0), ivec3(1), _GLF_struct_35(bvec2(true))), mat3(1.0), _GLF_struct_38(true, _GLF_struct_37(1u)), gl_NumWorkGroups.x, _GLF_struct_40(true, mat4(1.0), _GLF_struct_39(mat2x3(1.0), bvec2(true), uvec4(1u)), vec2(1.0)), _GLF_struct_42(_GLF_struct_41(vec4(1.0))), uvec2(1u));
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_5(uvec4(1u), _GLF_struct_0(bvec3(true), mat2(1.0), mat2x4(1.0), mat2(1.0)), _GLF_struct_1(vec3(1.0), 1.0, uvec3(1u), bvec2(true), ivec2(1), mat4(1.0)), _GLF_struct_2(mat3x2(1.0), mat4x2(1.0), bvec2(true), mat4x3(1.0), uvec2(1u)), _GLF_struct_3(uvec4(1u), mat3x4(1.0), mat3x2(1.0)), _GLF_struct_4(true, 1.0), mat2x4(1.0)), gl_WorkGroupSize.x, _GLF_struct_7(_GLF_struct_6(mat4(1.0)), mat3x2(1.0)), _GLF_struct_10(_GLF_struct_8(mat4x3(1.0)), mat2x3(1.0), ivec4(1), _GLF_struct_9(uvec2(1u), ivec3(1), ivec2(1), 1, ivec3(1), mat4x3(1.0), vec2(1.0)), ivec3(1)), _GLF_struct_13(mat2x3(1.0), _GLF_struct_11(vec3(1.0), ivec2(1), vec3(1.0), mat3(1.0), uvec3(1u), 1), _GLF_struct_12(ivec4(1), 1.0)), _GLF_struct_18(vec2(1.0), _GLF_struct_14(vec2(1.0), 1u, uvec4(1u), mat3x2(1.0)), _GLF_struct_15(mat2x3(1.0), vec2(1.0), 1u, mat3x2(1.0), mat3x2(1.0)), ivec3(1), _GLF_struct_16(vec3(1.0), bvec4(true), 1.0), _GLF_struct_17(uvec4(1u), vec3(1.0)), mat2x4(1.0)));
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_21(_GLF_struct_20(mat2x3(1.0), 1)), _GLF_struct_23(uvec3(1u), _GLF_struct_22(vec3(1.0), uvec2(1u), gl_WorkGroupID.x, 1.0, 1.0), true, vec4(1.0)), _GLF_struct_28(mat2(1.0), _GLF_struct_24(uvec3(1u), mat4x3(1.0), vec4(1.0)), uvec2(1u), _GLF_struct_25(mat3x4(1.0), mat4x2(1.0), mat3x2(1.0), mat3x2(1.0), ivec2(1), uvec2(1u), mat4(1.0)), _GLF_struct_26(1.0, vec3(1.0), mat2(1.0), ivec4(1), uvec3(1u)), _GLF_struct_27(1.0, ivec3(1), mat3(1.0), mat4(1.0), vec2(1.0)), 1u), _GLF_struct_30(1, _GLF_struct_29(uvec2(1u), 1u), mat2(1.0), vec4(1.0)));
 uint workgroup_base = _GLF_struct_replacement_19.workgroup_size * _GLF_struct_replacement_31._f1._f1.workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), vec3(1.0));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 atomicStore(buf[_GLF_struct_replacement_32.next_virtual_gid], uint(1), 4, 64, 4);
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
