#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x4 _f0;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 float _f4;
 vec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 bvec2 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 ivec3 _f1;
 _GLF_struct_0 _f2;
 uvec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_5 {
 uint workgroup_id;
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 mat2x4 _f2;
 _GLF_struct_4 _f3;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false), bool(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8323.6184), _GLF_FUZZED(1.6)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[0], injectionSwitch[1])).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec3(bvec3(bvec3(! (false), false, false)))))), false, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7258.1429)), float(injectionSwitch.x), bool(true))), sin(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), min(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), vec4(injectionSwitch.y, 0.0, 1.0, 1.0))), vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, false, false)), false, false), bvec3(bvec4(bvec3(bool(bvec4(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), false)), false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(19893u)), _GLF_FUZZED(-458.794)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((-2204.3604 / -2.9))), vec2(_GLF_FUZZED(21.97), (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)]), bvec2(false, true))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) && true)), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))) && true))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), true))), false, false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), true))), false, false, true)), false, false, true)), bool(bvec3(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), true)), (bool(bvec2(! (! (false)), true))) || false))), true))), false, false, true)), false, false, true)), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true, ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)) || false, ((_GLF_IDENTITY((false), ((false)) && true)) || false) || false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) && true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * ((gl_WorkGroupID))) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) ^ 0u)), uint(uvec3((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) ^ 0u)), 1u, 0u))) - _GLF_IDENTITY((130090u & 0u), ~ (~ ((130090u & 0u))))), 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), min((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)), (min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (0u ^ 0u)))), min((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((uvec3(165962u, 121423u, 174910u) * subgroup_id)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))), (gl_WorkGroupID), (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) : _GLF_FUZZED(uvec3(197956u, 64328u, 133199u))))))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(16277u) : _GLF_IDENTITY(0u, 0u | (0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u | ((_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (0u ^ 0u)))), min((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((uvec3(165962u, 121423u, 174910u) * subgroup_id)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))), (gl_WorkGroupID), (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) : _GLF_FUZZED(uvec3(197956u, 64328u, 133199u))))))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(16277u) : _GLF_IDENTITY(0u, 0u | (0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u | ((_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (0u ^ 0u)))), min((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((uvec3(165962u, 121423u, 174910u) * subgroup_id)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))), (gl_WorkGroupID), (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) : _GLF_FUZZED(uvec3(197956u, 64328u, 133199u))))))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(16277u) : _GLF_IDENTITY(0u, 0u | (0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u | ((_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (0u ^ 0u)))), min((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((uvec3(165962u, 121423u, 174910u) * subgroup_id)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))), (gl_WorkGroupID), (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) : _GLF_FUZZED(uvec3(197956u, 64328u, 133199u))))))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(16277u) : _GLF_IDENTITY(0u, 0u | (0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u | ((_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), uvec3(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (0u ^ 0u)))), min((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED((uvec3(165962u, 121423u, 174910u) * subgroup_id)))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), _GLF_IDENTITY(((gl_WorkGroupID) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID), clamp(_GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))), (gl_WorkGroupID), (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)), (true ? ((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)) : _GLF_FUZZED(uvec3(197956u, 64328u, 133199u))))))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, 0u | (0u)) ^ (0u)), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))))), 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(16277u) : _GLF_IDENTITY(0u, 0u | (0u)))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u ^ (0u))), 0u | ((_GLF_IDENTITY(0u, 0u ^ (0u))))))), 0u), min((gl_WorkGroupID) << uvec3(0u, 0u, 0u), (gl_WorkGroupID) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))), 0u)))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_struct_1(mat2x4(1.0), ivec3(1), _GLF_struct_0(mat4x3(1.0), bvec2(true), mat4x3(1.0), mat4x3(1.0), mat2(1.0), mat3x2(1.0)), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, 0u + (1u)), 1u)))) | 0u)), bvec2(true)), _GLF_struct_3(_GLF_struct_2(true, mat2x4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), clamp(ivec2(1), ivec2(1), ivec2(1))), 1.0, vec2(1.0), vec4(1.0))), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-724.002)), float(1.0), bool(true)))), _GLF_struct_4(mat3x4(1.0)), mat3x4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-783.660)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8041.8178)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6979.2213 / 61.24)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3839.6858)), bvec2(true, false))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))) || false, ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))) || false))))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) - 0u)), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), subgroup_local_id)), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size, _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (true ? (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))) : _GLF_FUZZED(subgroup_local_id)))))))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)) ^ 0u), ~ _GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY((~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (true ? (~ (((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))) : _GLF_FUZZED(subgroup_local_id))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) * ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | 0u), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (injectionSwitch.x) - tan(0.0)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
