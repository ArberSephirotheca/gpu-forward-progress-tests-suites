#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint workgroup_id;
 mat2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 _GLF_struct_4 _f1;
 mat4x2 _f2;
 int _f3;
 vec3 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bvec2 _f1;
 float _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
 _GLF_struct_1 _f2;
 uvec3 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 bvec3 _f3;
 ivec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true && (bool(bvec4((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true)))) || false)) || false), true && (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))))))))))))))))) && true)))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))) * 1.0)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, min(1, 1))], (gl_NumWorkGroups[1]) - 0u), gl_NumWorkGroups[2]))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), ~ (~ ((uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u)) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(0u, 0u, 0u)), clamp((uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) | (uvec3(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u + (1u)), 1u)), _GLF_IDENTITY(1u, (22900u & (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) ^ (1u))))))))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u), (uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(178061u))), 0u, 0u)) - uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), uvec3(0u, 0u, 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u);
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat3x4(1.0), _GLF_struct_3(_GLF_struct_0(mat2x4(1.0), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (false || (bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), false || (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, true, false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true, true, false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true, true, false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), false))))))))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, tan(0.0), 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y)))))), (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-813.697) : 0.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))))))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) || false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))) || false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true))))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y))))))))))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true))))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || false))))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))))))))), bvec2(bvec4(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))))))))), false, false))))), true, false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y)), bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y)), false)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7280.3463))), 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7280.3463))), 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x))))))).x > injectionSwitch.y)))))), (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))))))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))))), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(_GLF_IDENTITY(true, ! (! (true))))) && true))))) || false)) && (bool(injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)))) && true)))))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true))))), true, false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false)))))))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false)))))))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false)))))))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y)))), true && (bool(injectionSwitch.x > injectionSwitch.y))))) || false)))))))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))), true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), 1.0), ivec2(1), _GLF_struct_1(mat3x4(1.0), mat2x4(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) ^ 0))), 1, 1, 1)))), int(4)))), (ivec4(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))) - ivec4(0, 0, 0, 0))))))))) * ivec3(1, 1, 1))) + (ivec3(1)))) | (ivec3(1)))), uvec3(1u), _GLF_struct_2(uvec3(1u), mat4x2(1.0))), _GLF_struct_5(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(5.8)), (false ? _GLF_FUZZED(-1.2) : float(_GLF_FUZZED(5.8)))), bool(false)))), float(_GLF_FUZZED(9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_struct_4(gl_WorkGroupID.x, mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) ^ uvec3(1u, 1u, 1u)) + (_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), uvec3(1u))))), (_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) ^ uvec3(1u, 1u, 1u)) + (_GLF_IDENTITY(uvec3(1u), min(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) | (uvec3(1u))), uvec3(1u)))))) >> uvec3(0u, 0u, 0u))), mat4x2(1.0), 1, _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(injectionSwitch.x) : _GLF_FUZZED(9584.8917))), float(_GLF_FUZZED(-9.6)), bool(false)))))), vec3(1.0)), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-32325) : _GLF_IDENTITY(0, ~ (~ (0)))))))) + ivec2(0, 0), ~ (~ ((_GLF_IDENTITY(ivec2(1), (ivec2(1)) + ivec2(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-32325) : _GLF_IDENTITY(0, ~ (~ (0))), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(-32325) : _GLF_IDENTITY(0, ~ (~ (0))), min(false ? _GLF_FUZZED(-32325) : _GLF_IDENTITY(0, ~ (~ (0))), false ? _GLF_FUZZED(-32325) : _GLF_IDENTITY(0, ~ (~ (0))))) : _GLF_FUZZED(62720)))))))) + ivec2(0, 0))))));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size) - (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(8u), uvec2(8u)))).y * _GLF_struct_replacement_6._f2._f1.workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size) >> uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size[0], (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size[0], clamp(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size[_GLF_IDENTITY(0, (0) | (0))], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size[0], GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size[0]))) + 0u), GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size[1]))) | (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size)).x * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))) | (subgroup_local_id));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec3((subgroup_local_id + 1), 1u, 1u)))) + 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) << 0u)) << 0u), 0u ^ (subgroup_size)), subgroup_size, subgroup_size)))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) | (~ ((subgroup_size)))))) >> 0u))), subgroup_size))), ~ (~ _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(4), int(4))) + (1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)))))), uint(uvec2((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_size)), subgroup_size, subgroup_size)))), 0u))))))), (workgroup_base + GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))), min(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size), min(clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size), clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)))))) >> 0u), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (subgroup_size)), subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)) >> 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u))))))), subgroup_size, subgroup_size)), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))))), clamp((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))))))), 0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), min(_GLF_IDENTITY(0u ^ (subgroup_size), max(0u ^ (subgroup_size), 0u ^ (subgroup_size))), _GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_size), max(0u ^ (subgroup_size), 0u ^ (subgroup_size)))) | 0u)))), subgroup_size, subgroup_size))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))), (0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)))) | (0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), 0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size))))))))))))) * _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | (1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(clamp(-1906.8391, -1967.3212, -9.4)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(clamp(-1906.8391, -1967.3212, -9.4)))))), true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ (0 << _GLF_IDENTITY(int(5), int(5)))), 4, 4))), int(4)))))), ((_GLF_IDENTITY(4, clamp(4, 4, 4))) * _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (0 << _GLF_IDENTITY(int(4), int(4))))))) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), max(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, uint(uint(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) << (0u & 87734u)) | (virtual_gid)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), injectionSwitch.y), (false ? _GLF_FUZZED(436.690) : _GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_ONE(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(992.584, (992.584) + tan(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1023.4769) : float(_GLF_FUZZED(_GLF_IDENTITY(992.584, (992.584) + tan(0.0)))))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-15.90)), float(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), false || (bool(true)))))))), 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | 0u))))))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
