#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_48 {
 bvec2 _f0;
 uvec3 _f1;
 uint _f2;
 uvec3 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_47 {
 bvec2 _f0;
 int _f1;
 uint _f2;
} ;

struct _GLF_struct_49 {
 _GLF_struct_47 _f0;
 _GLF_struct_48 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_50 {
 bvec2 _f0;
 _GLF_struct_49 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_45 {
 vec3 _f0;
} ;

struct _GLF_struct_43 {
 mat3x2 _f0;
 mat3 _f1;
 vec2 _f2;
 uvec2 _f3;
 bvec4 _f4;
 uint _f5;
 vec2 _f6;
} ;

struct _GLF_struct_42 {
 uint _f0;
 uint _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_44 {
 _GLF_struct_42 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 _GLF_struct_43 _f3;
 bool _f4;
 int _f5;
} ;

struct _GLF_struct_41 {
 int _f0;
 bvec4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_46 {
 _GLF_struct_41 _f0;
 mat4x3 _f1;
 int _injected_loop_counter;
 _GLF_struct_44 _f2;
 _GLF_struct_45 _f3;
} ;

struct _GLF_struct_38 {
 bvec4 _f0;
} ;

struct _GLF_struct_39 {
 _GLF_struct_38 _f0;
} ;

struct _GLF_struct_36 {
 uvec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_37 {
 uint _f0;
 _GLF_struct_36 _f1;
 bool _f2;
} ;

struct _GLF_struct_34 {
 uvec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_33 {
 uvec3 _f0;
 bool _f1;
 mat2x3 _f2;
 bool _f3;
 mat4x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_35 {
 _GLF_struct_33 _f0;
 vec4 _f1;
 mat4 _f2;
 _GLF_struct_34 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_31 {
 bvec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_30 {
 float _f0;
 mat4x3 _f1;
 bvec2 _f2;
 ivec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 bvec4 _f2;
 uint workgroup_id;
} ;

struct _GLF_struct_40 {
 mat4x2 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_35 _f2;
 bvec4 _f3;
 _GLF_struct_37 _f4;
 _GLF_struct_39 _f5;
} ;

struct _GLF_struct_27 {
 float _f0;
 vec3 _f1;
 bool _f2;
 ivec2 _f3;
 mat2x4 _f4;
 mat4x2 _f5;
 int _f6;
} ;

struct _GLF_struct_28 {
 _GLF_struct_27 _f0;
 int _injected_loop_counter;
} ;

struct _GLF_struct_25 {
 vec3 _f0;
 vec4 _f1;
 mat3 _f2;
 ivec4 _f3;
 int _f4;
 int _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
} ;

struct _GLF_struct_29 {
 uvec4 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_28 _f2;
} ;

struct _GLF_struct_22 {
 mat2x3 _f0;
} ;

struct _GLF_struct_21 {
 vec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat3 _f1;
 mat3x4 _f2;
 uint _f3;
 uint _f4;
} ;

struct _GLF_struct_23 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 ivec3 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 bool _f1;
 mat3 _f2;
 ivec4 _f3;
 mat4x2 _f4;
 mat2x3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_18 {
 mat3x4 _f0;
 vec3 _f1;
 _GLF_struct_16 _f2;
 int _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_15 {
 uint num_workgroup;
 float _f0;
 float _f1;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 _GLF_struct_13 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 vec3 _f2;
 _GLF_struct_11 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_12 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_23 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 bool _f1;
 ivec4 _f2;
 uint subgroup_local_id;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_4 {
 uint _f0;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 int _f1;
 mat3x4 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 float _f1;
 ivec2 _f2;
 ivec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 int _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 uint subgroup_base;
 _GLF_struct_1 _f0;
 _GLF_struct_3 _f1;
 vec2 _f2;
 _GLF_struct_6 _f3;
 bool _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 for(_GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(_GLF_struct_41(1, bvec4(true), mat4(1.0)), mat4x3(1.0), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), _GLF_struct_44(_GLF_struct_42(1u, 1u, uvec2(1u)), mat4x3(1.0), mat3x2(1.0), _GLF_struct_43(mat3x2(1.0), mat3(1.0), vec2(1.0), uvec2(1u), bvec4(true), 1u, vec2(1.0)), true, 1), _GLF_struct_45(vec3(1.0))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_46._injected_loop_counter != 0); _GLF_struct_replacement_46._injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.y = subgroup_id;
    }
   else
    {
    }
  }
 _GLF_struct_50 _GLF_struct_replacement_50 = _GLF_struct_50(bvec2(true), _GLF_struct_49(_GLF_struct_47(bvec2(true), 1, 1u), _GLF_struct_48(bvec2(true), uvec3(1u), 1u, uvec3(1u), mat4(1.0)), gl_SubgroupSize), bvec3(true));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(uvec3(1u), true, ivec4(1), gl_SubgroupInvocationID);
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_struct_12(_GLF_struct_9(ivec4(1), mat4x3(1.0)), _GLF_struct_10(ivec4(1)), vec3(1.0), _GLF_struct_11(ivec3(1)), mat3x4(1.0), mat4x3(1.0), mat2(1.0)), _GLF_struct_14(mat4x3(1.0), _GLF_struct_13(mat3(1.0), bvec4(true), mat3x2(1.0), mat3x2(1.0)), uvec4(1u)), _GLF_struct_15(gl_NumWorkGroups.x, 1.0, 1.0), _GLF_struct_18(mat3x4(1.0), vec3(1.0), _GLF_struct_16(vec3(1.0), mat4x3(1.0), mat4x2(1.0), mat4x2(1.0)), 1, _GLF_struct_17(mat2x3(1.0), true, mat3(1.0), ivec4(1), mat4x2(1.0), mat2x3(1.0), mat3x2(1.0))), _GLF_struct_23(_GLF_struct_19(1u, mat3(1.0), mat3x4(1.0), 1u, 1u), _GLF_struct_20(bvec3(true), vec4(1.0)), _GLF_struct_21(vec4(1.0), 1u), ivec3(1), _GLF_struct_22(mat2x3(1.0))), vec3(1.0));
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.x = _GLF_struct_replacement_24._f2.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.w = workgroup_size;
 for(_GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(uvec4(1u), _GLF_struct_26(_GLF_struct_25(vec3(1.0), vec4(1.0), mat3(1.0), ivec4(1), 1, 1, mat4x2(1.0))), _GLF_struct_28(_GLF_struct_27(1.0, vec3(1.0), true, ivec2(1), mat2x4(1.0), mat4x2(1.0), 1), int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_29._f2._injected_loop_counter != 0); _GLF_struct_replacement_29._f2._injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 _GLF_struct_40 _GLF_struct_replacement_40 = _GLF_struct_40(mat4x2(1.0), _GLF_struct_32(_GLF_struct_30(1.0, mat4x3(1.0), bvec2(true), ivec2(1), mat3(1.0)), _GLF_struct_31(bvec4(true), mat4x2(1.0)), bvec4(true), gl_WorkGroupID.x), _GLF_struct_35(_GLF_struct_33(uvec3(1u), true, mat2x3(1.0), true, mat4x3(1.0), mat2x4(1.0)), vec4(1.0), mat4(1.0), _GLF_struct_34(uvec3(1u), 1u), vec3(1.0)), bvec4(true), _GLF_struct_37(1u, _GLF_struct_36(uvec2(1u), vec4(1.0)), true), _GLF_struct_39(_GLF_struct_38(bvec4(true))));
 uint workgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.w * _GLF_struct_replacement_40._f1.workgroup_id;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.y * _GLF_struct_replacement_50._f1.subgroup_size, _GLF_struct_1(_GLF_struct_0(vec4(1.0)), 1, mat2(1.0)), _GLF_struct_3(_GLF_struct_2(uvec4(1u), 1.0, ivec2(1), ivec2(1), mat2(1.0))), vec2(1.0), _GLF_struct_6(mat4x2(1.0), 1, mat3x4(1.0), _GLF_struct_4(1u), _GLF_struct_5(mat4x2(1.0), uvec2(1u)), mat3x2(1.0)), true);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_7.subgroup_base + _GLF_struct_replacement_8.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.z = virtual_gid;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_7.subgroup_base + ((_GLF_struct_replacement_8.subgroup_local_id + 1) % _GLF_struct_replacement_50._f1.subgroup_size);
 uint read = atomicLoad(buf[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.z], 4, 64, 2);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 subgroupBarrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(checker[GLF_merged4_0_1_13_1_1_11_2_1_11_3_1_14num_workgroupsubgroup_idvirtual_gidworkgroup_size.z], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
}
