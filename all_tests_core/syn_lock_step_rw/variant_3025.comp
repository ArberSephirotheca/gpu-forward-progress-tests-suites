#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec2 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_9 {
 ivec4 _f0;
 _GLF_struct_8 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 _GLF_struct_9 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 float _f1;
 bool _f2;
 float _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat3x2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 mat4x3 _f1;
 _GLF_struct_4 _f2;
 mat2x3 _f3;
 _GLF_struct_5 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 uint subgroup_id;
 mat2 _f1;
 uvec2 _f2;
 bvec4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_6 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec2(false, false))) || _GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, false, true))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), true && (false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))), true && (false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false))))))), (injectionSwitch.x > injectionSwitch.y)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) || false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (true ? mat3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3(6.9, 4825.5762, 1087.8259, -7093.5025, -6.9, -4.1, -3.7, 708.751, 3.1)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))))))))), false)), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) || false)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)))), false)), false)))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false)), false))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x4(1.0), gl_SubgroupID, mat2(1.0), uvec2(_GLF_IDENTITY(1u, (1u) * 1u)), bvec4(true), _GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[2], _GLF_IDENTITY((vec4(1.0))[3], mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.1), mix(float(_GLF_IDENTITY(_GLF_FUZZED(7.1), (_GLF_FUZZED(7.1)) / 1.0)), float(_GLF_FUZZED(0.7)), bool(false)))), float(_GLF_IDENTITY((vec4(1.0))[3], 0.0 + ((vec4(1.0))[3]))), _GLF_IDENTITY(bool(true), (bool(true)) || false)))), vec4(_GLF_FUZZED(_GLF_IDENTITY(-4.6, (-4.6) - 0.0)), _GLF_FUZZED(_GLF_IDENTITY(2.1, float(mat4(_GLF_IDENTITY(2.1, float(mat3(2.1, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.5)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 0.0)))), _GLF_FUZZED((_GLF_IDENTITY(82.67, mix(float(_GLF_FUZZED((-2.2 * -9.6))), float(82.67), bool(true))))), _GLF_FUZZED(vec3(-848.456, 647.745, 5.9).z)), bvec4(false, false, false, false))), vec4(1.0), vec4(1.0))), mat3x2(1.0)), mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_struct_1(uvec2(1u), mat2x3(1.0)), uvec3(1u)), _GLF_struct_6(_GLF_struct_3(mat3(1.0), mat3x2(1.0), uvec4(1u)), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(-0.5))))), _GLF_struct_4(mat2x4(1.0), uvec3(1u), mat4x3(1.0), vec3(1.0)), mat2x3(1.0), _GLF_struct_5(ivec4(1), 1.0, true, 1.0, ivec3(1)), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false)))))), _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), (false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, tan(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(min(injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(min(injectionSwitch, injectionSwitch), 0.0, 0.0, 1.0, 1.0)))))))).y)))) ? 0.0 : _GLF_FUZZED(2833.8137))), determinant(mat2(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size), _GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) | (uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size)), clamp((uint(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id, clamp(_GLF_struct_replacement_7.subgroup_id, _GLF_struct_replacement_7.subgroup_id, _GLF_struct_replacement_7.subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) | (uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size)), _GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) & 1u) * ((subgroup_size))) | (subgroup_size)))), _GLF_IDENTITY(((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), uint(uvec4(_GLF_IDENTITY(((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), clamp(((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), ((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), ((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), 0u, 1u, 1u))) << 0u)), uint(uint(~ (_GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u & 20841u) ^ (subgroup_size)), (subgroup_size) | (subgroup_size)))), ((uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size))) | (subgroup_size))) | (subgroup_size))))) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))))))))) | (uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size)), (uint(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u))) | (uint(_GLF_IDENTITY(_GLF_struct_replacement_7.subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size), _GLF_IDENTITY(max(~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size), ~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size)), max(_GLF_IDENTITY(max(~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size), ~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size)), 1u * (max(~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size), ~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size)))), _GLF_IDENTITY(max(~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size), ~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size)), (max(~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size), ~ (_GLF_struct_replacement_7.subgroup_id * subgroup_size))) / 1u)))))))))))), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y), clamp(_GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y), _GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y), _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y), (_GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y)) | (_GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y))))), (_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)), (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) - uvec2(0u, 0u)).y) : _GLF_FUZZED(103617u), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (true ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)), (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y) : _GLF_FUZZED(103617u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (true ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)), (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y) : _GLF_FUZZED(103617u)) : _GLF_FUZZED(workgroup_base)))))) : uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size), _GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size)), (_GLF_IDENTITY((uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size)), ((uint(_GLF_struct_replacement_7.subgroup_id * subgroup_size))) ^ 0u)) / 1u))) | (uint(_GLF_struct_replacement_7.subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(~ (subgroup_size), 0u, 1u))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat3x2(1.0), _GLF_struct_9(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(1, min(1, 1)))), clamp(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(1, min(1, 1))))))), _GLF_struct_8(vec2(1.0), mat2x3(1.0), _GLF_IDENTITY(ivec3(1), min(ivec3(1), _GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))))), workgroup_base + subgroup_base + ((GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y + 1) % subgroup_size)), mat4x2(1.0)), mat2x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4.0, -53.99), (false ? _GLF_FUZZED((vec2(539.961, 1489.2853))) : vec2(4.0, -53.99))).yx))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4.0, -53.99), (false ? _GLF_FUZZED((vec2(539.961, 1489.2853))) : vec2(4.0, -53.99))).yx))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, abs(1.0))), (false ? _GLF_FUZZED(vec2(-4577.1938, -75.89)) : vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, abs(1.0)))))).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(4.0, -53.99), (false ? _GLF_FUZZED((vec2(539.961, 1489.2853))) : vec2(4.0, -53.99))).yx))).y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(1.0 * (float(injectionSwitch.y)), mix(float(_GLF_IDENTITY(1.0 * (float(injectionSwitch.y)), min(1.0 * (_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(45.55) : _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), clamp(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), float(vec3(float(injectionSwitch.y), 1.0, 1.0))), float(injectionSwitch.y)))))), 1.0 * (float(injectionSwitch.y))))), float(_GLF_IDENTITY(_GLF_FUZZED(vec4(6.7, -9.3, -9.9, 9051.6156).r), clamp(_GLF_IDENTITY(_GLF_FUZZED(vec4(6.7, -9.3, -9.9, 9051.6156).r), mix(float(_GLF_FUZZED(vec4(6.7, -9.3, -9.9, 9051.6156).r)), float(_GLF_FUZZED(-2.5)), bool(false))), _GLF_FUZZED(vec4(_GLF_IDENTITY(6.7, float(mat3x4(6.7, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), -9.3, -9.9, 9051.6156).r), _GLF_FUZZED(vec4(_GLF_IDENTITY(6.7, clamp(6.7, _GLF_IDENTITY(6.7, (6.7) / 1.0), 6.7)), -9.3, -9.9, 9051.6156).r)))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y)))), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), min(float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9001.2368))), 1.0, 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) - 0.0))), mix(float(_GLF_FUZZED(-6054.2691)), float(float(injectionSwitch.y)), bool(true))))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), 1.0 * (float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED((78.70 / -9642.3245))), float(float(injectionSwitch.y)), bool(true))), 1.0 * (float(injectionSwitch.y))))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(1.0 * (float(injectionSwitch.y)), 1.0 * (1.0 * (float(injectionSwitch.y)))))), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), min(float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6054.2691, mix(float(-6054.2691), float(_GLF_FUZZED(-4.9)), bool(false))))), float(float(injectionSwitch.y)), bool(true))))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(tanh(3.2)) : float(injectionSwitch.y))))))))))))) && true, bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0, 1.0)))))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y)))), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), log(1.0), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8889.8262)), bool(false))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), 1.0, 1.0, 0.0, exp(_GLF_IDENTITY(0.0, (0.0) - abs(0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), min(float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 1.0 * (float(injectionSwitch.y))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y), mix(float(_GLF_FUZZED(-6054.2691)), float(float(injectionSwitch.y)), bool(true))))), log(1.0), sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), 1.0 * (float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))))))))))) && true, true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x = _GLF_struct_replacement_10._f1._f1.next_virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, 64)), 2);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(7882u, 74307u)) : GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (false ? _GLF_FUZZED(uvec2(7882u, 74307u)) : GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) | (false ? _GLF_FUZZED(uvec2(7882u, 74307u)) : GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)))).x, 0u | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x)), 0u + (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, clamp(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)).x)), 0u + (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x) * 1u))), min(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x) * 1u))), uint(uint(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x) * 1u)))))))), 0u | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x)), 0u + (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, ((uvec2(0u, 0u) | uvec2(0u, 0u)) | uvec2(0u, 0u)) ^ (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)).x, 0u | (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x)), 0u + (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x))))) >> 0u)))], uint(1), _GLF_IDENTITY(4, int(ivec2(4, 0))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))), vec2(mat4x2(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), min(1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), (true ? 1.0 * (0.0) : _GLF_FUZZED(972.602)))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(3.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY((-0.5 - 3852.4063), 1.0 * ((-0.5 - 3852.4063))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0), min(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), bool(true)))), bool(true))), 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) / 1.0)) - sqrt(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), tan(0.0), tan(0.0))), tan(0.0))))), (injectionSwitch.x < injectionSwitch.y) || false))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false)), (bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))) || false)))))))), (bool(false)) && true)) || false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))), false || (bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))))))) || false)), false, true, false)))))), (_GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), false)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))))), true, false))))))) && true)) || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) / 1.0)) - sqrt(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), tan(0.0), tan(0.0))), tan(0.0))))), (injectionSwitch.x < injectionSwitch.y) || false))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false)), (bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))) || false)))))))), (bool(false)) && true)) || false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))), false || (bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))))))) || false)), false, true, false)))))), (_GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), false)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))))), true, false))))))) && true)) || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) / 1.0)) - sqrt(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), tan(0.0), tan(0.0))), tan(0.0))))), (injectionSwitch.x < injectionSwitch.y) || false))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false)), (bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))) || false)))))))), (bool(false)) && true)) || false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))), false || (bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))))))) || false)), false, true, false)))))), (_GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), false)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))))), true, false))))))) && true)) || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))), (injectionSwitch.y) / 1.0)) - sqrt(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), clamp(_GLF_IDENTITY(tan(0.0), min(tan(0.0), tan(0.0))), tan(0.0), tan(0.0))), tan(0.0))))), (injectionSwitch.x < injectionSwitch.y) || false))) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false)), (bool(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))) || false)))))))), (bool(false)) && true)) || false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))), false || (bool((bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false)))))))))) || false)), false, true, false)))))), (_GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), bool(bvec2((bool(false)), false)))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))), false))))))), true, false))))))) && true)) || (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.87)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.87)), float(injectionSwitch.y), bool(true))), abs(1.0), sin(0.0))), (float(vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.87)), float(injectionSwitch.y), bool(true))), abs(1.0), sin(0.0)))) / 1.0))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(-6.3), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), false || (bool(bool(! (true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, sqrt(1.0), log(1.0), 1.0, 1.0, 1.0, 0.0))))) && (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)), false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), (bool(bool(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
}
