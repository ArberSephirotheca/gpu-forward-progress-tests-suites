#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_28 {
 vec4 _f0;
} ;

struct _GLF_struct_27 {
 mat2x3 _f0;
 uvec2 _f1;
 uvec2 _f2;
 bvec4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_26 {
 mat2 _f0;
} ;

struct _GLF_struct_29 {
 bvec2 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 _GLF_struct_28 _f3;
 uint read;
 mat2x3 _f4;
} ;

struct _GLF_struct_24 {
 mat2 _f0;
} ;

struct _GLF_struct_23 {
 vec2 _f0;
 mat2 _f1;
 mat3x4 _f2;
 vec4 _f3;
 bool _f4;
 int _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_22 {
 uvec4 _f0;
 vec4 _f1;
 mat2x3 _f2;
 mat2x3 _f3;
 mat4x2 _f4;
 ivec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_25 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 vec3 _f2;
 uvec4 _f3;
 bool _f4;
 _GLF_struct_24 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
 mat3x4 _f1;
 ivec3 _f2;
 _GLF_struct_25 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_19 {
 bvec2 _f0;
 uint workgroup_base;
 ivec3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
 bvec2 _f1;
 mat4x3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 mat4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 mat3 _f1;
 _GLF_struct_17 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 float _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 _GLF_struct_12 _f1;
 uvec4 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4x3 _f2;
 float _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_21 {
 uint _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_20 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 uint workgroup_id;
 bvec3 _f3;
 uvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_6 {
 mat2x3 _f0;
 bvec4 _f1;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 uvec3 _f3;
 mat2x3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_1 {
 int _f0;
} ;

struct _GLF_struct_0 {
 uint workgroup_size;
 vec3 _f0;
 uvec2 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 vec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 float _f2;
 uvec4 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat3x4 _f1;
 int _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4052.8038)), bool(false)))), float(_GLF_FUZZED((+ _GLF_IDENTITY(-9631.4956, clamp(_GLF_IDENTITY(-9631.4956, float(_GLF_IDENTITY(mat3x2(-9631.4956, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3x2(-9631.4956, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) * mat3(1.0)))), -9631.4956, -9631.4956))))), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.4)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(85.36)), float(injectionSwitch.y), bool(true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (true && ((_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) && true)) || false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(gl_WorkGroupSize.x, vec3(1.0), uvec2(1u), bvec2(true), mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0), vec3(1.0)), bvec4(true), 1.0, uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, 0u + ((1u) ^ 0u)))), _GLF_struct_1(1), _GLF_struct_2(mat3x4(1.0), mat2x4(1.0), uvec2(1u), uvec3(1u), mat2x3(1.0), bvec2(true))), mat3x4(1.0), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_6(mat2x3(1.0), bvec4(true), _GLF_struct_5(uvec4(1u), mat4x2(1.0), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u)), gl_WorkGroupID.x, _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), uvec2(1u), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-59173) : 1))) | (1))) ^ 0)))));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(1u, _GLF_struct_11(_GLF_struct_8(bvec3(true), uvec2(1u)), _GLF_struct_9(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)), mat3x4(1.0), mat3x4(1.0), uvec2(1u)), mat4x3(1.0), 1.0, _GLF_struct_10(vec2(1.0))), _GLF_struct_15(uvec3(1u), _GLF_struct_12(mat2x3(1.0), 1.0, mat4(1.0), mat3x4(1.0)), uvec4(1u), _GLF_struct_13(uvec2(1u), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_IDENTITY((1.0) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), max((1.0) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (1.0) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) : _GLF_FUZZED(-6.9))))), bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), mat2x4(1.0)), _GLF_struct_14(ivec3(1), mat4(1.0)), vec3(1.0)), _GLF_struct_16(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), float(vec4(_GLF_IDENTITY((1.0), min((1.0), (1.0))), 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(5.9)), bool(false))) * 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))), vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(float(1.0))))))), _GLF_struct_18(mat3(1.0), mat3(1.0), _GLF_struct_17(vec4(1.0), mat4(1.0), uvec2(1u)), bvec4(true)), _GLF_struct_20(_GLF_struct_19(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-364.123), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13)), max((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), mix(float(_GLF_FUZZED(8502.8817)), float(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123)))), bool(true))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))))), _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_FUZZED(3.5), _GLF_FUZZED(3.5)))), bvec2(false, false))).y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-364.123), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3289.9143)), vec2(_GLF_FUZZED((-5.5 / -6.2)), (injectionSwitch)[1]), bvec2(false, true))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-364.123, (false ? _GLF_FUZZED(float((uvec2(7242u, 11056u) , -96428))) : -364.123))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y))), _GLF_IDENTITY(uvec2(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3289.9143)), vec2(_GLF_FUZZED((-5.5 / -6.2)), (injectionSwitch)[1]), bvec2(false, true))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-364.123, (false ? _GLF_FUZZED(float((uvec2(7242u, 11056u) , -96428))) : -364.123))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y))))), (uvec2(uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3289.9143)), vec2(_GLF_FUZZED((-5.5 / -6.2)), (injectionSwitch)[1]), bvec2(false, true))))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-364.123, (false ? _GLF_FUZZED(float((uvec2(7242u, 11056u) , -96428))) : -364.123))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y)))))) ^ uvec2(0u, 0u))))), (_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-364.123), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), clamp(_GLF_IDENTITY(_GLF_FUZZED(-364.123), (_GLF_FUZZED(-364.123)) - 0.0), _GLF_FUZZED(_GLF_IDENTITY(-364.123, (true ? -364.123 : _GLF_FUZZED(1282.1475)))), _GLF_IDENTITY(_GLF_FUZZED(-364.123), float(vec2(_GLF_FUZZED(-364.123), 1.0))))), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y)))))) | (_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, ~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-364.123), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y))))))), _GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4._f0._f0.workgroup_size, 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)))), (~ (~ (_GLF_struct_replacement_4._f0._f0.workgroup_size))) | 0u)), 0u ^ (_GLF_struct_replacement_4._f0._f0.workgroup_size)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-364.123), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-364.123), min(_GLF_FUZZED(-364.123), _GLF_FUZZED(-364.123))), (_GLF_FUZZED(-364.123)) / 1.0) : _GLF_FUZZED(-80.13))), _GLF_FUZZED(3.5)), bvec2(false, false))).y))))))) * _GLF_struct_replacement_7._f0._f2.workgroup_id, ivec3(1), mat4x2(1.0), bvec2(true)), bvec2(true), mat4x3(1.0), uvec3(1u)), bvec3(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), (bool(bool(false || (false)))) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), (bool(bool(false || (false)))) || false))), ! (! (! (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), (bool(bool(false || (false)))) || false))))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_21._f5._f0.workgroup_base, (true ? _GLF_struct_replacement_21._f5._f0.workgroup_base : _GLF_FUZZED(bitfieldReverse(subgroup_id)))) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_21._f5._f0.workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) | 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), false), false)))))), mat3x4(1.0), ivec3(1), _GLF_struct_25(_GLF_struct_22(uvec4(1u), vec4(1.0), mat2x3(1.0), mat2x3(1.0), mat4x2(1.0), ivec2(1), vec3(1.0)), _GLF_struct_23(vec2(1.0), mat2(1.0), mat3x4(1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), true, 1, mat4x2(1.0)), vec3(1.0), uvec4(1u), true, _GLF_struct_24(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(3.0, -6982.7221, _GLF_IDENTITY(2.4, mix(float(_GLF_FUZZED(-7.7)), float(2.4), bool(true))), -51.83)) : _GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(5.0, -12.35, 5.6, -221.310)))))))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat2(6577.6208, 50.13, 9.4, 5179.4752)) : _GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(mat3(transpose(mat2(1.0)))))))), mat2(1.0) * ((_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) ? _GLF_FUZZED(mat2(3.0, -6982.7221, _GLF_IDENTITY(2.4, mix(float(_GLF_FUZZED(-7.7)), float(2.4), bool(true))), -51.83)) : _GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(5.0, -12.35, 5.6, -221.310)))))))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat2(6577.6208, 50.13, 9.4, 5179.4752)) : _GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(mat3(transpose(mat2(1.0)))))))))))), mat3x4(1.0)), _GLF_struct_29(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_struct_26(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat4(1.0) * (mat2x4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-10.46, 9.6, 9955.7920, 8.4, 81.16, -4600.8006, -6676.0562, 4441.9678, -7.1, 990.984, 7.2, -68.58, 1.3, -3.9, 9.7, -2.9)))) * (mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))))))), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat2x4(23.66, -7949.6381, -901.110, -13.79, 196.016, -9.2, -881.177, 791.974))))))), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-4.4, -320.880, 0.2, -728.545))))), _GLF_struct_27(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-930.317))), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), clamp(mat2(1.0) * (vec2(1.0, 1.0)), mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) * (vec2(1.0, 1.0)), mat2(1.0) * (vec2(1.0, 1.0)))))))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (true ? dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)) : _GLF_FUZZED(-9.8))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-81.29)), float(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0)))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)) / 1.0), 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0))) + 0.0)) * (0.0)), 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-632.258)), float((1.0)), bool(true))))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0))) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)) / 1.0), 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0))) + 0.0)) * (0.0)), 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-632.258)), float((1.0)), bool(true))))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0))) - 0.0), min(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)) / 1.0), 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0))) + 0.0)) * (0.0)), 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-632.258)), float((1.0)), bool(true))))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)) / 1.0), 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0))) + 0.0)) * (0.0)), 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-632.258)), float((1.0)), bool(true))))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0))) - 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)) / 1.0), 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec3(0.0, 1.0, 0.0))) + 0.0)) * (0.0)), 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0)), ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY((1.0), ((1.0)) / 1.0), _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-632.258)), float((1.0)), bool(true))))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))) / abs(abs(1.0))) - 0.0))))))), uvec2(1u), uvec2(1u), bvec4(true), ivec4(1)), _GLF_struct_28(vec4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(subgroup_base) : virtual_gid))], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) / 1)), max(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), uint(uvec4(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (2) / 1)), max(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) / 1u), max(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, 2))), mat2x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_30._f4.read, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-90422) : 4)))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true), false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
