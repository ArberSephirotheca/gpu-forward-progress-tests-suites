#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true), false)))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(-10533))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0)))) ^ (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY((~ (int(1))) ^ 0, (_GLF_IDENTITY((~ (int(1))) ^ 0, ((~ (int(1))) ^ 0) | ((~ (int(1))) ^ 0))) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), min((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))) ^ 0) ^ 0)), ((_GLF_IDENTITY(~ (int(1)), (_GLF_IDENTITY(~ (int(1)), (true ? _GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY(int(int(~ (int(1)))), (int(int(~ (int(1))))) >> 0)) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0))) >> 0)) | ((_GLF_IDENTITY(~ (int(1)), (~ (int(1))) ^ 0))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), 0 | ((int(1)))) | (int(1))))), min((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (~ (_GLF_IDENTITY(int(1), (int(1)) | (int(_GLF_IDENTITY(1, (1) | (1)))))))))) ^ 0) ^ 0)), ((_GLF_IDENTITY(~ (int(1)), (_GLF_IDENTITY(~ (int(1)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (int(1)) | 0))))), _GLF_IDENTITY(int(int(~ (int(1)))), (int(int(~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 0, 1, 1)), (int(ivec4(int(1), 0, 1, 1))) / 1)))))) >> 0)) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), 0 | ((int(1)))) | (int(1))))), min((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (~ (_GLF_IDENTITY(int(1), (int(1)) | (int(_GLF_IDENTITY(1, (1) | (1)))))))))) ^ 0) ^ 0)), ((_GLF_IDENTITY(~ (int(1)), (_GLF_IDENTITY(~ (int(1)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (int(1)) | 0))))), _GLF_IDENTITY(int(int(~ (int(1)))), (int(int(~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 0, 1, 1)), (int(ivec4(int(1), 0, 1, 1))) / 1)))))) >> 0)) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (int(1)), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), 0 | ((int(1)))) | (int(1))))), min((~ (_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), (~ (_GLF_IDENTITY(int(1), (int(1)) | (int(_GLF_IDENTITY(1, (1) | (1)))))))))) ^ 0) ^ 0)), ((_GLF_IDENTITY(~ (int(1)), (_GLF_IDENTITY(~ (int(1)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (int(1)) | 0))))), _GLF_IDENTITY(int(int(~ (int(1)))), (int(int(~ (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec4(int(1), 0, 1, 1)), (int(ivec4(int(1), 0, 1, 1))) / 1)))))) >> 0)) : _GLF_FUZZED(_injected_loop_counter)))) ^ 0))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ (0 & 70093))) | 0) | ((_GLF_IDENTITY(~ (int(1)), (_GLF_IDENTITY(~ (int(1)), ~ (_GLF_IDENTITY(~ (~ (int(1))), (~ (~ (int(1)))) * 1)))) ^ 0)))) / 1))))))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6967.0525), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.65), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(554.755)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), bool(bvec4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), true, true, true))))))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), true && (! (true)))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6967.0525), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.65), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(554.755)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), bool(bvec4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), true, true, true))))))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), true && (! (true)))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-6967.0525), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(-6967.0525), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-6967.0525), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false)), mat2(1.0) * (mix(vec2(_GLF_FUZZED(-6967.0525), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(true, false))))))).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true, false, false)))) && true)) && true), false, true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), bool(bvec4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), true, true, true))))))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && (! _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), bool(bvec4((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) && true)), true, true, true))))))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), true && (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)) || false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))) && true), false, true))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), ! (! (! (_GLF_IDENTITY(! (true), true && (! (true)))))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))))))) && true)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))) || false)) && true)))) && true))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 continue;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, ! (! (false))) || (false)))) && true), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! (bool(injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (! (bool(injectionSwitch.x < injectionSwitch.y))))), (bool(bool(! (! (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x < injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mat2(53.71, -5.5, -13.36, -99.72), _GLF_IDENTITY(mat2(mat3(mat2(53.71, -5.5, -13.36, -99.72))), transpose(transpose(mat2(mat3(mat2(53.71, -5.5, -13.36, -99.72)))))))[1]))).y))))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))))), (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(workgroup_base))))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)) * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) << 0u)) | (1u * (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 1u))), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)) * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) << 0u)) | (1u * (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, 1u)))) >> 0u) + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(-16372), (_GLF_IDENTITY(true ? 64 : _GLF_FUZZED(-16372), (true ? 64 : _GLF_FUZZED(-16372)) >> 0)) | (true ? 64 : _GLF_FUZZED(-16372))))), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) - 0)) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 ^ (0))) - 0)) | (4))) | 0), 64, _GLF_IDENTITY(4, min(4, 4)));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           break;
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), min(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))), false, true, false))), true, true, true)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true))), true, false, true)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), max(_GLF_IDENTITY(int(8), min(_GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), (int(8)) - 0), int(8))), int(8))), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY((2), max(_GLF_IDENTITY((2), ((2)) ^ 0), (2))) / _GLF_IDENTITY((1 | _GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED((+ _injected_loop_counter)) : 1))), ((1 | _GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) ? _GLF_FUZZED((+ _injected_loop_counter)) : 1)))) - (0 & (true ? -9571 : -42059))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), 2))) << _GLF_IDENTITY(0, (0) ^ (0 | (71224 & 0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, int(ivec4(2, 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))), 2))) << _GLF_IDENTITY(0, (0) ^ (0 | (71224 & 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (true ? int(int(int(2))) : _GLF_FUZZED(int(23.25)))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (int(int(int(2))))))) - 0)) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), max(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) / exp(vec4(0.0, 0.0, 0.0, 0.0))), vec4(injectionSwitch, 1.0, 1.0))), vec4(_GLF_IDENTITY(mat3x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0), mat3x4(_GLF_IDENTITY(mat4(mat3x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9415.7687))), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(asinh(9.6)))))), (_GLF_IDENTITY(mat4(mat3x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9415.7687))), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(asinh(9.6)))))), (false ? _GLF_FUZZED(mat4(6400.2323, -866.897, 66.87, 7407.7076, -6325.6299, -6.8, 1467.6754, 5372.1900, 7.3, -6.2, 4.5, 39.36, 6.5, 7.6, 819.079, 46.92)) : mat4(mat3x4(vec4(injectionSwitch, 1.0, 1.0), 1.0, 0.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(9415.7687))), 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(asinh(9.6))))))))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))).x))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(int(2)), ~ (~ (_GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))))))), int(int(int(_GLF_IDENTITY(2, 0 ^ (2)))))), (false ? _GLF_FUZZED(-4209) : max(int(int(int(2))), int(int(int(2))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) >> 0), 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(28733) : 2))))))), (_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (int(int(int(2))))), ((~ (int(int(int(2)))))) | 0))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(int(2)), ~ (~ (_GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))))))), int(int(int(2)))), (false ? _GLF_FUZZED(-4209) : max(int(int(int(2))), int(int(int(2))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), ~ (~ (int(int(int(2))))))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(int(2)), ~ (~ (_GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))))))), int(int(int(2)))), (false ? _GLF_FUZZED(-4209) : max(int(int(int(2))), int(int(_GLF_IDENTITY(int(2), (int(2)) * 1)))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) >> 0), 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(28733) : 2))))))), (_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (int(int(int(2))))), ((~ (int(int(int(2)))))) | 0))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) >> 0), 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(28733) : 2))))))), (_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (int(int(int(2))))), ((~ (int(int(int(2)))))) | 0))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) >> 0), 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(28733) : 2))))))), (_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (int(int(int(2))))), ((~ (int(int(int(2)))))) | 0))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) >> 0), 2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(28733) : 2))))))), (_GLF_IDENTITY(int(int(int(2))), ~ _GLF_IDENTITY((~ (int(int(int(2))))), ((~ (int(int(int(2)))))) | 0))) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(int(2)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))), min(_GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))), _GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))))))))), int(int(int(2)))), (false ? _GLF_FUZZED(-4209) : max(int(int(int(2))), int(int(int(2))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(int(2))), (_GLF_IDENTITY(int(int(int(2))), _GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (int(int(int(2))))))), (_GLF_IDENTITY((_GLF_IDENTITY(int(int(int(2))), ~ (~ (int(int(int(2))))))), ~ (~ ((_GLF_IDENTITY(int(int(int(2))), ~ (~ (int(int(int(2))))))))))) | 0) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(int(int(2)), ~ (~ (_GLF_IDENTITY(int(int(2)), int(ivec3(int(int(2)), 0, 0))))))), int(int(int(2)))), (false ? _GLF_FUZZED(-4209) : max(int(int(int(2))), int(int(_GLF_IDENTITY(int(2), (int(2)) * 1))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(1 * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) + 0)), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), int(int(int(2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 | (int(2))))), max(int(int(int(2))), int(int(int(2))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), int(int(int(2))))))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), int(int(int(2)))))))) << 0))))) | 0)))))), 0 + (_GLF_IDENTITY(1 * ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), int(int(int(2))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(int(2))), max(int(int(int(2))), int(int(int(2))))))) : _GLF_FUZZED(-90884))))), (_GLF_IDENTITY(1 * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))), (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))) | (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))))), min(1 * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))), (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))) | (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))))), _GLF_IDENTITY(1 * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))), (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))) | (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))))), (1 * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))), (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))) | (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))))))) | (1 * _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))), (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))))) | (int(_GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), clamp(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), _GLF_IDENTITY(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), max(int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2)))))))))))), int(((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) / 1))))), max(int(int(int(2))), int(int(int(2))))))))))))))))))))) - 0)))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, min(64, 64)), 4);
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
