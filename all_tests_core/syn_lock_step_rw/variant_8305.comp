#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 float _f1;
 mat3 _f2;
 _GLF_struct_1 _f3;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))))) || false)) && true)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))) && true))))), true && ((_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))))) || false)) && true))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1094.7754), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((789.332 * -12.17))), bvec2(true, false))).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (false) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-434.005) : injectionSwitch.y))) / 1.0)), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float((injectionSwitch.x) / 1.0), float(_GLF_FUZZED(4876.5740)), bool(false)))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0), vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0))))) < injectionSwitch.y))))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(float(subgroup_id))) : injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(float(subgroup_id))) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(float(subgroup_id))) : injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(float(subgroup_id))) : injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(cos(float(subgroup_id))) : injectionSwitch.y))))))), true, true))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(exp(-134.904))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) * vec2(1.0, 1.0))).y) / exp(0.0)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) * vec2(1.0, 1.0))).y) / exp(0.0))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-3.8, (false ? _GLF_FUZZED(-4313.5837) : _GLF_IDENTITY(-3.8, mix(float(_GLF_FUZZED(8.0)), float(-3.8), bool(true)))))))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.x : _GLF_FUZZED(6600.8081))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)) || false))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(intBitsToFloat(4714)) : injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, log(1.0), 1.0, log(1.0), 0.0, 0.0, abs(0.0), 0.0)), 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.6), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(uvec2(58959u, 47415u).y))), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (false ? _GLF_FUZZED((+ -6225.6128)) : _GLF_IDENTITY(1.0, (1.0) * 1.0))))))), mat3(1.0), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-7735.7719, -3.5, 9.6, -4.8)) : _GLF_IDENTITY(vec4(1.0), vec4(mat3x2(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), 1.0, 0.0))))), min(_GLF_IDENTITY(vec4(1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0))), vec4(1.0))), _GLF_struct_0(mat2x3(1.0), vec3(1.0))), gl_NumWorkGroups.x);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0)))))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(mat2((vec2(1.0, 1.0)), 1.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0)), dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x2(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(mat2((vec2(1.0, 1.0)), 1.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0)), dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0))))))), (vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(mat2((vec2(1.0, 1.0)), 1.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0)), dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat4x2(_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY((vec2(1.0, 1.0)), vec2(mat2((vec2(1.0, 1.0)), 1.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0)), dot(vec2(1.0, sqrt(1.0)), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, abs(0.0), 0.0)))))))) * mat2(1.0))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED((2.0 / _GLF_IDENTITY(2.2, 1.0 * (_GLF_IDENTITY(2.2, (2.2) / 1.0)))))), vec2(_GLF_FUZZED(741.216), (injectionSwitch)[1]), bvec2(false, true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-902.762), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-0.6)), bvec2(true, false)))) * vec2(1.0, 1.0))).x > injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.2)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-698.267), _GLF_FUZZED(-5.2)), bvec2(false, false))).y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(false, false, true, false)))), false || (! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), (! (bool(bvec4(false, false, true, false)))) || false)))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true, false))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(false, false, true, false))), ! (! (! (bool(bvec4(false, false, true, false))))))))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true, true, true)))), false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))))), true), true)), true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-4425.0029, _GLF_IDENTITY(float(mat3(-4425.0029, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)), min(float(mat3(-4425.0029, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(35.69) : dot(vec4(sqrt(1.0), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)), float(mat3(-4425.0029, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.0)), bvec2(true, false))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true, ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))), true)))) && true) || false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true))))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3x2(668.180, -9395.7574, -55.56, 12.46, 8357.3624, 4.4)[2]) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), true)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7356.1389)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), true)))) && true), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), false || (bool(false))))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))) && true))) && true, bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))) && true))) && true, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ((! _GLF_IDENTITY((false), ((false)) && true))) && true))))) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))) && true))) && true, bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false))))) && true))) && true, false, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ((false)) && true)))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY((((false)) && true) || false, ((((false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false, true, false)))) || false) || false)))))) && true))) && true, bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, (((false)) && true) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((false)) && true, (((false)) && true) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(((false)) && true, (((false)) && true) || false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(((false)) && true, (((false)) && true) || false), true))), false, true)))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false))), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, (((false)) && true) || false)))))))))))))) && true))) && true, false, true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), ! (! (! (bool(bvec2(false, false))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(min(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), max(min(_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, ~ (~ (workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))), workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), min(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, max(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), clamp(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))).x, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))).x, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))).x))))), 1u, 1u))), min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) / (0u | 1u)))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), min(uint(workgroup_size), _GLF_IDENTITY(uint(workgroup_size), (false ? _GLF_FUZZED(subgroup_id) : uint(workgroup_size)))))), 0u, 0u, 1u)))) - uvec4(0u, 0u, 0u, 0u)))) / (0u | 1u))))) << 0u)) : GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)))))), _GLF_IDENTITY((uint(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))), ~ (~ ((uint(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)))))) / 1u), uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), (_GLF_IDENTITY(true ? uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) : _GLF_FUZZED((+ subgroup_size)), (true ? uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) : _GLF_FUZZED((+ subgroup_size))) | (_GLF_IDENTITY(true ? uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) : _GLF_FUZZED((+ subgroup_size)), uint(uvec4(true ? uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) : _GLF_FUZZED((+ subgroup_size)), 1u, 0u, 1u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))))), 1u))) : _GLF_FUZZED(uvec2(167680u, 71364u))), ((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, _GLF_IDENTITY(71364u, 0u | (71364u)))))) ^ uvec2(0u, 0u)), _GLF_IDENTITY((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))), ~ (~ (_GLF_IDENTITY((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floatBitsToUint(vec2(3.4, -1.1))) : (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))))))))))).x), (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(_GLF_IDENTITY(167680u, (167680u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(71364u, (71364u) | (71364u)))))).x)) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), min(_GLF_IDENTITY((0u | 0u), max((0u | 0u), _GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u)))))), (0u | 0u))), (0u | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY((subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), (_GLF_IDENTITY((subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), max((subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)))) - 0u) ^ 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u)))), clamp(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp(_GLF_IDENTITY((0u | 0u), uint(uvec3(_GLF_IDENTITY((0u | 0u), max((0u | 0u), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | ((0u | 0u))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (_GLF_IDENTITY(0u | 0u, (0u | 0u) | 0u)))))) | (_GLF_IDENTITY(uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u))), (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u)))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u)))))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (0u | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u)))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (0u | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), _GLF_IDENTITY(min((0u | 0u), (0u | 0u)), min(min((0u | 0u), (0u | 0u)), min((0u | 0u), (0u | 0u))))), (0u | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u)))), (_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (0u | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) ^ 0u))))) ^ 0u)))))), (_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), clamp(_GLF_IDENTITY(uint(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))).x, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)))))), (uint(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))) / _GLF_IDENTITY(1u, (1u) | (1u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), uint(uvec3(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), 0u, 1u))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, clamp(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), min(workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, clamp(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, clamp(subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))))), 1u)), (uint(uvec2(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), 1u))) | (uint(uvec2(uint(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))), min(_GLF_IDENTITY((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))), ((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u)))) ^ uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u)), clamp(true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u)), true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u)), true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))))), ~ (~ ((true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u))))))))).x), (uint(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) * 1u, max((subgroup_id) * 1u, (subgroup_id) * 1u))) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(uvec2(167680u, 71364u)))).x)) + 0u)), _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), ~ (~ ((0u | 0u))))) | (_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), min((0u | 0u), (0u | 0u))), (0u | 0u))))) | (uint(uint(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) | (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).x) ^ 0u)))))))) >> 0u), clamp(uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size)))))))) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) - uvec2(0u, 0u)).x, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (true ? GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.ts))).x, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) * 1u), 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, 0u ^ (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)))), _GLF_IDENTITY(1u, (0u ^ 0u) ^ (1u)), 0u, 1u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), true, false)), true && (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) - uvec2(0u, _GLF_IDENTITY(0u, min(0u, 0u))), (false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(169379u, (169379u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 164895u)) : (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) - uvec2(0u, 0u))))) | (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)), uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[0], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1])), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(0, (0) | (0))], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) | uvec2(0u, 0u), clamp((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), clamp((0), (0), _GLF_IDENTITY((0), int(int((0)))))))], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) | uvec2(0u, 0u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(0, (0) | (0))], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) | uvec2(0u, 0u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, uvec2(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[_GLF_IDENTITY(0, (0) | (0))], GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id[1]))) | uvec2(0u, 0u)))).x + ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u)), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u))) >> uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) << uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u)), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u))) >> _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u))))) << uvec2(0u, 0u))))).x, uint(uint(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), uvec2(0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u)), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u))) >> uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, min(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id))), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)) * uvec2(1u, 1u)), (_GLF_IDENTITY(clamp(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) + uvec2(0u, 0u)), GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) - uvec2(0u, 0u))), uvec2(1u, 1u) * (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u), (uvec4(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) - uvec2(0u, 0u)))))))))) * uvec2(1u, 1u))) >> uvec2(0u, 0u))) << uvec2(0u, 0u))))).x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-9894.3726)), float((injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) >> 0)))]), bool(true))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -26.86)), _GLF_FUZZED(-2542.4471)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true), false))))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false))))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, int(int(1))))))), 1 * ((_GLF_IDENTITY(1, int(ivec3(1, 0, _GLF_IDENTITY(1, int(int(1))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) | (int(1))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(int(1))), 1, 0)))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(103) : 4, int(int(_GLF_IDENTITY(false ? _GLF_FUZZED(103) : 4, (_GLF_IDENTITY(false ? _GLF_FUZZED(103) : 4, int(ivec2(false ? _GLF_FUZZED(103) : 4, 1)))) | (false ? _GLF_FUZZED(103) : 4)))))))) ^ 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(4, 1, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 1, 1))), (_GLF_IDENTITY(ivec4(4, 1, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 1, 1)))) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), max(ivec4(0, 0, 0, 0), ivec4(0, 0, 0, 0))))), clamp(int(_GLF_IDENTITY(ivec4(4, 1, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(_GLF_IDENTITY(4, (0 << _GLF_IDENTITY(int(8), int(8))) | (4)), 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(4, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) * 1), 1), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 1, 1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 1, 1)))), (int(_GLF_IDENTITY(ivec4(4, 1, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(4, 1, 1, 1))))) + 0)))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), false))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-768.470, -9.4)) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
