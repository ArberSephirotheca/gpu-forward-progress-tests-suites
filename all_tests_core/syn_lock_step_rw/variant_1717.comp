#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))) * 1.0))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(vec3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), log(1.0))))).y))) * 1.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.6)), float(injectionSwitch.y), bool(true)))), min(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.6)), float(injectionSwitch.y), bool(true)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.6)), float(injectionSwitch.y), bool(true)))))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-964.905)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), true, true, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), false, true)), false || (bool(bvec4(false, false, false, true))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), false, true)), false || (bool(bvec4(false, false, false, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), false, true)), false || (bool(bvec4(false, false, false, true))))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), false, true)), false || (bool(bvec4(false, false, false, true))))))), false, true, false))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && (false), (true && (false)) || false)), false, true)), false || (bool(bvec4(false, false, false, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true))))))))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))))))))) && true)), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true))))))))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false)))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_IDENTITY(! (! (! ((false)))), (! (! (! ((false))))) && true))))) && true)))))))))))) && true)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false)))), ! (! (_GLF_IDENTITY(true, true && (true)))))))))), ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true)))), ! (! ((! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (true) || false)))), ! (! (_GLF_IDENTITY(true, true && (true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (! (false)) && true)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), (! (false)) && true)))), _GLF_IDENTITY((bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), (! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), (! (_GLF_IDENTITY((false), ((false)) && true))) || false)) || false))), true && ((false)))) && true)) && true))))) && true, bool(bvec2((bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) && true))))) && true, false))))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bool(! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || ((! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)) && true))))))))))))))) || false, bool(bvec4((! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))) || ((! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || ((! (_GLF_IDENTITY(! (false), (! (false)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || ((! (_GLF_IDENTITY(! (false), (! (false)) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || ((! (_GLF_IDENTITY(! (false), (! (false)) && true))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))), (! (false)) && true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))))))), ((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true)))))) && true)), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), true)))) || false))) || false), _GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))))))), ((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true)))))) && true)), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), true)))) || false))) || false), _GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))), (bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, true), bvec3(bvec3(bvec3((! (false)), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))))))))))), ((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), false || (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) && true)))))) && true)), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), bool(bvec2(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(((! (false)) && true), ! (! (((! (false)) && true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(362.014)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true))))))))), true)))) || false))) || false), _GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), true, false, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), true, false, false)))))) || false), true)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && true)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) || false)))) || false))))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(89414u, uint(_GLF_IDENTITY(uvec2(89414u, 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), max(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), (uvec3(uvec2(89414u, 1u), 1u)) | uvec3(0u, 0u, 0u)), uvec3(uvec2(89414u, 1u), 1u))), (false ? _GLF_FUZZED(uvec3(415u, 121876u, _GLF_IDENTITY(139031u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (139031u), max(~ (139031u), ~ (139031u)))), uint(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (139031u), max(~ (139031u), ~ (139031u)))), ~ (~ (~ (_GLF_IDENTITY(~ (139031u), max(~ (139031u), ~ (139031u))))))), 1u)))))) : uvec3(_GLF_IDENTITY(uvec2(89414u, 1u), uvec2(0u, 0u) | (uvec2(89414u, 1u))), 1u)))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))))), 133831u, 79229u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), ~ (~ (0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 0u + (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), ~ _GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uint(uvec2((~ (0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), 0u))))))), 1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(167133u))), 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(167133u))), 0u, 0u), uvec3(0u, 0u, 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(187721u, 165333u, 69121u) & 107965u)) : _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(167133u))), 0u, 0u), uvec3(0u, 0u, 0u)))))) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), true, false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, true))), false, true))))))) || false), true)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), true, true)), true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), true, true)), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), ! (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), true), true, true)), true)))))) || false)) && true))), true))))))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) || false)))) || false))))) ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(89414u, uint(_GLF_IDENTITY(uvec2(89414u, 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), max(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), (_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), min(_GLF_IDENTITY(uvec3(uvec2(89414u, 1u), 1u), (uvec3(uvec2(89414u, 1u), 1u)) / uvec3(1u, 1u, 1u)), uvec3(uvec2(89414u, 1u), 1u)))) | uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) + 0u) | 0u), 0u, 0u)), uvec3(uvec2(89414u, 1u), 1u))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(415u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(415u, 0u | (415u)))), (uint(uint(_GLF_IDENTITY(415u, 0u | (415u))))) | (uint(uint(_GLF_IDENTITY(415u, 0u | (415u))))))), 121876u, _GLF_IDENTITY(139031u, ~ (_GLF_IDENTITY(~ (139031u), max(~ (139031u), ~ (139031u))))))) : uvec3(_GLF_IDENTITY(uvec2(89414u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(89414u, 1u), (uvec2(89414u, 1u)) / uvec2(1u, 1u)))), 1u)))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), ~ (~ (uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))))), 133831u, 79229u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))), 1u, 1u)), uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), ~ (~ (0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 0u + (_GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), ~ _GLF_IDENTITY((~ (0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), uint(uvec2((~ (_GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), 0u))))))), 1u))))))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), 0u ^ (uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), uint(uvec3((workgroup_id), 1u, 0u))) / 1u), (workgroup_id) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 0u, 0u, 1u), min(uvec4(workgroup_id, 0u, 0u, 1u), uvec4(workgroup_id, 0u, 0u, 1u)))))))) + 0u);
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))) || false)))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), 0u, 0u))), (_GLF_IDENTITY(workgroup_base, uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)))) + subgroup_base) >> 0u)))) ^ 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 0u, 0u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 0u, 0u, 1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 0u, 0u, 1u)))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (subgroup_size)))) >> 0u)), ~ (~ ((~ (subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 0u, 0u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))), min(1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size)))), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) / (0u ^ 1u)), ~ (subgroup_size))))), 1u))))), 0u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 1u)), max(uint(uvec2(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 1u)), uint(uvec2(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 1u))))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(~ (subgroup_size), 1u * (_GLF_IDENTITY(~ (subgroup_size), min(~ (subgroup_size), ~ (subgroup_size))))), 1u))))), 0u, 0u, 1u)))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (subgroup_size)))) >> 0u)), ~ (~ ((~ (subgroup_size))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch * 1425.4864)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1821.7224)))))))
      return;
     return;
    }
   return;
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)), (_GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u))) ^ 0u) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], 4, 64, 2)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY(false, bool(bool(false))))), false, true)), (bool(bvec3((! (_GLF_IDENTITY(false, bool(bool(false))))), false, true))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-382.704, -786.969)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))))).y)) || (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), true)))))))))) && true))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false)))))))))))))), bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false)))))))))))))), false, true), bvec3(bvec3(bvec3(false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false)))))))))))))), false, true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))), ! (! (! (_GLF_DEAD(false))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! (bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), false || (! (! ((false) && true))))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (! (! (! ((false) && true)))))))))), bool(bvec4((! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, _GLF_IDENTITY(! (! ((false) && true)), ! (! (! (! ((false) && true)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), ! (! ((false) && true))))), ! (! (bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! (bool(bool(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), false, true, false)))))), (! (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), false, true, false))))))) || false)))))))))))), true)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec4(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), false, true, true)))) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bvec2(_GLF_IDENTITY((! ((false) && true)), bool(bool((! ((false) && true))))), true)))))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! (bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))), true)))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), ! (! (bool(bool(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), ! (! ((false) && true))))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), false, true))))) && true))))), ! (! (bool(bool(_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))), true)))))))), true))))))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((vec4(-67.03, -8804.8262, 787.899, -8005.7226).z * _GLF_IDENTITY(9462.4613, (9462.4613) * 1.0)))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))) || false, (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))) || false, bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))) || false, bool(bool((bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))) || false))), true, true, false)))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)))), true, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)))), true, true)))))))))))))), _GLF_IDENTITY(true, false || (true)), false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), clamp(clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), (clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false))))) + 0.0)))) - 0.0), float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), clamp(clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false)))), (clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(2.7)), bool(false))))) + 0.0)))) - 0.0)))), 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(17.03)))) - 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(6.2, -6.1, -6.4, 32.56)[0]) : 0.0)), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), mix(float(float(mat4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - 0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0))), float(_GLF_FUZZED((1026.5443 / -8.8))), bool(false)))) / 1.0)), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), max((4), (4)))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (! (true))))))) && ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 ^ (4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
