#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(0.0, 0.0) + (injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (false))), true, false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false, true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), false || (_GLF_IDENTITY(bool(bvec4(! (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.2)), bool(false))) : _GLF_FUZZED(-5018.3352))) < injectionSwitch.y)), true, false)), false || (bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, true, true))), true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(sqrt(0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, true && (false))), true, true, true))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), true)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, cos(0.0), 0.0, exp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, tan(0.0), log(1.0))))), 0.0, 1.0), (false ? _GLF_FUZZED((mat2x3(-8.2, -7.0, _GLF_IDENTITY(-77.29, max(_GLF_IDENTITY(-77.29, (-77.29) + 0.0), -77.29)), -177.217, -7.4, -898.372) * mat3x2(5.4, -819.028, 8.9, 82.73, -3096.4359, -577.900))) : mat3(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), float(mat3(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), 0.0, exp(0.0), 0.0, 1.0))))), injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 0.0, cos(0.0), 0.0, exp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, tan(0.0), log(1.0))))), 0.0, 1.0), (false ? _GLF_FUZZED((mat2x3(-8.2, -7.0, _GLF_IDENTITY(-77.29, max(_GLF_IDENTITY(-77.29, (-77.29) + 0.0), -77.29)), -177.217, -7.4, -898.372) * mat3x2(5.4, -819.028, 8.9, 82.73, -3096.4359, -577.900))) : mat3(injectionSwitch.y, 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(0.0), float(mat3(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), 0.0, exp(0.0), 0.0, 1.0))))), injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true))))), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (((false))) || false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false))))))))))) && true))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), tan(0.0))), max(vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), tan(0.0))), vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), tan(0.0)))))).x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.1)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5220.5451)), bool(false)))), max(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(8.2) : float(injectionSwitch.x))), float(injectionSwitch.x))), bool(true))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + log(1.0)) > injectionSwitch.y, true, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))) || false))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), false, false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.5) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-5989.3232, -51.43, 6.4).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.9)), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, false || (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))), true))))), (bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-5.8) : injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-75.79), _GLF_FUZZED(-6.8)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))), ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), injectionSwitch[1])).y), (true ? min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), injectionSwitch[1])).y) : _GLF_FUZZED(528.572))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, log(1.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.1)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), false, true)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), false, true)), false), bvec2(bvec4(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), false, true)), false), true, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), false, true)), false), bvec2(bvec4(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))), false, true)), false), true, true))), false)))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), false))), true, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), false))), true, false), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9805.0740) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9805.0740) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9805.0740) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9805.0740) : injectionSwitch.y)))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))) ^ 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) + 0u)), uint(uvec2(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), 1u)))))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))) / 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (0u | 0u), 0u, 1u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) + 0u)), 0u, 1u)))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u ^ (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))))) + 0u))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id)))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(((workgroup_id)) << 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((workgroup_id)) << 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (174858u & (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, max(((workgroup_id)) << 0u, _GLF_IDENTITY(((workgroup_id)) << 0u, uint(uvec4(((workgroup_id)) << 0u, 1u, 1u, 1u)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) * 1u))), clamp(~ (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (false ? _GLF_FUZZED(uaddCarry((subgroup_local_id / num_workgroup), 62347u, subgroup_local_id)) : (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), clamp(bitfieldReverse(subgroup_local_id), bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) + 0u)))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), clamp(bitfieldReverse(subgroup_local_id), bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) + 0u))))))))))) ^ 0u)) | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) >> 0u), (_GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) >> 0u)) | (0u & 2113u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), min(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), min(workgroup_id, workgroup_id))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u))), 1u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), clamp(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ (1u ^ 1u)), bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), ~ (~ (bitfieldReverse(subgroup_local_id)))))), ~ (~ (_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), clamp(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ (1u ^ 1u)), bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u), ~ (~ (bitfieldReverse(subgroup_local_id))))))))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u) | (0u))) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), max(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), min((workgroup_id), _GLF_IDENTITY((workgroup_id), clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), (workgroup_id))))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (subgroup_local_id))))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) | 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(workgroup_id)), min(_GLF_IDENTITY(uint(uint(workgroup_id)), (false ? _GLF_FUZZED(bitfieldInsert(workgroup_id, subgroup_id, 81704, 86124)) : uint(uint(workgroup_id)))), uint(uint(workgroup_id)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))), ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) ^ 0u)) | ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))), ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) ^ 0u)) | ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))), ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) ^ 0u)) | ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))), ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) ^ 0u)) | ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))), ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))), ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) ^ 0u)) | ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) - 0u), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) | (0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) >> 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), ((_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (false ? _GLF_FUZZED((workgroup_size ++)) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), clamp((true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) | (_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), min(bitfieldReverse(subgroup_local_id), bitfieldReverse(subgroup_local_id)))))), (true ? _GLF_FUZZED(bitfieldReverse(subgroup_local_id)) : _GLF_FUZZED(packHalf2x16(vec2(6.7, 5069.3602))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), clamp((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), _GLF_IDENTITY((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))), ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))) | ((true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))) >> (0u | 0u)), min(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, 0u | (((workgroup_id)) << 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | 0u)) | (true ? _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))))))), (~ (_GLF_IDENTITY((workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))))))) * 1u)))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))))))))) ^ 0u) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, 0u)))))) : _GLF_FUZZED(workgroup_size))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)), ((workgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), 0u + (_GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id))))))), ~ (~ (~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))))))), ~ (_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))), ~ (_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), ~ (~ (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u))) | ((workgroup_id))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))), ((workgroup_id)) | (_GLF_IDENTITY((workgroup_id), clamp(_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))), (workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))), max((workgroup_id), (workgroup_id))))))), ((workgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (_GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) | 0u))) + 0u), (_GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (_GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), max((workgroup_id), _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (false ? _GLF_FUZZED(workgroup_size) : true ? _GLF_IDENTITY((workgroup_id), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), _GLF_IDENTITY(((workgroup_id)), (_GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) * 1u)) | (_GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) - 0u))) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), 0u | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), max(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), 0u | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), max(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec3((_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), 0u | (_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), max(_GLF_FUZZED(bitfieldReverse(subgroup_local_id)), _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) | uvec3(0u, 0u, 0u))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))), uint(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), clamp(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u)))))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))), clamp(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))), uint(uvec4(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))), 0u, 0u, 0u))), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(subgroup_local_id), _GLF_IDENTITY(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, (1u | 0u) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))), _GLF_IDENTITY((bitfieldReverse(subgroup_local_id)) ^ 0u, ((bitfieldReverse(subgroup_local_id)) ^ 0u) << 0u)))))))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (0u ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), max(bitfieldReverse(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), _GLF_IDENTITY(bitfieldReverse(subgroup_local_id), (bitfieldReverse(subgroup_local_id)) ^ 0u))))))))))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY(true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)), (true ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))) | (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u)) + 0u))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))))), min(_GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(((workgroup_id)) << 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((workgroup_id)) << 0u, (((workgroup_id)) << 0u) ^ 0u), 0u), (uvec2(_GLF_IDENTITY(((workgroup_id)) << 0u, (((workgroup_id)) << 0u) ^ 0u), 0u)) << uvec2(0u, 0u))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY((workgroup_id), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(53712u, 126012u, 28128u)[0]) : _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << _GLF_IDENTITY(0u, max(0u, 0u)))), ~ (~ ((false ? _GLF_FUZZED(uvec3(53712u, 126012u, 28128u)[0]) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), ((workgroup_id)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))))))) : _GLF_FUZZED(bitfieldReverse(subgroup_local_id))))))))) >> 0u))) | 0u)) / 1u))) | (_GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), uint(uvec4((workgroup_id), 0u, 0u, 0u)))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(0u | ((workgroup_id)), _GLF_IDENTITY(~ (~ (0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ 1u)))), (~ (_GLF_IDENTITY(~ (0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))), min(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u)))), (0u | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (workgroup_id)))), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))) + 0u)), ~ (0u | _GLF_IDENTITY(((workgroup_id)), ((_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id)))) - 0u))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))))))) | (~ (_GLF_IDENTITY(~ (0u | _GLF_IDENTITY(((workgroup_id)), _GLF_IDENTITY((((workgroup_id))), ~ (~ ((((workgroup_id)))))) / (0u ^ 1u))), (~ (0u | _GLF_IDENTITY(((workgroup_id)), ((_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | (_GLF_IDENTITY((workgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))) : _GLF_FUZZED(workgroup_size))))))) / (0u ^ 1u)))) + (66595u & 0u))))))) >> 0u), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), uint(uvec4((workgroup_id), 0u, 0u, 0u)))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(0u | ((workgroup_id)), _GLF_IDENTITY(~ (~ (0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ 1u)))), (~ (_GLF_IDENTITY(~ (0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))), min(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u)))), (0u | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (workgroup_id)))), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))) + 0u)), ~ (0u | _GLF_IDENTITY(((workgroup_id)), ((_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id)))) - 0u))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))))))) | (~ (_GLF_IDENTITY(~ (0u | _GLF_IDENTITY(((workgroup_id)), _GLF_IDENTITY((((workgroup_id))), ~ (~ ((((workgroup_id)))))) / (0u ^ 1u))), (~ (0u | _GLF_IDENTITY(((workgroup_id)), ((_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | (_GLF_IDENTITY((workgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))) : _GLF_FUZZED(workgroup_size))))))) / (0u ^ 1u)))) + (66595u & 0u))))))) >> 0u)) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), uint(uvec4((workgroup_id), 0u, 0u, 0u)))) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(0u | ((workgroup_id)), _GLF_IDENTITY(~ (~ (0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ 1u)))), (~ (_GLF_IDENTITY(~ (0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))), min(~ (_GLF_IDENTITY(0u | _GLF_IDENTITY(((workgroup_id)), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u)))), (0u | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u), (workgroup_id)))), (((workgroup_id))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))) + 0u)), ~ (0u | _GLF_IDENTITY(((workgroup_id)), ((_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id)))) - 0u))) / (0u ^ _GLF_IDENTITY(1u, min(1u, 1u))))))))) | (~ (_GLF_IDENTITY(~ (0u | _GLF_IDENTITY(((workgroup_id)), _GLF_IDENTITY((((workgroup_id))), ~ (~ ((((workgroup_id)))))) / (0u ^ 1u))), (~ (0u | _GLF_IDENTITY(((workgroup_id)), ((_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | (_GLF_IDENTITY((workgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))) : _GLF_FUZZED(workgroup_size))))))) / (0u ^ 1u)))) + (66595u & 0u))))))) >> 0u))), workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2679.7584))) > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(4, 0 | (4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0))), (_GLF_IDENTITY(1, clamp(1, 1, 1))) ^ 0)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true)), ! (! (bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true)))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(atomicMax(next_virtual_gid, workgroup_size)) : _GLF_IDENTITY(read, ~ (~ (read))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-44436)))))) | 0)) / (_GLF_IDENTITY(1 & 1, min(_GLF_IDENTITY(1 & 1, ~ (_GLF_IDENTITY(~ (1 & 1), min(~ (1 & 1), _GLF_IDENTITY(~ (1 & 1), max(~ (1 & _GLF_IDENTITY(1, (1) ^ 0)), ~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(34739))))) & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) * 1)))))))), _GLF_IDENTITY(1 & 1, 1 * (_GLF_IDENTITY(1 & 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (1 & 1) << 0)) | (_GLF_IDENTITY(1 & 1, 1 * (1 & 1)))), max(1 & 1, 1 & 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), clamp(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), clamp(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), ~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), ~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))))), ~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1)))))) >> 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), min(~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))), ~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))))))), ~ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))))))))) - 0), (~ (_GLF_IDENTITY(1 & 1, max(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)) & 1, ~ (~ (_GLF_IDENTITY(1, 1 * (1)) & 1))))))) | 0))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
