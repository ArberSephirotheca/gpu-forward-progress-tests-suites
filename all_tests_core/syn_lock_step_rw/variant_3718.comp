#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec2 _f0;
 uvec4 _f1;
 ivec4 _f2;
 mat4x2 _f3;
 mat2 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat3 _f1;
 mat2x4 _f2;
 ivec2 _f3;
 int _f4;
 mat2x3 _f5;
 uvec3 _f6;
 uint subgroup_local_id;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 ivec3 _f3;
 _GLF_struct_0 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 _GLF_struct_3 _f3;
 uint _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size;
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size.z = subgroup_size;
 GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y = GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size.z;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_1(mat4(1.0), mat3x4(1.0), mat3x2(1.0), ivec3(1), _GLF_struct_0(uvec3(1u), mat3(1.0), mat2x4(1.0), ivec2(1), 1, mat2x3(1.0), uvec3(1u), gl_SubgroupInvocationID), ivec3(1)), ivec3(1), mat3x4(1.0), _GLF_struct_3(ivec3(1), _GLF_struct_2(bvec2(true), uvec4(1u), ivec4(1), mat4x2(1.0), mat2(1.0), mat2(1.0))), 1u);
 GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x = _GLF_struct_replacement_4._f0._f4.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.z = workgroup_size;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.z * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y + GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y + ((GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x + 1) % GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y);
 GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size.y = read;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size.x], uint(1), 4, 64, 4);
 atomicStore(checker[virtual_gid], GLF_merged3_0_1_16_1_1_4_2_1_13next_virtual_gidreadsubgroup_size.y, 4, 64, 4);
}
