#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(178135u, 80946u, 166127u)) : (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))), ~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))))))))) + (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(108952u, 7501u, 125704u)) : _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize))))) + (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u)))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u))), 0u | (min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u)))))), 0u)) + (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))), uvec3(1u))))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))).x) | 0u)) | _GLF_IDENTITY(0u, (0u) | (0u))), (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) ^ (uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) ^ _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), 0u)), (true ? uvec3(uvec4((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), 0u)) : _GLF_FUZZED(uvec3(45807u, 65962u, 192404u))))))) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) >> uvec3(0u, 0u, 0u)).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0)), (float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0))) / 1.0))))), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(559.007)), vec2(_GLF_FUZZED((962.506 + 6.3)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6721.0715)), bool(false)))))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6721.0715)), bool(false)))))), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)) - 0.0))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))), ((_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))) | ((_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))))), 1u * ((_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))))), ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))), 1u * ((_GLF_IDENTITY(uint(0u), 0u | (uint(0u))))))))))), uint(0u))) | (subgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), (_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) ^ 0u)) >> 0u) - 0u))))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(subgroup_size) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) * 1u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) ^ 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (114821u & (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), subgroup_id)), max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), min(subgroup_id, subgroup_id))))), uint(uvec4((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), 0u, 0u, 1u)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(clamp(1u, 1u, 1u), _GLF_IDENTITY(clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)), (clamp(clamp(1u, 1u, 1u), clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), clamp(1u, 1u, 1u))) | (clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_id) : true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5)), (packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), max(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false)))))))) : -3.5))))) - 0u))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), 0u))))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) + 0u)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), (_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) ^ 0u)) >> 0u) - 0u))))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(subgroup_size) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) * 1u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) ^ 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (114821u & (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), subgroup_id)), max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), min(subgroup_id, subgroup_id))))), uint(uvec4((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), 0u, 0u, 1u)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(clamp(1u, 1u, 1u), _GLF_IDENTITY(clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)), (clamp(clamp(1u, 1u, 1u), clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), clamp(1u, 1u, 1u))) | (clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_id) : true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5)), (packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), max(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false)))))))) : -3.5))))) - 0u))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), 0u))))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) + 0u)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), (_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) ^ 0u)) >> 0u) - 0u))))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(subgroup_size) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) * 1u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) ^ 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (114821u & (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), subgroup_id)), max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), min(subgroup_id, subgroup_id))))), uint(uvec4((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), 0u, 0u, 1u)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(clamp(1u, 1u, 1u), _GLF_IDENTITY(clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)), (clamp(clamp(1u, 1u, 1u), clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), clamp(1u, 1u, 1u))) | (clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_id) : true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5)), (packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), max(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false)))))))) : -3.5))))) - 0u))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), 0u))))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) + 0u)))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(0u), uint(0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((uint(uint(0u))), (_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) ^ 0u)) >> 0u) - 0u))))))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(subgroup_size) : (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) * 1u), clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) ^ 0u) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, (114821u & (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))), subgroup_id)), max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), min(subgroup_id, subgroup_id))))), uint(uvec4((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), 0u, 0u, 1u)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(clamp(1u, 1u, 1u), _GLF_IDENTITY(clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)), (clamp(clamp(1u, 1u, 1u), clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u), clamp(1u, 1u, 1u))) | (clamp(clamp(1u, 1u, 1u), clamp(1u, 1u, 1u), clamp(1u, 1u, 1u)))))))), _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(609.879), _GLF_FUZZED(-6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0))).x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_id) : true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, -3.5)), (packSnorm4x8(vec4(8.3, -5251.9667, -8802.1157, _GLF_IDENTITY(-3.5, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), max(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), clamp(_GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, _GLF_IDENTITY(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8), max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(-66.54)), bool(false))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), (false ? _GLF_FUZZED(-793.610) : sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))))), _GLF_IDENTITY(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8))), mix(float(sin(_GLF_IDENTITY(0.8, max(_GLF_IDENTITY(0.8, float(mat2(0.8, 1.0, 1.0, 0.0))), 0.8)))), float(_GLF_FUZZED(2886.6281)), bool(false)))))))) : -3.5))))) - 0u))))))))) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), uint(uvec2(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), 0u))))) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | (subgroup_id))) + 0u))))))))) : _GLF_FUZZED(49833u))) : _GLF_FUZZED(subgroup_local_id))) | 0u)) + 0u) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), mix(vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(-809.680)), vec2((max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))[0], (max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))[1]), bvec2(true, true)))) / vec2(1.0, 1.0))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))), true))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))), false || ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, true, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, true, true)))))))), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false, true))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((false ? -91.95 : -8.3))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)), false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, int(ivec3(2, 1, 1))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, false, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.9)), bool(false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-585.332, mix(float(_GLF_FUZZED(81.80)), float(-585.332), bool(true))), 9.8), mix(vec2((vec2(-585.332, 9.8))[0], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(5958.3281), (vec2(-585.332, _GLF_IDENTITY(9.8, max(9.8, 9.8))))[1]), bvec2(false, true)))), max(true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-585.332, 9.8), mix(vec2((vec2(-585.332, 9.8))[0], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(5958.3281), (vec2(-585.332, 9.8))[1]), bvec2(false, true)))), true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-585.332, 9.8), mix(vec2((vec2(-585.332, 9.8))[0], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(5958.3281), (vec2(-585.332, 9.8))[1]), bvec2(false, true)))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-585.332, clamp(-585.332, -585.332, -585.332)), 9.8), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(vec2(-585.332, 9.8), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * mat3(1.0)) + (mat3(vec2(-585.332, 9.8), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(mat3(vec2(-585.332, 9.8), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(vec2(-585.332, 9.8), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) - vec2(0.0, 0.0))))))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-14.60), (_GLF_FUZZED(-14.60)) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(_GLF_FUZZED(-14.60), (_GLF_FUZZED(-14.60)) * _GLF_ONE(1.0, injectionSwitch.y))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && true)))))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(8013.0676, -2080.8775, -244.547, 98.84).y), _GLF_FUZZED(-3855.7444)), bvec2(false, false))))).x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-14.60, _GLF_IDENTITY(float(float(-14.60)), min(_GLF_IDENTITY(float(float(-14.60)), max(float(float(-14.60)), float(float(-14.60)))), _GLF_IDENTITY(float(float(-14.60)), min(float(float(-14.60)), float(float(-14.60))))))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true)), (mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.60)), (float(_GLF_FUZZED(-14.60))) / 1.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4(float(injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-9.3))))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(1.2)), bool(false))))), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) - 0.0)) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.1)), bool(false))))) && true)))))))) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), false || (bool(bvec2((false), true)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)), mix(float(_GLF_FUZZED(-4697.9879)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), bool(true)))) / abs(1.0))))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(-14.60)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat3x2(float(injectionSwitch.x), cos(0.0), tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))), bool(true))) / exp(0.0))) < injectionSwitch.y)) && true)))))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.60)), (float(_GLF_FUZZED(-14.60))) * 1.0), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)), mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && true)))))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))))))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), max(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), float(mat2x4(float(injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) - sin(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))) && _GLF_IDENTITY((false), bool(bvec2((false), true)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0)), mix(float(_GLF_FUZZED(-4697.9879)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))), bool(true)))) / abs(1.0))))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))))))) < injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))))))))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(-14.60)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat3x2(float(injectionSwitch.x), cos(0.0), tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))), bool(true))) / exp(0.0))) < injectionSwitch.y)) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))))))))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(-14.60)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat3x2(float(injectionSwitch.x), cos(0.0), tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))), bool(true))) / exp(0.0))) < injectionSwitch.y)) && true))), bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false))))))))) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(-14.60)), _GLF_IDENTITY(float(injectionSwitch.x), float(mat3x2(float(injectionSwitch.x), cos(0.0), tan(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, sqrt(0.0)))), bool(true))) / exp(0.0))) < injectionSwitch.y)) && true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.60)), (float(_GLF_FUZZED(-14.60))) * 1.0), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)), mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && true)))))))), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.60)), (float(_GLF_FUZZED(-14.60))) * 1.0), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)), mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && true)))))))))), ! (! (bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-14.60)), (float(_GLF_FUZZED(-14.60))) * 1.0), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.x)), mix(float(_GLF_FUZZED(-14.60)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && true)))))))))))))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + tan(0.0))))))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   barrier();
  }
}
