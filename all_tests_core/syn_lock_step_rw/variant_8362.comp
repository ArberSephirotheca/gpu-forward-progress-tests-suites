#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)), (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false, false, _GLF_IDENTITY(false, false || (false))))) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) || _GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY((bool(bool(! (false)))), ((bool(bool(! (false))))) || false) || false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))), false, true)))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))), false, true)))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), true && (bool(bvec4(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), false, true)))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? injectionSwitch.x : _GLF_FUZZED(5.6))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-26.17), _GLF_FUZZED(-4122.4904)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) ^ 0u), 1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, true && (false)) || (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, true, true)), (bool(bvec4(! (_GLF_DEAD(false)), true, true, true))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-356.333))))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2601.1562, -364.141)) : injectionSwitch)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-671.213) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(6.2)), bool(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.1)))) + 0.0), 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(-533.250, 99.04, -0.5, -62.84, 4997.4388, -1077.4812, 29.25, 820.060, 15.24, -590.250, 884.293, 9013.6886, 9.1, -0.6, -4.3, 810.291))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(824.158)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, true, true))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-86.95)), vec2(_GLF_FUZZED(4.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)) - 0.0)), bvec2(false, true))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))) + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), clamp((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0))))), (_GLF_IDENTITY(1, int(ivec2(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), _GLF_IDENTITY(min((_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 1))))), int(_GLF_IDENTITY(ivec2(min((_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 1))))), 1), ivec2(0, 0) ^ (ivec2(min((_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY(1, int(ivec2(1, 1))))), 1)))))))) | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(ivec4(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0, 0, 0))), _GLF_IDENTITY(1, int(ivec2(1, 1)))))) | (1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)), min(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-94346))), 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)))))))))))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)))) | (1)), (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1))) | (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) - 0), 0, 0)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), ((1)) | 0), ((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) + ivec4(0, 0, 0, 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), ((1)) | 0), ((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(0, 0, 0, 0) + (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) >> ivec4(0, 0, 0, 0))))))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), ((1)) | 0), ((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) - 0)), 1)))) | (_GLF_IDENTITY(1, 0 | (1)))) * 1)))), _GLF_IDENTITY(0, min(0, 0)), 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, clamp(0, 0, 0))), ((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1))), (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))) - 0)) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1))), (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))) - 0)))), 0, 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)))) + _GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-38344) : _GLF_IDENTITY(0, (0) >> 0))), 0, 0, 0), (ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-38344) : _GLF_IDENTITY(0, (0) >> 0))), 0, 0, 0)) ^ (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)))), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), clamp(int(ivec2(1, 1)), int(ivec2(1, 1)), int(ivec2(1, 1)))))) | _GLF_IDENTITY((1), ((1)) | 0), ((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), ((1)) | 0), ((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))) | (1)) * _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(85238))), _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) | (1)))) * 1)))), 0, 1, int(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y)))) + ivec4(0, 0, 0, 0))))))) | ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))) - _GLF_IDENTITY(0, min(0, 0)))) | (1)) * 1, ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1), (~ (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)) | (~ (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1))))))))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))), 1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), ~ (~ (int(ivec2(1, 0)))))))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (_GLF_IDENTITY(1, (1) >> 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(1, 1)), (true ? (ivec2(1, 1)) : _GLF_FUZZED(ivec2(96171, 97231))))), min(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, 1)), (ivec2(1, 1) * (ivec2(1, 1))) | ivec2(0, 0)))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), min(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), min(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))))))))))))) | (1), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(ivec2(1, 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))))) | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(70741)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(45870))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, 0 + (1)))), 1)), 1)))), ((_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0)) - 0) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618))))))))))) + ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), 1)))), max((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), 1)))), (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), 1)))))) / 1)) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)))), 0, 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-8.7)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1938.8092)), bool(false)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-2694.5679)), bool(false))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)))) - 0)), ~ (~ ((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, max(1, 1)), 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1)))))))) | (1), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))) - _GLF_IDENTITY(0, min(0, 0)))) | (1)) * 1, ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1), (~ (_GLF_IDENTITY(((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)), (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1))) << (0 | 0)) * 1)) | (~ (((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1))))))))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))), 1)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), ~ (~ (int(ivec2(1, 0)))))))) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), min(_GLF_IDENTITY(ivec2(1, 1), max(ivec2(1, 1), ivec2(1, 1))), ivec2(1, 1)))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(1, 1)), (true ? (ivec2(1, 1)) : _GLF_FUZZED(ivec2(96171, 97231))))), min(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(1486))))), (_GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0))) | (ivec2(1, 1))) * (ivec2(1, 1))) | ivec2(0, _GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) - 0), 1))), ivec2(1, 1) * (ivec2(1, 1))), min(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, _GLF_IDENTITY(1, max(1, 1))))), _GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), min(_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1))))))))))))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))))), 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), int(ivec2(1, 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))))) | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(70741)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(45870))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), 1 * (_GLF_IDENTITY(1, 0 + (1)))))), 1)), 1)))), ((_GLF_IDENTITY(1, int(ivec2(1, 1))))) << 0)) - 0) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)), injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618)))), clamp(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618)))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618)))), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7870.5618))))))))))))))) + ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) ^ 0))), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), 1)))), max((_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), 1)))), (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), 1)))))) / 1)) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)))), 0, 1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-8.7)), bool(false))), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1938.8092)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1938.8092)), bool(false)))) + 0.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-2694.5679)), bool(false))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))), (ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1), ((_GLF_IDENTITY(1, int(ivec2(1, 1)))) | (1)) * 1)))), 0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) + ivec4(0, 0, 0, 0)))) - 0)))))))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), max(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))), int(ivec2(1, 1)))) | (1))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 0 | (64)))), 64)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 0 | (64)))), 64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 0 | (64)))), 64)), (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 0 | (64)))), 64))) >> 0), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 0 | (64)))), 64)))) : _GLF_FUZZED(-70259)))) | (0 >> _GLF_IDENTITY(int(2), int(2)))), 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(55174)))) | (64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true))), bool(bvec3(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false, true))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.1)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.1)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(0u | (read), (0u | (read)) >> 0u)), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(int(clamp(4, 4, 4))), _GLF_IDENTITY(0 ^ (int(int(clamp(4, 4, 4)))), (_GLF_IDENTITY(0 ^ (int(int(clamp(4, 4, 4)))), 1 * (_GLF_IDENTITY(0 ^ (int(int(clamp(4, 4, 4)))), (0 ^ (int(int(clamp(4, 4, 4))))) >> 0)))) ^ (1 ^ 1)))), (_GLF_IDENTITY(clamp(4, 4, 4), int(int(clamp(4, _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, int(int(0))))))))))) | (0 >> _GLF_IDENTITY(int(3), int(3))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.5) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), bool(bvec3(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(450.399), _GLF_FUZZED(6772.1876)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(true, true))), 1.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0))), clamp(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0))), mix(vec2(_GLF_FUZZED(450.399), _GLF_FUZZED(6772.1876)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(true, true))), 1.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), 1.0 * (sqrt(1.0))))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(450.399), _GLF_FUZZED(6772.1876)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))), true))), 1.0, length(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(450.399), max(_GLF_FUZZED(450.399), _GLF_FUZZED(450.399))), _GLF_FUZZED(6772.1876)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(true, true))), 1.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, sqrt(1.0))), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(450.399), _GLF_FUZZED(6772.1876)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(true, true))), 1.0, length(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0)))) * vec2(1.0, 1.0))))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (! (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(1.0), 0.0))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))) || (false)), _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4979.0580)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) * (injectionSwitch)).y))) && true), false, true))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, abs(1.0), 0.0, abs(0.0))), vec2(0.0, 0.0) + (vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), 0.0, abs(1.0), 0.0, abs(0.0))))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) && true), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))) || false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), false, false, true))), false || (bool(bvec4(false, false, false, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((1258.5860))), float(injectionSwitch.y), bool(true)))), (_GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((1258.5860))), float(injectionSwitch.y), bool(true))))) - 0.0)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))) && true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(422.123)), bool(false))), _GLF_IDENTITY((injectionSwitch.x) + determinant(mat2(0.0, 0.0, 0.0, 0.0)), (true ? (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(7265.7549)))) > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false)))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-317.569, -8.7)))).y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, true), true))))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-317.569, -8.7)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-317.569, -8.7)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-317.569, -8.7)))).y)))))))))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), false, false, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), false)), ! (! (bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), false)))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), (bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true, true)))))))))))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), false))))), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.9)), bool(_GLF_IDENTITY(false, (false) && true)))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.9)), bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.9)), bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8.9)), bool(_GLF_IDENTITY(false, (false) && true)))))) > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) && true))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), true && (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), true, true)))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), true && (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), true, true))))))))))) || false))))))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
