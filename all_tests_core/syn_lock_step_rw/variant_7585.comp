#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY((_GLF_FUZZED(injectionSwitch)), (true ? (_GLF_FUZZED(injectionSwitch)) : _GLF_FUZZED(vec2(-4.6, 6.8)))) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((32.37 - (- 869.925))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))) - tan(vec2(0.0, 0.0)))))), _GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) / vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))) - tan(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-88.55)), float(0.0), bool(true))))))))[0], _GLF_IDENTITY(_GLF_FUZZED(0.1), (_GLF_FUZZED(0.1)) * 1.0)), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.1)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(0.1)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(0.1)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(0.1)))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) ^ 0)))], _GLF_IDENTITY(_GLF_FUZZED(0.1), mix(float(_GLF_FUZZED(0.1)), float(_GLF_FUZZED(5.0)), bool(false)))))), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(_GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))), bool(bvec2((_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))), true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false))))) || (_GLF_IDENTITY((false), true && ((false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))), 0.0, 1.0))), injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true), false, false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))), 0.0, 1.0))), injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true), false, false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))))) && true))) && true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(vec4(3594.1463, -664.450, -425.566, -3518.0850).a)), bvec2(false, false)))) + vec2(0.0, 0.0)).y))), true, true, false)))), true, false)), true && (bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false)))), true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sqrt(vec2(7647.0440, -67.27))) : injectionSwitch)))).y)), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(vec3(-50.05, 44.80, -5.7).y) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(vec3(-50.05, 44.80, -5.7).y) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), min(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(vec3(-50.05, 44.80, -5.7).y) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(vec3(-50.05, 44.80, -5.7).y) : _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))), 0.0, _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), float(mat3x2(dot(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))))), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))))))))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), false, false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec4(bvec2(! (! (false)), false), true, false)))))))), false, false, false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))), true, false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))), true, false, true))))))) || false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! (false)) || false))), true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (! (false)) || false))), true, true)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (! (false)) || false))), true, true)), _GLF_IDENTITY(true, true && (true)))))))), true, true))))))), false, false, false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x > injectionSwitch.y)) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) ^ 0u), subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u)) | ((workgroup_base))), (workgroup_base))) << 0u))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(virtual_gid) : workgroup_base))) / 1u) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))), (subgroup_size)))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) - 0u), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))) ^ 0u)), min(_GLF_IDENTITY((true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), (1u * (subgroup_base)) - 0u)), max(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), (1u * (subgroup_base)) / 1u)), _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 1u * (_GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) * 1u))))), clamp(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))))))), (false ? _GLF_FUZZED(virtual_gid) : (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))), (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)))))))) >> 0u), 0u))), min((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), max(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size)))) - 0u))), (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size))), max(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size))) | 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(0u, (0u) / 1u) & 118042u) + (subgroup_base)))))) >> 0u), 0u))), (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id))) ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))), ~ (_GLF_IDENTITY(~ (0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, (1u | 1u), 0u), min(uvec3(subgroup_size, (1u | 1u), 0u), uvec3(subgroup_size, (_GLF_IDENTITY(1u | 1u, (_GLF_IDENTITY(1u | 1u, (1u | 1u) * 1u)) ^ 0u)), 0u)))))), 0u | ((subgroup_size))), (subgroup_size)))), (_GLF_IDENTITY(~ (0u ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u)))))), 1u * (~ (0u ^ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (59344u & 0u)), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))))))) + 0u)))), (1u & ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id))) ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))), ~ (_GLF_IDENTITY(~ (0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, (1u | 1u), 0u), min(uvec3(subgroup_size, (1u | 1u), 0u), uvec3(subgroup_size, (_GLF_IDENTITY(1u | 1u, (_GLF_IDENTITY(1u | 1u, (1u | 1u) * 1u)) ^ 0u)), 0u)))))), 0u | ((subgroup_size))), (subgroup_size)))), (_GLF_IDENTITY(~ (0u ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u)))))), 1u * (~ (0u ^ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (59344u & 0u)), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))))))) + 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_local_id))) ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) << 0u), 0u))) >> 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, (1u | 1u), 0u), min(uvec3(subgroup_size, (1u | 1u), 0u), uvec3(subgroup_size, (_GLF_IDENTITY(1u | 1u, (_GLF_IDENTITY(1u | 1u, (1u | 1u) * 1u)) ^ 0u)), 0u)))))), 0u | ((subgroup_size))), (subgroup_size)))), (_GLF_IDENTITY(~ (0u ^ _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 1u)))))), 1u * _GLF_IDENTITY((~ (0u ^ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (59344u & 0u)), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))))), (false ? _GLF_FUZZED(subgroup_local_id) : (~ (0u ^ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (59344u & 0u)), min(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))), (subgroup_size))))))))) + 0u))))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))), ~ (~ (uint(_GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size))))))))))), _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))) >> 0u), _GLF_IDENTITY(0u, (1u & 1u) * (0u))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), 0u ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base)))) >> 0u), 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 1u))) ^ (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), (bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) || false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), (bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) || false)) || false))) ? 0u : _GLF_FUZZED(subgroup_base)))) >> _GLF_IDENTITY(0u, (0u) / 1u)), 0u))) : _GLF_FUZZED(uvec3(167276u, 24575u, 127016u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 1.0 * (float(mat2x4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))) > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 1.0 * (float(mat2x4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))) > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)), 1.0 * (float(mat2x4(injectionSwitch.x, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0))))) > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(-2.4)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, true, false))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), false)), true)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, true)))))))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), float(mat4x3(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0), vec2(0.0, 1.0))) * (length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), clamp(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, clamp(_GLF_IDENTITY((4) << 0, max((4) << 0, (4) << 0)), _GLF_IDENTITY((4) << 0, ~ (~ ((4) << 0))), (4) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) * 1))), 64, _GLF_IDENTITY(2, min(2, 2)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 do
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       return;
      }
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-650.490, -3.4)) : injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
