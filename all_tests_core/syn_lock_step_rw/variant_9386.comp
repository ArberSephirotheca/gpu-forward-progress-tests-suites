#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ! (! ((false) || false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)) || false, ! (! ((false) || false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false))), ! (! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false)))))))), ! (! (! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false)) && true))), ! _GLF_IDENTITY((! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true, false, true)), false)))), (false) || false))))))), false || ((! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true, false, true)), false)))), (false) || false))))))))))))))))), (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false))), ! (! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false)))))))), ! (! (! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false)) && true))), ! _GLF_IDENTITY((! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true, false, true)), false)))), (false) || false))))))), false || ((! (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), false)))), (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))), true, false, true)), false)))), (false) || false)))))))))))))))))) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y) && true)) && true))))), true, false, false)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))), bool(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), ! (_GLF_IDENTITY(! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), (! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))) || false))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y)))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y)))))) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y)))))) && true))) || false))) && true))))), true, false, false)), false || _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))), bool(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), ! (_GLF_IDENTITY(! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), (! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))), bool(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), ! (_GLF_IDENTITY(! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), (! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))) || false))))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))), bool(_GLF_IDENTITY(bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.5)), vec2(_GLF_FUZZED(float((134244u | 42167u))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)))), true, false, false)))), ! (_GLF_IDENTITY(! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))))), (! (bool((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, false || (false)), false)))))) || false)))))) || false)) && true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)), _GLF_IDENTITY(false, (false) && true), false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false))), true)))))), true, false, false)))))), false, false, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))), false, false, false))), ! (! (false || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) && true), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))), false, false, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size)), 0u + (workgroup_size))) - 0u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, 0u, 0u), uvec3(uvec3(uvec3(workgroup_id, 0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldExtract(_GLF_IDENTITY(num_workgroup, max(num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))), -90992, 4199), min(bitfieldExtract(num_workgroup, -90992, 4199), bitfieldExtract(_GLF_IDENTITY(num_workgroup, (num_workgroup) - 0u), -90992, 4199))), clamp(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (_GLF_IDENTITY(bitfieldExtract(_GLF_IDENTITY(num_workgroup, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))), uint(uint((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))), uint(uint((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))), uint(uint((_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u))))))))) << 0u)))))), max(~ (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY(uint(uvec4(num_workgroup, 1u, 0u, 1u)), max(uint(uvec4(num_workgroup, 1u, 0u, 1u)), uint(uvec4(num_workgroup, 1u, 0u, 1u)))))), ~ (_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))))))), -90992, 4199), uint(uint(bitfieldExtract(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), -90992, 4199))))) | (bitfieldExtract(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), ((num_workgroup)) ^ 0u) ^ 0u), -90992, 4199))), bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (true ? bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (-90992)), 4199) : _GLF_FUZZED(bitfieldInsert(66874u, workgroup_id, -65890, -470)))))))), uint(uvec2((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, 0u, 0u), uvec3(uvec3(uvec3(workgroup_id, 0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldExtract(_GLF_IDENTITY(num_workgroup, max(num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))), -90992, 4199), min(bitfieldExtract(num_workgroup, -90992, 4199), bitfieldExtract(num_workgroup, -90992, 4199))), clamp(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (_GLF_IDENTITY(bitfieldExtract(_GLF_IDENTITY(num_workgroup, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(53670u) : ~ (0u))))))), 1u)))), max(~ (_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))), ~ (_GLF_IDENTITY(num_workgroup, uint(uvec4(num_workgroup, 1u, 0u, 1u)))))))), -90992, 4199), uint(uint(bitfieldExtract(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup)), _GLF_IDENTITY(-90992, ~ (~ (_GLF_IDENTITY(-90992, (-90992) | 0)))), 4199))))) | (bitfieldExtract(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), ((num_workgroup)) ^ 0u) ^ 0u), 1u * (_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), _GLF_IDENTITY(((num_workgroup)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(((num_workgroup)) ^ 0u, clamp(((num_workgroup)) ^ 0u, _GLF_IDENTITY(((num_workgroup)) ^ 0u, (((num_workgroup)) ^ 0u) | (((num_workgroup)) ^ 0u)), ((num_workgroup)) ^ 0u))))) ^ 0u))), -90992, 4199))), bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (true ? bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), (true ? _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), ((0 >> _GLF_IDENTITY(int(1), int(1)))) | 0) : _GLF_FUZZED(25024)))) | ((0 >> _GLF_IDENTITY(int(1), int(1))))) ^ (-90992)), 4199) : _GLF_FUZZED(bitfieldInsert(66874u, workgroup_id, -65890, -470)))))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), min(0u >> _GLF_IDENTITY(uint(7u), uint(7u)), 0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), 0u | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_id, 0u, 0u), uvec3(uvec3(uvec3(workgroup_id, 0u, 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), min(bitfieldExtract(num_workgroup, -90992, 4199), bitfieldExtract(num_workgroup, -90992, 4199))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, _GLF_IDENTITY(4199, clamp(4199, 4199, 4199))), (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u), -90992, 4199))), bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (true ? bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (-90992)), 4199) : _GLF_FUZZED(bitfieldInsert(66874u, workgroup_id, -65890, -470))))), (clamp(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, _GLF_IDENTITY(4199, clamp(4199, 4199, 4199))), (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(_GLF_IDENTITY(num_workgroup, (num_workgroup) ^ 0u), -90992, 4199))), bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (true ? bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (-90992)), 4199) : _GLF_FUZZED(bitfieldInsert(66874u, workgroup_id, -65890, -470)))))) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), uint(uvec3(workgroup_id, 0u, 0u))) : _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), clamp(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY((_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (bitfieldExtract(num_workgroup, -90992, 4199)) / ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) | (bitfieldExtract(num_workgroup, -90992, 4199)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)))), max(_GLF_IDENTITY((_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (bitfieldExtract(num_workgroup, -90992, 4199)) ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))), 1u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))), 1u, 1u))))) | (uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))), 1u, 1u)))), min(uint(uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))), 1u, 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), _GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, clamp(-90992, -90992, -90992)))), 4199))), min(uint(uint(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, clamp(-90992, -90992, -90992)))), 4199))), uint(uint(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, clamp(-90992, -90992, -90992)))), 4199))))))), 1u, 1u), (false ? _GLF_FUZZED(uvec3(subgroup_id, uvec2(90857u, 121293u))) : uvec3(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), max(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), _GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, clamp(-90992, -90992, -90992)))), 4199))), min(uint(uint(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, clamp(-90992, -90992, -90992)))), 4199))), uint(uint(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, clamp(-90992, -90992, -90992)))), 4199))))))), 1u, 1u)))))))) | (uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))))) | (bitfieldExtract(num_workgroup, -90992, 4199)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false, false))))), ((! (_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)) : _GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false))))))) ? (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))))))))))), true, false, false))))))) ? (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)) : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false))))))) ? (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)) : _GLF_FUZZED(subgroup_id), ~ (~ (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))), bool(bvec4(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false, false))))))) ? (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) | (bitfieldExtract(num_workgroup, -90992, 4199)) : _GLF_FUZZED(subgroup_id)))))))), (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), (_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), (uint(uint(bitfieldExtract(num_workgroup, -90992, 4199)))) | (uint(_GLF_IDENTITY(uint(bitfieldExtract(num_workgroup, -90992, 4199)), uint(_GLF_IDENTITY(uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))), 1u * (uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))))))))) ^ 0u))) | (bitfieldExtract(num_workgroup, -90992, 4199)))), ((_GLF_IDENTITY(_GLF_IDENTITY(bitfieldExtract(num_workgroup, _GLF_IDENTITY(-90992, (-90992) | (_GLF_IDENTITY(-90992, ~ (~ (-90992))))), 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199)))), (_GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), uint(uint(bitfieldExtract(num_workgroup, -90992, 4199))))) - (0u | 0u))) | _GLF_IDENTITY((bitfieldExtract(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), -90992, 4199)), ~ (~ ((bitfieldExtract(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), -90992, 4199)))))) ^ 0u)) ^ 0u)), bitfieldExtract(num_workgroup, -90992, 4199), _GLF_IDENTITY(bitfieldExtract(_GLF_IDENTITY(num_workgroup, clamp(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)), num_workgroup, num_workgroup)), -90992, 4199), (true ? _GLF_IDENTITY(bitfieldExtract(num_workgroup, -90992, 4199), (bitfieldExtract(num_workgroup, -90992, 4199)) / 1u) : _GLF_FUZZED(bitfieldInsert(66874u, workgroup_id, _GLF_IDENTITY(-65890, ~ (~ (_GLF_IDENTITY(-65890, (-65890) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))), -470)))))))))) | 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(true, true)))))), (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(true, true)))))), (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, bool(bool(true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), true, true)), bool(bvec3(bool(bvec3(! (true), true, true)), false, true)))))), true)))))), (injectionSwitch.x < injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))), min(uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))), uint(uint(_GLF_IDENTITY(uint(4u), uint(4u)))))))) * 1u)), ((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) / 1.0), injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u))) | (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, 1)))), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u + (4u))) >> 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 4u))), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u), (uvec3((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))), ~ (~ (uint(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))))))), 0u | (uint(_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))), ~ (~ (uint(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))))))))))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u)) | (uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u)))), (uint(_GLF_IDENTITY(uvec3((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(atomicMax(workgroup_size, virtual_gid)) : uint(4u)))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(_GLF_IDENTITY(uint(4u), (uint(4u)) | 0u), uint(4u))))) * 1u)), 1u, 0u), _GLF_IDENTITY((uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(13914)))))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(13914)))))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u)), ~ (_GLF_IDENTITY(~ ((uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(13914)))))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u))), (~ ((uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(13914)))))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u)))) ^ uvec3(0u, 0u, 0u)))))) | (uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, (4u) + 0u), 4u, 4u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))) * 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))) * 1u, max((_GLF_IDENTITY(uint(4u), uint(4u))) * 1u, (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), uint(4u))) * 1u, ((_GLF_IDENTITY(uint(4u), uint(4u))) * 1u) >> 0u), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)))), 1u, 0u))))) | (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size), uint(uvec2(((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size), _GLF_IDENTITY(0u, (0u) * 1u))))) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) - 0u)), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u), (uvec3((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), 1u, 0u)) | (uvec3(_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), clamp((((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), (((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)), (((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) % subgroup_size)) * ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) * 1u)))), 1u, 0u))))))))));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) + 0u, _GLF_IDENTITY(uint(uint((buf[virtual_gid]) + 0u)), ~ (~ (_GLF_IDENTITY(uint(uint((buf[virtual_gid]) + _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), 0u ^ (_GLF_IDENTITY(uint(uint((buf[virtual_gid]) + _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), max(uint(uint((buf[virtual_gid]) + _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), uint(uint((buf[virtual_gid]) + _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))))))))), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) | (4))) | 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && ((false) && _GLF_IDENTITY(true, (true) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
