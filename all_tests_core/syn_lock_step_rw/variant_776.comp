#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true)), ! (! (bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(366.086)), vec2(_GLF_FUZZED(1103.6378), (injectionSwitch)[1]), bvec2(false, true))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(366.086)), vec2(_GLF_FUZZED(1103.6378), (injectionSwitch)[1]), bvec2(false, true))).y)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        return;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.8, -45.34)))).y))))
        break;
       return;
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (false ? _GLF_FUZZED((subgroup_size)) : _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, (false ? _GLF_FUZZED(uvec3(104451u, 79876u, 66179u).b) : (gl_WorkGroupSize.x) - 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) * uvec3(1u, 1u, 1u), ((gl_WorkGroupSize) * uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), (gl_WorkGroupSize))) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), uvec3(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * 1u)), 1u)))))))), gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x) - 0u)))))) >> 0u);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    break;
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << (0u | 0u));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), false, false, true))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))), bool(bvec3(bool(bool(_GLF_IDENTITY((! (false)), false || ((! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY((! (false)), false || ((_GLF_IDENTITY(! (false), (! (false)) && true))))))) || false)), false))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     else
      {
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))
            return;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (1))), max(1, 1))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(6), int(6))) ^ (_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 1, 0))))))))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) ^ 0)), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7)))))) << 0))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0)))), int(7))), min(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) ^ 0)), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7)))))) << 0))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0)))), int(7))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) ^ 0)), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7)))))) << 0))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0)))), int(7)))) * 1), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) ^ 0)), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7)))))) << 0))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0)))), int(7))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(7, 7))) ^ 0)), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7))))), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 | (7)), min(_GLF_IDENTITY(7, 0 | (7)), _GLF_IDENTITY(7, 0 | (7)))))) << 0))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0)))), int(7)))) >> 0))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, 0 | (7))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, 0 | (_GLF_IDENTITY(7, 0 ^ (7))))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0))), max(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, 0 | (_GLF_IDENTITY(7, 0 ^ (7))))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0))), _GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, 0 | (_GLF_IDENTITY(7, 0 ^ (7))))), (~ (_GLF_IDENTITY(7, 0 | (7)))) | 0)))))) >> 0)), int(7)))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))) & -62017)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
            break;
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), max((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), ! (! (true))))))))
      return;
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (98942 & int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))), ~ (~ (uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))) * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(-2.8, -2296.6950, 6.5, -557.868)), 0u + (packSnorm4x8(vec4(-2.8, -2296.6950, 6.5, -557.868))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (158592u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size)))) + 0u) << 0u), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)))), uint(uvec4(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))), ~ (~ (uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), uvec3(subgroup_id, 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))) * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(-2.8, -2296.6950, 6.5, -557.868)), 0u + (packSnorm4x8(vec4(-2.8, -2296.6950, 6.5, -557.868))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> (158592u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), 0u ^ ((subgroup_id * subgroup_size)))) + 0u) << 0u), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), subgroup_id * subgroup_size)))), 0u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(4183), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), int(int(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) * _GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / (0u | 1u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))))) ^ 0u), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(4183), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(4183), 0 ^ (_GLF_FUZZED(4183))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) / 1))))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1))))))))))))), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) * 1u) | 0u)) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / (0u | 1u)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (true ? ((subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id))) | 0u)), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) << 0u) >> 0u)) / (0u | 1u)), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1)) | 0u)) >> 0u)) / (0u | 1u)), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))) / 1u)))) | 0u)) >> 0u)) / (0u | 1u)))) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(4183), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(4183), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))) | 0))), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) * 1u) | 0u)) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / (0u | 1u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(4183), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(4183) : _GLF_FUZZED(-75443))))))) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(4183), (_GLF_IDENTITY(_GLF_FUZZED(4183), (_GLF_FUZZED(4183)) << 0)) / 1) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(4183) : _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))))))), _GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1)))))) * 1u) | 0u)) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0u, ~ (~ (0u))))))) / (0u | 1u)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (true ? ((subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id))) | 0u)), ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))) << 0u) >> 0u)) / (0u | 1u)), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1)) | 0u)) >> 0u)) / (0u | 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1)) | 0u)) >> 0u)) / (0u | 1u), 0u | ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1)) | 0u)) >> 0u)) / (0u | 1u))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1)) | 0u)) >> 0u)) / (0u | 1u), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)) + 1)) | 0u)) >> 0u)) / (0u | 1u)))), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ _GLF_IDENTITY(((subgroup_local_id + 1)), 0u + (((subgroup_local_id + 1))))))) | 0u)) >> 0u)) / (0u | 1u)))) % subgroup_size)) ^ 0u);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) / 1), 64, 0);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))))) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(false, false || (false)) || ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(false)))), (false || ((! (_GLF_DEAD(false))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))), false || ((! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), false || ((! (_GLF_DEAD(false)))))) || false)) || false))) || false, false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))))))), false || ((! (_GLF_DEAD(false)))))) || false))) || false))), false))))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                {
                }
               else
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
                }
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))));
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-545.937, (-545.937) / 1.0), 6.0)) : injectionSwitch)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)[1]), vec2(_GLF_FUZZED(4301.6199), _GLF_FUZZED(-920.162)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(_GLF_IDENTITY(-545.937, (-545.937) - 0.0), -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))).y))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-545.937, (-545.937) / 1.0), 6.0)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-9.3)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[1]), bvec2(true, true))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))))).y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-545.937, (-545.937) / 1.0), 6.0)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-9.3)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[1]), bvec2(true, true))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))))).y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-545.937, (-545.937) / 1.0), 6.0)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-9.3)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[1]), bvec2(true, true))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))))).y))), true))), false)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-545.937, (-545.937) / 1.0), 6.0)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-9.3)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[1]), bvec2(true, true))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))))).y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-545.937, (-545.937) / 1.0), 6.0)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))), mix(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-9.3)), vec2((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[0], (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch))))[1]), bvec2(true, true))), (clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), (vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0), vec2(_GLF_IDENTITY(-545.937, min(-545.937, -545.937)), 6.0)))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-545.937, 6.0)) : injectionSwitch)))) / exp(vec2(0.0, 0.0)))))).y))), true))), false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
            continue;
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || false)), bool(bool((_GLF_WRAPPED_LOOP(false))))))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1))))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))))) > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0))))) > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2976.5602))))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1))); _injected_loop_counter ++)
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-762.861), _GLF_FUZZED(7892.5745)), bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), false))), injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))) || false)), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, cos(tan(0.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, abs(1.0), abs(sqrt(1.0)))))))))))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))));
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
              {
               do
                {
                 return;
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
      }
     else
      {
      }
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, _GLF_IDENTITY(1, max(1, 1))))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)))), int(5)), _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY((5), 0 | ((5))) | 0)), int(5)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), min(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)) : _GLF_FUZZED(-95840))))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) >> 0) + 0))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), min(1 * (_GLF_IDENTITY(5, (5) | 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), (1 * (_GLF_IDENTITY(5, (5) | 0))) | (1 * (_GLF_IDENTITY(5, (5) | 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(int(5), int(5)), 1, 1)))) >> 0), (_GLF_IDENTITY(int(5), int(5))) + 0)))), max(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), min(1 * (_GLF_IDENTITY(5, (5) | 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), (1 * (_GLF_IDENTITY(5, (5) | 0))) | (1 * (_GLF_IDENTITY(5, (5) | 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(int(5), int(5)), 1, 1)))) >> 0), (_GLF_IDENTITY(int(5), int(5))) + 0)))), (((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), min(1 * (_GLF_IDENTITY(5, (5) | 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), (1 * (_GLF_IDENTITY(5, (5) | 0))) | (1 * (_GLF_IDENTITY(5, (5) | 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(int(5), int(5)), 1, 1)))) >> 0), (_GLF_IDENTITY(int(5), int(5))) + 0))))) - 0), ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), min(1 * (_GLF_IDENTITY(5, (5) | 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(5, (5) | 0)), (1 * (_GLF_IDENTITY(5, (5) | 0))) | (1 * (_GLF_IDENTITY(5, (5) | 0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(int(5), int(5)), 1, 1)))) >> 0), (_GLF_IDENTITY(int(5), int(5))) + 0)))))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-56850) : _GLF_IDENTITY(int(5), ~ (~ (int(5)))))), clamp(int(5), int(5), int(5))))) + 0))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(5, 1 * (5)), 1 * (_GLF_IDENTITY(5, (5) | 0)))))) | 0, ((_GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) | 0) * 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(int(5), int(5))) + 0))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(int(5), int(5))) + 0))))), ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(_GLF_IDENTITY(5, (5) ^ 0), max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(_GLF_IDENTITY(5, _GLF_IDENTITY((5), 0 ^ (_GLF_IDENTITY((5), ((5)) / 1))) * 1), 5))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), max(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))))))))))), 0, 1)), min(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), 0, 1)), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, (5) * 1), max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), 0, 1))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) >> 0))), (_GLF_IDENTITY(int(5), int(5))) * 1)) + 0)))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) - 0), (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(9788)))), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0)))))))) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 1, 1), clamp(ivec3(_injected_loop_counter, 1, 1), _GLF_IDENTITY(ivec3(_injected_loop_counter, 1, 1), clamp(ivec3(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), 1, 1), _GLF_IDENTITY(ivec3(_injected_loop_counter, 1, 1), (ivec3(_injected_loop_counter, 1, 1)) - ivec3(0, 0, 0)), ivec3(_injected_loop_counter, 1, 1))), ivec3(_injected_loop_counter, 1, 1))))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) | 0)), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (5) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (int(5))), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0))))), (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, _GLF_IDENTITY((5) | 0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((5) | 0, ~ (~ ((5) | 0))) : _GLF_FUZZED(_injected_loop_counter))))))))) ^ 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0)))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(5, 0 | (_GLF_IDENTITY(5, 0 ^ (5)))), 1 * (_GLF_IDENTITY(5, (5) | _GLF_IDENTITY(0, (0) | 0))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / 1)), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), min(_GLF_IDENTITY(int(5), _GLF_IDENTITY(clamp(int(5), int(5), int(5)), ~ (~ (clamp(int(5), int(5), int(5)))))), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))))) + 0))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0))))), (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) | 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) - 0) + 0))), ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), 0, 1)), min(int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1), (ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1)) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(7), ivec3(7))))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(5, 5), min(max(5, 5), max(5, 5)))), int(int(~ (_GLF_IDENTITY(max(5, 5), clamp(max(5, 5), max(5, 5), max(5, 5))))))))))))))), 0, 1))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))) - 0)) * 1)) + 0)))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) - 0), (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), max(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (5) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0))))), (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) | 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) - 0) + 0))), ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), 0, 1)), min(int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1), (ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1)) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(7), ivec3(7))))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(5, 5), min(max(5, 5), max(5, 5)))), int(int(~ (_GLF_IDENTITY(max(5, 5), clamp(max(5, 5), max(5, 5), max(5, 5))))))))))))))), 0, 1))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))) - 0)) * 1)) + 0)))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) - 0), (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), max(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (5) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0)))))) >> 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0))))), (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) | 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) - 0) + 0))), ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), 0, 1)), min(int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1), (ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1)) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(7), ivec3(7))))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(5, 5), min(max(5, 5), max(5, 5)))), int(int(~ (_GLF_IDENTITY(max(5, 5), clamp(max(5, 5), max(5, 5), max(5, 5))))))))))))))), 0, 1))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))) - 0)) * 1)) + 0)))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) - 0), (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), max(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (5) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0))))), (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) | 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 | (_GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(5))), ((_GLF_IDENTITY(int(5), int(5)))) - 0) + 0))), ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(5, (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), _GLF_IDENTITY(int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5))))))), 0, 1)), min(int(_GLF_IDENTITY(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1), (ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)))), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, 59902)) : _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), ~ (~ (_GLF_IDENTITY(5, max(5, 5))))))))), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), max(5, 5))))))), 0, 1)) >> (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(7), ivec3(7))))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), min(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(_GLF_IDENTITY(5, max(5, 5)), clamp(_GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, max(5, 5)), _GLF_IDENTITY(5, _GLF_IDENTITY(max(5, 5), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(5, 5), min(max(5, 5), max(5, 5)))), int(int(~ (_GLF_IDENTITY(max(5, 5), clamp(max(5, 5), max(5, 5), max(5, 5))))))))))))))), 0, 1))))), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) << 0))) - 0)) * 1)) + 0)))) | ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) - 0), (5) | 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))), max(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, (5) ^ 0))))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) + 0)))))) >> 0))))))) || false))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) + vec2(0.0, 0.0)).x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 & _GLF_IDENTITY(3223, 1 * (3223))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true))), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, true, true))), false, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, true, true))), false, false))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         return;
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), (false ? _GLF_FUZZED(9.4) : float(vec3(injectionSwitch.x, 0.0, 1.0))))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) * 1u), _GLF_IDENTITY(4, int(ivec3(4, 1, 1))), 64, 4);
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true))) && true))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))))
                return;
               do
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) && _GLF_IDENTITY((false), bool(bvec2((false), false))))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))))), ! (! (bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, true))), bool(bvec2(_GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))), false))))))))))));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(atomicMin(_injected_loop_counter, 47235)), (_GLF_IDENTITY(_GLF_FUZZED(atomicMin(_injected_loop_counter, 47235)), (_GLF_FUZZED(atomicMin(_injected_loop_counter, 47235))) / 1)) ^ 0) : 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             return;
                            }
                          }
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
          }
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))), int(5)))) >> 0), (int(5)) | 0)))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))), true, false))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1)) << 0) < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) | (0)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
    }
  }
}
