#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_DEAD(false), false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! ((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), (_GLF_DEAD(false)) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((! (false)), false || ((! (false))))))))))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true)))), (_GLF_DEAD(false)) && true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), (bool(bvec4(_GLF_DEAD(false), true, false, false))) || false)), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))) ^ 0u, max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))) ^ 0u, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))) ^ 0u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), false, true, true)), true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u) + subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY(clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id)), min(clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id)), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))))) + 1, (subgroup_local_id + 1) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : ~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))), min(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))))) + 1, (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), clamp(uint(subgroup_local_id), _GLF_IDENTITY(uint(subgroup_local_id), (true ? uint(subgroup_local_id) : _GLF_FUZZED(subgroup_base))), uint(subgroup_local_id))))) + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size)))) << 0u)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.8), cos(0.0) * (_GLF_FUZZED(-4.8))), float(mat2x4(_GLF_IDENTITY(_GLF_FUZZED(-4.8), cos(0.0) * (_GLF_FUZZED(-4.8))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, cos(0.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9.8, 0.0 + (-9.8))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.4) : 0.0)) + (_GLF_FUZZED(-9.8)))), bvec2(true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)))), true))))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))) : _GLF_FUZZED(81123))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) + 0), max(4, 4))))) ^ ((1 ^ 1) & (-73306 & -33496))))))), _GLF_IDENTITY(((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))), clamp(((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))), ((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))), ((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))))) << (0 >> _GLF_IDENTITY(int(6), int(6)))))), (true ? ~ (_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)))))))) : _GLF_FUZZED(39854))))), 64, _GLF_IDENTITY(2, 0 | (2))), ~ (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), int(_GLF_IDENTITY(ivec4(max(4, 4), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0), (ivec4(max(4, 4), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0)) ^ ivec4(0, 0, 0, 0))))))))), 1 * ((1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))), min((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), (false ? _GLF_FUZZED(12747) : _GLF_IDENTITY(max(4, 4), (max(4, 4)) * 1))), (_GLF_IDENTITY(max(4, 4), (max(4, 4)) + 0)) / 1))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))) | (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))), (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 ^ (4)), clamp(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 ^ (_GLF_IDENTITY(4, 0 ^ (4)))))), max(4, 4)))))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | (4)))), (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1)))) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), (false ? _GLF_FUZZED(19985) : max(4, 4)))))), clamp(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, max(4, 4)))), min((~ (_GLF_IDENTITY(4, max(4, 4)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, max(4, 4)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY(int(ivec4(~ ((~ (_GLF_IDENTITY(4, max(4, 4))))), 1, 1, 1)), int(ivec4(int(ivec4(~ ((~ (_GLF_IDENTITY(4, max(4, 4))))), 1, 1, 1)), 0, 0, 0)))))))), ~ (~ (_GLF_IDENTITY(4, max(4, 4)))), ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))))) : _GLF_FUZZED(39854))))), 64, _GLF_IDENTITY(2, _GLF_IDENTITY(0, (0) + 0) | (2))), clamp(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), clamp(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, int(_GLF_IDENTITY(ivec4(1 ^ 1, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(1 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), min(~ (_GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(1, (1) | (1)))))) | 0))), 0, 0, 1))))), 1 ^ 1))) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))))))))) : _GLF_FUZZED(39854), (true ? true ? ~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, int(_GLF_IDENTITY(ivec4(1 ^ 1, 0, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(1 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), min(~ (_GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(1, (1) | (1)))))) | 0))), 0, 0, 1))))), 1 ^ 1))) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))))))))) : _GLF_FUZZED(39854) : _GLF_FUZZED(-62579))))))), 64, _GLF_IDENTITY(2, 0 | (2))), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(ivec4(1, 1, 1, 0)), 0), clamp(ivec2(int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), clamp(ivec4(1, 1, 1, 0), ivec4(1, 1, 1, 0), _GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, 1, 1, 0)) | (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0)))))), 0), ivec2(int(ivec4(1, 1, 1, 0)), 0), ivec2(int(ivec4(1, 1, 1, 0)), 0))), clamp(ivec2(_GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * 1)) - _GLF_IDENTITY(0, min(0, 0))), 1, 0)), ~ (~ (int(ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * 1), 1, 0))))), 0), ivec2(int(ivec4(1, 1, 1, _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) - 0), 0, 0, 1))))), 0), ivec2(int(ivec4(1, 1, 1, 0)), 0)))))) ^ 1), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(int(ivec4(1, 1, 1, 0)), 0), clamp(ivec2(int(_GLF_IDENTITY(ivec4(1, 1, 1, 0), clamp(ivec4(1, 1, 1, 0), ivec4(1, 1, 1, 0), _GLF_IDENTITY(ivec4(1, 1, 1, 0), (ivec4(1, 1, 1, 0)) | (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0)))))), 0), ivec2(int(ivec4(1, 1, 1, 0)), 0), ivec2(int(ivec4(1, 1, 1, 0)), 0))), clamp(ivec2(_GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * 1)) - _GLF_IDENTITY(0, min(0, 0))), 1, 0)), ~ (~ (int(ivec4(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) * 1), 1, 0))))), 0), ivec2(int(ivec4(1, 1, 1, _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) - 0), 0, 0, 1))))), 0), ivec2(int(ivec4(1, 1, 1, 0)), 0)))))) ^ 1)) >> 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), ~ (~ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) * 1))))))))), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 1)), int(int(int(ivec3(1, 0, 1)))))) ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))), max((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, max(4, 4)))), int(int((~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), 0 ^ (max(4, 4))))))))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))))), min((_GLF_IDENTITY(4, (1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))), max((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, max(4, 4)))), int(int((~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), 0 ^ (max(4, 4))))))))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))))), (_GLF_IDENTITY(4, (1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))), max((_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, max(4, 4)))), int(int((~ (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), 0 ^ (max(4, 4))))))))))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))))))) : _GLF_FUZZED(39854))))), 64, _GLF_IDENTITY(2, 0 | (2))), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(17991) : 4)), (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(4, 4))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), (false ? _GLF_FUZZED(17537) : (_GLF_IDENTITY(4, max(4, 4))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ((_GLF_IDENTITY(4, max(4, 4)))) ^ 0), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), max(4, 4)))) | (~ (_GLF_IDENTITY(4, max(4, 4))))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (1 ^ _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), (true ? _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))) : _GLF_FUZZED(14854))))))))), (true ? ~ (_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))) : _GLF_FUZZED(39854))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (1 ^ _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), (true ? _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))) : _GLF_FUZZED(14854))))))))), (true ? ~ (_GLF_IDENTITY(4, (1 ^ 1) ^ (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4)))))))) : _GLF_FUZZED(39854))))))), 64, _GLF_IDENTITY(2, 0 | _GLF_IDENTITY((2), 0 | (_GLF_IDENTITY((2), max((2), (2))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), false, true, false))))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) + 0))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(bool(bool(bvec2(false, false))), false, false, false)), (bool(bvec4(bool(bool(bvec2(false, false))), false, false, false))) || false)))), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false, true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)), false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)), false))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true), false))))))), false)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_id) : read)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(11.20) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), (float(vec2(1.0, 0.0))) - 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.0), min(_GLF_FUZZED(3.0), _GLF_FUZZED(3.0))), _GLF_FUZZED(_GLF_IDENTITY(423.372, max(423.372, 423.372)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.0), max(_GLF_IDENTITY(_GLF_FUZZED(3.0), mix(float(_GLF_FUZZED(557.842)), float(_GLF_FUZZED(3.0)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(3.0), 1.0 * (_GLF_FUZZED(3.0))))), _GLF_FUZZED(423.372)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * mat2(1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED((true ? vec2(-7.6, -641.401) : injectionSwitch)) : clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), false, true))))), false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))))))))), false, false, true))), false || ((bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))))))))), false, false, true))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true))), false || (false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (! (false))))), false, false, true)))))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))) && true), false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, false, true)))))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)) || false), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))), true)))))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
