#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat2x3 _f0;
 bvec2 _f1;
 bvec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 bool _f1;
 vec3 _f2;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 bool _f3;
 bvec3 _f4;
 mat4x3 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 uvec4 _f1;
 _GLF_struct_12 _f2;
 ivec2 _f3;
 uvec2 _f4;
 mat4x2 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_9 {
 float _f0;
 uvec4 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 float _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 bool _f1;
 vec3 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 uvec4 _f1;
 _GLF_struct_8 _f2;
 mat3 _f3;
 _GLF_struct_9 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 uint num_workgroup;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_4 {
 bool _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 vec4 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 uint subgroup_size;
 mat4x3 _f1;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint _f1;
 ivec4 _f2;
 uvec2 _f3;
 float _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 float _f2;
 uvec4 _f3;
 uvec4 _f4;
 vec2 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 _GLF_struct_2 _f1;
 uvec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, tan(0.0), abs(_GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(float(mat3x4(sqrt(0.0), 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), clamp(float(mat3x4(sqrt(0.0), 1.0, exp(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0), mat2(1.0) * (mat2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? -4495.3175 : 390.280))), bool(false))), 0.0, 0.0, 0.0))))))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(sqrt(0.0), 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-2159.2550)), bool(false))), 1.0, 1.0)), float(mat3x4(sqrt(0.0), 1.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0)), float(mat2x3(float(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, sin(0.0), 1.0, 1.0, exp(0.0), cos(0.0), 1.0, 1.0))), 0.0, tan(0.0), abs(_GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(vec3(sqrt(0.0), 1.0, 1.0)))) * cos(0.0))), 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))))) && true))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(248.095)))) / _GLF_ONE(1.0, injectionSwitch.y)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(vec2(5388.6829, _GLF_IDENTITY(-47.93, (-47.93) / 1.0))[1]) : _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0)))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))), false, false)))), bool(bvec2((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, _GLF_IDENTITY(false, (false) || false))))), false)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))))))) && _GLF_IDENTITY(true, false || (true)))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false)) || false))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-1.6) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), (true ? vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).y)))))))) : _GLF_FUZZED(fract(-7.7))))))));
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           for(int _injected_loop_counter = (1 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6801.7239)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false)))))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 >> _GLF_IDENTITY(int(6), int(6))) | 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat4x3(1.0), _GLF_struct_2(uvec4(1u), _GLF_struct_0(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-66.35)))), (true ? (_GLF_IDENTITY(1, max(1, 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(16138)))), 1u, ivec4(1), uvec2(1u), _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))) + 0.0)), mat2x3(1.0)), 1.0, _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))) << uvec4(0u, 0u, 0u, 0u)), uvec4(1u), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(max(vec2(1.0), vec2(1.0)), min(max(vec2(1.0), vec2(1.0)), max(vec2(1.0), vec2(1.0))))), _GLF_struct_1(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((true), false || ((true)))) || false)))))), gl_SubgroupSize, mat4x3(1.0))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-85.32, -6631.3028, -403.194, 59.99)) : mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-85.32, -6631.3028, -403.194, 59.99)) : mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-85.32, -6631.3028, -403.194, 59.99)) : mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), vec2(mat2x4((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))))).x < injectionSwitch.y))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-85.32, _GLF_IDENTITY(-6631.3028, min(-6631.3028, -6631.3028)), -403.194, 59.99)) : mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0))))))).x < injectionSwitch.y))) || false)))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) << 0)))) >> _GLF_IDENTITY(int(7), int(7))), 0 | (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-60806 & 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))), false, true))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y, false, false)))))))), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)), true, false, _GLF_IDENTITY(true, (true) || false)))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))) || false))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))))), false || (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))))))))) && true)))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0)) * 1)) ^ 0))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false)))), false)))))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), max(int(_GLF_IDENTITY(2, max(2, 2))), int(2))))), int(2))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(-11916)))) | (int(2))))), int(2)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2260) : _GLF_IDENTITY(int(2), int(2))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2260) : _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2260) : _GLF_IDENTITY(int(2), int(2))), int(ivec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2260) : _GLF_IDENTITY(int(2), int(2))), 0))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false)), true && (bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))))))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) / (1 & 1))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), false))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) * 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(int(int(7)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (7)))), int(7))), ~ (~ (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), int(int((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))) ^ 0)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_4(true), _GLF_struct_6(ivec2(1), _GLF_struct_5(mat2x4(1.0), ivec3(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, 1 * (1))))), mat2x3(_GLF_IDENTITY(1.0, float(float(1.0)))), 1), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (_GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((0u), ((0u)) | ((0u)))), ((~ (0u))) ^ 0u), (~ (0u)))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uint((0u)))) >> (2913u & 0u)), 0u)), (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ~ (~ ((0u))))) / 1u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (_GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ _GLF_IDENTITY((0u), ((0u)) | ((0u)))), ((~ (0u))) ^ 0u), (~ (0u)))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uint((0u)))) >> (2913u & 0u)), 0u)), (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ~ (~ ((0u))))) / 1u))), min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u)), 1u))).x, uvec4(1u), ivec2(1)), vec4(1.0), _GLF_struct_10(_GLF_struct_7(vec2(1.0), true, vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), sqrt(1.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.4)), float(1.0), bool(true))), 1.0)), sqrt(1.0))), float(vec4(float(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-627.586)), float(1.0), bool(true))), 1.0, 1.0))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0))) : _GLF_FUZZED((4402.4121 + mat2x4(2.6, 5225.8163, 57.30, 41.14, 56.75, -5.2, 1.7, -7.2)))))), float(mat2(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0), (true ? _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(_GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), sqrt(1.0))), 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, exp(length(vec3(0.0, 0.0, 0.0))), 0.0, 1.0))) : _GLF_FUZZED((4402.4121 + mat2x4(2.6, 5225.8163, 57.30, 41.14, 56.75, -5.2, 1.7, -7.2)))))), 1.0, 0.0, 0.0)))), 1.0, sqrt(1.0))), 1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(float((mat3(-4926.4470, -7773.3602, 6.3, 2569.1500, 6669.4817, -4.9, -4.2, -0.2, -60.05) == mat3(99.05, -55.60, _GLF_IDENTITY(78.68, float(mat2x4(_GLF_IDENTITY(78.68, 0.0 + (_GLF_IDENTITY(78.68, mix(float(78.68), float(_GLF_FUZZED(85.62)), bool(false))))), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, log(1.0), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, log(1.0), 0.0))), 1.0, 0.0, 0.0))), 2.3, -64.64, 3.6, -23.22, -796.474, -70.21)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 1.0))), (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), sqrt(1.0), 1.0, sqrt(1.0))), float(vec4(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)))), sqrt(1.0), 1.0, sqrt(1.0))), 1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(float((mat3(-4926.4470, -7773.3602, 6.3, 2569.1500, 6669.4817, -4.9, -4.2, -0.2, -60.05) == mat3(99.05, -55.60, 78.68, _GLF_IDENTITY(2.3, mix(float(_GLF_FUZZED(8.5)), float(2.3), bool(true))), -64.64, 3.6, -23.22, -796.474, -70.21)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED((- 7.0))), bool(false))), 1.0, sqrt(1.0))), float(vec4(float(mat2(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), sqrt(1.0), 1.0, sqrt(1.0))), _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 0.0, 1.0)))), (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(float((mat3(-4926.4470, -7773.3602, 6.3, 2569.1500, 6669.4817, -4.9, -4.2, -0.2, -60.05) == mat3(99.05, -55.60, 78.68, _GLF_IDENTITY(2.3, (false ? _GLF_FUZZED(311.235) : 2.3)), -64.64, 3.6, -23.22, -796.474, -70.21))))))) / 1.0)) + 0.0))), uvec4(1u), _GLF_struct_8(uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u)))))), 1u, 1u))), uvec2(1u), mat2(1.0)), _GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.2)), bool(false))) > injectionSwitch.y) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (true)))))) ? _GLF_FUZZED(_GLF_IDENTITY(6.9, min(6.9, _GLF_IDENTITY(6.9, (_GLF_IDENTITY(6.9, 1.0 * (6.9))) / 1.0)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0))) - 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch.x))) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, min(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, 1.0 * (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0))) - 0.0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0))))))))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6.9, 1.0 * (_GLF_IDENTITY(6.9, 0.0 + (6.9))))) : 1.0)), min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((6.1)), _GLF_FUZZED(7607.1699)), bvec2(false, false))).y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(-3.7)), bool(false))) > injectionSwitch.y), true, false, false)))) ? _GLF_FUZZED(6.9) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FUZZED(6.9)) + 0.0) : 1.0)))))))), transpose(transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(6.9) : 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-46.75), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(92.11)), bvec2(true, false))), sqrt(0.0), 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-46.75), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(92.11)), bvec2(true, false))), sqrt(0.0), 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y))))) ? _GLF_FUZZED(6.9) : 1.0, clamp(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-301.885) : 1.0)))), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0, min(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))) + log(vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)))) ? _GLF_FUZZED(6.9) : 1.0) / 1.0))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0)))), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y) + 0.0))) ? _GLF_FUZZED(6.9) : _GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(vec4(34.70, 592.752, -96.64, -72.37).s), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (false ? _GLF_FUZZED(ldexp(-0.1, -52222)) : ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-3.5)), bvec2(true, false)))), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0, min(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))).y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0), (true ? (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0) : _GLF_FUZZED(vec2(678.283, -5923.0053)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)))).y)) ? _GLF_FUZZED(6.9) : 1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0) / 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0))))], injectionSwitch[1]))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))) - vec2(0.0, 0.0)).y)) ? _GLF_FUZZED(6.9) : 1.0))))) / 1.0)) + 0.0), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0))))))))))), mat3(mat3x4(_GLF_IDENTITY(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0)), min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) ? _GLF_FUZZED(6.9) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-70.43)), float(1.0), bool(true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(6.9) : 1.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FUZZED(6.9)) + 0.0) : 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0)), min(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) ? _GLF_FUZZED(6.9) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-70.43)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(689.895)))), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-70.43)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(689.895)))), bool(true)), mix(float(mix(float(_GLF_FUZZED(-70.43)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec3(true, true, true))) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(689.895)))), bool(true))), float(_GLF_FUZZED(-61.09)), bool(false)))), float(_GLF_FUZZED(-3.8)), bool(false)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6.9, (true ? _GLF_IDENTITY(6.9, min(6.9, 6.9)) : _GLF_FUZZED(-8875.7557)))) : 1.0, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.9), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.2) : _GLF_FUZZED(6.9))), _GLF_IDENTITY((_GLF_FUZZED(6.9)) + 0.0, max((_GLF_FUZZED(6.9)) + 0.0, (_GLF_FUZZED(6.9)) + 0.0))) : 1.0))))))) / abs(1.0)))), transpose(transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0)), (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0, (false ? _GLF_FUZZED(-947.165) : _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0, (false ? _GLF_FUZZED(-947.165) : _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(6.9) : 1.0))) + 0.0), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) ? _GLF_FUZZED(6.9) : 1.0)))))))))))))))), _GLF_struct_9(1.0, uvec4(1u), mat4x2(1.0), mat3x4(1.0), 1.0), vec4(1.0)), _GLF_struct_14(_GLF_struct_11(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, sin(0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), float(mat3x2(length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), sin(0.0), 0.0, 1.0, tan(0.0)))))), mix(float(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, abs(0.0), sqrt(1.0), 0.0, 0.0, 1.0, log(1.0), 0.0))), (1.0) / 1.0), 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(189.033)), bool(false))), length(vec3(0.0, 0.0, 0.0)))), max(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, abs(0.0), sqrt(1.0), 0.0, 0.0, 1.0, log(1.0), 0.0))), (1.0) / 1.0), 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(189.033)), bool(false))), length(vec3(0.0, 0.0, 0.0)))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, abs(0.0), sqrt(1.0), 0.0, 0.0, 1.0, log(1.0), 0.0))), (1.0) / 1.0), 1.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(189.033)), bool(false))), length(vec3(0.0, 0.0, 0.0))))))), float(_GLF_FUZZED(1.3)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), false)), false))))))), false)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true)), false)), false))))))), false)))))))))))))), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), false))))))), false)))), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y) && true))), false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))), (injectionSwitch.x < injectionSwitch.y) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))), (injectionSwitch.x < injectionSwitch.y) && true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))))), false)), false)))), _GLF_IDENTITY(true && (true), (true && (true)) && true)), bvec3(true), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-9.7, (true ? -9.7 : _GLF_FUZZED(-1893.3884))))), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-9.7, (true ? -9.7 : _GLF_FUZZED(-1893.3884))))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-9.7, (true ? -9.7 : _GLF_FUZZED(-1893.3884))))), bool(false)), mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-9.7, (true ? -9.7 : _GLF_FUZZED(-1893.3884))))), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false))), false))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.67), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), false, true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(true), false)), true), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(true), false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false))), false))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.67), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), false, true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(true), false)), true), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(true), false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), _GLF_IDENTITY(true, true && (true)), true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, true)), false))), false))), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-80.67), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), false, true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(true), false)), true), bvec3(bvec4(bvec3(bvec2(bvec3(bvec2(true), false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))))), _GLF_IDENTITY(true, true && (true)), true))))))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id)))) >> 0u))))), _GLF_struct_12(mat4(1.0), true, vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), cos(0.0), 1.0, 1.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.6))), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0))), 1.0))), _GLF_IDENTITY(0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))))), (0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true)))))) / 1.0)))) - _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-792.922)), bool(_GLF_IDENTITY(false, true && (false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-792.922)), bool(_GLF_IDENTITY(false, true && (false))))), float(mat4(_GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-792.922)), bool(_GLF_IDENTITY(false, true && (false))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(-792.922)), bool(_GLF_IDENTITY(false, true && (false)))))))))), ivec2(1), uvec2(1u), mat4x2(1.0), _GLF_struct_13(mat2x3(1.0), bvec2(true), bvec4(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(1), int(1)))), min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> _GLF_IDENTITY((99732 & 0), (false ? _GLF_FUZZED(67980) : (99732 & 0)))))))), min(_GLF_IDENTITY(ivec4(1), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1)), ivec4(1), ivec4(1))), ivec4(1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))))))) | ivec4(0, 0, 0, 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, _GLF_IDENTITY(0, 1 * (0))))) >> _GLF_IDENTITY((99732 & 0), max((99732 & 0), _GLF_IDENTITY((99732 & 0), ((99732 & 0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))))))), (false ? _GLF_FUZZED(ivec4(-47201, -9101, -10887, -38537)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, _GLF_IDENTITY(0, 0 ^ (0)))))), clamp(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(1, int(int(1)))) << 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-97843)))) >> 0))), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec2(1, 0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) >> (99732 & 0)))))), min(_GLF_IDENTITY(ivec4(1), clamp(ivec4(1), ivec4(1), ivec4(1))), ivec4(1))))))))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), log(1.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, abs(1.0), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, determinant(mat2(1.0, 0.0, sin(0.0), 1.0)), log(1.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(-1.7)), float(length(vec2(0.0, 0.0))), bool(true))), 0.0, 0.0, abs(1.0), 1.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))), 0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0))))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))), 0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(436.410, mix(float(_GLF_FUZZED(-586.331)), float(436.410), bool(true)))))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))), _GLF_IDENTITY(0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0))))), 1.0 * (0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))))))))) && true)) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))), 0.0 + (float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.3, 0.5)))).y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(_GLF_IDENTITY(1.0, (1.0) * cos(0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-28.87) : 0.0)), injectionSwitch.x), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))))))) && true)), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), _GLF_IDENTITY(min((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), min((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), (true ? injectionSwitch.y : _GLF_FUZZED(436.410))))), min(min((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), min((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), (true ? injectionSwitch.y : _GLF_FUZZED(436.410))))), min((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), min((true ? injectionSwitch.y : _GLF_FUZZED(436.410)), (true ? injectionSwitch.y : _GLF_FUZZED(436.410))))))))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.4) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), exp(0.0))), 1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, sqrt(1.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, sqrt(1.0), 0.0), transpose(transpose(mat2(0.0, 0.0, sqrt(1.0), 0.0)))))))))), 0.0 + (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(436.410))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0)), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)))))))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) || false)))))) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || false, bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || false, false)))))))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size)) * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, clamp(_GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) >> 0u), (subgroup_id) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))), 0u, 0u)), (subgroup_id) >> 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))), (~ (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))) * (0u ^ 1u)))) ^ 0u), 0u, 0u))))), (subgroup_id) | 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id))) | 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, 0u | ((subgroup_id) | 0u))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, ((subgroup_id) | 0u) | (0u ^ 0u))))) * _GLF_struct_replacement_3._f1._f6.subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), 0u | (_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | uvec2(0u, 0u))), 0u + (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - uvec2(0u, 0u))) / uvec2(1u, 1u))) | uvec2(0u, 0u))))))), clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), 0u | (_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | uvec2(0u, 0u))), 0u + (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - uvec2(0u, 0u))) / uvec2(1u, 1u))) | uvec2(0u, 0u))))))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), 0u | (_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | uvec2(0u, 0u))), 0u + (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - uvec2(0u, 0u))) / uvec2(1u, 1u))) | uvec2(0u, 0u))))))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) - 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), 0u | (_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) | uvec2(0u, 0u))), 0u + (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(_GLF_IDENTITY((subgroup_base) - 0u, 1u * ((subgroup_base) - 0u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - uvec2(0u, 0u))) / uvec2(1u, 1u))) | uvec2(0u, 0u))))))))), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_3._f1._f6.subgroup_size, 0u | (_GLF_struct_replacement_3._f1._f6.subgroup_size)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
            barrier();
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec2(1, 0)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), clamp(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), min(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)))))))), vec2(vec3(vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), 0.0))), vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, round(length(normalize(1.0))), 0.0))))))).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(-32275, 0 ^ (-32275)))))))), 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), (atomicLoad(buf[virtual_gid], 4, 64, 2)) / 1u)))) / 1u);
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (int(0))), int(0))) | (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-66968) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)))))) != (0 ^ 1)); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)) >> (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))))), (next_virtual_gid) >> 0u), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u))), 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), 1u * ((_GLF_IDENTITY(next_virtual_gid, 0u ^ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))))))) >> _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), 1u * ((_GLF_IDENTITY(next_virtual_gid, 0u ^ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))))))) >> _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), uint(uvec4(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 0u, (1u | 1u))), 0u ^ (uint(uvec4(0u, 0u, 0u, (1u | 1u)))))) ^ (4u)), 4u))))), 1u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), 1u * ((_GLF_IDENTITY(next_virtual_gid, 0u ^ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))))))) >> _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u), ((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))), 1u * ((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid))), (0u ^ _GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), (next_virtual_gid)))) / (0u ^ 1u))))))) >> _GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) / 1u)) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))], uint(1), 4, 64, 4);
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y : _GLF_FUZZED(-927.675))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).y)), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))) && true)))))), false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), min(_GLF_IDENTITY(4, (4) + 0), 4))) << 0), _GLF_IDENTITY(64, (64) << 0), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(93.66) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) || false)), bool(bvec2(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * (injectionSwitch)).y)), false))))))), ! (_GLF_IDENTITY(! (true), true && (! (true))))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), true))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), true))), false || ((bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), true)))))) && true) || _GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-738.129, max(-738.129, _GLF_IDENTITY(-738.129, min(-738.129, -738.129)))), (_GLF_IDENTITY(-738.129, max(_GLF_IDENTITY(-738.129, 1.0 * (-738.129)), _GLF_IDENTITY(-738.129, min(-738.129, -738.129))))) / 1.0))), bool(false)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true))))))) || false)))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0)) / 1.0), (0.0 + (injectionSwitch.x)) - 0.0)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))));
}
