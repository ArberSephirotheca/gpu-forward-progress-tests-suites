#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_WRAPPED_LOOP(false)), true, false)), false || (bool(bvec3(! (_GLF_WRAPPED_LOOP(false)), true, false))))))));
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(false, false, false), true)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true)))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true)))) && true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, false), true)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, (true) && true))))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, (true) && true))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, (true) && true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true)), true))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true)), true))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true)))), ! (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false), true)), true)))))), true && ((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false), true)), true))))))))), (_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))))))), true && (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))))) && true)))))))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true)))))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true)))))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true)))))), (! (((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true)))))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true))))))) || false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, (true) && true))))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, (true) && true))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), true))), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(true, (true) && true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true)), true))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false))))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))), bool(_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true)), true))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true)))), ! (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (true && (_GLF_IDENTITY(false, ! (! (false))))), true, true), bvec3(bvec4(bvec3(! (true && (_GLF_IDENTITY(false, ! (! (false))))), true, true), false)))))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false), true)), true)))))), true && ((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, false), true))), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false))))))), true)), true))))))))), (_GLF_IDENTITY(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true))))))), true && (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))))) && true)))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, true, false))), false), true))), true)), true)))))))))), (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, (true) && true))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || (_GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, false, true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)), false))))))))) && true)))), bool(bool((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true, true, false))), false), true))), true)), true)))))))))), (bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, (true) && true))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || (_GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, false, true)))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)), false))))))))) && true)))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, false || (false))), true))), true)), true)))))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true)))))), (! (((_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true)))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false), true))), true)), true))))))))))))))), (bool((bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))), _GLF_IDENTITY(true, (true) || false))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))))) && true))))))) || false))))) && true))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), true))), (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(41.74)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(41.74), float(_GLF_IDENTITY(mat3x4(_GLF_FUZZED(41.74), abs(1.0), 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0), 1.0), (true ? mat3x4(_GLF_FUZZED(41.74), abs(1.0), 1.0, determinant(mat4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0), 1.0) : _GLF_FUZZED(mat3x4(-4229.4482, 2.9, 7.4, 3.3, -5.4, 1794.4212, -9.3, 9.2, -6.7, 7814.7455, -1.5, -58.19))))))), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), true, true, true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size))) | 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size))) | 0u))) - 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size))) | 0u))) - 0u, (((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, (0u | 0u), 1u, 1u), (uvec4(workgroup_size, (0u | 0u), 1u, 1u)) + uvec4(0u, 0u, 0u, 0u)))), workgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, (false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size)), 1u * (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size), ((false ? _GLF_FUZZED(183745u) : GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size)) | 0u))))) | 0u))) - 0u) - 0u)) + 0u)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-72.17) : 1.0))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-72.17) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) ^ 0)))]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(390.472)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))), 1.0))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-72.17) : 1.0)))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
     barrier();
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))))))) || false, _GLF_IDENTITY(true, (true) && true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))))))) || false, _GLF_IDENTITY(true, (true) && true), true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))))))) || false, _GLF_IDENTITY(true, (true) && true), true)))), false))))), false, true))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))), true && ((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))), true && ((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (false), true, false), bvec3(bvec4(bvec3(true && (false), true, false), false)))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))))) && true)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), bool(bvec3(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), false, true))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), bool(bvec3(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), false, true))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) || false)))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)), true, false)))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, true, true)))))))))) || false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false)) || (bool(bvec3(false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true, true), false)), false))), false)))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), ! (! ((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)))))), ! (! (! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false, true))), true))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false, true))), true)))) || false)))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))) || false, true, true))), ! (! ((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), false, true))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)), true && (bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))))) || false))))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool((! (true))), bool(bool(bool((! (true))))))))) && (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), false, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), bool(bvec3(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), false, true))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), bool(bvec3(! (bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), false, true))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (true) || false)))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)), true, false)))))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true, true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec4(! (injectionSwitch.x < injectionSwitch.y), false, true, true)))))))))) || false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false)) || (bool(bvec3(false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true, true), false)), false))), false)))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true))), ! (! ((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true, true)))))), ! (! (! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false, true))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false, true))), true))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), false, true))), true)))) || false)))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))) || false, true, true))), ! (! ((bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), false, true))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)), true && (bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false)))))))))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false))))))))) || false))))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool((! (true))), bool(bool(bool((! (true))))))))) && (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY((true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((true && _GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true))), false, false)), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(false, false, false)))))) || false))), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))), false, false), false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)) || (bool(bvec3(false, false, false)))))) || false))))))), false, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, clamp((workgroup_base) - 0u, (workgroup_base) - 0u, (workgroup_base) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.s) : workgroup_base)), (workgroup_base) - 0u)) - 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), true && (false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 1 * (64)), 0);
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))))) > injectionSwitch.y)) && true) && true)))))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))) / 1)) >> 0), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))))))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
}
