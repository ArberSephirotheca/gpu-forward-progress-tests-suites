#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false))))))) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(697.012)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(8.9)), bool(false)))))[1], mix(float(_GLF_FUZZED(212.984)), float(injectionSwitch[1]), bool(true)))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(697.012)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(8.9)), bool(false)))))[1], mix(float(_GLF_FUZZED(212.984)), float(injectionSwitch[1]), bool(true)))), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))))).x > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(injectionSwitch.x))), float(_GLF_FUZZED(-2.9)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, abs(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (1.0)), 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))) || false), true && (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.2, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(-0.2, min(-0.2, -0.2))), bool(true))))), (float(_GLF_FUZZED(-0.2))) / 1.0), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), false || (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(7016.0911)), bool(false)))), 0.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(7016.0911)), bool(false)))), 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0 + (float(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(7016.0911)), bool(false)))), 0.0, 0.0, 1.0, 1.0, 1.0))))) - 0.0))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u))))))).x, 0u ^ _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), 1u * ((gl_WorkGroupID.x)))) | ((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), max((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), _GLF_IDENTITY((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), min((gl_WorkGroupID) >> uvec3(0u, 0u, 0u), (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))).x))))) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(51.49) : injectionSwitch.x)))) > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, injectionSwitch.x)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5.3)), vec2(_GLF_FUZZED(-2.9), (injectionSwitch)[1]), bvec2(false, true))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(0.7)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-7.0), min(_GLF_FUZZED(-7.0), _GLF_IDENTITY(_GLF_FUZZED(-7.0), clamp(_GLF_FUZZED(-7.0), _GLF_FUZZED(-7.0), _GLF_FUZZED(-7.0))))), _GLF_IDENTITY((vec2(0.0, 1.0))[1], ((vec2(0.0, 1.0))[1]) / determinant(mat4(sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0)))), bvec2(false, true))), vec2(0.0, 1.0))) / 1.0) : _GLF_FUZZED(-89.70)))), 1.0)), float(_GLF_IDENTITY(mat2x3(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(0.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(8118.1458)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-505.513)), float(0.0), bool(true))), 0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), bool(true))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sin(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sin(0.0), 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sin(0.0), 1.0)))), (false ? _GLF_FUZZED(mat4(5890.4664, -15.38, 561.235, 35.10, -1.6, -0.8, 5.5, -601.300, -403.876, -3.9, -9.3, 56.74, 727.560, 8.3, 12.48, 0.5)) : transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sin(0.0), 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, sin(0.0), 1.0)))))))))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(0.0, 1.0, 0.0)))), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0)))))) / 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(4156.9035)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(8.8) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(0.0, 1.0))), 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))))))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) + 0)))], injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])).y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)))), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(false)))), false || (! (bool(bool(_GLF_DEAD(false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))) || false)) && true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(1.6)), vec2(_GLF_FUZZED(-6888.0402), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0)))))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0)))))).x > injectionSwitch.y)), true, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, length(sin(vec2(0.0, 0.0)))), mix(vec3(_GLF_FUZZED(3.0), _GLF_FUZZED(22.97), (vec3(injectionSwitch, length(sin(vec2(0.0, 0.0)))))[2]), vec3((vec3(injectionSwitch, length(sin(vec2(0.0, 0.0)))))[0], (vec3(injectionSwitch, length(sin(vec2(0.0, 0.0)))))[1], _GLF_FUZZED(895.980)), bvec3(true, true, false))))).x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)) - 0u), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))) ^ 0u))))), min(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), (true ? uint(uint(subgroup_local_id)) : _GLF_FUZZED(workgroup_base))))) : subgroup_size)) - _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), 1u), (true ? uvec4(0u, 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), 1u) : _GLF_FUZZED(uvec4(154123u, 47717u, 45023u, 26173u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))) ^ 0u))))), _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), ((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))) : subgroup_size)) - 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), min((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))))) ^ 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(95.29))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))), true, false), false))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-39.46)), vec2(_GLF_FUZZED(91.86), (injectionSwitch)[1]), bvec2(false, true)))) + vec2(0.0, 0.0)).x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true), true)))))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base + subgroup_local_id, ~ (~ (workgroup_base + subgroup_base + subgroup_local_id))), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(subgroup_size, subgroup_size))))) + 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(subgroup_size, subgroup_size))))) + 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), min(subgroup_size, subgroup_size))))) + 0u)) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), max(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), (max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))))) | 0u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), clamp((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), ((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) - 0u), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u * (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u * (subgroup_size)))), (clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))))), _GLF_IDENTITY((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), clamp((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), _GLF_IDENTITY((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), ((max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))) - 0u), (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))) | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u * (subgroup_size))), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u * (subgroup_size)))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 1u * (subgroup_size))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(subgroup_size, subgroup_size))))) + _GLF_IDENTITY(0u, (0u) | (0u)))) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-91.95) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(13.13)), bool(false))))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) - 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), clamp(float(_GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-2.2)))), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-2.2, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(-2.2, (-2.2) / 1.0)), max(float(_GLF_IDENTITY(-2.2, (-2.2) / 1.0)), float(_GLF_IDENTITY(-2.2, (-2.2) / 1.0))))), (true ? _GLF_IDENTITY(float(float(_GLF_IDENTITY(-2.2, (-2.2) / 1.0))), min(float(float(_GLF_IDENTITY(-2.2, (-2.2) / 1.0))), float(float(_GLF_IDENTITY(-2.2, (-2.2) / 1.0))))) : _GLF_FUZZED((1918.3169 * 49.89))))))), float(1.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5046.9779))), max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5046.9779))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5046.9779))))), 1.0, 1.0))))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (false ? _GLF_FUZZED(7597.7275) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0), vec2(mat3(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0), (true ? vec2(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0) : _GLF_FUZZED(vec2(-5500.9649, 7084.0179)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(47.85) : float(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0), vec2(mat3(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0), (true ? vec2(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), (false ? _GLF_FUZZED(89.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(vec4(float(0.0), abs(0.0), 1.0, 0.0), min(vec4(float(0.0), abs(0.0), 1.0, 0.0), vec4(float(0.0), abs(0.0), 1.0, 0.0))))), float(0.0), float(0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-6.4), float(vec3(_GLF_FUZZED(-6.4), 1.0, 0.0)))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(206.733)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0) : _GLF_FUZZED(vec2(-5500.9649, 7084.0179)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))), 1.0))), sin(0.0))), mix(float(_GLF_FUZZED(-701.205)), float(float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, determinant(mat3(1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(0.0, 0.0, 0.0, 1.0, 0.0, length(0.0), 0.0, determinant(mat3(1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))))), 0.0 + (0.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0)), mix(float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0))), float(_GLF_FUZZED(4.4)), bool(false))), float(_GLF_FUZZED(-9795.4020)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (0.0) / 1.0)), bool(true)))), (mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0)), float(_GLF_FUZZED(-9795.4020)), bool(false))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, abs(0.0), 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.5, min(7.5, _GLF_IDENTITY(7.5, mix(float(7.5), float(_GLF_FUZZED(-4094.1878)), bool(false))))))), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.2)), float(1.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-466.554)), bool(false))), 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-76.30)), bool(false)))), transpose(transpose(mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.2)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 1.0, 1.0))))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED((-9.4 - log(-1041.1733))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7 - 39.76)) : 0.0))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false)))), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7 - 39.76)) : 0.0))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7 - 39.76)) : 0.0))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7 - 39.76)) : 0.0))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false)))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7 - 39.76)) : 0.0))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((-3.7 - 39.76)) : 0.0))), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.4)), bool(false))))))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0))), sin(0.0)))), bool(true)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true, false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) + 0.0)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-650.041), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-2.0)), bvec2(true, false))))))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (buf[virtual_gid])) >> 0u))), 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))))))), bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec3(bvec2(bvec2(bvec3(bvec2(false, true), true))), true)))))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, true && (true)))), true && (bool(bvec2(true, _GLF_IDENTITY(true, true && (true)))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))) && true))))) && true), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-4151.0344))) < injectionSwitch.y))), true)))))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), true))))))), true, false, true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec3(bvec2(bvec2(bvec3(bvec2(false, true), true))), true)))))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, true && (true)))), true && (bool(bvec2(true, _GLF_IDENTITY(true, true && (true)))))), (_GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(true, true && (true)))), true && (bool(bvec2(true, _GLF_IDENTITY(true, true && (true))))))) && true))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(mat2x4(-421.350, -32.82, 19.55, 47.52, -225.310, -611.384, 8.0, -5897.3471)))))).y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true) && true, ! (! ((true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))) && true))))) && true), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-4151.0344))) < injectionSwitch.y))), true)))))), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), true))))))), true, false, true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, true, false))))), ! (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), true, true, false))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << (_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 1, ~ (~ (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))), max((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))), (_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))))), (_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))))), (_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))), _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1))), ((_GLF_IDENTITY(1 ^ 1, min(_GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY((1 ^ 1), min(_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))), (1 ^ 1))) ^ 0), 1 ^ 1)))) << 0))) + 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0)), ~ (_GLF_IDENTITY(~ ((4) << (1 ^ 1)), ~ (~ (~ ((4) << (1 ^ 1))))))), max(_GLF_IDENTITY((4) << (1 ^ 1), ~ (~ ((4) << (1 ^ 1)))), _GLF_IDENTITY(_GLF_IDENTITY((4) << (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0), max(_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0), _GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0))), _GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1)), _GLF_IDENTITY(1 ^ 1, int(ivec4(1 ^ 1, 1, 1, 1)))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ (0 << _GLF_IDENTITY(int(0), int(0))))) << _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY(((1 ^ 1)), int(ivec2(((1 ^ 1)), 1))) >> 0))))), min((~ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0))))))))), int(0))))) << _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) >> 0))))), (~ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) ^ (0 << _GLF_IDENTITY(int(0), int(0))))) << _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) >> 0)))))))), int(ivec3(_GLF_IDENTITY((4) << (1 ^ 1), _GLF_IDENTITY(~ (~ ((4) << (1 ^ 1))), (true ? ~ (~ (_GLF_IDENTITY((4) << (1 ^ 1), ((4) << (1 ^ 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(50537)))), 0, 1))))), (4) << (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1)))))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1)))))) ^ 0)) / 1)) / 1))) ^ 1), _GLF_IDENTITY(_GLF_IDENTITY((4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-61488)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((4) << (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1)), (false ? _GLF_FUZZED(-11829) : 1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), max((4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0, 1), (ivec3(_GLF_IDENTITY((4) << (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1)), (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1)), (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)))), max((4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0, 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((4) << (_GLF_IDENTITY(1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | 0)))))), max((4) << (_GLF_IDENTITY(1, ~ (~ (1))) ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(33956) : 1)), 1))))), 0, 1), (ivec3(_GLF_IDENTITY((4) << (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), clamp(1, 1, 1))), max((4) << (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) >> (0 >> _GLF_IDENTITY(int(5), int(5))))) ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0, 1)) | (ivec3(_GLF_IDENTITY((4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), max((4) << (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) / 1) ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0, 1))), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY((4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), max(_GLF_IDENTITY((4), clamp((4), (4), (4))) << (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, (1) / 1))), clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0, 1), ivec3(0, 0, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, max(0, 0))))) ^ (ivec3(_GLF_IDENTITY((4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))), max(_GLF_IDENTITY((4), clamp((4), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(55221) : 4))), (_GLF_IDENTITY(4, (4) * 1)))) << (1 ^ _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1))), (4) << (1 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))))), 0, 1))) : _GLF_FUZZED(ivec3(-35950, 618, 38300)))))))), (_GLF_IDENTITY((4) << (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), ~ (_GLF_IDENTITY(~ ((4) << (_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), max(~ (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), clamp(~ (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), ~ (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), ~ (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))))))))))), (~ ((4) << (_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))))) / 1)))) << _GLF_IDENTITY(0, (0) ^ 0))))), 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) - (_GLF_IDENTITY(0, (0) ^ 0) | 0)))), min((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) ^ 0)) | _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | ((4))) / 1)), 0 | ((_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | ((4))) / 1)))))) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, 0 + ((4) / 1)))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(4, (4) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) - 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) - 0)))), (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ((4) / 1) - 0), clamp(_GLF_IDENTITY((4) / 1, ((4) / 1) - 0), _GLF_IDENTITY((4) / 1, ((4) / 1) - 0), _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ((4) / 1) - 0), (_GLF_IDENTITY((4) / 1, ((4) / 1) - 0)) ^ 0))))))) ^ 0)))), ((_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) - 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) - 0)))), (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ((4) / 1) - 0), clamp(_GLF_IDENTITY((4) / 1, ((4) / 1) - 0), _GLF_IDENTITY((4) / 1, ((4) / 1) - 0), _GLF_IDENTITY(_GLF_IDENTITY((4) / 1, ((4) / 1) - 0), (_GLF_IDENTITY((4) / 1, ((4) / 1) - 0)) ^ 0))))))) ^ 0))))) + 0), (((_GLF_IDENTITY(4, (4) / 1)))) + 0)) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))))) >> 0)), (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)) & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0) & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (1)))) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)), int(ivec2(((4)), 0))) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0, ~ (~ (0))) | (1 & 1)), clamp(_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1))), ((_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (1 & 1) / (0 ^ 1)), _GLF_IDENTITY((1 & 1), 0 ^ (_GLF_IDENTITY((1 & 1), max((1 & 1), _GLF_IDENTITY((1 & 1), int(ivec3((1 & 1), 1, 1))))))) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY((1 & 1), max((1 & 1), (1 & 1))), ((1 & 1)) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0 ^ (1 & 1), clamp(0 ^ (1 & 1), 0 ^ (1 & 1), _GLF_IDENTITY(0 ^ (1 & 1), max(0 ^ (1 & 1), 0 ^ (1 & 1)))))))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(((1 & 1)), (((1 & 1))) | (((1 & 1)))) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), (max(1, 1)) << 0)) >> 0))) >> 0))) >> 0, min((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (1 & 1) >> 0), max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29141))))), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> 0, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1))), 1 & 1, 1 & 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 1, 1)))), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> 0))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> 0, min((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ((4)) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, max(1 & 1, _GLF_IDENTITY(1 & 1, (1 & 1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (1 & 1) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (_GLF_IDENTITY(1, 0 | (1)) & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), (_GLF_IDENTITY((1 & 1), ~ (~ ((1 & 1))))) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> 0, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (1) * 1), max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0) & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))) / _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), min(max(1, 1), max(1, 1))))), max((_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), min(max(1, 1), max(1, 1))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), min(max(1, 1), max(1, 1))))))) >> 0))) >> 0)))))), min((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(((4)) / (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1))), ((_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))) ^ 0)), _GLF_IDENTITY(1 & 1, (1 & _GLF_IDENTITY(1, (1) + 0)) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * _GLF_IDENTITY(1, (1) >> (((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) ^ 1)))) | 0)) / 1)), 0 ^ (((4)) / _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(_GLF_IDENTITY(ivec3(1 & 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec3(1 & 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) | (ivec3(1 & 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0))))), clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (1 & 1) << 0)) << 0), 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), _GLF_IDENTITY(1, 0 ^ (1)) & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1)), ((_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(_GLF_IDENTITY(ivec3(1 & 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), (ivec3(1 & 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0)) | (ivec3(1 & 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0))))), clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, (1 & 1) << 0)) << 0), 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), _GLF_IDENTITY(1, 0 ^ (1)) & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))) >> 0)))) / _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(2), int(2))))) | 0), (_GLF_IDENTITY(1, max(1, 1))) >> 0))) >> 0)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)))), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), _GLF_IDENTITY(((1 & 1)), (((1 & 1))) << 0) - 0) * 1)) | 0)) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(_GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1), max(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & _GLF_IDENTITY(1, (1) | 0), 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)))) - 0) * 1)) | 0)) / 1), min(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldExtract(77780, -69236, -50911)) : 1))) - 0), clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, _GLF_IDENTITY(1, (1) << 0) & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), 1 & 1)), _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0, int(int(_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0, min((_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0, (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)))))) | ((_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)))) / 1), _GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(0 ^ (1 & 1), 0 | (0 ^ (1 & 1)))))), _GLF_IDENTITY(1 & 1, (1 & 1) | (1 & 1)), _GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-15086) : 1 & 1)))), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))))), _GLF_IDENTITY(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))) & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (1 & 1) | _GLF_IDENTITY((1 & 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1 & 1), ((1 & 1)) >> 0) : _GLF_FUZZED(-4926)))), 1 & 1)), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) * 1), _GLF_IDENTITY((1 & 1), (_GLF_IDENTITY((1 & _GLF_IDENTITY(1, (1) | 0)), ((1 & _GLF_IDENTITY(1, (1) | 0))) + 0)) - 0) * 1)) | 0)) / 1), 0 ^ (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))) | (_GLF_IDENTITY(1 & 1, 0 ^ (1 & 1)))), _GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) + 0), 1)) & 1) | (1 & _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(6), int(6)))))), 1 & 1)), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0) * 1)) | 0)) / 1))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))))) >> 0)))), max(1, 1))) >> 0))) >> 0))))) / 1)) * _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))))));
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(31.97) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), bool(bvec4(! ((_GLF_IDENTITY(false, (false) && true))), true, true, false))))))))))) || false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((_GLF_IDENTITY(false, (false) && true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true))), bool(bvec4(! ((_GLF_IDENTITY(false, (false) && true))), true, true, false))))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && ((false))))) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))))), true, true, false)), true, false)))))) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false))))))) || false))) && true))))))) || false, ! (! ((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))))), true, true, false)), true, false)))))) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false))))))) || false))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && true)))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))))))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))), true && (! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false)))))))))))))), true, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))), true && (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((false), false || ((false))))))))))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((false)))))))))))), true, true, false)), true, false)))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), true && ((! (_GLF_IDENTITY(false, (false) && true)))))) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false), true)))))))))))) || false))) && true))) || false)))))) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), true, true))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))), ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))))) || false, true && ((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))) || false)))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), true, true))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))), ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))))) || false, true && ((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))) || false)))))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec3(! (bool(false)), true, true))))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))), ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))), ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))) && true))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))))), ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), ! (! ((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) || false), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && true)))), false || (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(! ((! (_GLF_IDENTITY(false, (false) && true))))))))))))) || false)))))))) || false, true && ((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))) || false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))) && true)) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))))))) || false)))))))))) || false)))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true)) && true), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (! (! (_GLF_IDENTITY(false, (false) && true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))))))) || false))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))))))))))), false || (bool(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((false) && true, true, true), bvec3(bvec3(bvec3((false) && true, true, true))))))))))))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true))), (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, false)))))))), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false)))))))) || false))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), (! (_GLF_IDENTITY(false, (false) && true))) || false))))))))) || false))))))), _GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))))) || false, bool(bool(_GLF_IDENTITY((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))), false, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))), false, true))))))))))))) || false, bool(bvec2((bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))))))))) || false)))))))) || false, false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))))))) && true)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))))))) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))))))) && true))) || false), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))))))) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false))))))))))) && true))) || false), true, false, false)))))))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))), true, true))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))))) || false))) || false), true))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
}
