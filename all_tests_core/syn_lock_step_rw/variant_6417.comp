#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))), ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(315.425) : clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, tan(0.0)), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, tan(0.0))))))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true))))), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-99.67)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.0)))), bool(true))))) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true))))), true && (bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true)))))))))), false || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true))), true))))))))))), true && (bool(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, true && (true))), false || (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, true && (true)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bool(bool((_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).x)) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).x)) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (true) && true), ((false) && _GLF_IDENTITY(true, (true) && true)) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)), ! (! (true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)), ! (! (true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)), ! (! (true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true))))))))))) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (true) && true), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (true) && true), ((false) && _GLF_IDENTITY(true, (true) && true)) && true), true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), (true) && true), ((false) && _GLF_IDENTITY(true, (true) && true)) && true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) || ((true))))), false, false))), (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)), ! (! (true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))), false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))), ((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))) || false)), _GLF_IDENTITY(((false) && _GLF_IDENTITY(true, (true) && true)), bool(bvec4(((false) && _GLF_IDENTITY(true, (true) && true)), true, false, _GLF_IDENTITY(false, (false) && true)))) && true)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))), false, false))), (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true)))), false || ((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)), ! (! (true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))), (true) && true), _GLF_IDENTITY(true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, true)))) && true)) && true)), ! (! (true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true))), false || (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))))), ((false) && _GLF_IDENTITY(true, (true) && true)) && _GLF_IDENTITY(true, false || (true))))))))))))) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, false || (true))), ((false) && _GLF_IDENTITY(true, (true) && true)) && true)))))))))) || false)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2805.4532)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2805.4532)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))) || false))), true, true, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true, true))))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), (false) || false), (false) && true), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(12.18)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), true, true, true))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false, false, true))))))))), true, true, true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))), (injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)))) || _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 2.3))), bool(false))))) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize)))).x) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), _GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED((323.808 / mat3(-8334.6505, 4.4, 542.692, 1438.5930, -49.56, 5774.0579, -5.5, 46.39, 414.956))) : mat3(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), max(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY(_GLF_IDENTITY((mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)), (true ? _GLF_IDENTITY((mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)), transpose(transpose((mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0))))) : _GLF_FUZZED(transpose(mat3(43.83, -913.311, 7754.5870, 3.1, -9166.5373, -148.179, 49.58, -9.3, -2283.6716))))), (false ? _GLF_FUZZED(mat3(-2587.0963, -6122.8513, -1.4, 3.0, 7.3, 4106.3626, -87.32, -69.62, 9.4)) : _GLF_IDENTITY((mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)), (true ? _GLF_IDENTITY((mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)), transpose(transpose((mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0))))) : _GLF_FUZZED(transpose(mat3(43.83, -913.311, 7754.5870, 3.1, -9166.5373, -148.179, 49.58, -9.3, _GLF_IDENTITY(-2283.6716, (false ? _GLF_FUZZED((- -8982.2282)) : -2283.6716))))))))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(344.013) : 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 0.0)))), bool(true))), sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-2.5, 4.4, 5.7, 1.4, 4.7, -87.75, -3.0, -1.1, -42.91, 253.689, -562.338, -396.478)) : mat3x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), _GLF_IDENTITY(mat3(mat4(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0))), mat3(mat3x4(mat3(mat4(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))))))))), max(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((745.513 + -162.467))), bool(false))), cos(0.0), 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(-3500.4389))))) - 0.0), sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, float(mat4(1.0, sin(0.0), 1.0, _GLF_IDENTITY(log(1.0), float(mat2(_GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, tan(0.0), 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), sin(0.0), 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, length(0.0), 0.0, 0.0))))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.2))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(vec4((1.0), 0.0, 0.0, 0.0))) / 1.0), cos(0.0), 1.0)))), (float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 1.0))))) / 1.0), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))))), 0.0, 1.0, cos(0.0), 1.0)), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))))), 0.0, 1.0, cos(0.0), 1.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), float(mat2(_GLF_IDENTITY(cos(0.0), float(vec2(cos(0.0), 1.0))), 1.0, exp(0.0), 1.0))), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-40.03)), float(0.0), bool(true)))), 1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), (false ? _GLF_FUZZED(131.548) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), mix(float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0))))), float(_GLF_FUZZED(932.292)), bool(false))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.8))), 0.0) + (mat3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), max(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat3x2(cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-3.1) : float(mat3x2(cos(0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))))))), cos(0.0), cos(0.0))), 1.0)))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(0.0, (0.0) * 1.0)) * 1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.9))), 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(60.63)), bool(false)))))), 0.0, 1.0, cos(0.0), 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((7835.9827 - 5.6))), bool(false))))))), max(float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, abs(0.0), 0.0), vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), 1.0, log(1.0))), float(mat3x4(float(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-106.008), (vec3(1.0, 0.0, 1.0))[1], _GLF_FUZZED(131.937)), vec3((vec3(1.0, 0.0, 1.0))[0], _GLF_FUZZED(vec2(-7463.4210, -54.36).y), (vec3(1.0, 0.0, 1.0))[2]), bvec3(true, false, true))), _GLF_IDENTITY(vec3(log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0), (vec3(log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0))), dot(vec3(1.0, 0.0, 1.0), vec3(log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, abs(0.0), 0.0), vec3(1.0, 1.0, 1.0))), 1.0, log(1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.1) : 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.1)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(68.72)))), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), (true ? _GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(mat3x2(cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3x2(cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(933.913, 79.66, 9.9, -8.8, -7389.2143, -915.193)))))) : _GLF_FUZZED(1.8))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-831.522)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6566.1366)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0))), float(_GLF_FUZZED(-9211.5747)), bool(false))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0))))))))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-989.324) : 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), 1.0)), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0)))))))))))))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id * subgroup_size))), 1u * (_GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size))), (true ? (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, (1u ^ 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), 0u ^ (uint(uvec4(subgroup_size, (1u ^ 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))) : _GLF_FUZZED(subgroup_size))), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) | ((1u ^ 1u))) ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | 0u)))))))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u) * subgroup_size) | (subgroup_id * subgroup_size)))), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))) + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size % subgroup_id, (workgroup_size % subgroup_id) << 0u)), ((_GLF_IDENTITY(workgroup_size % subgroup_id, (workgroup_size % subgroup_id) << 0u))) | 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(64.84)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(64.84)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, mix(float((injectionSwitch.x) + 0.0), float(_GLF_FUZZED(-8685.5624)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(8051.9011), ((injectionSwitch))[1]), bvec2(false, true)))))).x, mix(float(_GLF_FUZZED(float(163307u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6338.2222)), bool(false)))), float(_GLF_FUZZED(-7.1)), bool(false))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(8051.9011), ((injectionSwitch))[1]), bvec2(false, true)))))).x, mix(float(_GLF_FUZZED(float(163307u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6338.2222)), bool(false)))), float(_GLF_FUZZED(-7.1)), bool(false))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(8051.9011), ((injectionSwitch))[1]), bvec2(false, true)))))).x, mix(float(_GLF_FUZZED(float(163307u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6338.2222)), bool(false)))), float(_GLF_FUZZED(-7.1)), bool(false))))) > injectionSwitch.y)), true, false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(64.84)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(64.84)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(64.84)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(64.84)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), false), false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true))))), bool(bool(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true)))))))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bool(true))))), false), false, true)))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(8051.9011), ((injectionSwitch))[1]), bvec2(false, true)))))).x, mix(float(_GLF_FUZZED(float(163307u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6338.2222)), bool(false)))), float(_GLF_FUZZED(-7.1)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), mix(float(_GLF_FUZZED(((- 7224.8539) / 696.949))), float(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(8051.9011), ((injectionSwitch))[1]), bvec2(false, true)))))).x, mix(float(_GLF_FUZZED(float(163307u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6338.2222)), bool(false)))), float(_GLF_FUZZED(-7.1)), bool(false))))), bool(true)))) > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) - 0u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), max(_GLF_IDENTITY((~ (subgroup_local_id)), 0u ^ ((~ (subgroup_local_id)))), (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) - 0u))))))) + 1) % subgroup_size)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u)))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(893.839)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), _GLF_IDENTITY(true, false || (true)), false))), false, true))), true, true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec2((false), false)))) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), (_GLF_IDENTITY((false), bool(bvec2((false), false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, false || (false)))), (! (true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))) || false)))) || (_GLF_IDENTITY(false, (false) || false)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) || false)), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-1030.4033) : injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(float(vec2((injectionSwitch[0]), 0.0)), mix(float(_GLF_FUZZED(1.2)), float(float(vec2((injectionSwitch[0]), 0.0))), bool(true)))) * 1.0, min(_GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(float(vec2((injectionSwitch[0]), 0.0)), mix(float(_GLF_FUZZED(1.2)), float(float(vec2((injectionSwitch[0]), 0.0))), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))))) * 1.0, _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((injectionSwitch[0]), float(mat3x4((injectionSwitch[0]), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0)), mix(float(_GLF_FUZZED(1.2)), _GLF_IDENTITY(float(float(vec2((injectionSwitch[0]), 0.0))), _GLF_IDENTITY(float(mat4(float(float(vec2((injectionSwitch[0]), 0.0))), sin(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(abs(1.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sin(0.0), 1.0, 0.0, 1.0, tan(0.0))), max(float(mat4(float(float(vec2((injectionSwitch[0]), 0.0))), sin(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(abs(1.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sin(0.0), 1.0, 0.0, 1.0, tan(0.0))), float(mat4(float(float(vec2((injectionSwitch[0]), 0.0))), sin(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), abs(1.0)), vec2(0.0, 0.0)), dot(vec2(abs(1.0), abs(1.0)), vec2(0.0, 0.0))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, sin(0.0), 1.0, 0.0, 1.0, tan(0.0)))))), bool(true)))) * 1.0))), injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (1) - 0)) | (1)), 1))]))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], _GLF_IDENTITY(4, (4) - 0), 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (next_virtual_gid)), 0u + ((~ (next_virtual_gid))))), (next_virtual_gid) >> 0u)], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1)))), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1)))), 0, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1)))), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1)))), 0, 0)))))) ^ 0), 1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(2586) : _GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))))), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4)))))), (int(int(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(4), int(4)), min(0 << _GLF_IDENTITY(int(4), int(4)), 0 << _GLF_IDENTITY(int(4), int(4))))))) - 0))))), ~ (~ (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), _GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1))), min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84955))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))))))), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), 0, 0))))), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, ~ (~ (0)))))), (0 << _GLF_IDENTITY(int(4), int(4)))))))))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1))), (_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1)))) << 0)), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 0, 0))), 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1)))), 0, 0))))), 1, ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(59792) : 0))))) >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(4), int(4))))), ~ (~ (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84955))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))))))), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), (min(1, 1)) | (min(1, 1))), min(min(1, 1), min(1, 1)))), 0, 0))))), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(4), int(4))))))))))), (_GLF_IDENTITY(true, false || (true)) ? ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1))), (_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1)))) << 0)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1))), (_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1)))) << 0)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1))), (_GLF_IDENTITY(min(1, 1), min(_GLF_IDENTITY(min(1, 1), (min(1, _GLF_IDENTITY(1, 0 ^ (1)))) + 0), min(1, 1)))) << 0)))), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1)))), 0, 0))))), 1, ((1 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(59792) : 0))))) >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(4), int(4))))), ~ (~ (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), _GLF_IDENTITY(min(1, 1), min(min(1, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84955))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84955))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1))))), (min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84955))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))))) | (min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84955))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1)))))))) + 0)))), (false ? _GLF_FUZZED(64712) : _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1)))), int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), min(min(1, 1), _GLF_IDENTITY(min(1, 1), 1 * (min(1, 1)))))), 0, 0))))), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (0 << _GLF_IDENTITY(int(4), int(4))))))))))) : _GLF_FUZZED(49093))))), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(min(1, 1), 1), ivec2(0, 0) + (ivec2(min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(86961) : 1))), 1)))), 0 | (int(_GLF_IDENTITY(ivec2(min(1, 1), 1), min(ivec2(_GLF_IDENTITY(min(1, 1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(min(1, 1), 0, 1), max(ivec3(min(1, 1), 0, 1), ivec3(min(1, 1), 0, 1)))), (int(_GLF_IDENTITY(ivec3(min(1, 1), 0, 1), max(ivec3(min(1, 1), 0, 1), ivec3(min(1, 1), 0, 1))))) / (1 & 1)), ~ (~ (int(_GLF_IDENTITY(ivec3(min(1, 1), 0, 1), max(ivec3(min(1, 1), 0, 1), ivec3(min(1, 1), _GLF_IDENTITY(0, (0) | (0)), 1)))))))), 1), ivec2(min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55226) : 1)), 1), 1)))))))))) * 1)))))), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), 0 | (~ (_GLF_IDENTITY(4, (4) * 1)))))));
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0))))), 64))) << _GLF_IDENTITY(0, clamp(0, 0, 0)))), ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (64) ^ 0), 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0))))), 64))) << _GLF_IDENTITY(0, clamp(0, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0))))), 64))) << _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0 ^ ((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))) | (_GLF_IDENTITY(64, int(ivec2(64, 0))))), 64))) << _GLF_IDENTITY(0, clamp(0, 0, 0)))))))) << (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0)), (int(_GLF_IDENTITY(int(2), int(2)))) | (int(_GLF_IDENTITY(int(2), int(2)))))) | (int(_GLF_IDENTITY(int(2), int(2)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0)), (int(_GLF_IDENTITY(int(2), int(2)))) | (int(_GLF_IDENTITY(int(2), int(2)))))) | (int(_GLF_IDENTITY(int(2), int(2)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0)), (int(_GLF_IDENTITY(int(2), int(2)))) | (int(_GLF_IDENTITY(int(2), int(2)))))) | (int(_GLF_IDENTITY(int(2), int(2))))))) | 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0)), (int(_GLF_IDENTITY(int(2), int(2)))) | (int(_GLF_IDENTITY(int(2), int(2)))))) | (int(_GLF_IDENTITY(int(2), int(2)))))))), ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), int(2))), ~ (~ (int(_GLF_IDENTITY(int(2), int(2))))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), int(2)))), ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2))))))))))) ^ (1 | 1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), int(ivec4(_GLF_IDENTITY(64, int(ivec2(64, 0))), 1, ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(0), 0, 1, 0))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))) | (_GLF_IDENTITY(64, int(ivec2(64, 0))))), 64))) << _GLF_IDENTITY(0, clamp(0, 0, 0)))) << (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY(int(2), int(2)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), int(2)))), (int(int(_GLF_IDENTITY(int(2), int(2))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), int(2)))), 0 | (int(int(_GLF_IDENTITY(int(2), int(2)))))))), ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(-78033) : _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2))))), ~ (~ (int(_GLF_IDENTITY(int(2), int(2))))))), int(int(_GLF_IDENTITY(int(2), int(2)))))))) ^ (1 | 1))), 0 + (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(64, 0))), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec2(64, 0), clamp(ivec2(64, 0), ivec2(64, 0), ivec2(64, 0)))))) | (_GLF_IDENTITY(64, int(ivec2(64, 0))))), 64))) << _GLF_IDENTITY(0, clamp(0, 0, 0)))) << (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(10553))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))))))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), 1 * (_GLF_IDENTITY((~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), ~ (~ ((~ (int(int(_GLF_IDENTITY(int(2), int(2))))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))))))), max(~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))))))), clamp(~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))))))), ~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))))))), ~ (~ (_GLF_IDENTITY(~ (~ (int(int(_GLF_IDENTITY(int(2), int(2)))))), (false ? _GLF_FUZZED(-62442) : ~ (~ (int(int(_GLF_IDENTITY(int(2), int(2))))))))))))))) + 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2))))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), int(2)))), (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), int(2)))), 1 * (~ (int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), int(2))))))) + 0)))), int(int(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) << 0), 2)))))))))) ^ (1 | 1)))))))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), mix(vec2(_GLF_FUZZED((8.2 - 63.94)), ((_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[0], _GLF_FUZZED(326.953)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-921.706, (true ? -921.706 : _GLF_FUZZED(4.2)))), _GLF_FUZZED(-4552.8934)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) / vec2(1.0, 1.0)).y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), float(_GLF_FUZZED(float(33305))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))))), injectionSwitch.y))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 6.9))), bool(false)))) || false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-73.45)))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-73.45))))), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)) : _GLF_FUZZED(-73.45))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(smoothstep(-160.620, 8.7, injectionSwitch)) : injectionSwitch)), 1.0, 0.0, determinant(mat4(1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(sin(vec2(465.771, -19.52)))) : injectionSwitch)).x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
