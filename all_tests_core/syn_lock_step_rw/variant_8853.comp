#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), true, false, false)))), false || (_GLF_IDENTITY(false, true && (false))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), bool(bvec4((! (! (false))), false, false, true))), bool(bool(! _GLF_IDENTITY((! (! (false))), bool(bvec4((! (! (false))), false, false, true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(11.42), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), false, false)))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), (bool(bool(_GLF_IDENTITY(true, (true) && true)))) || false), false || (_GLF_IDENTITY(bool(bool(true)), bool(bvec3(bool(bool(true)), false, false)))))), true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((injectionSwitch.x < injectionSwitch.y)))), false)), ! (! (bool(bvec4((true), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true, false, true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true, false, true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true, false, true))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true, false, true))))))))), true, true, false))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)), false, true))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true, false, true))))))), false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), true, false, true))))))))), true, true, false))), true, false, true))))))) || false)), false))))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))), false || (! (false))))), (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(661.409), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-418.092)), bvec2(true, false)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) / 1u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) / 1u)) << 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x), clamp((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x)))) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x))) | (gl_WorkGroupSize.x))) / 1u)) | 0u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(7.2)), float(exp(0.0)), bool(true))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, (false ? _GLF_FUZZED(dot(vec3(1.4, -67.01, -2.2), vec3(3606.4147, -2649.7189, -5563.7490))) : (_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))) + 0.0))), 1.0)), 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.7) : 0.0))), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0)), 0.0)), clamp(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-924.018) : 0.0)), round(length(normalize(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-924.018) : 0.0)), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4)))) - _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2(sin(0.0), 0.0, cos(0.0), 1.0)), mix(float(float(mat2(sin(0.0), 0.0, cos(0.0), 1.0))), float(_GLF_FUZZED(6.0)), bool(false))))))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))), 0.0)), min(vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-924.018) : 0.0)), round(length(normalize(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-924.018) : 0.0)), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4)))) - _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2(sin(0.0), 0.0, cos(0.0), 1.0)), mix(float(float(mat2(sin(0.0), 0.0, cos(0.0), 1.0))), float(_GLF_FUZZED(6.0)), bool(false))))))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))), 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-924.018) : 0.0)), round(length(normalize(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-924.018) : 0.0)), _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.4)))) - _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * 1.0), _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(mat2(sin(0.0), 0.0, cos(0.0), 1.0)), mix(float(float(mat2(sin(0.0), 0.0, cos(0.0), 1.0))), float(_GLF_FUZZED(6.0)), bool(false))))))), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))), 0.0)))), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0)), 0.0)), vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, cos(sin(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-8.8)))), 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))), sin(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(47.02)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 1.0)), 0.0)))), _GLF_IDENTITY((vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0))), vec2(mat3x2(_GLF_IDENTITY((vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.3)), bool(false))), sqrt(0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0))), mix(vec2(_GLF_FUZZED(23.88), _GLF_FUZZED(9.0)), vec2(((vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0))))[0], ((vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0), exp(0.0))), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, sin(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0)), 0.0))))[1]), bvec2(true, true))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))) - log(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), (injectionSwitch)))[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(3872.7258)), vec2(_GLF_FUZZED(-310.586), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) && true)), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || false))) && true, false || ((bool(_GLF_IDENTITY(false, (false) || false))) && true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((ivec2(-79176, 97766) != ivec2(99054, -651)) ? -56.30 : 1.9))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8302.9805 - 26.84))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(-2.7, 426.664))))))) / vec2(1.0, 1.0)).y), bool(true)))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((_GLF_IDENTITY(ivec2(-79176, 97766), (true ? ivec2(-79176, 97766) : _GLF_FUZZED(ivec2(25093, 15149)))) != ivec2(99054, -651)) ? -56.30 : 1.9))), float(injectionSwitch.y), bool(true)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((ivec2(-79176, 97766) != ivec2(99054, -651)) ? -56.30 : 1.9))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8302.9805 - 26.84))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(-2.7, 426.664))), max((true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8302.9805 - 26.84))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(-2.7, 426.664))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8302.9805 - 26.84))), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(-2.7, 426.664))))))))) / vec2(1.0, 1.0)).y), bool(true)))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * _GLF_IDENTITY((injectionSwitch.x), float(mat2x3((injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((_GLF_IDENTITY(ivec2(-79176, 97766), (true ? ivec2(-79176, 97766) : _GLF_FUZZED(ivec2(25093, 15149)))) != ivec2(99054, -651)) ? -56.30 : 1.9))), float(injectionSwitch.y), bool(true))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, sqrt(1.0), 1.0))) : _GLF_FUZZED(-28.65))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(74.83) : injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.6) : injectionSwitch.y)))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)), (true ? mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(mat2x3(3903.1195, 4.4, -2.8, 4.0, 0.7, 9573.2314)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)), (true ? mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(mat2x3(3903.1195, 4.4, -2.8, 4.0, 0.7, 9573.2314)))))), (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)), (true ? mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(mat2x3(3903.1195, 4.4, -2.8, 4.0, 0.7, 9573.2314)))))) : _GLF_FUZZED(fract(7814.8377)))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)), (true ? mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(mat2x3(3903.1195, 4.4, -2.8, 4.0, 0.7, 9573.2314)))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)), (true ? mat2x3(injectionSwitch.x, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0)), 0.0, 0.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(mat2x3(3903.1195, 4.4, -2.8, 4.0, 0.7, 9573.2314)))))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 1u, 1u))), (false ? _GLF_FUZZED(14957u) : subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))), (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(14957u) : subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(14957u) : subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))), (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, ~ (~ (0u)))))), subgroup_id)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(14957u) : _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), 1u, 1u, 1u))))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) >> _GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | ((subgroup_id) | (subgroup_id)))), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) ^ 0u))), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(14957u) : subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) : _GLF_FUZZED(num_workgroup)), (true ? (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) | ((subgroup_id) | (subgroup_id)))), _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id))) ^ 0u))), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(14957u) : subgroup_id)))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) : _GLF_FUZZED(num_workgroup)) : _GLF_FUZZED(num_workgroup)))) * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u ^ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)), (min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))) | 0u)))), subgroup_base), max(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u))), subgroup_base))) / 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 0u ^ (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))))), subgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) / 1u))), 0u ^ (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) / 1u, ((subgroup_base) / 1u) >> 0u)))))), subgroup_base))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) | 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (1u ^ 1u) | (subgroup_base)), _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (_GLF_IDENTITY(subgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), 0u | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))), _GLF_FUZZED(subgroup_size))) : subgroup_base))))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((1u ^ 1u), 0u ^ ((1u ^ 1u))) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, (_GLF_IDENTITY((subgroup_base), clamp((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) ^ (0u & 35980u))), (subgroup_base), (subgroup_base))) / 1u) | (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u))))) >> 0u))), (true ? _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((1u ^ 1u), 0u ^ ((1u ^ 1u))) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, (_GLF_IDENTITY((subgroup_base), clamp((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) ^ (0u & 35980u))), (subgroup_base), (subgroup_base))) / 1u) | (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u))))) >> 0u))), 0u ^ (min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((1u ^ 1u), 0u ^ ((1u ^ 1u))) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u, (_GLF_IDENTITY((subgroup_base), clamp((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base))) ^ (0u & 35980u))), (subgroup_base), (subgroup_base))) / 1u) | (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))) / 1u))))) >> 0u))))) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, _GLF_IDENTITY(1u, max(1u, 1u)), 0u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (1u ^ 1u) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u), clamp((subgroup_base), (subgroup_base), (subgroup_base))), (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))) ^ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))) | 0u)) / 1u))) << 0u, ((min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(1u ^ 1u, uint(uvec4(1u ^ 1u, 0u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u)))) | (subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))), (_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base)))) ^ (0u | 0u)) / 1u))) << 0u) >> 0u))) / 1u)), subgroup_base), uint(_GLF_IDENTITY(uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), min(0u, 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), subgroup_base), 0u, 0u), (uvec3(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) | (_GLF_IDENTITY(0u, (0u) >> (0u | 0u)))), min(0u, 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), subgroup_base), 0u, 0u)) / uvec3(1u, 1u, 1u)))), min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), 0u | (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)) + 0u))))), _GLF_IDENTITY((workgroup_base + subgroup_base), (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) >> 0u)) ^ 0u) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), min(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), min(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)) | (workgroup_base)) + subgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_local_id))), (0u))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), min(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, 1u))), min(uint(_GLF_IDENTITY(1u, min(1u, 1u))), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u)) | (workgroup_base)) + subgroup_base) << 0u), (workgroup_base + subgroup_base) - 0u), workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7039.1140) : injectionSwitch.y)) : _GLF_FUZZED(-95.69))))))), vec2(vec3(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), injectionSwitch.y)))), _GLF_ZERO(0.0, injectionSwitch.x))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(float(-2367))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(9.9))))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec4(1.9, 1.9, -6668.6694, 820.338))) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0)))) + 0.0))), injectionSwitch.y))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) && true)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat2((injectionSwitch) / vec2(1.0, 1.0), 0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(vec2(mat2((injectionSwitch) / vec2(1.0, 1.0), 0.0, 0.0)), exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0), (mat3(vec2(mat2((injectionSwitch) / vec2(1.0, 1.0), 0.0, 0.0)), exp(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(0.0, 0.0)).y)), (false ? _GLF_FUZZED(vec2(5845.8890, 5165.1209)) : vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(0.0, 0.0)).y))))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-5.1)), vec2(_GLF_FUZZED(1.6), ((injectionSwitch))[1]), bvec2(false, true))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-4105.4645)), bool(false)))), injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(95.46)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(95.46)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + 0.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))).y))))), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4x2(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y)))) && true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), (bool(bvec2(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (false)))), true, false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))))) - 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) - 0u), (subgroup_local_id) | (subgroup_local_id))))) - 0u))) : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)))))))), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))))), false, true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), false, true))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true))), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) | (_GLF_IDENTITY(2, max(2, 2)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8515.5100, max(8515.5100, _GLF_IDENTITY(8515.5100, (true ? 8515.5100 : _GLF_FUZZED(-42.28))))), -8.1)))).x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y)), _GLF_IDENTITY(false, (false) || false) || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-283.872) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0))), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0))), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec3(7.1, -3190.3716, 4175.5595))))), mix(float(_GLF_FUZZED(9.2)), float(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0))), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? vec3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0))), 0.0, determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec3(7.1, -3190.3716, 4175.5595)))))), bool(true)))) > injectionSwitch.y)), false, true, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? 91.78 : -58.49))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9723.4831)), bool(false)))), _GLF_IDENTITY(bool(true), (bool(true)) && true))) > injectionSwitch.y)), false, true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))), true && (((bool(false))))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((bool(false))), true && (((bool(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec2(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(((bool(false))), false || (_GLF_IDENTITY(((bool(false))), (((bool(false)))) || false))), true && (((bool(false))))) && _GLF_IDENTITY(true, true && (true))))), bool(bool(((_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(((bool(false))), false || (_GLF_IDENTITY(((bool(false))), (((bool(false)))) || false))), true && (((bool(false))))) && _GLF_IDENTITY(true, true && (true))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(((bool(false))), true && (((bool(false))))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((bool(false))), true && (((bool(false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec2(true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(((bool(false))), false || (_GLF_IDENTITY(((bool(false))), (((bool(false)))) || false))), true && (((bool(false))))) && _GLF_IDENTITY(true, true && (true))))), bool(bool(((_GLF_IDENTITY((bool(false)), _GLF_IDENTITY(_GLF_IDENTITY(((bool(false))), false || (_GLF_IDENTITY(((bool(false))), (((bool(false)))) || false))), true && (((bool(false))))) && _GLF_IDENTITY(true, true && (true))))))))))), true))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))) || false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), false || (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), _GLF_IDENTITY(bool(bvec3(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true, true)), bool(bvec4(bool(bvec3(! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true, true)), false, true, false)))))), (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))) || false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-46.36)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0 | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0 | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))))), _GLF_IDENTITY(4, (4) + 0)), ~ (~ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), clamp(1 * (4), 1 * (4), 1 * (4)))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), ((4)) | (1 ^ 1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 1 * (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0 ^ (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4))))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0 | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))))), _GLF_IDENTITY(4, (4) + 0)), (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, 1 * (4))), (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, 1 * (4))), min(max(4, _GLF_IDENTITY(4, 1 * (4))), max(4, _GLF_IDENTITY(4, 1 * (4)))))) - 0)))))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, (_GLF_IDENTITY((4) + 0, ((4) + 0) << 0)) | 0))), min(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1, (1) | (1)) * (4)))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) * (4)))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))))), _GLF_IDENTITY(4, (4) + 0)), clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), int(ivec3(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 0, (0 << _GLF_IDENTITY(int(3), int(3)))))))))), _GLF_IDENTITY(4, (4) + 0))))) / 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))))), 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4)))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(24869) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), min(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, max(0, 0)))) ^ (1 * (4)))))), 4), ~ (~ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), max(clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, 1 * (4))), 0 ^ (max(4, _GLF_IDENTITY(4, 1 * (4)))))), 4), clamp(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4))))))) | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY(_GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), _GLF_IDENTITY(int(int(~ ((4)))), (int(int(~ ((4))))) / 1)))), (false ? _GLF_FUZZED(82056) : (4)))))), 4), _GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(5184) : 0)) & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), 0 ^ (1 * (4)))))), 4), ~ (~ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), max(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4))))))) | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4)))))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4))))))) | (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4)))))))), 4), _GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true)))))) || false) ? (_GLF_IDENTITY(0, (0) * (0 ^ 1)) & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)))))), 1), (ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), 0 ^ (1 * (4)))))), 4), ~ (~ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), max(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), max(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4))))) ^ 0))))), 4), max(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4))))))) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4)))))), 4), _GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) >> (0 | 0)))))), 4)))), (false ? _GLF_FUZZED(-88174) : _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4)))))), 4), _GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) >> (0 | 0)))))), 4)))), ((_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4)))))), 4), _GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) >> (0 | 0)))))), 4))))) | ((_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (false ? _GLF_FUZZED(82056) : (4)))))), 4), _GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))), (_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0)))))) >> (0 | 0)))))), 4)))))))))), 1)) << (ivec2(0, 0) << _GLF_IDENTITY(ivec2(5), ivec2(5)))))), ~ (~ (false ? _GLF_FUZZED(24869) : _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))))), 4), 1 * (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4))))) - 0))))), 4)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(98505) : _GLF_IDENTITY(~ (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))))), 4)), min(~ (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))))), 4)), _GLF_IDENTITY(~ (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))))), 4)), (~ (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4))))))) - 0), 4))) << 0)))))))) | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), (false ? _GLF_FUZZED(-9213) : _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))))), 4), (_GLF_IDENTITY(0 & -3843, (0 & -3843) * 1)) | (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | _GLF_IDENTITY(0, (0) / 1)) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), 4)))))))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(24869) : _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4))))) ^ 0), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) / 1), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), 0 ^ (1 * (4)))))), 4), ~ (~ (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), max(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4))))))) | (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) / 1), (false ? _GLF_FUZZED(82056) : (4)))))), 4), _GLF_IDENTITY(_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)), _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)), (_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4))) ^ 0)), _GLF_IDENTITY(int(ivec4(0 | (_GLF_IDENTITY(_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)), (_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4))) ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)), 1 * (_GLF_IDENTITY(int(ivec4(0 | (_GLF_IDENTITY(_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)), (_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4))) ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)), 0 | (int(ivec4(0 | (_GLF_IDENTITY(_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4)), (_GLF_IDENTITY((0 & -3843), (true ? _GLF_IDENTITY((0 & -3843), (true ? (0 & -3843) : _GLF_FUZZED(-11080))) : _GLF_FUZZED(-7611))) | (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))))))), 4))) ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)))))))))))), ~ (~ (false ? _GLF_FUZZED(24869) : _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4)) | (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4)) | (clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4))), (clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4)) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), clamp(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (false ? _GLF_FUZZED(-29822) : _GLF_IDENTITY(4, 1 * (4)))))), 4), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4))))))), ~ (~ (clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), 1 * _GLF_IDENTITY((4), 0 + ((4)))))), 4))))) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(0 & -3843, (0 & -3843) * 1)) | (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) | (0)) | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4))))))) - 0), 4)))), clamp((_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(0 & -3843, (0 & -3843) * 1)) | (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) | (0)) | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4))))))) - 0), 4)))), (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(0 & -3843, (0 & -3843) * 1)) | (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) | (0)) | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4))))))) - 0), 4)))), (_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 1 * (4)))), 4), (_GLF_IDENTITY(0 & -3843, (0 & -3843) * 1)) | (clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(0, (0) | (0)) | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (4)), max(4, _GLF_IDENTITY(4, 1 * (4))))))) - 0), 4)))))))))))))))) | (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (true ? _GLF_IDENTITY(1, (1) / 1) : _GLF_FUZZED(-51694))))) * (4)))), 4)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
    barrier();
  }
}
