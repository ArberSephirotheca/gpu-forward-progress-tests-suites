#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_61 {
 uvec4 _f0;
} ;

struct _GLF_struct_60 {
 uint next_virtual_gid;
 bvec3 _f0;
} ;

struct _GLF_struct_59 {
 ivec3 _f0;
} ;

struct _GLF_struct_62 {
 mat4 _f0;
 bvec2 _f1;
 _GLF_struct_59 _f2;
 _GLF_struct_60 _f3;
 uint _f4;
 mat3x2 _f5;
 _GLF_struct_61 _f6;
} ;

struct _GLF_struct_63 {
 _GLF_struct_62 _f0;
} ;

struct _GLF_struct_56 {
 mat3 _f0;
 mat3 _f1;
 mat3x4 _f2;
 vec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_55 {
 uvec3 _f0;
 uvec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_54 {
 mat2x4 _f0;
 mat2 _f1;
 mat2 _f2;
 ivec2 _f3;
 bool _f4;
} ;

struct _GLF_struct_57 {
 _GLF_struct_54 _f0;
 _GLF_struct_55 _f1;
 _GLF_struct_56 _f2;
} ;

struct _GLF_struct_52 {
 vec4 _f0;
 bvec4 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_53 {
 _GLF_struct_52 _f0;
 mat3 _f1;
 mat3x4 _f2;
 mat2x3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_50 {
 bool _f0;
 ivec3 _f1;
 mat2x4 _f2;
 uint _f3;
 bvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_49 {
 int _f0;
 mat2 _f1;
 bvec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_48 {
 bvec3 _f0;
 bool _f1;
 ivec2 _f2;
 mat3x2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_47 {
 mat4x3 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_51 {
 _GLF_struct_47 _f0;
 mat2x3 _f1;
 _GLF_struct_48 _f2;
 _GLF_struct_49 _f3;
 _GLF_struct_50 _f4;
} ;

struct _GLF_struct_58 {
 _GLF_struct_51 _f0;
 uvec4 _f1;
 _GLF_struct_53 _f2;
 _GLF_struct_57 _f3;
 uint workgroup_id;
} ;

struct _GLF_struct_44 {
 mat3x2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_43 {
 uvec3 _f0;
} ;

struct _GLF_struct_42 {
 uvec3 _f0;
 vec2 _f1;
 vec2 _f2;
 mat4x3 _f3;
 mat2x4 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_45 {
 _GLF_struct_42 _f0;
 _GLF_struct_43 _f1;
 _GLF_struct_44 _f2;
 uvec2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_40 {
 mat2x3 _f0;
 float _f1;
 vec4 _f2;
 vec3 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_39 {
 bvec2 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_41 {
 uint subgroup_size;
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_46 {
 _GLF_struct_41 _f0;
 _GLF_struct_45 _f1;
} ;

struct _GLF_struct_36 {
 int _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_35 {
 ivec2 _f0;
 ivec3 _f1;
 ivec2 _f2;
 mat4x2 _f3;
 mat4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_34 {
 mat2 _f0;
} ;

struct _GLF_struct_37 {
 uvec3 _f0;
 _GLF_struct_34 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 _GLF_struct_35 _f4;
 mat3x2 _f5;
 _GLF_struct_36 _f6;
} ;

struct _GLF_struct_33 {
 mat2 _f0;
 vec4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_31 {
 uint _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_30 {
 ivec4 _f0;
 mat3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_32 {
 _GLF_struct_30 _f0;
 _GLF_struct_31 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_38 {
 mat4 _f0;
 uvec2 _f1;
 _GLF_struct_32 _f2;
 uvec3 _f3;
 uint workgroup_base;
 _GLF_struct_33 _f4;
 _GLF_struct_37 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_27 {
 mat4x2 _f0;
 mat4x3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 _GLF_struct_27 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_25 {
 vec4 _f0;
 mat3 _f1;
 mat4x2 _f2;
 vec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_24 {
 int _f0;
 bvec4 _f1;
 uint subgroup_id;
 ivec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_23 {
 uvec3 _f0;
 ivec2 _f1;
 mat3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_26 {
 mat2x3 _f0;
 _GLF_struct_23 _f1;
 bvec2 _f2;
 mat2x4 _f3;
 _GLF_struct_24 _f4;
 int _f5;
 _GLF_struct_25 _f6;
} ;

struct _GLF_struct_21 {
 float _f0;
 mat4x3 _f1;
 bvec2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_22 {
 bool _f0;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat4x2 _f1;
 mat2 _f2;
 bool _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_19 _f0;
} ;

struct _GLF_struct_29 {
 bvec4 _f0;
 mat2 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_26 _f4;
 _GLF_struct_28 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 mat2 _f1;
 uvec2 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_13 {
 uvec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 vec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_10 {
 bool _f0;
 mat3x2 _f1;
 mat2x3 _f2;
 vec2 _f3;
 mat2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 mat4x3 _f1;
 vec3 _f2;
 ivec3 _f3;
 ivec4 _f4;
 int _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 bvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 bvec3 _f1;
 int _f2;
 int _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_5 {
 uint _f0;
 mat4x2 _f1;
 float _f2;
 int _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 vec3 _f1;
 bool _f2;
 bvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
 uvec4 _f1;
 ivec4 _f2;
 mat2 _f3;
 ivec3 _f4;
 mat4x3 _f5;
 float _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 mat3x4 _f4;
 mat2x4 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 bool _f1;
 mat4x3 _f2;
 vec3 _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 _GLF_struct_0 _f1;
 uint _f2;
 mat2x3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_14 _f3;
 uint read;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(bvec4(true), mat2(1.0), _GLF_struct_20(_GLF_struct_19(mat2x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), mat4x2(1.0), mat2(1.0), true)), _GLF_struct_22(_GLF_IDENTITY(true, ! (! (true))), _GLF_struct_21(1.0, mat4x3(1.0), bvec2(true), ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))), _GLF_struct_26(mat2x3(1.0), _GLF_struct_23(uvec3(1u), ivec2(1), mat3(1.0), uvec2(1u)), bvec2(true), mat2x4(1.0), _GLF_struct_24(1, bvec4(true), gl_SubgroupID, ivec3(1), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.1)), float(1.0), bool(true))))), 1, _GLF_struct_25(vec4(1.0), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), max((_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(mat4x3((_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, sqrt(1.0), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), clamp(float(vec3(0.0, 1.0, 1.0)), float(vec3(0.0, 1.0, 1.0)), float(vec3(0.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))) - 0.0)), mat4x2(1.0), vec2(1.0), mat4x3(1.0))), _GLF_struct_28(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (transpose(mat2(1.0)))))), _GLF_struct_27(mat4x2(1.0), mat4x3(1.0), vec2(1.0)), mat2(1.0)), uvec2(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(_GLF_struct_41(gl_SubgroupSize, _GLF_struct_39(bvec2(true), vec2(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0))))), _GLF_struct_40(mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) + (0.0)))), vec2(sin(0.0), 1.0)), dot(vec2(1.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(clamp(log2(118.555), -5.2, -3.3)) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(148.559)), float(abs(0.0)), bool(true)), mix(float(mix(float(_GLF_FUZZED(148.559)), float(abs(0.0)), bool(true))), float(_GLF_FUZZED(-1.2)), bool(false)))), abs(0.0)))), vec2(sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0)), min(float(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0)), (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0, 0.0))) / cos(vec2(0.0, 0.0)))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), dot(vec2(1.0, abs(0.0)), _GLF_IDENTITY(vec2(sin(0.0), 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(sin(0.0), 1.0)), (mat2(1.0) * (vec2(sin(0.0), 1.0))) * mat2(1.0))))), clamp(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, clamp(_GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) / 1.0), (1.0) + 0.0, _GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) / 1.0))))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), (_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), round(length(normalize(1.0))), 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(sin(0.0), 1.0))), (_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), round(length(normalize(1.0))), 0.0, tan(0.0), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)))) / 1.0)) + 0.0), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0))))), (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, abs(_GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), float(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))) + (0.0)))), vec2(sin(0.0), 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9947.8001) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(_GLF_IDENTITY(log2(118.555), mix(float(log2(118.555)), float(_GLF_FUZZED(92.62)), bool(false))), min(_GLF_IDENTITY(log2(118.555), mix(float(log2(118.555)), float(_GLF_FUZZED(92.62)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(log2(118.555), mix(float(log2(118.555)), float(_GLF_FUZZED(92.62)), bool(false))), 1.0 * (_GLF_IDENTITY(log2(118.555), mix(float(log2(118.555)), float(_GLF_FUZZED(92.62)), bool(false))))))), -5.2, -3.3)) : _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(148.559)), float(abs(0.0)), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(148.559), clamp(_GLF_FUZZED(148.559), _GLF_IDENTITY(_GLF_FUZZED(148.559), (true ? _GLF_FUZZED(148.559) : _GLF_FUZZED(-14.61))), _GLF_FUZZED(148.559)))), float(abs(0.0)), bool(true))), float(_GLF_FUZZED(-1.2)), bool(false)))), abs(0.0)))), vec2(sin(0.0), 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0)), min(float(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), min(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), _GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0)), float(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(vec2((1.0), log(1.0)))) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-3.0), float(float(_GLF_FUZZED(-3.0))))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), _GLF_IDENTITY(vec2(sin(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(3979.2810, -8194.4754, -996.225, -7.7)) : vec4(1.0, 1.0, 1.0, 1.0)))), min(float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(3979.2810, -8194.4754, -996.225, -7.7)) : vec4(1.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(3979.2810, -8194.4754, -996.225, -7.7)) : vec4(1.0, 1.0, 1.0, 1.0)))))))), (vec2(sin(0.0), 1.0)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))))), dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0)), mix(vec2(_GLF_FUZZED(-61.50), _GLF_FUZZED(-55.13)), vec2((vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0)))[0], (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0)))[1]), bvec2(true, true))), vec2(sin(0.0), 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(469.833)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)))), bool(true)))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), min(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(469.833)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)))), bool(true)))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), float(mat2x4(_GLF_IDENTITY(1.0, (1.0) + 0.0), round(length(normalize(1.0))), 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(469.833)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)))), bool(true)))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(mat2(dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(-3.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 1.0, sqrt(1.0)))), dot(vec2(1.0, abs(0.0)), vec2(sin(0.0), 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(4.1))), vec4(1.0), vec3(1.0), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), clamp(_GLF_IDENTITY(float(vec2(1.0, 0.0)), max(_GLF_IDENTITY(float(vec2(1.0, 0.0)), mix(float(_GLF_FUZZED(-4.4)), float(float(vec2(1.0, 0.0))), bool(true))), float(vec2(1.0, 0.0)))), float(vec2(1.0, 0.0)), float(vec2(1.0, 0.0)))))))), vec4(1.0)), _GLF_struct_45(_GLF_struct_42(uvec3(1u), _GLF_IDENTITY(vec2(1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec2(0.0, 0.0) + (vec2(1.0))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec2(0.0, 0.0) + (vec2(1.0))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - log(1.0)), 1.0, 1.0))), vec2(0.0, 0.0) + (vec2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec2(0.0, 0.0) + (vec2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec2(0.0, 0.0) + (vec2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))), vec2(0.0, 0.0) + (vec2(1.0))))))), vec2(1.0))), vec2(1.0), mat4x3(1.0), mat2x4(1.0), mat2x4(1.0)), _GLF_struct_43(uvec3(1u)), _GLF_struct_44(mat3x2(1.0), mat4x3(1.0)), uvec2(1u), mat4(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(685.439))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(1.0)))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, cos(log(vec2(1.0, 1.0))) * (injectionSwitch)).y : _GLF_FUZZED(223.325)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_17(_GLF_struct_16(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, 0)))), mat2(1.0), uvec2(1u), gl_WorkGroupSize.x);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_58 _GLF_struct_replacement_58 = _GLF_struct_58(_GLF_struct_51(_GLF_struct_47(mat4x3(1.0), mat4(1.0)), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_48(bvec3(true), true, ivec2(1), mat3x2(1.0), mat4(1.0)), _GLF_struct_49(1, mat2(1.0), bvec3(true), bvec3(true)), _GLF_struct_50(true, ivec3(1), mat2x4(1.0), 1u, _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true, false, _GLF_IDENTITY(true, false || (true))))))))), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + tan(0.0))) * round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), uvec4(1u), _GLF_struct_53(_GLF_struct_52(vec4(1.0), bvec4(true), mat2x4(1.0), bvec2(true), mat3(1.0)), mat3(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(mat2x4(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-7.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0))), (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))))) - 0.0), 1.0, round(length(normalize(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7358.1742)), float(1.0), bool(true))), 1.0))))), abs(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, tan(0.0), 1.0, log(1.0), 1.0, 1.0))), 1.0), vec3(0.0, 0.0, 1.0)))))))), mat2x3(1.0), bvec2(true)), _GLF_struct_57(_GLF_struct_54(mat2x4(1.0), mat2(1.0), mat2(1.0), ivec2(1), true), _GLF_struct_55(_GLF_IDENTITY(uvec3(1u), uvec3(uvec3(uvec3(1u)))), _GLF_IDENTITY(uvec2(1u), uvec2(uvec2(uvec2(1u)))), 1u), _GLF_struct_56(mat3(1.0), mat3(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)) + (1.0))), mat3x4(1.0), vec4(1.0), mat3(1.0))), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-47.02)), bool(false)))) - 0.0) < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-5.6, -1994.1685, -9065.2103, -7.0))))))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(mat4(1.0), uvec2(1u), _GLF_struct_32(_GLF_struct_30(ivec4(1), mat3(1.0), bvec4(true)), _GLF_struct_31(1u, uvec2(1u)), bvec4(true)), uvec3(1u), _GLF_struct_replacement_18.workgroup_size * _GLF_struct_replacement_58.workgroup_id, _GLF_struct_33(mat2(1.0), vec4(1.0), vec4(1.0)), _GLF_struct_37(uvec3(1u), _GLF_struct_34(mat2(1.0)), mat3x2(1.0), mat3x2(1.0), _GLF_struct_35(_GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), (true ? ivec2(1) : _GLF_FUZZED(ivec2(-1554, -76599)))), ivec2(1), ivec2(1))), ivec3(1), ivec2(1), mat4x2(1.0), mat4(1.0), vec3(1.0)), mat3x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.7)), bool(false)))), _GLF_struct_36(1, mat2x3(1.0))), bvec3(true));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(0.0), 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(-3.0, -0.6)) : vec2(mat4x3(injectionSwitch, cos(0.0), 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, tan(_GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_38.workgroup_base + _GLF_struct_replacement_29._f4._f4.subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_46._f0.subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))) : _GLF_IDENTITY(_GLF_struct_replacement_46._f0.subgroup_size, 0u ^ (_GLF_struct_replacement_46._f0.subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_63 _GLF_struct_replacement_63 = _GLF_struct_63(_GLF_struct_62(mat4(1.0), bvec2(true), _GLF_struct_59(ivec3(1)), _GLF_struct_60(_GLF_struct_replacement_38.workgroup_base + _GLF_struct_replacement_29._f4._f4.subgroup_id * _GLF_struct_replacement_46._f0.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_46._f0.subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_46._f0.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_46._f0.subgroup_size) << 0u), (subgroup_local_id + 1) % _GLF_struct_replacement_46._f0.subgroup_size))), bvec3(true)), 1u, mat3x2(1.0), _GLF_struct_61(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))) + uvec4(0u, 0u, 0u, 0u)))));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true) && (true), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))), _GLF_struct_0(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-4.2), _GLF_FUZZED(1.8), _GLF_FUZZED(288.878), (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), (float(vec2(1.0, 0.0))) - 0.0)), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), (float(vec2(1.0, 0.0))) - 0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), (float(vec2(1.0, 0.0))) - 0.0))))))[3]), vec4((vec4(1.0))[0], (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(_GLF_IDENTITY(-3.0, (-3.0) - 0.0))), bvec4(true, true, true, false))), true, mat4x3(1.0), vec3(1.0), 1.0), 1u, mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * vec3(1.0, 1.0, 1.0))), _GLF_struct_2(1u), _GLF_struct_8(_GLF_struct_3(1.0, uvec4(1u), ivec4(1), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec3(1), mat4x3(1.0), 1.0), _GLF_struct_4(mat3x4(1.0), vec3(_GLF_IDENTITY(1.0, length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), true, _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), uvec3(1u)), _GLF_struct_5(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) | (1u)))), mat4x2(1.0), 1.0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) + 0), mat4x3(1.0)), _GLF_struct_6(ivec2(1), bvec3(_GLF_IDENTITY(true, (true) || false)), 1, 1, ivec2(1)), mat3x4(1.0), mat2x4(1.0), _GLF_struct_7(mat2(1.0), bvec3(true), vec3(1.0))), _GLF_struct_14(ivec2(_GLF_IDENTITY(1, int(int(1)))), _GLF_struct_9(uvec3(1u), mat4x3(1.0), vec3(1.0), ivec3(1), _GLF_IDENTITY(ivec4(1), clamp(ivec4(_GLF_IDENTITY(1, (1 ^ 1) + (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) - ivec4(_GLF_IDENTITY(0, min(0, 0)), 0, 0, 0)), _GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (ivec4(1)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec4(94627, -72324, -76732, 33459), (false ? _GLF_FUZZED(ivec4(32000, 43277, 73196, -57990)) : ivec4(94627, -72324, -76732, 33459)))) : _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1))))), max(_GLF_IDENTITY(ivec4(1), (ivec4(1)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(94627, -72324, -76732, 33459)) : _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(18567) : 0)), 0, 0, 0)) / ivec4(1, 1, 1, 1))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) << _GLF_IDENTITY(ivec4(0, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(94627, -72324, -76732, 33459)) : _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1))))))))))), 1, ivec3(1)), _GLF_struct_10(true, mat3x2(1.0), mat2x3(1.0), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))), mat2(1.0), mat4x2(1.0)), _GLF_struct_11(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2(1.0), mat4x3(1.0)), _GLF_struct_12(ivec3(1), mat4x2(1.0), bvec2(true), vec4(1.0), vec2(1.0)), _GLF_struct_13(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(atomicExchange(subgroup_local_id, num_workgroup))))), mat3(1.0))), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | (191803u & 0u))], 4, 64, 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))), false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, ! (! (false))), false)))))) && true))))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (false ? _GLF_FUZZED(8.4) : (injectionSwitch.y) - 0.0))))))) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, false)))))) || false))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), true, false)))))) || false))), false))))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))) || false)))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))))), false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))))), false, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))))), false, false)))), true && (! (! (bool(bvec3(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))))), false, false))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(36.93, 732.034)) : vec2(1.0, 1.0))), vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6.5 + -77.73))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(atanh(-5.8)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))))) - 0.0))))) && true))))) || false)))))))))), bool(bvec3(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))), _GLF_IDENTITY(false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))), false || (_GLF_IDENTITY(false, false || (false)) || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, sqrt(1.0) * ((injectionSwitch.y) - 0.0))))))) && true))))))))))))))), false, false))))), ! (! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) : _GLF_FUZZED(2.8))))))) && true) || false)))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true, ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) : _GLF_FUZZED(2.8))))))) && true) || false)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(36.93, 732.034)) : vec2(1.0, 1.0))), vec2(1.0, 1.0))) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))))))))), false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6.5 + -77.73))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true))))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(atanh(-5.8)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))))) - 0.0))))) && true))))) || false)))))))))), bool(bvec3(! (_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))))), _GLF_IDENTITY(false || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) && true))))))))))), false || (_GLF_IDENTITY(false, false || (false)) || (false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, sqrt(1.0) * ((injectionSwitch.y) - 0.0))))))) && true))))))))))))))), false, false))))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_63._f0._f3.next_virtual_gid], _GLF_IDENTITY(uint(1), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY((uint(1)), min(_GLF_IDENTITY((uint(1)), ((uint(1))) << 0u), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_15.read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) >> _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0)))))) * (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
