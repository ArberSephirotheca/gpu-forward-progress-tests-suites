#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(53.34)), vec2(_GLF_FUZZED((-8.5 - 6.9)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, (true) || false)), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, false || (false)))))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))), (false ? _GLF_FUZZED(mat3x2(6.6, -19.50, 3.9, 60.35, -35.14, 21.37)) : mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((7.0)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-2.0)), bvec2(true, false)))).x > injectionSwitch.y), false, true, false)))))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), false, true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))), false, true), false))))), true)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(84.35), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, false))))), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0))).x > injectionSwitch.y), false, true, false)))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), false, true, false))))))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true))), true)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8911.4084) : 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8911.4084) : 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)))))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8911.4084) : 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8911.4084) : 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)))))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), false, true)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)), ! _GLF_IDENTITY((! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false, true, false)))), ((! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), false, true, false))))) && true))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false, true))))))))))))), false)))) || false), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(exp(-0.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0), mat3x2(mat4x2(mat3x2(injectionSwitch, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)))))), mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, log(1.0), 0.0, 1.0, sqrt(0.0)), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(1.0, 0.0, log(1.0), 0.0, 1.0, sqrt(0.0))))))) - 0.0)) * (injectionSwitch)).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (false ? _GLF_FUZZED(vec2(336.505, 28.13)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bool((false))))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), bool(bool((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2((! _GLF_IDENTITY((false), bool(bool((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec2((! _GLF_IDENTITY((false), bool(bool((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec2((true), true))) && true), false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5634.3937)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-1.1))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) + 0.0), min(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-1.1))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) + 0.0), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-1.1))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) + 0.0)))))))), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(exp(-0.4)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch)))), (false ? _GLF_FUZZED(vec2(336.505, 28.13)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(5.1), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-75.09)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)), 0.0 + (float(mat3(1.0, sqrt(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0)))))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(true, (true) && true), false)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false))), _GLF_IDENTITY(bool(bool(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false))))), ! (! (bool(bool(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)))))))))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5634.3937)), float(injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-1.1))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))) + 0.0)))))), false, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(exp(-0.4)), (_GLF_FUZZED(exp(-0.4))) + 0.0) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), (false ? _GLF_FUZZED(vec2(336.505, 28.13)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(min(injectionSwitch, -3.5)))))))))))).x > injectionSwitch.y), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (false))))), _GLF_IDENTITY(true, (true) && true), false)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), false, true, false)))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5634.3937)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-1.1))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))) + 0.0)))))), false, true))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec4(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8120.9259)), vec2(_GLF_FUZZED(float(-16271)), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-476.428) : (injectionSwitch.y))))) - 0.0))), true, true, true))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true))))), false, true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(-9212.9968, vec2(_GLF_IDENTITY(-4.0, max(_GLF_IDENTITY(-4.0, (-4.0) - 0.0), -4.0)), -4.4))))).x > injectionSwitch.y))) && true))))), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(-9212.9968, vec2(_GLF_IDENTITY(-4.0, max(_GLF_IDENTITY(-4.0, (-4.0) - 0.0), -4.0)), -4.4))))).x > injectionSwitch.y))) && true))))), false, true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(step(-9212.9968, vec2(_GLF_IDENTITY(-4.0, max(_GLF_IDENTITY(-4.0, (-4.0) - 0.0), -4.0)), -4.4))))).x > injectionSwitch.y))) && true))))), false, true)), true))))))), true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(uintBitsToFloat(subgroup_size)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))), _GLF_IDENTITY(false, false || (false)) || (! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y)))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat4x3(mat4(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), min(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(867.147)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3.2)))))), (mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x2(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.6))), 1.0)) * mat4(1.0)))))))), 1.0)), float(mat4x3(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(mat4x3(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-53.11) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) - 0.0)) * (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max(_GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(vec4(-7.1, -2.7, 3.9, -0.9).b)), bool(false))), (0.0))) / 1.0))), length(vec3(0.0, 0.0, 0.0))))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(bool(bvec2(false, false)), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, round(length(normalize(1.0))), 1.0, 1.0, 1.0))))))), float(_GLF_FUZZED(375.326)), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(false, false || (false)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, false), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3715.0105)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY(vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7637.6557)), bool(false)))) / 1.0), 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 0.0))), mat2(1.0) * (mat2(1.0) * (vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 0.0)))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY(vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7637.6557)), bool(false)))) / 1.0), 0.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 0.0)), (true ? vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))), mat2(1.0) * (mat2(1.0) * (vec2(vec4((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, 0.0)))))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) * 1.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, false || (false))))) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-680.006), _GLF_FUZZED(-698.850)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x3((injectionSwitch)[0], 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, exp(0.0), 1.0, 1.0, 1.0, exp(0.0), 0.0))), sin(0.0) + (_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-245.619) : (injectionSwitch)[0])))), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).y) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), injectionSwitch.y)), injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, determinant(mat2(exp(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, sqrt(0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, sqrt(0.0), 0.0)))))), 0.0))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.9, min(_GLF_IDENTITY(-1.9, float(mat4(-1.9, sqrt(0.0), 1.0, log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), log(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-1.9, (true ? -1.9 : _GLF_FUZZED(78.45)))))) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2603.8283))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2603.8283))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2603.8283))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), false, true, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2603.8283))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2603.8283))))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat4x3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(910.192)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 1.0))), 1.0, 1.0, 0.0))), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))))))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), false, true, false))) || false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (((injectionSwitch.x > injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0))[0], _GLF_FUZZED(7.1)), vec2(_GLF_FUZZED(8793.8974), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0))[1]), bvec2(false, true)))), min(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0))[0], _GLF_FUZZED(7.1)), vec2(_GLF_FUZZED(8793.8974), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0))[1]), bvec2(false, true)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0))[0], _GLF_FUZZED(7.1)), vec2(_GLF_FUZZED(8793.8974), (vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, tan(0.0)))).y, 1.0))[1]), bvec2(false, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), abs(0.0), 0.0, 0.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0)))) > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || _GLF_IDENTITY(false, (false) && true))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))), true))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float((~ 15826)))), bool(false))), max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ((! (injectionSwitch.x > injectionSwitch.y))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-733.736, 4174.7826, -2.6).p), _GLF_FUZZED(99.24)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(508.891)), bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))))))), true))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-666.830)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), (true ? mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(-69.82, 5.5, 4356.8311, -76.30, -0.6, -4.2, 9.6, -729.603)))))))), max(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), (true ? mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(-69.82, 5.5, 4356.8311, -76.30, -0.6, -4.2, 9.6, -729.603)))))))), vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), (true ? mat2x4(injectionSwitch, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2x4(-69.82, 5.5, 4356.8311, -76.30, -0.6, -4.2, 9.6, -729.603))))))))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))) && true))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(true, true && (true)) && ((false)))), (! (_GLF_IDENTITY((false), true && ((false))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), true), bvec3(bvec4(bvec3(false, false, true), true))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))), true), bvec3(bvec4(bvec3(false, false, true), true))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((true ? -12.99 : -2.6) - -4.6))), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), 1u * ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, abs(0.0), 0.0, 0.0)))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) / 1u)))) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u), buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) || false), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) || false), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) || false), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) || false), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) || false), false, false)))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)))))))))), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) || false), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat3(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, _GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, vec2(mat4x3(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, sqrt(1.0)))) > injectionSwitch.y)), true)))))))))), false, _GLF_IDENTITY(true, (true) || false), false)))))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))), false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))), false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))), false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true)))))) || false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(trunc(injectionSwitch)) : mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> (1 ^ 1))) ^ 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0, ((1) ^ 0) | (_GLF_IDENTITY((1), ((1)) | ((1))) ^ 0))) | ((1) ^ _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}
