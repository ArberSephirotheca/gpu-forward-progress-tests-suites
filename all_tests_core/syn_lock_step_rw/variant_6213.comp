#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bvec2(_GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))), true))), true, false, false)))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (~ (0))))), 0, _GLF_IDENTITY(0, (0) | (0)))), 0, 1, 0)))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(86060))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (_GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))) || false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-363.112)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), 0.0)))), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-513.497))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2546.6562), _GLF_FUZZED(8.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 1u)), 0u | (uint(uvec3(workgroup_base, 0u, 1u))))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)))), false)), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0)))), false)), false, false, true)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), min(~ (~ (~ (subgroup_local_id))), ~ (~ (~ (subgroup_local_id)))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), min(~ (~ (~ (subgroup_local_id))), ~ (~ (~ (subgroup_local_id)))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(157554u) : _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), min(~ (~ (~ (subgroup_local_id))), ~ (~ (~ (subgroup_local_id)))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ((true ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), ~ (_GLF_IDENTITY(~ (~ (~ (subgroup_local_id))), min(~ (~ (~ (subgroup_local_id))), ~ (~ (~ (subgroup_local_id)))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u)))) >> 0u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + 1)))) % subgroup_size), max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), clamp(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))) >> 0u), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u))))))), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))))) ^ 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))))) ^ 0u) + 1)) ^ 0u), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true ? subgroup_local_id : _GLF_FUZZED(workgroup_base), (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base)) | (true ? subgroup_local_id : _GLF_FUZZED(workgroup_base))))))) + 1)))) % subgroup_size)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) - (0u | 0u))))), clamp((((_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (true ? 1u << _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (true ? 1u << _GLF_IDENTITY(uint(4u), uint(4u)) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(4u), uint(4u))) - (1u ^ ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | (5u)), (_GLF_IDENTITY(5u, (5u) | (5u))) - 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), max(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), min(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), min(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), min(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), min(_GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u))))), _GLF_IDENTITY(((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(next_virtual_gid))), (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)))), (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))) | (((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), min(((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) ^ 0u))) * (max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)))))))], _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (120196u & 0u) + _GLF_IDENTITY((uint(1)), clamp(_GLF_IDENTITY((uint(1)), (_GLF_IDENTITY((uint(1)), 0u | ((uint(1))))) << (0u & 70964u)), (uint(1)), (uint(1))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (120196u & 0u) + (uint(1)))) / (1u | 1u), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (120196u & 0u) + (uint(1)))) / (1u | 1u), max((_GLF_IDENTITY(uint(1), (120196u & 0u) + (uint(1)))) / (1u | 1u), (_GLF_IDENTITY(uint(1), (120196u & 0u) + (uint(1)))) / (1u | 1u)))) << 0u)), uint(1))), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x > injectionSwitch.y) || false)))))), (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0), (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0)) / 1)) - 0), ~ (~ (_injected_loop_counter --))))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), (injectionSwitch.x < injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y))), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))))))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
