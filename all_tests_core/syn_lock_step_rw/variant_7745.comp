#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 bvec2 _f0;
 uint num_workgroup;
 mat4x2 _f1;
} ;

struct _GLF_struct_19 {
 uint read;
 uvec3 _f0;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 mat3x2 _f1;
 uint _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 ivec3 _f1;
 bool _f2;
 uvec3 _f3;
 bool _f4;
 ivec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
} ;

struct _GLF_struct_20 {
 uvec2 _f0;
 _GLF_struct_18 _f1;
 uvec2 _f2;
 mat2x3 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat4x2 _f1;
 mat2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_10 {
 uint workgroup_base;
 mat2x3 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 vec3 _f1;
 uvec3 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 mat3x2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 float _f1;
 mat2x3 _f2;
 bvec3 _f3;
 mat2 _f4;
 mat3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
} ;

struct _GLF_struct_9 {
 float _f0;
 uvec4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 bvec2 _f4;
 _GLF_struct_8 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3 _f1;
 bvec3 _f2;
 bvec2 _f3;
 vec4 _f4;
 float _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 bool _f3;
 bvec3 _f4;
 mat4x3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 ivec3 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
 _GLF_struct_3 _f1;
 bvec4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_13 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(bvec2(true), gl_NumWorkGroups.x, mat4x2(1.0));
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.y = _GLF_struct_replacement_21.num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(mat3x2(1.0), _GLF_struct_3(uvec4(1u), ivec3(1), _GLF_struct_0(bvec3(true), mat2x4(1.0), mat3x2(1.0), true, bvec3(true), mat4x3(1.0), mat4(1.0)), _GLF_struct_1(mat3x2(1.0), mat3(1.0), bvec3(true), bvec2(true), vec4(1.0), 1.0, mat4x3(1.0)), _GLF_struct_2(mat2x3(1.0), mat3x2(1.0)), vec3(1.0)), bvec4(true), _GLF_struct_5(_GLF_struct_4(bvec4(true), ivec2(1)), bvec2(true)), _GLF_struct_9(1.0, uvec4(1u), _GLF_struct_6(uvec2(1u)), _GLF_struct_7(mat3x2(1.0), 1.0, mat2x3(1.0), bvec3(true), mat2(1.0), mat3(1.0), bvec4(true)), bvec2(true), _GLF_struct_8(uvec4(1u), mat2(1.0), ivec2(1)), mat2x3(1.0)), _GLF_struct_13(_GLF_struct_10(workgroup_size * workgroup_id, mat2x3(1.0)), vec3(1.0), uvec3(1u), _GLF_struct_11(bvec3(true), mat2x3(1.0), bvec4(true), mat4x3(1.0), uvec2(1u)), _GLF_struct_12(ivec4(1), mat4x2(1.0), mat2(1.0), bvec4(true)), mat3x2(1.0), ivec3(1)));
 uint virtual_gid = _GLF_struct_replacement_14._f5._f0.workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_14._f5._f0.workgroup_base + subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.w);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x = next_virtual_gid;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(uvec2(1u), _GLF_struct_18(_GLF_struct_15(mat4x3(1.0), ivec4(1), mat3x2(1.0), mat3x4(1.0), vec4(1.0)), _GLF_struct_16(mat3x2(1.0), ivec3(1), true, uvec3(1u), true, ivec2(1), 1u), _GLF_struct_17(mat3x4(1.0), mat3x2(1.0), 1u, mat4x3(1.0))), uvec2(1u), mat2x3(1.0), _GLF_struct_19(atomicLoad(buf[virtual_gid], 4, 64, 0), uvec3(1u)));
 do
  {
   for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) & 72239)); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.z = _GLF_struct_replacement_20._f4.read;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.x], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_size.z, 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}
