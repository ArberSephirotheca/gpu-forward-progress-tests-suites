#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uint read;
 uint _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 _GLF_struct_11 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat3x2 _f1;
 mat4 _f2;
 mat2 _f3;
 vec4 _f4;
 int _f5;
 float _f6;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_6 {
 int _f0;
 ivec3 _f1;
 ivec2 _f2;
 mat4x3 _f3;
 mat2 _f4;
 ivec4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 _GLF_struct_4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 mat2 _f1;
 ivec2 _f2;
 ivec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 vec4 _f1;
 uint subgroup_local_id;
 ivec2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5935.0033) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6056.7817, 2.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), float(mat4(injectionSwitch.y, 1.0, sin(0.0), 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(1.0, 1.0) * (normalize(vec2(1.0, 1.0)))))), abs(1.0), _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, sin(0.0))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(-81.53, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-81.53, clamp(_GLF_IDENTITY(-81.53, (-81.53) - 0.0), _GLF_IDENTITY(-81.53, clamp(-81.53, -81.53, _GLF_IDENTITY(-81.53, min(-81.53, -81.53)))), -81.53)), min(-81.53, -81.53)), _GLF_IDENTITY(-81.53, max(-81.53, -81.53)), -81.53))) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), false)), true)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true)))))), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bool(false))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true), true))))))))), true && (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, true))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), (! (! (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true, ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) && true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) || false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), (_GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)))))) + 0.0), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))))), 0.0, 1.0, 0.0, exp(0.0), 1.0)), clamp(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), 0.0, 1.0, 0.0, exp(0.0), 1.0)), min(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), 0.0, 1.0, 0.0, exp(0.0), 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-15.01)), bool(false))), sqrt(1.0)))), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), 0.0, 1.0, 0.0, exp(0.0), 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), max(dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0)), dot(vec2(0.0, sqrt(1.0)), vec2(1.0, 0.0))))), 0.0, 1.0, 0.0, exp(0.0), 1.0))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0)), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0))))))) < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, 1.0, 0.0))))))) < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), sqrt(vec2(1.0, 1.0)) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, exp(0.0), abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, 0.0))).y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.1) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(19.46)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) && true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)), mix(float(_GLF_FUZZED(-1757.9869)), float(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(_GLF_IDENTITY(false, false || (false))))), 0.0)), max(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)), clamp(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0))))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), (false ? _GLF_FUZZED(43.91) : float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-8.3, (-8.3) / 1.0))), _GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))))), 0.0)))), max(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(43.91) : float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0))), ((false ? _GLF_FUZZED(43.91) : float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), (false ? _GLF_FUZZED(2.3) : float(injectionSwitch.y))), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0)), (false ? _GLF_FUZZED(43.91) : float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8.3), mix(float(_GLF_FUZZED(6588.1007)), float(_GLF_FUZZED(-8.3)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_FUZZED(-8.3), _GLF_FUZZED(-8.3)))), bool(false))), 0.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-8.3)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0)), (false ? _GLF_FUZZED(43.91) : float(vec2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0))))) - 0.0)))), injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(-18.46), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7595.5018)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(46.71)), bool(false))), _GLF_FUZZED((+ 7.2))), vec2(_GLF_FUZZED(510.543), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), (mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, 1.0 * (injectionSwitch.y)))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, 1.0 * (injectionSwitch.y)))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(-18.46), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7595.5018)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(46.71)), bool(false))), _GLF_FUZZED((+ 7.2))), vec2(_GLF_FUZZED(510.543), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), (mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))))).y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, 1.0 * (injectionSwitch.y)))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, 1.0 * (injectionSwitch.y))))))))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3.9)), vec2(_GLF_FUZZED(-18.46), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7595.5018)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, cos(0.0)), mat2(mat3x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch.y, 0.0, 0.0, cos(0.0))))))))), mix(float(_GLF_FUZZED(6.3)), float(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, cos(0.0)), mat2(mat3x2(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2(injectionSwitch.y, 0.0, 0.0, cos(0.0)))))))))), bool(true)))), injectionSwitch.y))), bool(true))), float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(46.71)), bool(false))), _GLF_FUZZED((+ 7.2))), vec2(_GLF_FUZZED(510.543), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), (mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * vec3(1.0, 1.0, 1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)))))))))))).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(46.71)), bool(false))), _GLF_FUZZED((+ 7.2))), vec2(_GLF_FUZZED(510.543), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0)), (mat4(1.0) * (mat2x4(injectionSwitch.y, length(0.0), 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * vec3(1.0, 1.0, 1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))) + mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)))))))))))).y : _GLF_FUZZED(728.721)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, 1.0 * (injectionSwitch.y)))))))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.5))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, 1.0 * (injectionSwitch.y)))))))))))))))))) && true)))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ 7.2))), bool(false)))) - tan(0.0)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, sqrt(1.0))), clamp(float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, sqrt(1.0))), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, sqrt(1.0))), float(mat2x4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, sqrt(1.0)))))) > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(ivec4(1), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.7) : 1.0)) : _GLF_FUZZED(roundEven(-6.1)))), 0.0 + (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true))) : _GLF_FUZZED(roundEven(-6.1))))))), gl_SubgroupInvocationID, ivec2(1), _GLF_struct_3(_GLF_struct_0(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) ^ 0, ((1) ^ 0) << 0), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> (1 ^ 1))), min(_GLF_IDENTITY((1), _GLF_IDENTITY(int(int(_GLF_IDENTITY((1), ((1)) / 1))), max(_GLF_IDENTITY(int(int(_GLF_IDENTITY((1), ((1)) / 1))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY((1), ((1)) / 1)))), 1 * (~ (int(int(_GLF_IDENTITY((1), ((1)) / 1)))))))), int(int(_GLF_IDENTITY((1), ((1)) / 1)))))), (1))), ((1)) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) | (_GLF_IDENTITY(1, 0 | (1))))), _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | (1)))))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ~ (~ ((_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ~ (~ ((_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(1, 0 | (1)))))))), max(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | (1)))))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ~ (~ ((_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ~ (~ ((_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(1, 0 | (1)))))))), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | (1)))))) | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ~ (~ ((_GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), ~ (~ ((_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(1, 0 | (1))))))))))) ^ 0), ~ (~ (int((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(float(104642u))), bool(false)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))) - 0.0)), float(_GLF_FUZZED(-84.98)), bool(false)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, cos(0.0), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), (0.0) - 0.0))), injectionSwitch.x)))), (true ? int(ivec2(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 1.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(float(104642u))), bool(false)))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))) - 0.0)), float(_GLF_FUZZED(-84.98)), bool(false)))), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, cos(0.0), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), (0.0) - 0.0))), injectionSwitch.x)))) : _GLF_FUZZED(-25279))), _GLF_IDENTITY(max(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))), (max(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (max(int(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), int(ivec2(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0))))))))) ^ 0))))), clamp(int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), 1)), 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-89365) : 1)))), 0 | (1))), clamp((_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), max((1), (1))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY((1), max((1), (1))), 1)))))))), (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | (1))))))) ^ 0), ~ (_GLF_IDENTITY(~ (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(sqrt(1.0), 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0))).x))), (_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) + ivec2(0, 0))) | (ivec2(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | 0))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-4467.8318))) / 1.0))))))), max(_GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0))))), (true ? int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0))))) : _GLF_FUZZED(94121))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-64399, int(int(-64399)))) : ~ (_GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))) / ivec2(1, 1))) << ivec2(0, 0))))))) ^ 0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), min(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), _GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145.818) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) >> 0)))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), min(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), _GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145.818) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) >> 0)))), ~ (~ (0 ^ (_GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), min(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), _GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145.818) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) >> 0)))))))) | (0 ^ (_GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), min(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), _GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0), (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(145.818) : 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)) >> 0))))))))))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 + (0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY(1, 0 | (1))))) ^ 0), ~ (~ (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec2(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))))))) ^ 0))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(1, 0 | (1))), ((_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), _GLF_IDENTITY(((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))), min(((_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))), ~ (_GLF_IDENTITY(~ (clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), (~ (clamp(1, 1, _GLF_IDENTITY(1, (1) | (1))))) | 0)))))), ((_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))))))) >> int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), 0 | (0 | (1)))))) / 1))) ^ 0), _GLF_IDENTITY(~ (~ (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-523.863)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))), ivec2(0, 0) | (ivec2(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) ^ 0))), 0 | (~ (~ (int((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(int(ivec2(1, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-523.863)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))), int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0)))))))))))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))) - mat2(0.0, 0.0, 0.0, 0.0)) * _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, abs(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) * (1.0)))), _GLF_IDENTITY((true ? (mat2(1.0)) : _GLF_FUZZED(mat2(-30.90, 4173.1747, 266.349, -4.0))), transpose(transpose((true ? (mat2(1.0)) : _GLF_FUZZED(mat2(-30.90, 4173.1747, 266.349, -4.0)))))))), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))) | _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, min(0, 0)) : _GLF_FUZZED(findLSB(subgroup_size)))))) ^ _GLF_IDENTITY((0 | 0), ((0 | 0)) - 0))), ivec2(1), uvec3(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u ^ ((1u))) ^ 0u))))), _GLF_struct_1(bvec4(true)), _GLF_struct_2(mat4x2(1.0)), bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true, true))))), _GLF_struct_5(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), _GLF_struct_4(ivec3(1)), mat4x2(1.0)), _GLF_struct_9(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))), (! (bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), false, true)))) && true)) || false)), false || (bool(! (false))))))) && true)))))))) ? _GLF_FUZZED(-5.4) : 1.0))), _GLF_struct_6(1, ivec3(1), ivec2(1), mat4x3(1.0), mat2(1.0), ivec4(1), mat2x3(1.0)), _GLF_struct_7(ivec2(1), ivec4(1)), _GLF_struct_8(1u, mat3x2(1.0), mat4(1.0), mat2(1.0), vec4(1.0), 1, 1.0), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))) * 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.2)), bool(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * vec3(1.0, 1.0, 1.0))))))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)), mix(vec2((vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))[0], _GLF_FUZZED(vec3(2.1, 2112.3153, 0.4).s)), vec2(_GLF_FUZZED(-9.8), (vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), ! (! (true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), max(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), mat2(1.0) * (vec2(injectionSwitch.y, 1.0)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) + sqrt(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, true)))), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.3) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.3) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5083.7875)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true)))), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u)))), min((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / _GLF_IDENTITY(1u, min(1u, 1u))))))) + _GLF_struct_replacement_10.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_10.subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), min(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), ivec3(0, 0, 0) + (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(19132, -50502, 27307)) : false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0))))), max(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), min(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), ivec3(0, 0, 0) + (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(19132, -50502, 27307)) : false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0))))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), min(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), ivec3(0, 0, 0) + (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0))), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), (false ? _GLF_FUZZED(ivec3(19132, -50502, 27307)) : false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0))))))), false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43392) : 0)), 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0), false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(-6825, -99790, -98561)), (ivec3(0, 0, 0) << _GLF_IDENTITY(ivec3(3), _GLF_IDENTITY(ivec3(3), ivec3(0, 0, 0) ^ (ivec3(3))))) | (_GLF_FUZZED(ivec3(-6825, -99790, -98561)))) : ivec3(1, 0, 0)))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) && true)), false, true, _GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), bool(bvec4((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && true)))) && true, ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true) && true)), (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true, ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) && true) && true))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(ivec4(1), mat3x4(1.0), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_11(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(0, 0, 0))), 1u, uvec4(1u)), mat2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-900.423, _GLF_IDENTITY(867.153, (867.153) - 0.0), -7240.8272).p)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec3(-900.423, _GLF_IDENTITY(867.153, (867.153) - 0.0), -7240.8272).p)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(vec3(-900.423, _GLF_IDENTITY(867.153, (867.153) - 0.0), -7240.8272).p)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(-0.7)), bool(false)))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_12._f3.read, 4, 64, 4);
}
