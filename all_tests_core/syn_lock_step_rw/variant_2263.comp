#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 float _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
} ;

struct _GLF_struct_1 {
 int _f0;
 _GLF_struct_0 _f1;
 float _f2;
 mat3 _f3;
 uint virtual_gid;
 ivec3 _f4;
} ;

struct _GLF_struct_3 {
 uvec3 _f0;
 _GLF_struct_1 _f1;
 bvec4 _f2;
 vec4 _f3;
 _GLF_struct_2 _f4;
 ivec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 uvec4 GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id;
 uvec2 GLF_merged2_0_1_4_1_1_13readsubgroup_base;
 GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.xy = GLF_merged2_0_1_4_1_1_13readsubgroup_base;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.z = GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.w;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x = num_workgroup;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.x;
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.x = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y = workgroup_id;
 uint workgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.w * GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id.y;
 uint subgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.y * GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.z;
 GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.z = subgroup_base;
 GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.xy.y = GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.z;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(uvec3(1u), _GLF_struct_1(1, _GLF_struct_0(ivec2(1)), 1.0, mat3(1.0), workgroup_base + GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.xy.y + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.z, ivec3(1)), bvec4(true), vec4(1.0), _GLF_struct_2(1.0), ivec4(1));
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.xy.y + ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14num_workgroupsubgroup_idsubgroup_local_idworkgroup_size.z + 1) % GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.z);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_3._f1.virtual_gid], 4, 64, 2);
 GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.xy.x = read;
 GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.y = GLF_merged3_0_2_41_2_1_13_3_1_17GLF_merged2_0_1_4_1_1_13readsubgroup_basesubgroup_basesubgroup_local_id.xy.x;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[_GLF_struct_replacement_3._f1.virtual_gid], GLF_merged3_0_1_13_1_1_4_2_1_13num_workgroupreadsubgroup_size.y, 4, 64, 4);
}
