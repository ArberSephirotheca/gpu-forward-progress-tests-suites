#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 bool _f0;
 mat3 _f1;
 vec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_18 {
 mat4x2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_17 {
 mat2x4 _f0;
 float _f1;
 vec4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
} ;

struct _GLF_struct_15 {
 uvec4 _f0;
 int _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 vec3 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
 uint workgroup_base;
 vec2 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_12 {
 int _f0;
 bvec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_11 {
 int _f0;
 bool _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 uvec2 _f1;
 uvec2 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 ivec2 _f1;
 mat2 _f2;
 uvec2 _f3;
 int _f4;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 bvec3 _f1;
 mat4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 mat2x3 _f1;
 float _f2;
 vec4 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
 _GLF_struct_9 _f6;
} ;

struct _GLF_struct_4 {
 vec4 _f0;
 ivec2 _f1;
 mat4x2 _f2;
 uvec4 _f3;
 bvec2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 bool _f3;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 ivec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 uvec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 vec2 _f1;
 ivec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
 vec3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_10 _f4;
 float _f5;
 uint num_workgroup;
 _GLF_struct_13 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_0(ivec3(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (vec2(1.0)), (true ? vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (vec2(1.0)) : _GLF_FUZZED(vec2(14.38, 1.5))))), (_GLF_IDENTITY(vec2(1.0), vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(7205.2078)), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), bool(true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.2) : _GLF_IDENTITY(1.0, float(vec2(1.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) + 0.0), 1.0, 1.0)))), mix(float(_GLF_FUZZED(7205.2078)), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), bool(true))))))))))) * (vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))))) * mat2(1.0)), ivec2(1), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2(true), false, false)))), _GLF_struct_3(bvec4(true), ivec3(1), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_struct_1(uvec3(1u), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true))))), injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)), clamp((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)), (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)), (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x))))) | ((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x))), 0 ^ ((_GLF_IDENTITY((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)), clamp((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)), (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x)), (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x))))) | ((1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(0.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), injectionSwitch.x))))))) : _GLF_IDENTITY(_GLF_FUZZED(89648), (_GLF_FUZZED(89648)) ^ 0)))), uvec3(1u)), _GLF_struct_2(mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.3)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(false))))) || false)))))), mat4x2(1.0), true), _GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(min(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(min(min(uvec4(1u), uvec4(1u)), min(uvec4(1u), uvec4(1u))), ~ (~ (_GLF_IDENTITY(min(min(uvec4(1u), uvec4(1u)), min(uvec4(1u), uvec4(1u))), min(_GLF_IDENTITY(min(min(uvec4(1u), uvec4(1u)), min(uvec4(1u), uvec4(1u))), uvec4(0u, 0u, 0u, 0u) ^ (min(min(uvec4(1u), uvec4(1u)), min(uvec4(1u), uvec4(1u))))), min(min(uvec4(1u), uvec4(1u)), min(uvec4(1u), uvec4(1u))))))))))) + uvec4(0u, 0u, 0u, 0u), clamp((_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY(min(uvec4(1u), uvec4(1u)), (min(uvec4(1u), uvec4(1u))) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) + uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)))), uvec4(1u), uvec4(1u))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))), (bool(true)) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(bool(bool(true)), (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), vec3(1.0), _GLF_struct_5(_GLF_struct_4(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec2(1), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-86.76)), float(1.0), bool(_GLF_IDENTITY(true, (true) && true))))), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u)))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u))))), bvec2(true), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_struct_10(_GLF_struct_6(ivec4(1), ivec3(1)), mat2x3(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), sqrt(1.0), 0.0, 1.0))) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3778.3770, (3778.3770) + 0.0)), min(_GLF_FUZZED(3778.3770), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3778.3770), clamp(_GLF_FUZZED(3778.3770), _GLF_FUZZED(3778.3770), _GLF_FUZZED(3778.3770))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3778.3770), clamp(_GLF_FUZZED(3778.3770), _GLF_FUZZED(3778.3770), _GLF_FUZZED(3778.3770))), (true ? _GLF_IDENTITY(_GLF_FUZZED(3778.3770), clamp(_GLF_FUZZED(3778.3770), _GLF_FUZZED(3778.3770), _GLF_FUZZED(3778.3770))) : _GLF_FUZZED(-44.62))) : _GLF_FUZZED(3313.6976))))) : 1.0)), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_struct_7(bvec4(true), mat4(1.0)), _GLF_struct_8(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(1913.6311)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, sqrt(1.0), 0.0), min(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(1913.6311)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, sqrt(1.0), 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(1913.6311)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, sqrt(1.0), 0.0))), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, sqrt(1.0), 0.0), (vec4(0.0, 0.0, sqrt(1.0), 0.0)) * mat4(1.0)), vec4(1.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0)))) + 0.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0)))) + 0.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0)))) + 0.0, ((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, sqrt(1.0), 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0)))) + 0.0) / 1.0))))), bvec3(true), mat4(1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_9(mat2(1.0), ivec2(1), mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 1.0))), uvec2(1u), 1)), 1.0, gl_NumWorkGroups.x, _GLF_struct_13(_GLF_struct_11(1, true, mat4x3(1.0), mat4x2(1.0), ivec3(1)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))), (true ? uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ~ (~ ((1u))))) / 1u) | (1u))))) | (1u))))) : _GLF_FUZZED(uvec2(46084u, 131880u)))), (_GLF_IDENTITY(uvec2(1u), (true ? uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) | (1u))))) | (1u))))) : _GLF_FUZZED(uvec2(46084u, 131880u))))) << uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, 0u | (1u))), (~ (_GLF_IDENTITY(1u, 0u | (1u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), mat3x2(1.0), bvec2(true), _GLF_struct_12(1, bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)) && true)), mat2x3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, false, _GLF_IDENTITY(true, ! (! (true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bool(false))), true)), true && (bool(bvec4(false, true, false, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, ! (! (true))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0)), min(vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0))))).x) / 1.0, abs(0.0) + ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(_GLF_IDENTITY(determinant(mat2(0.0, 1.0, 0.0, 0.0)), float(float(determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), abs(1.0), 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(min(vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0))), min(min(vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0))), min(vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0)), vec2(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(determinant(mat2(0.0, 1.0, 0.0, 0.0))), abs(1.0), 0.0, sqrt(0.0), 1.0))))))).x) / 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(942.419), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(942.419, clamp(_GLF_IDENTITY(942.419, (942.419) - 0.0), 942.419, _GLF_IDENTITY(942.419, max(942.419, 942.419))))), clamp(_GLF_FUZZED(942.419), _GLF_FUZZED(942.419), _GLF_IDENTITY(_GLF_FUZZED(942.419), clamp(_GLF_FUZZED(942.419), _GLF_FUZZED(942.419), _GLF_FUZZED(942.419))))), (_GLF_IDENTITY(_GLF_FUZZED(942.419), clamp(_GLF_FUZZED(942.419), _GLF_FUZZED(942.419), _GLF_IDENTITY(_GLF_FUZZED(942.419), clamp(_GLF_FUZZED(942.419), _GLF_FUZZED(942.419), _GLF_FUZZED(942.419)))))) / exp(0.0))) - 0.0)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).y, float(vec2(injectionSwitch.y, 0.0)))) + sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), max(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).y, float(vec2(injectionSwitch.y, 0.0)))) + sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)))), mix(float(_GLF_FUZZED(30.54)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).y, float(vec2(injectionSwitch.y, 0.0)))) + sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0))))), bool(true))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(8887.5556), _GLF_FUZZED(-4.8)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).y, float(vec2(injectionSwitch.y, 0.0)))) + sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-829.167)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.5) : float(_GLF_FUZZED(-829.167)))), float(injectionSwitch.y), bool(true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_20(_GLF_struct_15(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), 1), _GLF_struct_16(_GLF_IDENTITY(ivec2(1), (true ? _GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))) : _GLF_FUZZED(ivec2(-99561, -72278))))), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_FUZZED((- -5.6))), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true)), (mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_FUZZED((- -5.6))), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true))) * vec3(1.0, 1.0, 1.0)), clamp(mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_FUZZED((- -5.6))), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true)), _GLF_IDENTITY(mix(vec3(_GLF_FUZZED(3610.2214), _GLF_IDENTITY((vec3(1.0))[1], min((vec3(1.0))[1], (vec3(1.0))[1])), _GLF_FUZZED((- -5.6))), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), _GLF_IDENTITY((vec3(1.0)), _GLF_IDENTITY(vec3(mat2x4((vec3(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), clamp(vec3(mat2x4((vec3(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(vec3(mat2x4((vec3(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)), (vec3(mat2x4((vec3(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0))) + vec3(0.0, 0.0, 0.0)), vec3(mat2x4((vec3(1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))))[2]), bvec3(true, false, true)), mix(vec3((mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_IDENTITY(_GLF_FUZZED((- -5.6)), (_GLF_FUZZED((- _GLF_IDENTITY(-5.6, max(-5.6, _GLF_IDENTITY(-5.6, mix(float(_GLF_FUZZED(-3.7)), float(-5.6), bool(true)))))))) - 0.0)), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true)))[0], (mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_FUZZED((- -5.6))), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true)))[1], _GLF_FUZZED(-97.09)), vec3(_GLF_FUZZED(-1.8), _GLF_FUZZED(4.2), (mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_FUZZED((- -5.6))), vec3((vec3(1.0))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true)))[2]), bvec3(false, false, true))), mix(vec3(_GLF_FUZZED(3610.2214), (vec3(1.0))[1], _GLF_FUZZED((- -5.6))), vec3((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.2)), bool(false)))))[0], _GLF_FUZZED(20.17), (vec3(1.0))[2]), bvec3(true, false, true))))), _GLF_struct_17(mat2x4(1.0), 1.0, vec4(1.0), vec3(1.0)), _GLF_struct_18(mat4x2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), ivec4(1)), _GLF_struct_19(true, _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0, 0.0))))), vec3(1.0), bvec3(true)), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), vec2(1.0)), vec4(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_21._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size)))))), ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u), ~ (subgroup_size))))))) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || false)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || false)))), false)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint next_virtual_gid = _GLF_struct_replacement_21._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u | 0u)) + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)) + 1)), max((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)) + 1)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (0u | 0u)) + 1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), (bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))) && true))) || false)))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], 4, _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), max((64), (64)))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), _GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))), (max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))) << ivec4(0, 0, 0, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, 0, (0 >> _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), 1))))), ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), min(_GLF_IDENTITY(1, min(1, 1)), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))))))))), max(int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), _GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1)), min(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1)), max(ivec4(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, (1) | 0), 0, 1), ivec4(0, 1, 0, 1)))))), int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 0, 1), max(ivec4(0, 1, _GLF_IDENTITY(0, (0) | 0), 1), ivec4(0, 1, 0, 1))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, _GLF_IDENTITY(1, (1) / 1), 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), _GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))), ivec4(0, 0, 0, 0) ^ (_GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, _GLF_IDENTITY(1, (1) - 0), 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))), (max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), min(1, 1)), 1))))) << ivec4(0, 0, 0, 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, _GLF_IDENTITY(1, (1) << 0), 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), _GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, 0, (0 >> _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), 1)))), (max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(ivec4(_GLF_IDENTITY(1, min(1, 1)), 1, 0, (0 >> _GLF_IDENTITY(int(8), int(8)))))), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1)))), 1))))) << (ivec4(0, 0, 0, 0) & ivec4(-42625, 51436, 81684, 96019)))), ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, _GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(0, ~ (~ (0))), 1), ivec4(_GLF_IDENTITY(0, ~ (~ (0))), 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), min(_GLF_IDENTITY(1, min(1, 1)), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(ivec4(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))))), 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, min(1, 1)), 1), (min(_GLF_IDENTITY(1, min(1, 1)), 1)) >> 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), _GLF_IDENTITY(clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1)), (clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))) | (clamp(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))))), max(ivec4(0, 1, 0, 1), _GLF_IDENTITY(ivec4(0, 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), (_GLF_IDENTITY(ivec4(0, 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec4(0, 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))) : _GLF_FUZZED(abs(ivec4(-85793, 18968, 64919, 9429)))))) | (ivec4(0, 1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, min(1, 1)), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(0, 1, 0, 1), clamp(_GLF_IDENTITY(ivec4(0, 1, 0, 1), (true ? ivec4(0, 1, 0, 1) : _GLF_FUZZED(ivec4(29805, 86333, 54566, 83118)))), ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1))), max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))))))))), max(int(_GLF_IDENTITY(ivec4(0, 1, 0, 1), _GLF_IDENTITY(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1)), min(max(ivec4(0, 1, 0, 1), ivec4(0, 1, 0, 1)), max(ivec4(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) | 0), 0, 1), ivec4(0, 1, 0, 1)))))), int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 0, 1), max(ivec4(0, 1, _GLF_IDENTITY(0, (0) | 0), 1), ivec4(0, 1, 0, 1)))))))) / 1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitfieldExtract(-7251, -49338, -19906)) : 4)) : _GLF_IDENTITY(_GLF_FUZZED(47808), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), _GLF_IDENTITY((_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), min((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), (~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0)))))))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), min((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), (~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0)))))))) ^ 0, min((_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), min((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), (~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0)))))))) ^ 0, (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), min((~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0))))), (~ _GLF_IDENTITY((_GLF_FUZZED(47808)), max((_GLF_FUZZED(_GLF_IDENTITY(47808, (_GLF_IDENTITY(47808, (47808) * 1)) - 0))), (_GLF_IDENTITY(_GLF_FUZZED(47808), (_GLF_FUZZED(47808)) - 0)))))))) ^ 0))) ^ 0))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec4(true, true, true, _GLF_IDENTITY(false, false || (false)))), false, false))), _GLF_IDENTITY(! (! (bool(bvec4(true, true, true, false)))), (_GLF_IDENTITY(! (! (bool(bvec4(true, true, true, false)))), (! (! (bool(bvec4(true, true, true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), false || (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))) || false), _GLF_IDENTITY(bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))), ! (! (! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), bool(bool(false))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))), ! (! (! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), bool(bool(false)))))))))))))), ! (! (! ((_GLF_IDENTITY(! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))), ! (! (! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), bool(bool(false))))))))))))))))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))), bool(bool(false)))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))) || false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(true, true, true, false)), ! (! (bool(bvec4(true, true, true, false)))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bvec4(true, true, true, _GLF_IDENTITY(false, false || (false)))), false, false))), _GLF_IDENTITY(! (! (bool(bvec4(true, true, true, false)))), (_GLF_IDENTITY(! (! (bool(bvec4(true, true, true, false)))), (! (! (bool(bvec4(true, true, true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))))) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), false || (((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))) || false), _GLF_IDENTITY(bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))), ! (! (! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), bool(bool(false))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))), ! (! (! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), bool(bool(false)))))))))))))), ! (! (! ((_GLF_IDENTITY(! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))))))), ! (! (! (bool(bool(! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false)), bool(bool(false))))))))))))))))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))), bool(bool(false)))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))) || false))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false)))) && true)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
