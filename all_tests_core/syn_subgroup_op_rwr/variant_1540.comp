#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false, false))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uvec4 GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))))
            barrier();
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 1 * (1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), false, true, true)), bool(bool(bool(bvec4(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), false, true, true)))))) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || _GLF_IDENTITY((! (! (false))), ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), false)))))))))))))) && true))))))))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(7.9, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch, injectionSwitch)).x))); _injected_loop_counter --)
      {
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))))))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), float(vec2((injectionSwitch.y), 0.0))) - 0.0, 0.0 + (_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat4((injectionSwitch.y) - 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))))))
  {
  }
 else
  {
   do
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED((+ 2.7))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.7), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))), max(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))))))), float(_GLF_FUZZED(90.67)), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))))), float(_GLF_FUZZED(-4.7)), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.38)), float(1.0), bool(true))), 1.0, 1.0)))), 0.0)))), bvec2(false, true)), min(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7))), (vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7)))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))))))), mix(vec2((vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))))))))[0], _GLF_FUZZED(465.772)), vec2(_GLF_FUZZED(9.8), (vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))))))))[1]), bvec2(false, true))), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7))), vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(false, true)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1001.2492) : 0.0)), injectionSwitch.x)))[0], _GLF_FUZZED((+ 2.7))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.7), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * _GLF_IDENTITY((-71.56), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((-71.56), min((-71.56), (-71.56))), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat3(mat4x3(mat3(_GLF_IDENTITY((-71.56), min((-71.56), (-71.56))), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))), max(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))))))), float(_GLF_FUZZED(90.67)), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.1)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0))))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))))), float(_GLF_FUZZED(-4.7)), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.38)), float(1.0), bool(true))), 1.0, 1.0)))), 0.0)))), bvec2(false, true)), min(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7))), (vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7)))) / sqrt(vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))), (vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))) * mat2(1.0)))))), mix(vec2((vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))))))))[_GLF_IDENTITY(0, (0) ^ (0 ^ 0))], _GLF_FUZZED(465.772)), vec2(_GLF_FUZZED(_GLF_IDENTITY(9.8, float(vec2(_GLF_IDENTITY(9.8, max(9.8, 9.8)), 0.0)))), (vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, round(length(normalize(1.0))))), mix(vec2(_GLF_FUZZED(-591.435), _GLF_FUZZED((+ -1092.8157))), vec2((vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, round(length(normalize(1.0))))))[0], (vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0 * (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, round(length(normalize(1.0))))))[1]), bvec2(true, true)))))[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-513.801))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))))))))[1]), bvec2(false, true))), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7))), vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) * 1.0)), bvec2(false, true))))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], min(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0])), _GLF_FUZZED((+ 2.7))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.7), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))), max(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, 1.0 * (-71.56)), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))))))), float(_GLF_FUZZED(90.67)), bool(false))), float(_GLF_FUZZED(_GLF_IDENTITY(-71.56, float(mat2x3(_GLF_IDENTITY(-71.56, _GLF_IDENTITY(1.0 * (-71.56), max(_GLF_IDENTITY(1.0 * (-71.56), _GLF_IDENTITY(float(mat2x4(1.0 * (-71.56), 1.0, 0.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), clamp(float(mat2x4(1.0 * (-71.56), 1.0, 0.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat2x4(1.0 * (-71.56), 1.0, 0.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), float(mat2x4(1.0 * (-71.56), 1.0, 0.0, 1.0, 0.0, abs(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0))))), 1.0 * (-71.56)))), 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, cos(0.0)), (vec4(0.0, 0.0, 1.0, cos(0.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))))))))), float(_GLF_FUZZED(-4.7)), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(94.38)), float(1.0), bool(true))), 1.0, 1.0)))), 0.0)))), bvec2(false, true)), min(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7))), (vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / exp(0.0)), _GLF_FUZZED((+ 2.7)))) / sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0, 0.0, 0.0))))))), mix(vec2((vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0))))))))[0], _GLF_FUZZED(465.772)), vec2(_GLF_FUZZED(9.8), (vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), float(vec2(float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0))))))))[1]), bvec2(false, true))), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ 2.7))), vec2(_GLF_FUZZED(-4.7), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x2((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), bvec2(false, true))))).x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (-16707 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) << 0))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y = subgroup_local_id;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), injectionSwitch.x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0)), injectionSwitch.x)) > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(round(-500.306)) : injectionSwitch.y)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(round(_GLF_IDENTITY(-500.306, (false ? _GLF_FUZZED(step(-25.44, -880.533)) : -500.306)))) : injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! _GLF_IDENTITY((true), ! (! ((true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(38.12))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))) / 1u);
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z, 0u | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z), 0u | (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z), (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z), 0u + ((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z, max(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z)))))) | (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z), 1u * ((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z, ~ (~ (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z))))))))))) + GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ (0 | 0))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(5), 0 | (int(5)))), (true ? int(_GLF_IDENTITY(int(5), 0 | (int(5)))) : _GLF_FUZZED(_GLF_IDENTITY(28764, min(28764, 28764)))))), 0 | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(5), 0 | (int(5)))), (true ? int(_GLF_IDENTITY(int(5), 0 | (int(5)))) : _GLF_FUZZED(28764))))))), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(int(int(5))), clamp(int(int(int(5))), int(int(int(5))), int(int(int(5))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(int(int(5))), clamp(int(int(int(5))), int(int(int(5))), int(int(int(5))))), (_GLF_IDENTITY(int(int(int(5))), clamp(int(int(int(5))), int(int(int(5))), int(int(int(5)))))) << 0)) + 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, 5, 5)))), max(_GLF_IDENTITY(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, 5, 5)))), (_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, 5, 5))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, 5, 5)))), (_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, 5, 5))))) | (_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, clamp(5, 5, 5))))))))), (int(5)) | (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED((3.9 - -418.438))), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true))))), (false ? _GLF_FUZZED(7517) : _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), (true ? int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) : _GLF_FUZZED(_injected_loop_counter)))))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w = _GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_id)))));
            }
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -9026)); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)))))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))), bool(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), (_GLF_IDENTITY(~ (int(4)), max(_GLF_IDENTITY(~ (int(4)), (~ (int(4))) | (~ (int(4)))), _GLF_IDENTITY(~ (int(4)), (~ (int(4))) ^ 0)))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(int(int(4)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, 0u + (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u) | 0u))))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0))), (1) | (_GLF_IDENTITY(1, (1) | 0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, 0u + (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u) | 0u))))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, int(ivec2(1, 1))), 0))), (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1)))))) | 0))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid))).y)) + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))))) : _GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))))) : _GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id))))) : _GLF_FUZZED(workgroup_size)) + 0u)) << 0u))), 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), (true ? _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u) : _GLF_FUZZED(subgroup_local_id))))))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid)).y), ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) & 78307u) + ((_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid)).y))) | _GLF_IDENTITY(0u, (0u) ^ 0u))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, ~ (~ (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y))))), (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | _GLF_IDENTITY(0u, (0u) ^ 0u))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | _GLF_IDENTITY(0u, (0u) ^ 0u))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)))) + 1)) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u)) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + 1), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid), (true ? _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid), ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid)) << uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid)))).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u)) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + 1), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, min((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u)))))) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u)) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y)) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u)))))))))) ^ 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, uvec4(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[0], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[1], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[2], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[3])).y)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, uvec4(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[0], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[1], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[2], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[3])).y)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) << uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).y, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y) | 0u))))) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, uvec4(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[0], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[1], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[2], GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid[3])).y)), _GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u))), 0u))) + 1))))) % GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   else
    {
    }
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w], (buf[GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w]) >> 0u), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-17.68)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-17.68)), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))[1]), bvec2(true, true)) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.9, 286.805)))), mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(53.26)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY(0u, 0u | (0u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(-56416)))) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u), max(_GLF_IDENTITY(read_1, (read_1) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) << (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (read_1) | 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(-56416)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920)))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920))))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(-56416)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920)))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920))))))))), int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) ^ 0) : _GLF_FUZZED(-56416)))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920)))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(77920, (77920) | (77920))))))))), 1, 0, 0)))))))), 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w, min(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))], (buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w, (127266u & 0u) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w)), (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))]) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u * (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (~ (buf[_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), max(_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), clamp(_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), uint(uvec3((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), 0u, 1u))), (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w))), ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w)))) + 0u))), (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w) | _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w), 1u * ((GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.w)))))) ^ 0u))]))), 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) << 0))), ~ (~ (64))))))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(22284)))))), 1)) * (0)), (0) - 0), 0)))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(232.969)), bvec2(true, false))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x = read_2, ~ (~ (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x = read_2)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.y + 1 < GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.z)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, max(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, max(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x)), (true ? GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x : _GLF_FUZZED((true , 195485u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, max(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, max(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x)), (true ? GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x : _GLF_FUZZED((true , 195485u))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1 == GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, max(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, (true ? GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x : _GLF_FUZZED((true , _GLF_IDENTITY(195485u, (195485u) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))), (_GLF_IDENTITY(read_1 + 1 == GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, ! (! (read_1 + 1 == GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x)))) || false))) ^ 0u) + 1, 4, 64, 4);
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(90.74), mix(float(_GLF_FUZZED(90.74)), float(_GLF_FUZZED(649.429)), bool(false)))), float(1.0), bool(true))) * (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (0)), 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 | 1))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         subgroupAll(false);
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, min(1, 1)) == _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x, (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x) << 0u)) | 0u), (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid, uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid)).x, GLF_merged4_0_1_6_1_1_17_2_1_13_3_1_11read_2subgroup_local_idsubgroup_sizevirtual_gid.x))) + 1, 4, _GLF_IDENTITY(64, (64) >> 0), 4);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   subgroupAll(true);
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), int(ivec4(0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))), 1, (1 ^ 1), 0))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
}
