#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0), (false ? _GLF_FUZZED((mat2x3(8.4, -322.937, 0.0, -2064.0340, 1784.6052, -8008.2725) / -81.44)) : mat2x3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, tan(0.0)))), 0.0)))))))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(4.5))), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-50.40)), bool(false))), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(_GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), 0.0)))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-196.813) : 0.0)), 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat3(-500.082, -4.2, 3704.7626, 7.7, -5961.2323, 6075.8740, 2801.4938, -7596.0131, -5.0) - 775.251)) : mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))))))))), true), bvec2(bvec4(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.3) : 1.0)), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(mat3(mat4x3(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mat3(mat4x3(mat3(mat4x3(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))), 1.0, 1.0, 0.0)) * mat3(1.0))), min(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 1.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-68.88))), 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0), (mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 0.0)) * mat3(1.0))))))))), true), true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))) && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)) ^ (0u | 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0), mat3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))) * (mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(true, false))) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true && (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-463.579)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), true && (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), true && (! (_GLF_IDENTITY(true, true && (true))))))), bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))), false, true)))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(true && (true && (injectionSwitch.x > injectionSwitch.y)), (true && (true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sqrt(5677.7269)) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-820.221))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), workgroup_id, workgroup_id))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 0u ^ (_GLF_IDENTITY(uint(1u), uint(1u)))))))), workgroup_id))) | (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) | (workgroup_id))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(workgroup_id))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 0u, 1u), min(uvec4(subgroup_size, 0u, 0u, 1u), uvec4(subgroup_size, 0u, 0u, _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u))))))), clamp((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u))))))), 0u + (_GLF_IDENTITY((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u))))))), ((uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u)))))))) / 1u))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(6u), uint(6u))), max(uint(_GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_IDENTITY(uint(6u), uint(6u))))))))) | 0u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ _GLF_IDENTITY((uint(6u)), ((uint(6u))) >> 0u))))))))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, subgroup_size), (true ? max(subgroup_size, subgroup_size) : _GLF_FUZZED(123049u))), 0u | (max(subgroup_size, subgroup_size))))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))))))), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))))))), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) | 0u))), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) * 1u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))))))))), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id)))))))), min((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id)))))))), _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id)))))))), 0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id))))))))))))))), min(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), uint(uvec2(uint(0u), 0u)))))))) + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_size)), 1u, 0u, 1u)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) >> 0u), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) : _GLF_FUZZED(workgroup_base)))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id))))))))))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(194670u) : subgroup_size)), subgroup_size)), max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))))))))), max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : _GLF_FUZZED(workgroup_id))))))))))))), _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u | ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), max(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) >> 0u), 1u), uvec4(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u, 1u)))))))), max(_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(subgroup_size, subgroup_size))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(subgroup_size, subgroup_size))))), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u))), 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 1u, 1u, (0u ^ 0u)))), max(subgroup_size, subgroup_size))), max(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - 0u) + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? 0u + (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))) : _GLF_FUZZED(workgroup_id)))))))))))))) - 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), true, true), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), min(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ~ (_GLF_IDENTITY(~ ((64)), 0 | (~ ((64)))))), _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), 0 | (~ ((64)))))))) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) << 0))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), ~ (~ (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) - 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1, (read_1 + 1) ^ 0u)) + 0u)), 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, 0)), (int(ivec3(_GLF_IDENTITY(4, (4) ^ 0), 0, 0))) * 1)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))) - abs(0.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 ^ (0))], injectionSwitch[1])).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (false ? _GLF_FUZZED(-8454) : 1 * (0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1, _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(read_1 + 1 == read_2) + 1, 0u), (uvec2(uint(read_1 + 1 == read_2) + 1, 0u)) * uvec2(1u, _GLF_IDENTITY(1u, 0u | (1u))))), (uint(_GLF_IDENTITY(uvec2(uint(read_1 + 1 == read_2) + 1, 0u), (uvec2(uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))) * uvec2(1u, 1u)))) - 0u)), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), clamp(uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u))))))) + 0u, uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), clamp(uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u)))), uint(_GLF_IDENTITY(uvec2(read_2, 1u), uvec2(0u, 0u) ^ (uvec2(read_2, 1u))))))) + 0u, 1u))))), min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) | 0u), 0u ^ (_GLF_IDENTITY((read_2) | (read_2), (_GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) << 0u)) | ((read_2) | (read_2)))))))), bool(bvec3(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), min(_GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), ~ (~ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))) ^ 0u), 1u, 1u))))))), true, false)))) + 1) | 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u), _GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u))) == read_2, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + 0u))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + 0u))))))))))) + 1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))) && true))), (_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, false)))) && true)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false)))))))) && true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))) && true))), (_GLF_DEAD(false)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), false, false)))) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, 0 | (1)) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), ! (! ((_GLF_IDENTITY((false), ! (! ((false))))))))))) || false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), true))))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9519.7873))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
