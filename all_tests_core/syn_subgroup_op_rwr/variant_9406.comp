#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false)), float(_GLF_IDENTITY(float(mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false))), float(mat4x2(float(mix(float(_GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y))), float(_GLF_FUZZED(3494.4600)), bool(false))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(7723.7510)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false)))), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(7723.7510)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false)))), bool(true)), clamp(mix(float(_GLF_FUZZED(7723.7510)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false)))), bool(true)), mix(float(_GLF_FUZZED(7723.7510)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false)))), bool(true)), mix(float(_GLF_FUZZED(7723.7510)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3494.4600)), bool(false)))), bool(true))))) - 0.0))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), true))), false || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-384.855), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-61.30)), bvec2(true, false))))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-384.855), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-61.30)), bvec2(true, false))))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), true, false)), true)))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false), true && (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), true)))))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))), true), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))), subgroup_id, _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uvec4(3u, 0u, 1u, 1u)), min(_GLF_IDENTITY(uint(uvec4(3u, 0u, 1u, 1u)), (uint(uvec4(3u, 0u, 1u, 1u))) | 0u), uint(uvec4(3u, 0u, 1u, 1u)))))), uint(3u))) | (subgroup_id))))) >> 0u) * subgroup_size, max(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))), subgroup_id, _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uvec4(3u, 0u, 1u, 1u)), min(_GLF_IDENTITY(uint(uvec4(3u, 0u, 1u, 1u)), (uint(uvec4(3u, 0u, 1u, 1u))) | 0u), uint(uvec4(3u, 0u, 1u, 1u)))))), uint(3u))) | (subgroup_id))))) >> 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) : _GLF_FUZZED(subgroup_id))), subgroup_id, _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(uvec4(3u, 0u, 1u, 1u)), min(_GLF_IDENTITY(uint(uvec4(3u, 0u, 1u, 1u)), (uint(uvec4(3u, 0u, 1u, 1u))) | 0u), uint(uvec4(3u, 0u, 1u, 1u)))))), uint(3u))) | (subgroup_id))))) >> 0u) * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1), (subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))]) - 0u))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0)), (0) | (0))) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) - 0))))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1 & 1, 1 * (1 & 1))) * (1))), (_GLF_IDENTITY((1) | (1), 0 | ((1) | (1)))) << 0))), _GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u * (subgroup_local_id + 1), min(1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(1u, (1u) ^ (17809u & 0u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u)) << 0u, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u)) << 0u) | 0u))) | (0u | 0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))) ^ 0u) + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), max(0u | (subgroup_local_id + 1), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u | 0u) ^ (0u))))) | (subgroup_local_id + 1)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (true ? ~ (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1), uint(uvec3(_GLF_IDENTITY(clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_size) : clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1))), 1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), max(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), _GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)))) | (subgroup_local_id)) + 1) << _GLF_IDENTITY(0u, (0u) << 0u), max(_GLF_IDENTITY((subgroup_local_id + 1) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(52142u) : 0u))) << 0u), 1u * ((subgroup_local_id + 1) << _GLF_IDENTITY(0u, (0u) << 0u))), (subgroup_local_id + 1) << _GLF_IDENTITY(0u, (0u) << 0u))))) | (0u | _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), (subgroup_local_id + 1) << 0u)) | (0u | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u))), 1u, 1u)))) / 1u), 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u | ((~ (subgroup_local_id + 1))))))), (true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(num_workgroup))), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(num_workgroup))), 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), 1u, 1u)))) ^ 0u))))) / 1u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))) | 0u), 1u, 1u, 1u)))), (subgroup_local_id + 1) << 0u)) | (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u))), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u)))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u))), 1u, 1u)))) / 1u), 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u | ((~ (subgroup_local_id + 1))))))), (true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(num_workgroup))), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(num_workgroup))), 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), 1u, 1u)))) ^ 0u))))) / 1u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))) | 0u), 1u, 1u, 1u)))), (subgroup_local_id + 1) << 0u)) | (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u))), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u)))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u))), 1u, 1u)))) / 1u), 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u | (_GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u | ((~ (subgroup_local_id + 1))))))), (true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(num_workgroup))), 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) : _GLF_FUZZED(num_workgroup))), 1u, 1u))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))), 1u, 1u)))) ^ 0u))))) / 1u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))) | 0u), 1u, 1u, 1u)))), (subgroup_local_id + 1) << 0u)) | (_GLF_IDENTITY(0u, 1u * _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u))), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((true ? 0u : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(0u, (0u) * (1u | 1u)) : _GLF_FUZZED(num_workgroup))) * 1u)))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (_GLF_IDENTITY(0u, (0u) - 0u))))))))) / 1u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) - (0u ^ 0u)), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u)) / uvec3(1u, 1u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(14851u, 180196u, 153818u)) : uvec3(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 1u))))), _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) << 0u)) | (0u | 0u))))))) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))))) | (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * 1), 1))))))) + 0), 1, 1)), ~ (~ (subgroup_local_id + 1))), 1u, 1u))), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(62868u, 130174u, 118845u).t) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) + 0), 1, 1)), ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(1u, (1u) + 0u), 1u))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), 1 * (_GLF_IDENTITY((1), int(ivec4((1), 0, 1, 1)))))))) >> _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-993.312) : float(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))))))))) << 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u) | 0u, min(0u | 0u, 0u | 0u))))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))), (_GLF_IDENTITY(true, ! (! (true))) ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u) | (subgroup_local_id)) + 0u))) | _GLF_IDENTITY(0u, 0u | (0u))) + 1) : _GLF_FUZZED(virtual_gid)))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(1017u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read_2), (false ? _GLF_FUZZED(subgroup_size) : (read_2))) / 1u, ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min(_GLF_IDENTITY((read_2), max((read_2), (read_2))), (read_2)))))) / 1u) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read_2) / 1u, ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), 0u ^ (_GLF_IDENTITY((read_2) / 1u, ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))))), (_GLF_IDENTITY((read_2) / 1u, ((read_2) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), ~ (~ ((1u))))))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((read_2) / 1u, ~ (~ ((read_2) / 1u))), (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | 0u)))))), ~ (~ _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))))))))), min((uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))))))))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))))), _GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u))), (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))) | (_GLF_IDENTITY((read_2) / _GLF_IDENTITY(1u, (1u) | (1u)), ((read_2) / _GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY((read_2) / 1u, (_GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), min((read_2), (read_2)))))) / 1u) / 1u)))))))))))))))) + _GLF_IDENTITY(1, max(1, 1)), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), clamp(4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) | 0) : _GLF_FUZZED(1383))), 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5637.6212, _GLF_IDENTITY(1.9, clamp(1.9, 1.9, 1.9)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(degrees(vec2(8208.3252, 533.942))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, log(1.0)))))))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.x, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0)), (transpose(mat4(injectionSwitch.x, 0.0, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false, true, false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false, true, false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false, true, false)))))), true && (bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false, true, false)))))))), true, true)))))), ((injectionSwitch.x > injectionSwitch.y)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, sin(0.0), tan(0.0), cos(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0))), 0.0)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))), true))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) | ((read_1))) | 0u) + _GLF_IDENTITY(1, int(int(1))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))) * 1u)), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))) * 1u)), (0u ^ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | (read_2))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | (read_2))))), (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | (read_2)))))) ^ 0u)))) * 1u))) | 0u)) ^ 0u))) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (64) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1)), 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
}
