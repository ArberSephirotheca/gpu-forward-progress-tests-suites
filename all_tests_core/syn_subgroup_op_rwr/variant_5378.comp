#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
            {
             _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id, (true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id : _GLF_FUZZED(54189u)));
            }
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 + (0))) + (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, min(8, 8))))), (0 >> _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 + (0))) + (0 >> _GLF_IDENTITY(int(8), int(8))), ((_GLF_IDENTITY(0, 0 + (0))) + (0 >> _GLF_IDENTITY(int(8), int(8)))) / 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != 1, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) != 1) || false)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false, true, true)))))))
    {
     _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.x = _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))));
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(31965) : _injected_loop_counter)) != (-57702 & 0)); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(0 ^ (_injected_loop_counter --), 0 | (0 ^ (_injected_loop_counter --)))))
  {
   GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, (GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u)), GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size)).x;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))))) : _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4((gl_WorkGroupSize.x), 1u, (15552u & 0u), 1u))), (_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4((gl_WorkGroupSize.x), 1u, (15552u & 0u), 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4((gl_WorkGroupSize.x), 1u, (15552u & 0u), 1u))), (_GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4((gl_WorkGroupSize.x), 1u, (15552u & 0u), 1u)))) | 0u))) << _GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))), 0u ^ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(163101u, 132878u, 164149u)) : gl_WorkGroupSize))) | (gl_WorkGroupSize))[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize[2], 1u, 1u, 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uvec4(gl_WorkGroupSize[2], 1u, 1u, 1u)))))) >> 0u)))) / uvec3(1u, 1u, 1u)).x) << _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))))))))) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)))).x, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)).x) << 0u), uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)).x) << 0u, 1u * ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), min(max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize), max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), gl_WorkGroupSize)))), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)).x) << 0u))), 0u, 0u)))) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) / 1u)))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(false)) : injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(false)) : injectionSwitch.y)))))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true))) || false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -4.3))), bool(false))) < _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))).y))))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -4.3))), bool(false))) < _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))).y))))), ! (! (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -4.3))), bool(false))) < _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))).y))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -4.3))), bool(false))) < _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))).y))))), true)))))))))))), true, true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(83.90))))))), true && (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true))), false || (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), bool(bvec3(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false, false, true)))))))), false, true))))), true && (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, cos(0.0), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sin(0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(sin(0.0), 1.0))), 0.0))))))))) || false))), false, true)))))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0))).y)))))))), true, _GLF_IDENTITY(true, true && (true)))))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1 ^ 1) | (1))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1)) ^ 1) | (1))), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, (1 ^ 1) | (1)), ! (! (_injected_loop_counter != _GLF_IDENTITY(1, (1 ^ 1) | (_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), false, _GLF_IDENTITY(false, false || (false)))))))); _injected_loop_counter ++)
            {
             GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z = _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(156153u, (156153u) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 69095u, 92968u, 30665u)) : GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size)).w * GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid)).y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) + 0u), clamp(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid) | (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid)).z) + 0u), GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) + 0u), GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) + 0u))) + subgroup_local_id, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) + 0u, ~ (~ ((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z))) | 0u)) + 0u)))) + subgroup_local_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size, (GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size) + uvec4(0u, 0u, 0u, 0u))) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y)) * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z) + 0u) + subgroup_local_id) * 1u)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false)))))), (bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false))))))) || false))))) || false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid, 0u ^ (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid));
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_14_2_1_12_3_1_14subgroup_sizeworkgroup_baseworkgroup_idworkgroup_size.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, (true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid : _GLF_FUZZED(uvec4(166858u, 32469u, 156625u, _GLF_IDENTITY(113266u, (1u & 1u) * (113266u))))))) | (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, 0u, 0u, 0u)))) | (uvec4(0u, 0u, 0u, 0u)))).y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec2(bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true, true)), true))), true && (bool(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) - 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bvec3(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true, false)))); _injected_loop_counter ++)
              {
               GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x = _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) << 0u) << 0u, ((next_virtual_gid) << 0u) | ((next_virtual_gid) << 0u)));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid))) - uvec4(0u, 0u, 0u, 0u)).w], 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & int(true)), 0 ^ ((0 & int(true))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & int(true)), _GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(0, (0) | (0)), 0), (min(_GLF_IDENTITY(0, (0) | (0)), 0)) | (min(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), max((0), (0)))))), 0)))) ^ ((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) / 1), 0)) & int(true))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), 0)) & int(true)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (_GLF_IDENTITY((0 & int(true)), (_GLF_IDENTITY((0 & int(true)), ~ (~ ((0 & int(true)))))) | ((0 & int(true))))))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & int(true)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((0 & int(true)), ((0 & int(true))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY((0 & int(true)), ~ _GLF_IDENTITY((~ ((0 & int(true)))), clamp((~ _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1) & int(true))), ~ (~ (((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) / 1) & int(true))))))), _GLF_IDENTITY((~ ((0 & int(true)))), ((~ ((0 & int(_GLF_IDENTITY(true, (true) || false)))))) >> 0), (~ (_GLF_IDENTITY((0 & int(true)), min((0 & int(true)), (0 & int(true)))))))))) | ((0 & int(true)))))))), _GLF_IDENTITY((false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & int(true)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((0 & int(true)), ((0 & int(true))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY((0 & int(true)), ~ _GLF_IDENTITY((~ ((0 & int(true)))), clamp((~ ((0 & int(true)))), _GLF_IDENTITY((~ ((0 & int(true)))), ((~ ((0 & int(true))))) >> 0), (~ ((_GLF_IDENTITY(0 & int(true), clamp(0 & int(true), 0 & int(true), 0 & int(true)))))))))) | ((0 & int(true))))))))) && true, bool(bvec4((false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & int(true)), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((0 & int(true)), ((0 & int(true))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))), (_GLF_IDENTITY((0 & int(true)), ~ _GLF_IDENTITY((~ ((0 & int(true)))), clamp((~ ((0 & int(true)))), _GLF_IDENTITY((~ ((0 & int(true)))), ((~ ((0 & int(true))))) >> 0), (~ ((_GLF_IDENTITY(0 & int(true), clamp(0 & int(true), 0 & int(true), 0 & int(true)))))))))) | ((0 & int(true))))))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, 1 * (0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) ^ 0) * (_GLF_IDENTITY(0, min(0, 0)))) ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ (_GLF_IDENTITY(76897, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(76897, _GLF_IDENTITY((true ? 76897 : _GLF_FUZZED(_injected_loop_counter)), min((true ? 76897 : _GLF_FUZZED(_injected_loop_counter)), _GLF_IDENTITY((true ? 76897 : _GLF_FUZZED(_injected_loop_counter)), ((true ? 76897 : _GLF_FUZZED(_injected_loop_counter))) ^ 0))))), (0 ^ (_GLF_IDENTITY(76897, (true ? 76897 : _GLF_FUZZED(_injected_loop_counter))))) >> 0)) & 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))))), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ (_GLF_IDENTITY(76897, 0 ^ (_GLF_IDENTITY(76897, (true ? 76897 : _GLF_FUZZED(_injected_loop_counter))))) & 0)))) || false); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x], uint(read_1 + 1), 4, 64, 4);
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(true, ! (! (true))))))))));
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w], max(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w], buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.w])), 4, 64, 0);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), true, false)))))), true, false, false))) || false))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))) || false, bool(bvec3((! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))) || false, true, false))))))) || false), _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))) && true)) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), true, false)))))), true, false, false))) || false))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))) || false, bool(bvec3((! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))) || false, true, false))))))) || false), _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec3(_GLF_IDENTITY((true), bool(bool((true)))), true, false)))))), true, false, false))) || false))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))) || false, bool(bvec3((! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))) || false, true, false))))))) || false), _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))) && true)) && true))), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.6)), bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0)))) - 0.0) < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1 < GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.z)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec4(0, 1, 1, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(1.0, injectionSwitch.y)), int(_GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(-28744))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (true ? ~ (~ (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) : _GLF_FUZZED(clamp((read_2 ^ subgroup_size), subgroup_id, subgroup_id)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(12.45) : injectionSwitch.y)))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), mix(float(_GLF_FUZZED(-118.022)), float(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), bool(true))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(193.079)), bool(false)), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(193.079)), bool(false)), (false ? _GLF_FUZZED(-0.3) : mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(193.079)), bool(false)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(193.079)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))))) == read_2), (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (injectionSwitch.y))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(7.8))))), float(_GLF_FUZZED(193.079)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) / 1.0), injectionSwitch.y))))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (injectionSwitch.y))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(7.8))))), float(_GLF_FUZZED(193.079)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) / 1.0), injectionSwitch.y))))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (injectionSwitch.y))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(7.8))))), float(_GLF_FUZZED(193.079)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) / 1.0), injectionSwitch.y))))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))))) | 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (injectionSwitch.y))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(7.8))))), float(_GLF_FUZZED(193.079)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) / 1.0), injectionSwitch.y))))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (injectionSwitch.y))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(7.8))))), float(_GLF_FUZZED(193.079)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) / 1.0), injectionSwitch.y))))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (~ (~ (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u)))) << 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.47) : injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y), (true ? _GLF_IDENTITY((injectionSwitch.y), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), (injectionSwitch.y))) : _GLF_FUZZED((- tanh(56.77))))) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (1.0) - 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(7.8))))), float(_GLF_FUZZED(193.079)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) / 1.0), injectionSwitch.y))))) * 1.0), injectionSwitch.y))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3739.7975), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2971.0813)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))))))))))) == read_2)) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(uint(1u << _GLF_IDENTITY(uint(7u), uint(7u)))), min(uint(uint(1u << _GLF_IDENTITY(uint(7u), uint(7u)))), uint(uint(1u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) + 1, 4, 64, 4);
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               subgroupAll(false);
              }
             else
              {
               atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_11next_virtual_gidsubgroup_idsubgroup_sizevirtual_gid.x], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4))))) / (1 | int(_GLF_ONE(1.0, injectionSwitch.y)))), 64, 4);
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 subgroupAll(_GLF_IDENTITY(true, (true) && true));
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
}
