#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 mat4 _f0;
 bvec3 _f1;
 vec4 _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_29 {
 ivec4 _f0;
 bool _f1;
 float _f2;
 mat2 _f3;
 mat3x2 _f4;
 ivec4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 vec2 _f1;
 bool _f2;
 mat3 _f3;
 ivec3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_27 {
 vec3 _f0;
 mat3x2 _f1;
 bvec2 _f2;
 ivec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_26 {
 mat2x4 _f0;
 mat2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 ivec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 ivec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 _GLF_struct_28 _f4;
 _GLF_struct_29 _f5;
 _GLF_struct_30 _f6;
} ;

struct _GLF_struct_22 {
 int _injected_loop_counter;
 uint _f0;
 uvec4 _f1;
 vec2 _f2;
 float _f3;
} ;

struct _GLF_struct_21 {
 bvec2 _f0;
 mat2x3 _f1;
 int _f2;
} ;

struct _GLF_struct_20 {
 bool _f0;
 uvec4 _f1;
 mat2 _f2;
 bool _f3;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 mat3 _f3;
 _GLF_struct_22 _f4;
 bvec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 vec3 _f1;
 int _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_18 {
 mat3 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
 ivec2 _f1;
 _GLF_struct_18 _f2;
 mat2x4 _f3;
 _GLF_struct_23 _f4;
 bool _f5;
 _GLF_struct_31 _f6;
} ;

struct _GLF_struct_13 {
 uint _f0;
 mat2x3 _f1;
 bvec4 _f2;
 int _f3;
 ivec3 _f4;
 mat2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_14 {
 int _f0;
 uint read_1;
 bool _f1;
 _GLF_struct_13 _f2;
 mat4x3 _f3;
 int _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 mat3 _f1;
 bvec3 _f2;
 vec2 _f3;
 mat4x3 _f4;
 uvec3 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
} ;

struct _GLF_struct_12 {
 _GLF_struct_10 _f0;
 uvec2 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 ivec4 _f4;
 _GLF_struct_11 _f5;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_14 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 mat2x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
} ;

struct _GLF_struct_3 {
 uint _f0;
 ivec2 _f1;
 vec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec2 _f1;
 bvec3 _f2;
 ivec2 _f3;
 ivec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 uint virtual_gid;
 _GLF_struct_6 _f2;
 _GLF_struct_8 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 uvec3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupID, uvec3(1u));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.y = subgroup_local_id;
 for(_GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(ivec2(1), ivec2(1), _GLF_struct_18(mat3(1.0), _GLF_struct_16(mat2(1.0), vec3(1.0), 1, ivec4(1)), _GLF_struct_17(mat4x3(1.0), mat3x2(1.0), bvec3(true), mat3x4(1.0))), mat2x4(1.0), _GLF_struct_23(_GLF_struct_19(mat2(1.0)), _GLF_struct_20(true, uvec4(1u), mat2(1.0), true), _GLF_struct_21(bvec2(true), mat2x3(1.0), 1), mat3(1.0), _GLF_struct_22(1, 1u, uvec4(1u), vec2(1.0), 1.0), bvec3(true), bvec3(true)), true, _GLF_struct_31(_GLF_struct_24(ivec3(1), ivec4(1), mat4x3(1.0)), _GLF_struct_25(vec2(1.0), ivec3(1), mat4(1.0)), _GLF_struct_26(mat2x4(1.0), mat2(1.0), uvec3(1u)), _GLF_struct_27(vec3(1.0), mat3x2(1.0), bvec2(true), ivec3(1), mat4x3(1.0)), _GLF_struct_28(mat2x3(1.0), vec2(1.0), true, mat3(1.0), ivec3(1), bvec2(true)), _GLF_struct_29(ivec4(1), true, 1.0, mat2(1.0), mat3x2(1.0), ivec4(1), bvec2(true)), _GLF_struct_30(mat4(1.0), bvec3(true), vec4(1.0), mat3(1.0), mat3x2(1.0)))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_32._f4._f4._injected_loop_counter > 0); _GLF_struct_replacement_32._f4._f4._injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_4(_GLF_struct_1(mat3x2(1.0), mat3(1.0)), _GLF_struct_2(ivec4(1), vec2(1.0), bvec3(true), ivec2(1), ivec2(1), mat3x4(1.0)), _GLF_struct_3(1u, ivec2(1), vec4(1.0), 1u), mat3x2(1.0)), _GLF_struct_5(uvec3(1u)), workgroup_base + _GLF_struct_replacement_0.subgroup_id * GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.z + GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.y, _GLF_struct_6(mat2x4(1.0)), _GLF_struct_8(mat4x3(1.0), _GLF_struct_7(mat4x2(1.0), mat2x3(1.0), mat3x2(1.0), mat2x3(1.0), true)), mat3(1.0));
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_id * GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.z + ((GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.y + 1) % GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.z);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_12(_GLF_struct_10(mat2x3(1.0)), uvec2(1u), mat3x4(1.0), mat3x2(1.0), ivec4(1), _GLF_struct_11(mat4x3(1.0), mat3(1.0), bvec3(true), vec2(1.0), mat4x3(1.0), uvec3(1u), mat3(1.0))), _GLF_struct_14(1, atomicLoad(buf[_GLF_struct_replacement_9.virtual_gid], 4, 64, 0), true, _GLF_struct_13(1u, mat2x3(1.0), bvec4(true), 1, ivec3(1), mat2(1.0), mat2x3(1.0)), mat4x3(1.0), 1, bvec2(true)), vec3(1.0));
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_15._f1.read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_9.virtual_gid], 4, 64, 0);
 GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.x = read_2;
 if(GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.y + 1 < GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.z)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_15._f1.read_1 + 1 == GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.x) + 1, 4, 64, 4);
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_15._f1.read_1 + 1 == GLF_merged3_0_1_6_1_1_17_2_1_13read_2subgroup_local_idsubgroup_size.x) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
