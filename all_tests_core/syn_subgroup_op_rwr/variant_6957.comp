#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2(_GLF_FUZZED(vec2(-61.96, -1.8).r), _GLF_FUZZED((true ? 8.7 : _GLF_IDENTITY(6694.4372, mix(float(_GLF_IDENTITY(6694.4372, (6694.4372) + 0.0)), float(_GLF_FUZZED(-9.8)), bool(false)))))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, true, false))))))).x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))))))))) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x)), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x)), ~ (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x)))))) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * (1u & 1u)))), (((gl_NumWorkGroups.x))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / (1u ^ 0u))) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) | (0u)))), gl_NumWorkGroups.x))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.5))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.5))), injectionSwitch.y))) * 1.0), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.5))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-3.6) : clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y : _GLF_FUZZED(-1.5))), injectionSwitch.y))))))))) ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (0u) >> 0u))) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(subgroup_size)));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), false, true), bvec3(bvec3(bvec3(bool(bvec3(false, false, true)), false, true))))))), (injectionSwitch.x > injectionSwitch.y)))), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))), false, true)), true)), false || _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)), true))), (_GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(true, true, false, false))))) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), false, true)), true))), ((bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)), true)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), max(~ (int(5)), _GLF_IDENTITY(~ (int(5)), 0 | (~ (int(5)))))))), _GLF_IDENTITY(int(5), (int(5)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(5892.9436), _GLF_FUZZED(74.51)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), vec2(1.0, 1.0) * (mix(vec2(_GLF_FUZZED(5892.9436), _GLF_FUZZED(74.51)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(72934)))))], (injectionSwitch)[1]), bvec2(true, true))))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5892.9436), _GLF_FUZZED(74.51)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, true))).y)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(0, max(0, 0)))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))), 0, 0), _GLF_IDENTITY(ivec3(ivec3(ivec3(1, 0, 0))), (ivec3(ivec3(ivec3(1, 0, 0)))) + ivec3(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, ((1) << 0) ^ 0)) / (1 | 1)), ~ (~ ((1) << 0))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(subgroup_id)) : 0)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + 0)))) % subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))), 0, 0), _GLF_IDENTITY(ivec3(ivec3(ivec3(1, 0, 0))), (ivec3(ivec3(ivec3(1, 0, 0)))) + ivec3(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, ((1) << 0) ^ 0)) / (1 | 1)), ~ (~ ((1) << 0))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(subgroup_id)) : 0)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + 0)))) % subgroup_size, uint(uvec4(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))))), 0, 0), _GLF_IDENTITY(ivec3(ivec3(ivec3(1, 0, 0))), (ivec3(ivec3(ivec3(1, 0, 0)))) + ivec3(0, 0, 0))))), _GLF_IDENTITY(_GLF_IDENTITY((1) << 0, (_GLF_IDENTITY((1) << 0, ((1) << 0) ^ 0)) / (1 | 1)), ~ (~ ((1) << 0))))) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(subgroup_id)) : 0)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + 0)))) % subgroup_size, 1u, 1u, 1u))) : _GLF_FUZZED(subgroup_local_id)))), min(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) + 0)) % subgroup_size), (true ? ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) - 0)) + 0)) % subgroup_size) : _GLF_FUZZED(subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) | 0))) + 0), (true ? subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) | 0))) + 0) : _GLF_FUZZED((subgroup_id - subgroup_id))))) % subgroup_size)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && (false), bool(bool(true && (false))))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
    }
  }
 else
  {
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) || false)) || false))), (! (! (true))) && true), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) && true))), false, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) && true))), false, false, true)), true, true, true)))), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), false))))), ! (! (true))), true, false, true))) || false), false, true)))) ? _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])) : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(buf[virtual_gid], (true ? buf[virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(uvec2(_GLF_FUZZED(workgroup_size), (0u & 94811u))))))) | (_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec3(bvec3(true, true, false))))))))) ? _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])) : _GLF_FUZZED(workgroup_size))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))) && true)));
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid, next_virtual_gid))))) / 1u)) | (next_virtual_gid)), max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid, next_virtual_gid))))) / 1u)) | (next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid, next_virtual_gid))))) / 1u)) | (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u), next_virtual_gid, next_virtual_gid))))) / 1u)) | (next_virtual_gid))) / 1u))), max(next_virtual_gid, next_virtual_gid))) / 1u)], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(35982)) : 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))), ~ (~ ((_GLF_IDENTITY(0, (false ? _GLF_FUZZED(findLSB(35982)) : 0)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), clamp(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(64, (64) >> 0))))) * 1), (_GLF_IDENTITY(64, (64) >> 0)), (_GLF_IDENTITY(64, (64) >> 0))))) + 0)), 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false)) || false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))) || false))))) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, sin(0.0), _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), float(_GLF_IDENTITY(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * _GLF_IDENTITY((1.0), ((1.0)) - tan(0.0))))))), _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(1.0), float(_GLF_IDENTITY(vec3(normalize(1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.7)), float(0.0), bool(true))), 1.0), (vec3(normalize(1.0), 0.0, 1.0)) + vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0))), transpose(transpose(mat4x2(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0))), mat2(1.0) * (vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))))), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(-2.0)), float((0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), max(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2(vec2(0.0, 1.0), 0.0, 1.0)))))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, sqrt(1.0), 1.0)))), transpose(transpose(mat4x3(injectionSwitch.x, sin(0.0), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x) + (length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), abs(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-2.5) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, sin(0.0), _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), float(_GLF_IDENTITY(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * _GLF_IDENTITY((1.0), ((1.0)) - 0.0)))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0), (false ? _GLF_FUZZED(3.0) : _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0), (true ? clamp(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0) : _GLF_FUZZED(500.983)))))), 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.8) : 0.0)), round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat4x2(_GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), (false ? _GLF_FUZZED(vec4(36.94, 67.37, -555.903, -2457.2265)[3]) : round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))))), 1.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), (true ? length(normalize(1.0)) : _GLF_IDENTITY(_GLF_FUZZED(-994.585), min(_GLF_IDENTITY(_GLF_FUZZED(-994.585), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-994.585), (false ? _GLF_FUZZED(-2.7) : _GLF_FUZZED(-994.585))) : _GLF_FUZZED(-499.868))), _GLF_FUZZED(-994.585)))))), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.4)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(vec2(_GLF_FUZZED(-700.471), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.4)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1]), vec2((vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.4)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[0], _GLF_FUZZED(2.2)), bvec2(true, false)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6628.9458, min(_GLF_IDENTITY(-6628.9458, mix(float(_GLF_IDENTITY(-6628.9458, max(-6628.9458, -6628.9458))), float(_GLF_FUZZED(2.5)), bool(false))), -6628.9458)))), float(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), min(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), bool(true)))), determinant(mat3(1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, sqrt(1.0), 1.0)))), transpose(transpose(mat4x3(injectionSwitch.x, sin(0.0), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x) + (length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), mix(float(abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), float(_GLF_FUZZED((- 410.699))), bool(false))), min(_GLF_IDENTITY(abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), mix(float(abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), float(_GLF_FUZZED((- 410.699))), bool(false))), _GLF_IDENTITY(abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), mix(float(abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), float(_GLF_FUZZED((- 410.699))), bool(false))))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, sin(0.0), _GLF_IDENTITY(round(length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), float(_GLF_IDENTITY(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(min(cos(0.0), cos(0.0)), min(_GLF_IDENTITY(min(cos(0.0), cos(0.0)), float(vec4(min(cos(0.0), cos(0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0))), min(cos(0.0), cos(0.0))))) * (1.0)))))), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-304.029) : _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0 + (determinant(mat3(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))))), transpose(transpose(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2177.3378)))) + sin(0.0)), 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, sqrt(1.0), 1.0)))), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x, sin(0.0), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x) + (length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, sin(0.0), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(785.179)), float(1.0), bool(true))), cos(0.0) * (1.0))), vec2(mat2x3(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(785.179)), float(1.0), bool(true))), cos(0.0) * (1.0))), sqrt(0.0), 1.0, 0.0, 0.0)))))), float(_GLF_IDENTITY(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat2(mat4(mat2(0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), (true ? mat2(mat4(mat2(0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat2(76.57, -9097.2912, -98.26, -7.5))))))), round(length(normalize(1.0))), 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat4x2(round(length(_GLF_IDENTITY(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))), (normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0))))) * mat2(1.0)))), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-578.273)))) / 1.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))), mix(float(_GLF_FUZZED((8.2 + 0.0))), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9967.6529)), float(0.0), bool(true))), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))), float(vec3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0))), 1.0, 1.0)))) / determinant(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), 1.0)), 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(1.0), 1.0)))), transpose(transpose(mat4x3(injectionSwitch.x, sin(0.0), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (length(normalize(vec2(1.0, 1.0)))), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + (length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) + vec2(0.0, 0.0)))) : _GLF_FUZZED(-6969.1876))))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), max(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))), abs(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), max(float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), float(vec4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), abs(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (injectionSwitch.y) / 1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, sin(0.0), _GLF_IDENTITY(round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, cos(0.0) * (1.0)), float(mat2x3(_GLF_IDENTITY(1.0, cos(0.0) * (1.0)), tan(0.0), 0.0, 0.0, 0.0, 1.0))))))), float(_GLF_IDENTITY(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)))))), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))), transpose(transpose(mat4x2(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(cos(0.0) * (1.0), min(cos(0.0) * (1.0), _GLF_IDENTITY(cos(0.0) * (1.0), mix(float(cos(0.0) * (1.0)), float(_GLF_FUZZED(-19.94)), bool(false)))))))))), 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(determinant(mat3(1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(2.4)), bool(false))))))))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), clamp(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)))))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))))), transpose(transpose(mat4x3(injectionSwitch.x, sin(0.0), round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float((mat2(-5.8, -1041.2586, 1.7, 4.9) != mat2(-1.2, -1.5, 2372.9976, -906.171))))), bool(false)))) + _GLF_IDENTITY((_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)))) * _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (true ? (_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0)))) * _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) : _GLF_FUZZED(6.9))))), 0.0, 1.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0), abs(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), (false ? _GLF_FUZZED(0.8) : float(vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(float(_GLF_FUZZED((-8.9))), float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 1.0)), (false ? _GLF_FUZZED(0.8) : float(vec2(0.0, 1.0))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), bool(true))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - abs(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))), mix(float(_GLF_FUZZED(-8.2)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(38868))), bool(false))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0), (vec2(0.0, 1.0)) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), transpose(transpose(mat4x3(injectionSwitch.x, sin(0.0), round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), clamp(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec2(mat3(vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0 + (1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), min(vec4(1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(1.0, 1.0, 0.0, 1.0)))))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(pow(_GLF_IDENTITY(7967.7564, (7967.7564) - 0.0), 7.2)) : 1.0))))))))), float(mat2x4(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), clamp(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec2(mat3(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))))), vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))), vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED((false ? -926.716 : -5.8)) : 1.0)) * (1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED((vec3(8.1, 9.7, -1.2) * 6969.1923)[1]) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), abs(1.0), 0.0, 0.0, 0.0)))), 0.0, 1.0, exp(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), tan(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0), (vec4(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), tan(0.0), 0.0)) * mat4(1.0)), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))), vec2(0.0, 1.0))))))))), bool(true)))) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4((_GLF_WRAPPED_IF_TRUE(true)), true, false, false)))) || false), true, true, _GLF_IDENTITY(true, (true) && true))))))
      {
       if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(1, (1) ^ 0)))) >> 0) < subgroup_size)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(-1.7)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))));
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))))))), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, false || (true)), true))) || false))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(91.56)), float(injectionSwitch.y), bool(true))))))))) && true))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, false))))
              {
               atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1, 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1, 1u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1, 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, read_1)))))) + 1, 1u)))))))) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) | 0)) >> 0), 64, 4);
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                continue;
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))
          break;
         subgroupAll(false);
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), 0.0, abs(0.0)))), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4(4823.0649, 5.3, -3018.0965, 4.0, 7.1, -84.44, -4.5, 3.4, 7351.3431, -7.4, -6.0, -3368.0809, -65.01, 1.5, 9.2, -92.98)) : mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), vec2(vec4((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0), 0.0, abs(0.0)))), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0))))))).y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, min(1, 1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (read_2))) | (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ _GLF_IDENTITY((read_2), max((read_2), (read_2)))) | (~ (read_2))), clamp(_GLF_IDENTITY(~ (read_2), (~ _GLF_IDENTITY((read_2), max((read_2), (read_2)))) | (~ (read_2))), _GLF_IDENTITY(~ (read_2), (~ _GLF_IDENTITY((read_2), max((read_2), (read_2)))) | (~ (read_2))), _GLF_IDENTITY(~ (read_2), (~ _GLF_IDENTITY((read_2), max((read_2), (read_2)))) | (~ (read_2)))))))))) + 1, 4, 64, 4);
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           do
            {
             subgroupAll(true);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true) && true))))), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true, true, false))) && true)), ! (! (true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec4(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), false, true, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec4(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), false, true, true)))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), bool(bvec4(bool((_GLF_IDENTITY(false, ! (! (false)))) && true), false, true, true)))), true, true), true)))))))), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, false || (false))) && true)), true))))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false))) && true)), _GLF_IDENTITY(true, (true) || false))))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, ((_GLF_IDENTITY(false, false || (false))) && true) || false))), true)))))))))))) || false)), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))) && _GLF_IDENTITY(true, true && (true)))), false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))) && _GLF_IDENTITY(true, true && (true)))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) && true, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) && true)))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false)))))) && true))) && true)), true)))))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), true, false, true))) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), true, false, true))) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)))))), bool(bvec4(_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), true, false, true))) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false)))) && true)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))))))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)), ! (! (bool(bvec2(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1)))) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-583.581)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y : _GLF_FUZZED(14.14))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(false, (false) || false) || ((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))))) && true)) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), false))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y)))) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))) || false))))))))))), false, false))) || false), true, true))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), true && (bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true))))))))))), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-583.581)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y : _GLF_FUZZED(14.14))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(false, (false) || false) || ((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))))) && true)) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), false))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y)))) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))) || false))))))))))), false, false))) || false), true, true))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), true && (bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true))))))))))), true))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-583.581)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y : _GLF_FUZZED(14.14))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(false, (false) || false) || ((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))))) && true)) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), false))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y)))) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))) || false))))))))))), false, false))) || false), true, true))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), true && (bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true))))))))))), true))))))), (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-583.581)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y : _GLF_FUZZED(14.14))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(false, (false) || false) || ((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y) && true), false || (((injectionSwitch.x > injectionSwitch.y) && true)))))), false, _GLF_IDENTITY(false, (false) || false))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))))) && true)) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))), true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true))))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), false))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y)))) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), ! (! (! ((injectionSwitch.x > injectionSwitch.y) && true)))), false, _GLF_IDENTITY(false, (false) || false))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))))) || false) && true, ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(! (! (! ((injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))))) || false))))))))))), false, false))) || false), true, true))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true)))), true && (bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec3(bvec2((true), true), true))))))))))), true)))))))) || false)) && true))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (_GLF_IDENTITY(false || (false), (false || (false)) || false)))))))))
                {
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true)))))
            return;
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))));
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, false)))))
            return;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(-5544.6188, injectionSwitch)) : injectionSwitch)).y))))
      return;
    }
  }
}
