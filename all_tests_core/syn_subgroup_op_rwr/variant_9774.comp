#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, bool(bvec2(true, true))), false)), (bool(bvec4(false, true, true, false))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))), (true) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false)))))
      return;
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 92.75))), vec2(_GLF_FUZZED(92.36), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-99664) : 1))], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 92.75))), vec2(_GLF_FUZZED(92.36), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-99664) : 1))], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 92.75))), vec2(_GLF_FUZZED(92.36), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-99664) : 1))], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).y)), true, false, false))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(55.31) : injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false)))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) && true)), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y)))), ! (! (bool((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(min(2.3, radians(539.188))) : injectionSwitch.y))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)), ! (! (bool(bvec3(false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, true)))))), false)))))))))))))) || false), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6.3), (true ? _GLF_FUZZED(6.3) : _GLF_FUZZED(900.998)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, false))), false || (bool(true))))))), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-32.96)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-5.6)), bool(false))), injectionSwitch.x)))) < injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))))))) && _GLF_IDENTITY(true, (true) || false)), false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 92.75))), vec2(_GLF_FUZZED(92.36), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1]))), ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).y)), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-42.00, -8.3)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, false || (true))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0)) < injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-138.246), _GLF_FUZZED(-3095.4961)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0)) < injectionSwitch.y))) && true))) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-42.00, -8.3)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) || false))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0)) < injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-42.00, -8.3)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) || false))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0)) < injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), bool(bvec4(true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-42.00, -8.3)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))) || false))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.3)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0)) < injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))))), false, false, false)))) && true)))) && true), false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31333) : 1)))), ! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31333) : 1))), max(0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31333) : 1))), 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31333) : 1)))))), (_injected_loop_counter != _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-31333) : 1))))) || false))))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, true)), (bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, true))) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, (true) || false) && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))))))))) && true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, (true) || false) && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))))))))) && true))))), true && ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, (true) || false) && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))))))))) && true))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true && ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y))), true, true))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false))), mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)))), bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.3)), bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), 0 ^ (int(2)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) | 0), ~ (~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) | 0))))) | 0) : _GLF_FUZZED(-92626)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(findMSB(-89733), (findMSB(-89733)) ^ 0)) : 2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), (int(_GLF_IDENTITY(2, 0 ^ (2)))) ^ 0), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(findMSB(-89733)), min(_GLF_FUZZED(findMSB(-89733)), _GLF_FUZZED(findMSB(-89733)))) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626)), ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (false ? _GLF_FUZZED(findMSB(-89733)) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626))) | ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(findMSB(-89733)) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) * 1), 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626))))) + 0)) ^ _GLF_IDENTITY(0, ~ (~ (0))))), max(_GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), 0 ^ (int(2)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) | 0), ~ (~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) | 0))))) | 0) : _GLF_FUZZED(-92626)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(findMSB(-89733), (findMSB(-89733)) ^ 0)) : 2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), (int(_GLF_IDENTITY(2, 0 ^ (2)))) ^ 0), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(findMSB(-89733)), min(_GLF_FUZZED(findMSB(-89733)), _GLF_FUZZED(findMSB(-89733)))) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626)), ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (false ? _GLF_FUZZED(findMSB(-89733)) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626))) | ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(findMSB(-89733)) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) * 1), 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626))))) + 0)) ^ _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))) ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), 0 ^ (int(2)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) | 0), ~ (~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) | 0))))) | 0) : _GLF_FUZZED(-92626)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(findMSB(-89733), (findMSB(-89733)) ^ 0)) : 2))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), (int(_GLF_IDENTITY(2, 0 ^ (2)))) ^ 0), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(findMSB(-89733)), min(_GLF_FUZZED(findMSB(-89733)), _GLF_FUZZED(findMSB(-89733)))) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626)), ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (false ? _GLF_FUZZED(findMSB(-89733)) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626))) | ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(findMSB(-89733)) : 2))), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) * 1), 0 ^ (0)) ^ (int(2)))) | 0) : _GLF_FUZZED(-92626))))) + 0)) ^ _GLF_IDENTITY(0, ~ (~ (0))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, false, true)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(sign(vec2(27.11, -0.7))))).y, false)))))), true)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true)), bool(bvec4(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true)), false, true, true))))))), true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(6.7))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)) && true), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), true), true, _GLF_IDENTITY(false, true && (false))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)) && true), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), true), true, _GLF_IDENTITY(false, true && (false))))))), true, true))) || false), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0))) + 0.0)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) + 0.0 : _GLF_FUZZED(72.01))), (true ? _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_IDENTITY((injectionSwitch.y) + 0.0, max((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))) / 1.0) : _GLF_FUZZED(72.01))) : _GLF_FUZZED(degrees(-5979.7024))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-71.80, 0.5)))).x > injectionSwitch.y, false))))), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) + 0.0 : _GLF_FUZZED(72.01)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.11)), bool(false))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) + 0.0 : _GLF_FUZZED(72.01)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.11)), bool(false))), false))))) && true)), true), true, false)), true)))))), true, true)))))))))), true, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))) : _GLF_FUZZED(sign(vec2(27.11, -0.7))))).y, false)))))), true)), bool(bool(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true)), bool(bvec4(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true)), false, true, true))))))), true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat2(6.7))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)) && true), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), true), true, _GLF_IDENTITY(false, true && (false))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) + ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))) && true)) && true), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(66.73) : 0.0)) : _GLF_FUZZED(4.9)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-55.34)), float(injectionSwitch.y), bool(true))), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), true), true, _GLF_IDENTITY(false, true && (false))))))), true, true))) || false), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && true)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0))) + 0.0)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), 0.0 + ((injectionSwitch.y))), (injectionSwitch.y))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) + 0.0 : _GLF_FUZZED(72.01))), (true ? _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_IDENTITY((injectionSwitch.y) + 0.0, max((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))) / 1.0) : _GLF_FUZZED(72.01))) : _GLF_FUZZED(degrees(-5979.7024))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-71.80, 0.5)))).x > injectionSwitch.y, false))))), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) + 0.0 : _GLF_FUZZED(72.01)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.11)), bool(false))), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) + 0.0 : _GLF_FUZZED(72.01)))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-64.11)), bool(false))), false))))) && true)), true), true, false)), true)))))), true, true)))))))))), true, _GLF_IDENTITY(false, ! (! (false))), false))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5951.8632, 37.71))))))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(236.003), _GLF_FUZZED(-1.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5951.8632, 37.71))))))).x)) + 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5951.8632, 37.71))))))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(236.003), _GLF_FUZZED(-1.3)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(5951.8632, 37.71))))))).x)) + 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))) && true))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY(false, ! (! (false))), false)), _GLF_IDENTITY(true, true && (true)) && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) + 0.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))) + 0.0)))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6606.6062))), false)))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6606.6062))), false)))))))), false, false), bvec3(bvec3(bvec3(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6606.6062))), false)))))))), false, false))))))), true, _GLF_IDENTITY(false, ! (! (false))), false)))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true)))) / cos(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))).x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_size))), ~ (_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY(clamp(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), max((_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id))), workgroup_size))), (workgroup_size))), ~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) | ((workgroup_size)))), (clamp(~ (workgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) / (1u | 1u))), max((workgroup_size), _GLF_IDENTITY((workgroup_size), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(workgroup_size, 0u | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_id)))) + 0u)))), 0u), (uvec2((workgroup_size), 0u)) / uvec2(1u, 1u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))))) >> 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u))))) >> 0u)))))))) | ((workgroup_size))))) / 1u)))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-12.77))), _GLF_FUZZED(16.78)), bvec2(true, false))).y)))))))))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true, true, true))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(true, (true) && true), true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true, true, _GLF_IDENTITY(true, true && (true)))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-175.287), _GLF_FUZZED(-9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).y)) && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), _GLF_IDENTITY(1, 0 | (1)), 1)), (int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), _GLF_IDENTITY(1, 0 | (1)), 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1), (ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, int(int(1)))), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1)) >> ivec3(0, 0, 0))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1))) >> 0), (int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1))) | (int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1)))))) | (_GLF_IDENTITY((int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) ^ 0), ~ (~ (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) ^ 0))))) << 0)) | 0), 1, 1))), ((int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) ^ 0)) << 0)) | 0), 1, 1)))) | ((int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) ^ 0)) << 0)) | 0), 1, 1))))))), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1)), (int(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) << 0)) | 0), 1, 1))) ^ 0)))) | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) << 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) + (_GLF_IDENTITY((int(1)), ((int(1))) * 1) << 0)))) | 0), 1, 1), clamp(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec3(1, 1, 1))), 1))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(_GLF_IDENTITY(1, clamp(1, 1, 1)))) << 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) + ((int(1)) << 0)))) | 0), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) << 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) + ((int(1)) << 0)))) | _GLF_IDENTITY(0, (0) - 0)), 1, 1), max(ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) << _GLF_IDENTITY(0, clamp(0, 0, 0)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) + ((int(1)) << 0)))) | 0), 1, 1), ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 + (1)))))) << 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) + (_GLF_IDENTITY((int(1)), 0 ^ ((int(1)))) << 0)))) | 0), 1, _GLF_IDENTITY(1, 0 ^ (1))))), ivec3(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) << 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) + ((int(1)) << 0)))) | 0), 1, _GLF_IDENTITY(1, (1) - 0)))))))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(true, bool(bool(true))) && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec4((true), false, false, false)))) || false)))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true && (_GLF_WRAPPED_IF_FALSE(false))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  return;
                }
               else
                {
                 return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), 0 + ((3))) << 0)), _GLF_IDENTITY(int(3), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))), (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))) * 1)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))), (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))) * 1)), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))), (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))) * 1)), int(ivec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))), (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))) * 1)), 1, 1, 1)))))) << _GLF_IDENTITY(0, int(ivec2(0, 1)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), int(3))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), int(3))), min(~ (_GLF_IDENTITY(int(3), int(3))), ~ (_GLF_IDENTITY(int(3), int(3)))))) >> (1 ^ 1))))), min((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << _GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 1 * (0)))))), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 * (~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))))), (~ (_GLF_IDENTITY(int(3), min(int(3), int(3))))) * 1)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(3), int(3)))), (~ (~ (_GLF_IDENTITY(int(3), int(3))))) << 0))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << 0)), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), min(int(3), int(3)))), (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) >> 0)), min(int(3), int(3))))) * 1)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(3), int(3)))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(int(3), int(3))))), clamp(~ ((~ (_GLF_IDENTITY(int(3), int(3))))), ~ ((~ (_GLF_IDENTITY(int(3), int(3))))), ~ ((~ (_GLF_IDENTITY(int(3), int(3))))))))))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               break;
              }
            }
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * subgroup_size), clamp(1u * (subgroup_id * subgroup_size), 1u * (subgroup_id * subgroup_size), _GLF_IDENTITY(1u * (subgroup_id * subgroup_size), (1u * (subgroup_id * subgroup_size)) | 0u)))))) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(1u * (subgroup_id * subgroup_size), clamp(1u * (subgroup_id * subgroup_size), 1u * (subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(1u * (subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : 1u * (subgroup_id * subgroup_size))), (1u * (subgroup_id * subgroup_size)) | 0u)))))) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) * 1u)) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))))), (subgroup_id) / 1u) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)))))))) % subgroup_size), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 1u), 0u, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) % subgroup_size) ^ 0u)), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u + ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), (_GLF_IDENTITY(((subgroup_local_id + 1)), (true ? ((subgroup_local_id + 1)) : _GLF_FUZZED(virtual_gid)))) / 1u)) / 1u) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (((subgroup_local_id + 1)) + 0u) ^ 0u)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) / 1u))))) % subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u + ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, (_GLF_IDENTITY(((subgroup_local_id + 1)) + 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))))))), 0u | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base))))))))) | 0u)))))) + 0u) ^ 0u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) % subgroup_size)))), _GLF_IDENTITY(0u | (0u + ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))) % subgroup_size))), (_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u)) | (0u + ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))) + 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), clamp(((subgroup_local_id + 1)), ((subgroup_local_id + 1)), ((subgroup_local_id + 1)))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ (0u | 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-39657)))), ((subgroup_local_id + 1)) + 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) | 0u))))) + 0u))), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))))) >> 0u), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), true)))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true), true))))))))))))))) ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u)))) * 1u))) % subgroup_size)))) ^ 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.9))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, true, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.9))), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, true)))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-29.38)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))) : _GLF_FUZZED(0.9))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, true, true)))), true)))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec4(bvec3(! (false), false, false), true))))))) || false)), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, true)), false, false, false)), (bool(bvec4(bool(bvec3(false, true, true)), false, false, false))) && true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_injected_loop_counter)) != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
              return;
             break;
            }
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
   return;
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), (virtual_gid) | 0u)]) / 1u))), uint(uvec2(buf[virtual_gid], 1u))), 4, _GLF_IDENTITY(64, (64) - (0 >> _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(75408), (_GLF_FUZZED(75408)) | (_GLF_IDENTITY(_GLF_FUZZED(75408), ~ (~ (_GLF_FUZZED(75408)))))) : 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      continue;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) | 0u))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), 0u + _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, max(1, 1))), ((read_1 + _GLF_IDENTITY(1, max(1, 1)))) | ((read_1 + _GLF_IDENTITY(1, max(1, 1))))))), min(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), 0u + _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, max(1, 1))), ((read_1 + _GLF_IDENTITY(1, max(1, 1)))) | ((read_1 + _GLF_IDENTITY(1, max(1, 1))))))), uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, 1)), 0u + _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, max(1, 1))), ((read_1 + _GLF_IDENTITY(1, max(1, 1)))) | ((read_1 + _GLF_IDENTITY(1, max(1, 1))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), true))))))))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), true))))))))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), true))))))))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, false), false)), false))), true))))))))), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))) && true)))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((- (-1.7 / -7114.8757))), _GLF_FUZZED(-0.2)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], float(vec3(((injectionSwitch))[1], 1.0, 0.0)))))), bvec2(true, true))) * sqrt(vec2(1.0, 1.0))).y))) && true)));
 if(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, (0u | 0u)))) + _GLF_IDENTITY(1, _GLF_IDENTITY(1, min(1, 1)) * (1)) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, uint(uint((subgroup_size) >> 0u)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, uint(uint((subgroup_size) >> 0u))))) - 0u)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))) || (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 0.0))), (true ? injectionSwitch.y : _GLF_FUZZED(-1445.3123))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, abs(1.0)), transpose(transpose(mat3(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, abs(1.0))))))))))).y) || false))))) || false))))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + sqrt(0.0)) - sin(0.0)) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), (! (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) ^ 0u), read_1)) + 1 == read_2)) || false)))) + 1, min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), (! (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) ^ 0u), read_1)) + 1 == read_2)) || false)))) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, max(read_1, read_1)) + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), (! (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) ^ 0u), read_1)) + 1 == read_2)) || false)))) + 1)), _GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY(64, (64) | (64)), 4);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, true, true))), true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), false || (true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(! (_GLF_IDENTITY(! (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), false || (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false)))))), bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))), false || (! _GLF_IDENTITY((bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), true && ((bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))))), true))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true)))), ! (! (! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true)))))))), bool(bool((_GLF_IDENTITY(! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true)))), ! (! (! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), true && (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))), false || ((_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), true && (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))), true))))), bool(_GLF_IDENTITY(bvec2(! (! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true))))), false), bvec2(bvec4(bvec2(! (! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(! (_GLF_IDENTITY(! (! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true))))), bool(bvec2(! (! (! (bool(bvec2(! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), true))))), false)))), false, true))))))))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(true && (_injected_loop_counter != 0), true && (true && (_injected_loop_counter != 0))))), (! (_GLF_IDENTITY(_injected_loop_counter != 0, true && (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false))))) || false)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
            {
             return;
            }
          }
         else
          {
          }
        }
      }
    }
   subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        return;
       return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_2, max(read_2, read_2))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, max(read_2, read_2))), ((_GLF_IDENTITY(read_2, max(read_2, read_2)))) * 1u)) ^ 0u) - 0u, 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(read_2, max(read_2, read_2))), (_GLF_IDENTITY((_GLF_IDENTITY(read_2, max(read_2, read_2))), ((_GLF_IDENTITY(read_2, max(read_2, read_2)))) * 1u)) ^ 0u) - 0u))), _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 1u * (_GLF_IDENTITY(min(0u, 0u), ~ (_GLF_IDENTITY(~ (min(0u, 0u)), clamp(~ (min(0u, 0u)), ~ (min(0u, 0u)), ~ (min(0u, 0u))))))))) ^ (read_2))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-78214), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-78214), (true ? 1 : _GLF_FUZZED(-78214)) << _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) | (_GLF_IDENTITY(max(1, 1), int(ivec2(max(1, 1), 1)))))) : _GLF_IDENTITY(_GLF_FUZZED(-78214), 1 * (_GLF_FUZZED(-78214)))), (true ? (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-78214)) : _GLF_FUZZED(13590)))), max(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-78214)), (true ? (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-78214)) : _GLF_FUZZED(13590)))), _GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_IDENTITY(_GLF_FUZZED(-78214), 0 | (_GLF_FUZZED(-78214)))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-78214), (true ? true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-78214) : _GLF_FUZZED(26873)))) : _GLF_FUZZED(13590), ~ (~ (true ? (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-78214)) : _GLF_FUZZED(13590)))))))))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) << 0)), clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))), (uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2)))) - 0u)) | (uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2)))))) + (0u | 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-78214)), ((true ? 1 : _GLF_FUZZED(-78214))) << 0)), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(53315))) : _GLF_FUZZED(-78214)))) | 0), uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (read_2)), read_2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(bitfieldReverse(subgroup_size)))), _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))) ^ (read_2), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(_GLF_IDENTITY(46816u, clamp(_GLF_IDENTITY(46816u, (46816u) - 0u), _GLF_IDENTITY(46816u, ~ (~ (46816u))), 46816u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(bitfieldReverse(subgroup_size)))), _GLF_IDENTITY(0u, min(0u, 0u))), uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(bitfieldReverse(subgroup_size)))), _GLF_IDENTITY(0u, min(0u, 0u))), 1u, 0u, ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u))))))))), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))) ^ (read_2), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, max(0u, 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(bitfieldReverse(subgroup_size)))), _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), 0u | (_GLF_IDENTITY(min(0u, 0u), uint(uint(min(0u, 0u))))))), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(bitfieldReverse(subgroup_size)))), _GLF_IDENTITY(0u, min(0u, 0u))))) - 0u), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) - 0u))), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))))) ^ (read_2)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY((read_2), ((read_2)) + 0u), (_GLF_IDENTITY((read_2), ((read_2)) + 0u)) << 0u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), uint(uvec2(0u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))))))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2)), clamp(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2)), _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2)), _GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2)))), _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u) ^ (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), clamp(_GLF_IDENTITY(read_2, (read_2) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) + 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), (true ? ~ (_GLF_IDENTITY(read_2, (read_2) + 0u)) : _GLF_FUZZED(subgroup_local_id))), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(read_2, (read_2) + 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), (true ? ~ (_GLF_IDENTITY(read_2, (read_2) + 0u)) : _GLF_FUZZED(subgroup_local_id))), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(read_2, (read_2) + 0u))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, (read_2) + 0u)), (true ? ~ (_GLF_IDENTITY(read_2, (read_2) + 0u)) : _GLF_FUZZED(subgroup_local_id))), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(read_2, (read_2) + 0u)))))))) << 0u)), _GLF_IDENTITY(read_2, (read_2) + 0u)))) >> 0u), read_2))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78214))), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-78214)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-78214)), (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-78214)), ((true ? 1 : _GLF_FUZZED(-78214))) | ((true ? 1 : _GLF_FUZZED(-78214))))) ^ 0), (true ? 1 : _GLF_FUZZED(-78214)))))) | 0, ~ (~ ((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 0))), int(1))), (0 >> _GLF_IDENTITY(int(4), int(4))) | (int(1))))) : _GLF_FUZZED(-78214)))) | 0)))), uint(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, ~ (~ ((0u) ^ 0u)))), min(0u, 0u)) ^ (read_2))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(-78214, ~ (~ (-78214))), 0), (ivec2(_GLF_IDENTITY(-78214, ~ (~ (-78214))), 0)) << ivec2(0, 0))))))), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, _GLF_IDENTITY(true, (true) && true)))))) ? 1 : _GLF_FUZZED(-78214))), _GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, _GLF_IDENTITY(true, (true) && true)))))) ? 1 : _GLF_FUZZED(-78214))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, (-78214) | (_GLF_IDENTITY(-78214, (-78214) ^ 0))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))) : _GLF_FUZZED(findLSB(workgroup_id)))), 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))) : _GLF_FUZZED(findLSB(workgroup_id)))), 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), ((_GLF_IDENTITY(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214) | (-78214), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((-78214) | (-78214), int(ivec2(_GLF_IDENTITY((-78214) | (-78214), ~ (~ ((-78214) | (-78214)))), 1)))))))), 0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, _GLF_IDENTITY((-78214), (_GLF_IDENTITY((-78214), ~ (~ ((-78214))))) - 0) | (-78214)))))) : _GLF_FUZZED(findLSB(workgroup_id)))), 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))) | 0)) / 1)), ((~ (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, (-78214) | (-78214)))), _GLF_IDENTITY(0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, (-78214) | (-78214))))), (true ? _GLF_IDENTITY(0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, (-78214) | (-78214))))), (_GLF_IDENTITY(0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, (-78214) | (-78214))))), 0 | (0 + ((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-78214, (-78214) | (-78214)))))))) - 0) : _GLF_FUZZED(42208))))))) ^ 0)))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED((39960 * -60546)) : (4))) << 0), min(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-29042) : 0)), 0, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), 0 | (1))))), 64, 4);
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             subgroupAll(true);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))))), max((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(-6.7, -0.4))))), (false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-6.7, -0.4))))))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-6.7, -0.4)), vec2(vec3(_GLF_FUZZED(vec2(-6.7, -0.4)), 1.0)))))), max((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(acos(vec2(-6268.9397, 7.7))) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, (-0.4) / 1.0))))))), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(acos(vec2(-6268.9397, 7.7))) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, (-0.4) / 1.0))))))), mix(vec2(_GLF_FUZZED(-6.2), (false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(acos(vec2(-6268.9397, 7.7))) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, (-0.4) / 1.0))))))))[1]), vec2((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(acos(vec2(-6268.9397, 7.7))) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, (-0.4) / 1.0))))))))[0], _GLF_FUZZED(2.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(acos(vec2(-6268.9397, 7.7))) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, (-0.4) / 1.0)))))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), vec2(mat2x3(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0))), (injectionSwitch))), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), max(true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(24.88, 5.8)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) : _GLF_FUZZED(vec2(-6.7, -0.4))))), max((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-6.7, -0.4)), mat2(1.0) * (_GLF_FUZZED(vec2(-6.7, -0.4))))))))), (false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))))))))), (injectionSwitch))) / abs(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0)), max(float(mat2x3(1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0))))), 1.0))).x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))))), max((false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-516.499, 8.2), vec2(_GLF_IDENTITY(mat4x2(vec2(-516.499, 8.2), determinant(mat2(0.0, 1.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x2(vec2(-516.499, 8.2), determinant(mat2(0.0, 1.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0, 0.0, 0.0))))))) : _GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(-6.7, -0.4))))), (false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(vec2(-14.78, -5.1)) : _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))), ((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, clamp(-0.4, -0.4, -0.4)))))) + tan(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))), ((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, clamp(-0.4, -0.4, -0.4)))))) + tan(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))), ((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, clamp(-0.4, -0.4, -0.4)))))) + tan(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(-225.820)), vec2(_GLF_FUZZED(-9685.9852), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))), ((true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, _GLF_IDENTITY(-0.4, clamp(-0.4, -0.4, -0.4)))))) + tan(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch))))))))))), max(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))))), max((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))))), (false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-6.7, mix(float(-6.7), float(_GLF_FUZZED(-97.07)), bool(false))), -0.4)), max(true ? (injectionSwitch) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-6.7, clamp(_GLF_IDENTITY(-6.7, min(-6.7, -6.7)), _GLF_IDENTITY(-6.7, _GLF_IDENTITY((-6.7) - 0.0, float(mat4x3((-6.7) - 0.0, 1.0, abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(0.0))))), -6.7)), -0.4)), _GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * vec2(1.0, 1.0))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-6.7, min(-6.7, -6.7)), -0.4))))), max((false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), (true ? (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-6.7, -0.4)), mat2(1.0) * (_GLF_FUZZED(vec2(-6.7, -0.4))))))))), (false ? _GLF_FUZZED(vec2(-516.499, 8.2)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))), (false ? _GLF_FUZZED(vec2(-6.7, -9.6)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (_GLF_IDENTITY(true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), clamp(true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)), true ? (injectionSwitch) : _GLF_FUZZED(vec2(-6.7, -0.4)))))))))))))), (injectionSwitch))) / abs(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0)), max(float(mat2x3(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(22.18)))) / 1.0), sqrt(0.0), 1.0)), float(mat2x3(1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0))))), 1.0))).x > injectionSwitch.y))))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}
