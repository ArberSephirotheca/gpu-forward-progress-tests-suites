#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y = subgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 82:
         case 5:
         case 34:
         case 40:
         case 60:
         case 76:
         case 42:
         case 64:
         return;
         break;
         default:
         1;
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 uint workgroup_base = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y * GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.w;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       switch(_GLF_SWITCH(0))
        {
         case 50:
         uvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
         case 0:
         barrier();
         break;
         case 56:
         vec4 _GLF_SWITCH_5_2v[11], _GLF_SWITCH_5_3v[55];
         case 37:
         bool _GLF_SWITCH_5_4v;
         default:
         1;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 42:
       case 79:
       case 10:
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       break;
       default:
       1;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + ((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z + 1) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.x = read_2;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 >> _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter --)
    {
     if(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.z + 1 < GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 32:
           vec2(317.338, -1269.6117);
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.x) + 1, 4, 64, 4);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), int(6)))))
                {
                 case 48:
                 bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[85];
                 case 0:
                 case 54:
                 case 15:
                 case 95:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 case 43:
                 case 99:
                 case 38:
                 case 22:
                 barrier();
                 break;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 1 * (int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (0 << _GLF_IDENTITY(int(8), int(8))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           case 82:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                 case 91:
                 ivec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 11:
                   mat4x2 _GLF_SWITCH_5_0v[62];
                   case 67:
                   ivec2 _GLF_SWITCH_5_1v[74], _GLF_SWITCH_5_2v[48];
                   case 0:
                   case 47:
                   barrier();
                   break;
                   case 38:
                   GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id;
                   case 68:
                   subgroup_size;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               subgroupAll(false);
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           default:
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             1;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 14:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 3:
               ivec2(-32283, -99912);
               case 66:
               mat2 _GLF_SWITCH_5_0v[53], _GLF_SWITCH_5_1v;
               case 0:
               case 91:
               case 73:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               break;
               case 34:
               (-90.74 - mat4(4.6, 38.30, 761.350, 3.7, 1681.7197, 245.043, -6.4, 3.6, -69.45, -49.16, 9171.5218, 988.024, 338.828, 3.5, 21.60, -3048.3810));
               default:
               1;
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 ^ (-35704 & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           return;
          }
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 switch(_GLF_SWITCH(0))
                  {
                   case 90:
                   (uvec3(23341u, 36996u, 33553u) , (virtual_gid | GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 0:
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   case 81:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                        {
                         case 0:
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true))))))))
                          barrier();
                         case 95:
                         case 98:
                         return;
                         break;
                         default:
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           1;
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   break;
                   default:
                   1;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 39:
                     bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[75];
                     case 28:
                     acos((true ? vec4(-8587.1519, 67.34, -915.795, 0.0) : (vec4(-7438.2763, 2069.2961, -6.5, 6.7) / -0.5)));
                     case 0:
                     case 31:
                     case 79:
                     case 29:
                     case 47:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      barrier();
                     case 25:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                     break;
                     case 34:
                     (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size ^ 182765u);
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
             barrier();
            }
           (ivec4(57886, -92978, 86945, 80439) << 37741);
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           float _GLF_SWITCH_1_0v[84];
           if(_GLF_DEAD(false))
            {
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 97:
                 ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                 case 0:
                 case 92:
                 case 89:
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                  }
                 break;
                 case 62:
                 mat2(-7.5, 4164.7665, -1504.3983, -4.8);
                 case 16:
                 ivec4(max(34502, _injected_loop_counter), _GLF_SWITCH_5_1v[0], ivec2(-976, -52915));
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             return;
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
             {
              switch(_GLF_SWITCH(0))
               {
                case 85:
                ;
                case 66:
                ;
                case 0:
                case 29:
                case 9:
                case 73:
                switch(_GLF_SWITCH(0))
                 {
                  case 22:
                  (ivec4(79688, -55833, -6920, 94615) * ivec4(-62614, 42610, -52829, 91358));
                  case 0:
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(true)
                   {
                    for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                         {
                          case 72:
                          floor(vec4(-6.9, -79.42, -94.01, 9.0));
                          case 0:
                          case 85:
                          case 61:
                          case 66:
                          case 34:
                          case 28:
                          case 27:
                          case 5:
                          case 67:
                          case 56:
                          switch(_GLF_SWITCH(0))
                           {
                            case 1:
                            (read_1 % uvec3(30119u, 43162u, 110811u));
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                               {
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 0:
                                  case 15:
                                  case 66:
                                  case 50:
                                  case 21:
                                  return;
                                  break;
                                  default:
                                  1;
                                 }
                               }
                              else
                               {
                               }
                             }
                            case 0:
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                   {
                                    barrier();
                                   }
                                 }
                                else
                                 {
                                 }
                               }
                              return;
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             return;
                            case 42:
                            barrier();
                            break;
                            default:
                            1;
                           }
                          break;
                          case 25:
                          mat3x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[34], _GLF_SWITCH_5_2v;
                          case 7:
                          refract(-1736.1344, -2.0, fract(-39.08));
                          default:
                          1;
                         }
                       }
                     }
                    bvec2 _GLF_SWITCH_1_1v[81], _GLF_SWITCH_1_2v[52], _GLF_SWITCH_1_3v;
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                       }
                     }
                    vec4(-9.4, 1.6, 9786.5063, 391.068);
                    mat2 _GLF_SWITCH_1_4v[68], _GLF_SWITCH_1_5v[6];
                    mat3x4 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      isnan(radians(vec4(7.1, 0.6, 0.4, 44.42)));
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 0:
                            case 27:
                            case 76:
                            case 43:
                            case 2:
                            case 42:
                            case 60:
                            case 1:
                            case 12:
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              barrier();
                             }
                            break;
                            default:
                            1;
                           }
                         }
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      do
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 64:
                            ivec3(-23812, -33758, 30106)[1];
                            case 59:
                            if(_GLF_DEAD(false))
                             barrier();
                            vec3(4161.4357, 2.4, 7.6);
                            case 0:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              do
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 return;
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              barrier();
                             }
                            case 98:
                            barrier();
                            break;
                            case 14:
                            ivec4(-70826, -20587, -80493, 88103);
                            default:
                            for(int _injected_loop_counter = (0 & (89953 << -78175)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                             {
                              1;
                             }
                           }
                         }
                       }
                      else
                       {
                       }
                      do
                       {
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                               {
                                barrier();
                               }
                             }
                            barrier();
                           }
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            do
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          else
                           {
                           }
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      do
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            return;
                           }
                          else
                           {
                           }
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      return;
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                     }
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        do
                         {
                          return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      if(_GLF_DEAD(false))
                       return;
                      ivec3(34752, 61763, 28312);
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                         {
                          return;
                         }
                        else
                         {
                         }
                       }
                     }
                    else
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        barrier();
                       }
                     }
                    do
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          case 77:
                          case 84:
                          case 80:
                          for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                           {
                            barrier();
                           }
                          break;
                          case 69:
                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                           {
                            bvec2(false, false);
                           }
                          default:
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                           {
                            1;
                           }
                         }
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              return;
                             }
                            else
                             {
                             }
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          return;
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          else
                           {
                           }
                         }
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        else
                         {
                          barrier();
                         }
                       }
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 0:
                              case 42:
                              case 29:
                              case 50:
                              case 31:
                              case 91:
                              case 63:
                              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                               {
                                switch(_GLF_SWITCH((0 | 0)))
                                 {
                                  case 82:
                                  acos(min(vec2(6.3, -500.112), vec2(9380.0749, -61.64)));
                                  case 0:
                                  case 68:
                                  case 1:
                                  case 93:
                                  case 6:
                                  case 22:
                                  case 72:
                                  case 65:
                                  case 69:
                                  barrier();
                                  break;
                                  case 85:
                                  ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                                  case 91:
                                  mat3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
                                  default:
                                  1;
                                 }
                               }
                              break;
                              case 95:
                              (ivec4(-11944, 79902, -66303, 52271) >> 6908);
                              case 90:
                              mat4 _GLF_SWITCH_5_0v;
                              default:
                              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                               {
                                1;
                               }
                             }
                           }
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              return;
                             }
                            else
                             {
                             }
                           }
                          continue;
                         }
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))); _injected_loop_counter --)
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 60:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             continue;
                            bvec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
                            case 4:
                            if(_GLF_DEAD(false))
                             break;
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(false))
                               {
                                do
                                 {
                                  barrier();
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                               }
                             }
                            else
                             {
                             }
                            mat2x4(437.098, 2.1, -663.938, 8.0, -6.2, -2586.4524, 6.7, 22.21);
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  barrier();
                                 }
                                else
                                 {
                                 }
                               }
                             }
                            else
                             {
                             }
                            case 0:
                            if(_GLF_DEAD(false))
                             {
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                             }
                            case 72:
                            case 35:
                            if(_GLF_DEAD(false))
                             break;
                            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
                             barrier();
                            if(_GLF_DEAD(false))
                             return;
                            case 58:
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                 }
                                else
                                 {
                                  barrier();
                                 }
                               }
                             }
                            else
                             {
                              if(_GLF_DEAD(false))
                               {
                                switch(_GLF_SWITCH(((0 | 0) ^ 0)))
                                 {
                                  case 91:
                                  mat2x3(3139.5416, 31.17, -8.0, 9.3, -906.882, -8.9);
                                  case 0:
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                     }
                                    else
                                     {
                                      barrier();
                                     }
                                   }
                                  break;
                                  default:
                                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                   {
                                   }
                                  else
                                   {
                                    1;
                                   }
                                 }
                               }
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               {
                                for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((41824 << 76468) & 0)); _injected_loop_counter --)
                                 {
                                  barrier();
                                 }
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              return;
                             }
                            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                             barrier();
                            case 16:
                            case 2:
                            case 12:
                            if(_GLF_DEAD(false))
                             barrier();
                            do
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                 }
                                else
                                 {
                                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                                   {
                                    return;
                                   }
                                 }
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            case 19:
                            if(_GLF_DEAD(false))
                             continue;
                            case 77:
                            case 54:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              return;
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(false))
                                 {
                                 }
                                else
                                 {
                                  barrier();
                                 }
                               }
                             }
                            do
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            break;
                            default:
                            if(_GLF_DEAD(false))
                             barrier();
                            1;
                           }
                         }
                       }
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                       {
                        for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                             {
                              if(_GLF_DEAD(false))
                               {
                                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                 {
                                  case 39:
                                  bitfieldReverse(uvec3(167402u, 119037u, 4867u));
                                  case 0:
                                  case 43:
                                  case 24:
                                  case 26:
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                                     {
                                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                       {
                                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                                         {
                                          switch(_GLF_SWITCH(0))
                                           {
                                            case 76:
                                            GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id;
                                            case 29:
                                            if(_GLF_WRAPPED_IF_TRUE(true))
                                             {
                                              num_workgroup;
                                             }
                                            else
                                             {
                                             }
                                            case 0:
                                            case 95:
                                            case 65:
                                            case 58:
                                            barrier();
                                            break;
                                            case 68:
                                            bvec4(false, true, true, false);
                                            default:
                                            1;
                                           }
                                         }
                                       }
                                     }
                                    else
                                     {
                                     }
                                   }
                                  else
                                   {
                                   }
                                  case 31:
                                  case 7:
                                  case 44:
                                  case 91:
                                  case 38:
                                  barrier();
                                  break;
                                  case 58:
                                  (mat2(0.6, -3592.8254, 6.3, 347.450) / mat2(5.1, -7789.9453, 6.8, -14.35));
                                  default:
                                  1;
                                 }
                               }
                             }
                           }
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                         }
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    mat2x3 _GLF_SWITCH_1_8v;
                    if(_GLF_DEAD(false))
                     {
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                       }
                      barrier();
                     }
                    do
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 50:
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                         {
                          (false ? uvec3(142383u, 81381u, 20876u) : uvec3(166686u, 65124u, 113106u));
                         }
                        else
                         {
                         }
                        case 56:
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          mat3x2(mat2(-38.86, 1986.1213, -812.781, -2.5));
                         }
                        case 0:
                        case 4:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                         }
                        vec3(301.659, -9.4, -5819.0721);
                        case 64:
                        case 88:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        if(_GLF_DEAD(false))
                         barrier();
                        case 27:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        case 28:
                        ivec3 _GLF_SWITCH_4_0v[79];
                        case 59:
                        mat3x2(0.8, 26.54, 6.9, 1431.5278, 3.9, -611.311);
                        for(int _injected_loop_counter = (0 & (false ? -66383 : -53265)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        default:
                        1;
                       }
                      do
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    (+ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y - uvec4(54620u, 185718u, 175301u, 1887u)));
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         }
                       }
                     }
                    else
                     {
                      uvec3(134143u, 135955u, 152412u);
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          if(_GLF_DEAD(false))
                           {
                            do
                             {
                              barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                        return;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 20:
                        case 30:
                        case 66:
                        case 13:
                        case 75:
                        case 37:
                        case 35:
                        case 68:
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        default:
                        1;
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     return;
                    ;
                    do
                     {
                      do
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            return;
                           }
                          else
                           {
                           }
                         }
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            else
                             {
                             }
                           }
                          else
                           {
                           }
                         }
                        else
                         {
                         }
                        do
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 87:
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                             {
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                               }
                              else
                               {
                                ivec2(-63948, 46387);
                               }
                             }
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 95:
                                uvec3(29779u, 141753u, 72870u);
                                case 0:
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                break;
                                case 61:
                                mat2x3(-5.5, 6924.6695, 622.153, -8033.6281, -37.07, -230.257);
                                case 4:
                                _injected_loop_counter;
                                default:
                                1;
                               }
                             }
                            case 1:
                            (11.80 - mat3x4(-7569.7587, -9.0, -11.08, -640.207, 0.5, 0.4, 7878.9224, -17.01, -452.974, -1.6, 0.2, -52.70));
                            if(_GLF_DEAD(false))
                             continue;
                            do
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                 }
                                else
                                 {
                                  barrier();
                                 }
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_WRAPPED_IF_TRUE(true))
                                 {
                                  barrier();
                                 }
                                else
                                 {
                                 }
                               }
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             break;
                            if(_GLF_DEAD(false))
                             {
                              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                               {
                                barrier();
                               }
                             }
                            case 0:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                   {
                                    barrier();
                                   }
                                 }
                               }
                              else
                               {
                               }
                              barrier();
                             }
                            case 35:
                            case 14:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              for(int _injected_loop_counter = (1 & ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                               {
                                barrier();
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                   }
                                  barrier();
                                 }
                               }
                              if(_GLF_DEAD(false))
                               break;
                             }
                            case 74:
                            if(_GLF_DEAD(false))
                             {
                              switch(_GLF_SWITCH(0))
                               {
                                case 35:
                                mat4x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                                case 0:
                                case 16:
                                if(_GLF_DEAD(false))
                                 barrier();
                                case 29:
                                case 43:
                                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                 break;
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                   {
                                    return;
                                   }
                                 }
                                case 61:
                                if(_GLF_DEAD(false))
                                 return;
                                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                 barrier();
                                case 56:
                                barrier();
                                case 22:
                                case 10:
                                if(_GLF_DEAD(false))
                                 return;
                                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                                else
                                 {
                                 }
                                if(_GLF_DEAD(false))
                                 barrier();
                                break;
                                case 95:
                                mat2(injectionSwitch, unpackHalf2x16(workgroup_base));
                                default:
                                1;
                               }
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             break;
                            break;
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              return;
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            default:
                            do
                             {
                              1;
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      barrier();
                     }
                    else
                     {
                     }
                   }
                  case 25:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      barrier();
                     }
                   }
                  break;
                  case 47:
                  min(injectionSwitch, vec2(-2.9, -1785.8636));
                  default:
                  1;
                 }
                break;
                case 95:
                (mat4x3(-91.84) - mat4x3(4809.8017, -4.2, -112.505, -6.1, 5.3, 55.59, 568.483, 5.2, 2379.5694, 1.4, -6.8, -85.70));
                case 41:
                do
                 {
                  (- mat2x3(7.4, 3.5, 34.26, 75.29, -838.999, -3.1));
                 }
                while(_GLF_WRAPPED_LOOP(false));
                default:
                1;
               }
             }
            else
             {
             }
            do
             {
              do
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    if(_GLF_DEAD(false))
                     break;
                    case 66:
                    case 77:
                    ;
                    break;
                    case 76:
                    (650.129 / mat3x2(7384.0157, 1.8, 25.39, -2514.3636, 6.5, -1441.9640));
                    case 50:
                    (uvec3(159134u, 37557u, 162883u) >> uvec3(79862u, 183733u, 71147u));
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(0), int(0))) | (1))); _injected_loop_counter ++)
                         {
                          barrier();
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      continue;
                     }
                    default:
                    1;
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                   }
                  else
                   {
                   }
                  return;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             barrier();
            mat3x2 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[23];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                barrier();
               }
             }
           }
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     barrier();
                    }
                  }
                 return;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 28:
                     (-- GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size);
                     case 22:
                     lessThan(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size);
                     case 0:
                     case 87:
                     case 35:
                     case 20:
                     case 7:
                     case 25:
                     case 40:
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 0:
                     case 37:
                     case 93:
                     case 42:
                     for(mat4 _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v; ((mat4x3(2992.0121, 8.6, 656.123, -41.57, 4.4, -5.7, -53.91, 8563.8667, 7.8, 2201.3124, 5.8, -51.00) + mat4x3(693.593, -491.293, 1428.2645, -9.1, 5.4, -37.47, -7.2, -379.154, 8608.3136, 1297.6254, 3.4, 7648.6479)) == mat4x3(-8.4, -7.7, -7.5, 4897.7057, -2697.5717, 766.517, 17.69, -5.0, 9.9, -560.440, 454.398, 17.17)); (injectionSwitch == vec2(7.0, -713.229)))
                      {
                       ;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       do
                        {
                         do
                          {
                           if((GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.x < next_virtual_gid))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 88:
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))
                                continue;
                               uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[97];
                               case 76:
                               mat3x4 _GLF_SWITCH_0_2v;
                               if(_GLF_DEAD(false))
                                barrier();
                               case 0:
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                                {
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                 bvec4(true, true, false, false);
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   for(int _injected_loop_counter = (0 & 38266); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               if(_GLF_DEAD(false))
                                return;
                               do
                                {
                                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                  {
                                   case 16:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   mat3 _GLF_SWITCH_4_0v;
                                   case 79:
                                   ;
                                   case 0:
                                   case 52:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   case 5:
                                   case 85:
                                   case 65:
                                   do
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                   case 17:
                                   case 25:
                                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                    {
                                     bvec4(true, true, false, true);
                                    }
                                   break;
                                   case 61:
                                   min(uvec3(185963u, 52243u, 70748u), (uvec3(171881u, 146795u, 108764u) / subgroup_id));
                                   default:
                                   1;
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               (false ? mat3(909.846, -5.2, 7.8, -87.83, -186.498, 4.5, 5.5, -1464.6379, 7.9) : mat3(9.4, -9208.5735, 8.4, 54.61, 52.37, 307.724, 4.3, 6869.9736, -489.080));
                               if(_GLF_DEAD(false))
                                barrier();
                               case 66:
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                return;
                               do
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false)))));
                               case 84:
                               mat3 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v;
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 matrixCompMult(mat4x2(-1.7, 103.554, -3898.9174, 7.5, 4122.5334, -29.79, -4706.6666, -74.74), mat4x2(-1.3, -0.0, 3.1, -0.3, -196.996, -0.9, 660.165, -2.4));
                                }
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               else
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 9:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     ;
                                    }
                                   else
                                    {
                                    }
                                   case 0:
                                   case 56:
                                   inversesqrt(vec4(-82.54, 1.2, -0.0, 35.36));
                                   break;
                                   case 22:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   mat4x2(6623.3094, 370.896, 154.328, -5.4, -849.966, -75.06, 2075.0296, 20.16);
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec4(int(4), 1, 1, 1), ivec4(1, 1, 1, 1) * (ivec4(int(4), 1, 1, 1))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))); _injected_loop_counter ++)
                                      {
                                       barrier();
                                      }
                                    }
                                   case 76:
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     (_GLF_SWITCH_1_11v + mat4(mat2(4318.1487, -7460.9990, -0.6, -6.7)));
                                    }
                                   default:
                                   do
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                   1;
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 0:
                                     do
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         do
                                          {
                                           return;
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     break;
                                     case 29:
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       bitfieldReverse(uvec2(22792u, 53542u));
                                      }
                                     default:
                                     1;
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   do
                                    {
                                     do
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))));
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                  }
                                 else
                                  {
                                   do
                                    {
                                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 80:
                                     vec4 _GLF_SWITCH_5_0v[60], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                                     case 0:
                                     case 32:
                                     case 83:
                                     case 7:
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                      }
                                     else
                                      {
                                      }
                                     barrier();
                                     break;
                                     case 57:
                                     ;
                                     default:
                                     1;
                                    }
                                  }
                                }
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  continue;
                                 barrier();
                                }
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
                                continue;
                               break;
                               case 40:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               ivec4 _GLF_SWITCH_0_3v[21], _GLF_SWITCH_0_4v[76], _GLF_SWITCH_0_5v;
                               if(_GLF_DEAD(false))
                                continue;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                   if(_GLF_DEAD(false))
                                    return;
                                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true)))
                                    {
                                     do
                                      {
                                       barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                    }
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                   if(_GLF_DEAD(false))
                                    continue;
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   continue;
                                  }
                                 do
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               if(_GLF_DEAD(false))
                                break;
                               default:
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 44:
                                     vec4(-304.402, -6638.0249, -29.62, 98.20);
                                     case 0:
                                     if(_GLF_DEAD(false))
                                      continue;
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                     break;
                                     case 51:
                                     mat2x4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[88], _GLF_SWITCH_5_2v;
                                     case 82:
                                     mat3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
                                     default:
                                     1;
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               1;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(false))
                              barrier();
                             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 37:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(false))
                                  return;
                                 barrier();
                                }
                               case 31:
                               ;
                               case 29:
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                }
                               do
                                {
                                 ((mat2x3(-68.89, 28.06, -7.7, 650.053, 22.07, -755.898) != mat2x3(-313.819, -5.5, 89.51, -1073.2712, 6.5, -5.3)) ? mat4x3(-5.8, -888.188, 374.368, -283.539, 3.6, -259.371, -0.9, 3.6, -23.61, 9.3, -4250.5835, 6.1) : outerProduct(vec3(-0.7, -3.1, -7.8), vec4(-5.6, 8.8, 9481.4980, -49.14)));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               bvec3 _GLF_SWITCH_1_15v[10], _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v;
                               break;
                               case 32:
                               do
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     return;
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               ivec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                               case 56:
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               mat2x3 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[23], _GLF_SWITCH_2_5v;
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 63:
                                     injectionSwitch;
                                     case 4:
                                     float _GLF_SWITCH_5_0v;
                                     case 0:
                                     case 88:
                                     case 12:
                                     case 67:
                                     case 56:
                                     case 74:
                                     case 50:
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     break;
                                     case 85:
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       injectionSwitch;
                                      }
                                     case 44:
                                     mat2 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                                     default:
                                     1;
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                {
                                 for(int _injected_loop_counter = (0 | (78132 & (0 | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                break;
                               default:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 continue;
                                }
                               1;
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))), int(6)))))); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))
                        {
                         bvec3(false, false, false);
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         else
                          {
                          }
                         continue;
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), true, false, true))))))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              barrier();
                             break;
                            }
                           case 33:
                           case 2:
                           case 42:
                           if(_GLF_DEAD(false))
                            break;
                           case 28:
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               barrier();
                              }
                            }
                           else
                            {
                            }
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           break;
                           default:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           1;
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       float _GLF_SWITCH_1_18v;
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                           {
                            do
                             {
                              switch(_GLF_SWITCH((0 | 0)))
                               {
                                case 37:
                                _injected_loop_counter;
                                case 0:
                                case 30:
                                case 11:
                                case 48:
                                case 27:
                                case 84:
                                case 7:
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 52:
                                  mat3x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  case 19:
                                  int _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
                                  case 0:
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  case 47:
                                  if(_GLF_DEAD(false))
                                   break;
                                  case 11:
                                  case 15:
                                  if(_GLF_DEAD(false))
                                   {
                                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                                     {
                                      do
                                       {
                                        do
                                         {
                                          barrier();
                                         }
                                        while(_GLF_WRAPPED_LOOP(false));
                                       }
                                      while(_GLF_WRAPPED_LOOP(false));
                                     }
                                   }
                                  case 8:
                                  case 55:
                                  if(_GLF_DEAD(false))
                                   continue;
                                  case 10:
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                      if(_GLF_WRAPPED_IF_TRUE(true))
                                       {
                                        if(_GLF_WRAPPED_IF_FALSE(false))
                                         {
                                         }
                                        else
                                         {
                                          switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
                                           {
                                            case 0:
                                            case 96:
                                            case 81:
                                            case 38:
                                            case 76:
                                            case 75:
                                            case 24:
                                            case 3:
                                            case 98:
                                            do
                                             {
                                              barrier();
                                             }
                                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                            break;
                                            case 45:
                                            mat3x2 _GLF_SWITCH_5_0v;
                                            default:
                                            for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                             {
                                              1;
                                             }
                                           }
                                         }
                                       }
                                      else
                                       {
                                       }
                                     }
                                   }
                                  else
                                   {
                                   }
                                  case 60:
                                  case 36:
                                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
                                   {
                                    if(_GLF_DEAD(false))
                                     {
                                      if(_GLF_DEAD(false))
                                       return;
                                      barrier();
                                     }
                                   }
                                  else
                                   {
                                   }
                                  break;
                                  case 71:
                                  ;
                                  case 22:
                                  for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                   {
                                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 86738)); _injected_loop_counter --)
                                     {
                                      mat2x3(-983.852, 23.43, -4033.1404, -4.3, -1.3, -8144.2776);
                                     }
                                   }
                                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                   {
                                    if(_GLF_DEAD(false))
                                     {
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      barrier();
                                     }
                                   }
                                  else
                                   {
                                   }
                                  default:
                                  1;
                                 }
                                break;
                                default:
                                1;
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                         }
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            _GLF_SWITCH_1_12v;
                           }
                         }
                        else
                         {
                         }
                        mat2x3 _GLF_SWITCH_1_19v[63];
                        acosh(injectionSwitch);
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                       greaterThanEqual(vec3(-4.3, -75.58, -222.903), (- vec3(3793.6208, 6142.9092, -2.8)));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         else
                          {
                          }
                         while((mat3(85.73, -6.7, -9.2, -2266.5171, 1.3, 9674.3813, -508.058, -8.1, -1.1) == mat3(-28.30, 3.8, -3934.3515, -79.79, -0.7, 42.66, -0.3, -1.1, -918.899)))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            break;
                          }
                        }
                       else
                        {
                        }
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 84:
                           bvec4(false, true, true, false);
                           case 0:
                           case 56:
                           case 52:
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                           break;
                           default:
                           1;
                          }
                        }
                      }
                     case 10:
                     case 35:
                     if(_GLF_DEAD(false))
                      return;
                     break;
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           bool _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) ^ 0))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 12:
                     ivec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                     case 0:
                     case 85:
                     case 94:
                     case 45:
                     case 2:
                     case 92:
                     case 3:
                     case 6:
                     case 26:
                     case 4:
                     if(_GLF_DEAD(false))
                      return;
                     break;
                     case 59:
                     mat3 _GLF_SWITCH_5_3v;
                     case 52:
                     injectionSwitch;
                     default:
                     1;
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             switch(_GLF_SWITCH(0))
              {
               case 0:
               mat3x4(-9.2, 9.1, 7056.1373, -4933.5265, 2.4, 4.2, 8580.2573, -9.6, -918.412, 407.247, 72.63, -2748.2678);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_SWITCH_1_21v)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 56:
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     do
                      {
                       do
                        {
                         bvec3(true, false, false);
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   mat4x3 _GLF_SWITCH_1_23v[22], _GLF_SWITCH_1_24v;
                   case 21:
                   case 75:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                     switch(_GLF_SWITCH(((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0) & -69302)))
                      {
                       case 95:
                       mat2x3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[79];
                       case 12:
                       _GLF_SWITCH_1_24v;
                       case 0:
                       case 78:
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | (0))))); _injected_loop_counter --)
                        {
                         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))))
                          {
                           case 21:
                           GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
                           case 0:
                           case 37:
                           case 1:
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               return;
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           case 57:
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               mat4x2(307.757, -198.787, -7512.7172, -69.69, 797.527, 771.319, 53.23, -3.1);
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                            }
                           break;
                           case 36:
                           ivec2(55342, -73512);
                           case 73:
                           ;
                           default:
                           1;
                          }
                        }
                       break;
                       case 15:
                       mat3(-889.908, 0.6, 8252.3288, 3656.9475, 589.831, -7651.1479, 277.116, -8.9, 5671.2090);
                       case 56:
                       ;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     return;
                    }
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 56:
                       case 78:
                       case 94:
                       case 9:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                       break;
                       case 46:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         ivec2(-45572, 51071);
                        }
                       default:
                       1;
                      }
                    }
                   ;
                   case 47:
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   ;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 0:
                       case 76:
                       case 77:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         mat2x4(-9.3, -94.59, -7.9, 91.95, 8824.9643, -636.281, -1.6, -1.4);
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       break;
                       case 66:
                       step(uintBitsToFloat(uvec2(17657u, 114328u)), injectionSwitch);
                       default:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         1;
                        }
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 19:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      return;
                     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) | ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(int(int(3))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       do
                        {
                         min(ivec3(18229, 76243, -10334), findMSB(ivec3(99968, -76469, 90184)));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   case 63:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       do
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     return;
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                    {
                     (- mat3x2(30.38, 64.71, -87.60, 3968.8247, -933.334, 9.8));
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), int(5)))))
                          {
                           case 0:
                           case 64:
                           case 59:
                           barrier();
                           break;
                           case 65:
                           ivec2(82274, -65794);
                           case 97:
                           ;
                           default:
                           1;
                          }
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     switch(_GLF_SWITCH((0 | 0)))
                      {
                       case 0:
                       ivec2(38867, 77458);
                       case 32:
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                       case 58:
                       case 98:
                       case 27:
                       case 95:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                          {
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         else
                          {
                          }
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (0 ^ 0))))); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 98:
                                 mat2x3 _GLF_SWITCH_5_0v[34];
                                 case 0:
                                 case 18:
                                 case 37:
                                 case 57:
                                 case 13:
                                 case 89:
                                 case 12:
                                 case 8:
                                 case 72:
                                 barrier();
                                 break;
                                 case 41:
                                 mat3x2(mat3(mat3x2(-7.9, -3.8, -8.7, 587.835, -83.59, 481.399)));
                                 default:
                                 1;
                                }
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                        }
                       break;
                       case 8:
                       mat2 _GLF_SWITCH_5_0v[1];
                       default:
                       1;
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   break;
                   case 92:
                   mat3x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                   default:
                   1;
                  }
                }
               _GLF_SWITCH_1_22v;
               if(_GLF_SWITCH_1_22v)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 96:
                   mat3x4(-9985.6529, -1991.6211, -6391.5060, -4363.9155, 9.4, -78.95, -30.66, 5355.2267, -723.556, -73.96, 2979.9869, 0.5);
                   case 0:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 44:
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                    {
                     do
                      {
                       (mat2x4(9743.9103, 46.49, 363.467, -6.8, -59.55, -6.5, -5761.1684, 188.132) * mat4x2(-52.43, 3671.3955, -423.283, 301.107, -2268.7574, 4.7, -5.2, -7.2));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   int _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     do
                      {
                       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    return;
                   case 36:
                   notEqual(bvec4(false, false, false, false), bvec4(false, true, true, true));
                   uvec2 _GLF_SWITCH_1_27v, _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
                   ivec3(53864, -85188, -38974);
                   case 95:
                   case 75:
                   uvec4 _GLF_SWITCH_1_30v, _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v;
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 9:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   mat3x2(67.41, -1754.2630, 9.9, -8.2, 6.6, 844.157);
                   case 45:
                   matrixCompMult(mat3x2(-783.752, -0.1, -95.71, -9254.4845, 212.147, -0.9), (_GLF_SWITCH_1_20v ? mat3x2(6.5, 0.3, 4.7, -164.902, 905.602, -6.2) : mat3x2(-3.3, 6.9, 66.41, 4871.8237, -53.54, -344.121)));
                   case 59:
                   ;
                   break;
                   case 7:
                   uvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                   case 93:
                   mat3x4(-4.0, -4.6, -9839.7983, 53.78, 3997.9884, 2.6, 64.40, -8886.7052, -6.6, -282.369, -1.1, 9.9);
                   default:
                   1;
                  }
                }
               else
                {
                 switch(_GLF_SWITCH((ivec2(-1684, 81254).s & 0)))
                  {
                   case 64:
                   ;
                   case 86:
                   mat4x2 _GLF_SWITCH_6_0v;
                   case 0:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       ivec4(8856, 87671, 99348, -58508);
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        return;
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   case 63:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (((0 ^ 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                    }
                   case 8:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 8:
                       uvec4(71534u, 97886u, 188958u, 137294u);
                       if(_GLF_DEAD(false))
                        barrier();
                       case 69:
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         bitfieldReverse(num_workgroup);
                        }
                       else
                        {
                        }
                       case 0:
                       case 65:
                       case 87:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
                              }
                             return;
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                        }
                       break;
                       default:
                       1;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                          barrier();
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                    }
                   else
                    {
                     ;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                      }
                     return;
                    }
                   case 52:
                   case 28:
                   do
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           return;
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         return;
                        }
                      }
                    }
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 95:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         vec3(-530.819, -3316.7436, -6.5);
                        }
                       case 62:
                       ivec2 _GLF_SWITCH_0_0v;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        continue;
                       case 0:
                       case 12:
                       case 96:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 2:
                           sinh(7902.3329);
                           case 49:
                           ;
                           case 0:
                           case 23:
                           case 37:
                           case 11:
                           case 52:
                           case 59:
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           default:
                           1;
                          }
                        }
                       else
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 89:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           case 26:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 18:
                           case 65:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           break;
                           default:
                           1;
                          }
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         ;
                        }
                       break;
                       case 99:
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           if(_GLF_DEAD(false))
                            continue;
                           case 55:
                           case 10:
                           case 64:
                           case 19:
                           ;
                           break;
                           default:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             1;
                            }
                           else
                            {
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(false))
                        barrier();
                       case 38:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.ts ++);
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        continue;
                       default:
                       if(_GLF_DEAD(false))
                        barrier();
                       1;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 4:
                         case 28:
                         case 6:
                         case 54:
                         case 60:
                         barrier();
                         break;
                         case 37:
                         bvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                         case 95:
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           _injected_loop_counter;
                          }
                         else
                          {
                          }
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 39:
                           case 85:
                           case 95:
                           case 17:
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                           break;
                           default:
                           1;
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   vec2(981.925, 68.30);
                   if(_GLF_DEAD(false))
                    return;
                   vec4(-7.4, -808.894, 9.1, -4.9);
                   case 94:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   case 30:
                   bvec2 _GLF_SWITCH_1_33v;
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   case 40:
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     workgroup_id;
                    }
                   default:
                   1;
                  }
                }
               case 13:
               for(               mat4x3(3.2, -4.1, -3.6, 87.47, -995.490, 542.334, -55.07, 9.5, 4.8, -59.84, -8.9, 2230.3698);
 (vec3(-5.5, -13.39, -4.2) != vec3(615.746, -42.92, -50.61)); ivec3(-77575, -23226, 20004))
                {
                 (bvec2(false, false) == bvec2(true, true));
                 vec2 _GLF_SWITCH_1_34v;
                 vec2 _GLF_SWITCH_1_35v;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(8), int(8))), ~ (~ ((0 << _GLF_IDENTITY(int(8), int(8))))))); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = (1 & (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 78:
                         case 45:
                         case 50:
                         case 11:
                         case 95:
                         return;
                         break;
                         case 18:
                         distance(tan(vec2(4.3, 60.98)), _GLF_SWITCH_1_35v);
                         default:
                         1;
                        }
                      }
                    }
                  }
                 uvec3(73408u, 133168u, 99386u);
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     mat2x4(vec4(-5.0, 83.24, 9521.1990, 488.907), vec4(-47.73, -2.3, 45.35, -4043.1230));
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 0:
                     case 65:
                     case 92:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                     case 98:
                     mat2 _GLF_SWITCH_4_0v;
                     default:
                     1;
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               case 35:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               case 73:
               case 3:
               if(_GLF_DEAD(false))
                barrier();
               ivec4 _GLF_SWITCH_1_36v;
               67663;
               break;
               case 22:
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                return;
               ;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   return;
                  }
                }
               else
                {
                }
               default:
               1;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           ivec2 _GLF_SWITCH_1_37v;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         case 59:
         if(_GLF_DEAD(false))
          barrier();
         (-2.7 + injectionSwitch.y);
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), int(5)))))
              {
               case 81:
               mix(bvec2(true, true), bvec2(false), lessThanEqual(vec2(2565.2441, 6.7), vec2(12.43, -10.36)));
               case 27:
               ;
               case 0:
               case 68:
               case 52:
               case 36:
               case 89:
               case 14:
               case 49:
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               break;
               case 85:
               ;
               case 60:
               ;
               default:
               1;
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
            barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) ^ 0)); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       else
                        {
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     break;
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         case 0:
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 44:
             while(true)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               vec3(-5.0, -5.9, -6396.6592);
               if(_GLF_DEAD(false))
                continue;
               mat3x4 _GLF_SWITCH_4_0v;
               (+ mat4(mat3(5.0, -74.40, -5.0, -9.4, 9707.9461, 0.7, -63.60, -1.0, 12.66)));
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               mat4 _GLF_SWITCH_4_1v[13], _GLF_SWITCH_4_2v;
               int _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[61], _GLF_SWITCH_4_5v[82];
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               ivec4 _GLF_SWITCH_4_6v[72];
              }
             case 58:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               while(isnan(acos(4427.1757)))
                {
                 vec2 _GLF_SWITCH_4_7v[65], _GLF_SWITCH_4_8v;
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     mat4x3(-754.514, 1880.9165, 8646.7469, 8578.8858, 6.6, 5345.3195, 42.09, -5.7, 96.48, -4.2, 689.533, 3296.3928);
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   ;
                  }
                 ;
                 uint _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v;
                 bvec4 _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v[53], _GLF_SWITCH_4_13v[48];
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec2 _GLF_SWITCH_4_14v;
                 if(_GLF_DEAD(false))
                  continue;
                 (456.818 - mat2x4(24.20, 3.8, -3.7, 8.2, -575.512, -3780.3496, -2.7, 8898.5164));
                 bvec3(true, true, false);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             case 0:
             case 63:
             case 31:
             case 36:
             case 98:
             case 79:
             case 88:
             case 33:
             if(_GLF_DEAD(false))
              barrier();
             case 70:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec3(1, 1, 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
              }
             break;
             case 59:
             {
              ;
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
              bvec3 _GLF_SWITCH_4_15v, _GLF_SWITCH_4_16v;
              (mat2(-6.9, 67.13, 86.69, -9404.7537) + mat2(8569.2751, -8.3, -8364.1168, 4.3));
              do
               {
                ivec4(-2237, 16918, 50186, 37039);
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
             }
             case 7:
             (-70515 % (-30580 + 84414));
             default:
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             1;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         case 30:
         case 50:
         atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.x) + 1, 4, 64, 4);
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       subgroupAll(true);
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))))))
                    {
                     case 24:
                     ((_injected_loop_counter & ivec2(-12248, -68523)) & (-42748 * -5595));
                     case 90:
                     ;
                     case 0:
                     case 58:
                     case 59:
                     case 45:
                     case 70:
                     case 55:
                     case 67:
                     case 5:
                     case 37:
                     case 63:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                     break;
                     default:
                     1;
                    }
                  }
                 return;
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(0, min(0, 0))))
            {
             case 87:
             vec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[63];
             case 77:
             true;
             case 0:
             case 14:
             case 79:
             case 17:
             case 99:
             case 24:
             case 91:
             case 85:
             case 78:
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             break;
             case 67:
             bvec3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
             default:
             1;
            }
          }
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               barrier();
              }
            }
          }
         for(int _injected_loop_counter = (73487 & (0 << _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         case 33:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           while(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 2:
               while(true)
                {
                 ;
                 vec3 _GLF_SWITCH_3_0v;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   true;
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mat3x2(-3.5, -9924.7704, 174.467, 437.990, 7996.9686, 6546.7378);
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                    }
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               case 95:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               uvec2 _GLF_SWITCH_3_1v[57];
               case 0:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                break;
               case 85:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               case 70:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   ;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               case 68:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               case 72:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               mat2 _GLF_SWITCH_1_38v[63], _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0)))); _injected_loop_counter --)
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                    }
                  }
                 continue;
                }
               case 99:
               case 1:
               mat2 _GLF_SWITCH_1_41v, _GLF_SWITCH_1_42v;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_12read_2subgroup_idsubgroup_local_idworkgroup_id.y);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                    }
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               break;
               case 27:
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(false));
               default:
               1;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         else
          {
          }
         default:
         do
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 46:
               mat4x3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
               case 56:
               ivec3(93550, 46284, -84308);
               case 0:
               case 77:
               case 16:
               case 55:
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))
                {
                 case 16:
                 mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                 case 97:
                 vec3(2747.0663, 17.61, 196.712);
                 case 0:
                 case 32:
                 case 12:
                 case 45:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 case 20:
                 case 70:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 case 57:
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 break;
                 case 44:
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 mat2(mat4x2(1450.4485, 5.3, 15.83, 0.2, -943.741, -4.7, 1.9, 793.833));
                 case 13:
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH((62486 & 0)))
                    {
                     case 0:
                     case 66:
                     case 97:
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                     default:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       1;
                      }
                    }
                  }
                 mat3(706.569, -817.798, 191.977, 6.4, 9.7, 74.83, -2.2, 3834.3322, 54.51);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 default:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 1;
                }
               break;
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 79:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 20:
             if(_GLF_DEAD(false))
              barrier();
             case 95:
             1;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             break;
             default:
             1;
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
}
