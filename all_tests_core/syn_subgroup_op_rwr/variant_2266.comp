#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))) || _GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))) || false)), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), false)), (bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), false))) && true))))) || false)), true, true, false))), true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(1.1))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(63.13, -39.80)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2((false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)), bvec2(bvec3(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, false))), false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(5.7)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))))) - 0u), 0u, 1u)) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, 0u ^ (_GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ~ (~ ((gl_WorkGroupSize.x) - 0u))))))) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u)))) | 0u), ~ (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))))) - 0u), 0u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))), (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u)))) | 0u, ((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))), (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u)))) | 0u) | 0u), ~ (~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))), (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize)))))).x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u)))) | 0u, ((_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))), (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))), (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))), (gl_WorkGroupSize.x) - 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u)))), 0u, 1u)) << uvec3(0u, 0u, 0u))))))) + 0u)) | 0u) | 0u)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.6)), bool(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)))) * workgroup_id) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), (0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u))) << 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), (0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u))) << 0u), 1u)))))))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)))) * workgroup_id) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), (0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u))) << 0u), 1u), ~ (~ (uvec2(_GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u)), (0u | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u))) << 0u), 1u)))))))) >> 0u)))) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) - 0u), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_size)))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u & 1u) * (subgroup_size))) << 0u), 0u | (subgroup_id * subgroup_size)))))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) - 0u), 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((subgroup_size)))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (1u & 1u) * (subgroup_size))) << 0u), 0u | (subgroup_id * subgroup_size)))))) + subgroup_local_id) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), buf[virtual_gid]))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956), _GLF_IDENTITY((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956)), ((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956))) - 0), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956)), ((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956))) - 0), 0)), (int(ivec2(_GLF_IDENTITY((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956)), ((false ? _GLF_FUZZED(63448) : true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956))) - 0), 0))) << 0)) << 0))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))), (clamp(_GLF_IDENTITY(4, (4) - (1 ^ _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(683) : 1))))))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))) | 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (0 | 0)), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 | (_GLF_IDENTITY(4, clamp(4, 4, 4))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)) : _GLF_IDENTITY(4, min(4, 4)))), 4)) : _GLF_FUZZED(72956))))))), int(ivec4(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (72956) - 0))))), (min(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, (4) | (4)), 4)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (_GLF_IDENTITY(72956, min(72956, 72956))) - 0)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (_GLF_IDENTITY(72956, min(72956, 72956))) - 0))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (_GLF_IDENTITY(72956, min(72956, 72956))) - 0)), clamp(true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (_GLF_IDENTITY(72956, min(72956, 72956))) - 0)), true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (_GLF_IDENTITY(72956, min(72956, 72956))) - 0)), true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, (_GLF_IDENTITY(72956, min(72956, 72956))) - 0)))))))))) - 0)))), 0, _GLF_IDENTITY(0, 1 * (0)), 1))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(72956), (_GLF_FUZZED(72956)) | (1 ^ 1)))))))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)), clamp(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 1 * (4)), 4)))), clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))) | 0)), min(min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-20091) : 4)), 4, 4)))), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((63904 ^ 61448)) : 4)))), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), (min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))) / 1)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) ^ 0)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (true ? clamp(4, 4, 4) : _GLF_FUZZED(54082)))) : _GLF_FUZZED(72956))), (false ? _GLF_FUZZED(-40272) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), int(ivec3(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))), 0, 0)))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, ~ (~ (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) | (1 ^ 1))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), clamp(~ (~ (4)), ~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), int(ivec2(~ (~ (4)), 1)))))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))))), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), ~ (_GLF_IDENTITY(~ (clamp(4, 4, 4)), (~ (clamp(4, 4, 4))) >> 0)))), _GLF_IDENTITY((true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)) : 4)), _GLF_IDENTITY(4, (4) ^ 0))) : _GLF_FUZZED(72956)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)) : 4)), _GLF_IDENTITY(4, (4) ^ 0))) : _GLF_FUZZED(72956)), (true ? (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)) : 4)), _GLF_IDENTITY(4, (4) ^ 0))) : _GLF_FUZZED(72956)) : _GLF_FUZZED(90069))), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)) : 4)), _GLF_IDENTITY(4, (4) ^ 0))) : _GLF_FUZZED(72956))))))))), int(ivec4(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (false ? _GLF_FUZZED(-71545) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))), 0, 0, 1))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))), min(0 ^ (_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))), 0 ^ (_GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) ^ _GLF_IDENTITY(0, (0) / 1))) / 1)) << 0), 4, 4)) : _GLF_FUZZED(72956), (false ? _GLF_FUZZED(56019) : true ? _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) ^ _GLF_IDENTITY(0, (0) / 1))) / 1)) << 0), 4, 4)) : _GLF_FUZZED(72956))))))))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (4)), 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) >> 0))), (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), clamp(4, 4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(ivec4(clamp(4, 4, 4), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-73539) : 0)))), (0 << _GLF_IDENTITY(int(0), int(0))), 1)))) : _GLF_FUZZED(72956))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, _GLF_IDENTITY(1, ~ (~ (1))))))))), (clamp(4, 4, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))))) >> 0)), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << (0 ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << (0 ^ 0))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << (0 ^ 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << (0 ^ 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) << (0 ^ 0)))))) ^ 0), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), max(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-73457, 8614, _GLF_IDENTITY(88178, ~ (~ (88178))))), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), (false ? _GLF_FUZZED(-2881) : _GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)))), 0))), _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)))))) : 4)), 4)) : _GLF_FUZZED(72956))))))), int(ivec4(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4))))) * 1)) >> 0)) * 1))), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-33531) : 4)), 4)), 4)), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))), 0, 0, 1))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)), (true ? _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), 1 * (clamp(4, 4, 4)))) | (clamp(4, 4, 4)))) : _GLF_FUZZED(72956)))))), clamp(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))))), min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))))), _GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))))), (false ? _GLF_FUZZED(90029) : _GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), 0 + (int(4))))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (false ? _GLF_FUZZED(-2910) : _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))))), 1 * _GLF_IDENTITY((min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))), int(int(_GLF_IDENTITY((min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))), 0 ^ ((min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) - 0), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, int(int(4))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956)))))))))))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) ^ 0))), _GLF_IDENTITY(4, min(4, 4)))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), ~ (_GLF_IDENTITY(~ (clamp(4, 4, 4)), (~ (clamp(4, 4, 4))) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)) : _GLF_FUZZED(72956)))))), (min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) ^ 0))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))))), min(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(4, 4)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, (4) + 0))) : _GLF_FUZZED(72956))))))) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, 1)), (false ? _GLF_FUZZED(-99685) : _GLF_IDENTITY(int(ivec4(4, 0, 1, 1)), max(int(ivec4(4, 0, 1, 1)), int(ivec4(4, 0, 1, 1)))))))) ^ 0), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) - 0))), 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (1 ^ 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (1 ^ 1)), (false ? _GLF_FUZZED(42364) : _GLF_IDENTITY(4, (4) - (1 ^ 1)))), _GLF_IDENTITY(4, (4) - (1 ^ 1)))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))), (false ? _GLF_FUZZED(-48731) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (1 ^ 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (1 ^ 1)), (false ? _GLF_FUZZED(42364) : _GLF_IDENTITY(4, (4) - (1 ^ 1)))), _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ 1)))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), int(ivec3(4, 0, 1))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), (min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) >> 0) - (1 ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-87287))), ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), min(min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1)))))), (min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - (1 ^ 1)), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, int(ivec3(4, 0, 1))))))) + 0)))))))), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), (0 << _GLF_IDENTITY(int(1), int(1)))), (ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), (0 << _GLF_IDENTITY(int(1), int(1))))) / ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0), max(ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0), ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0)))), min(int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0), max(ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0), ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0)))), int(_GLF_IDENTITY(ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0), max(ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0), ivec3(_GLF_FUZZED(bitfieldExtract(-73457, 8614, 88178)), 1, 0))))))) : 4)), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(15079, (15079) | (15079))) : 4, (false ? _GLF_FUZZED((- 34209)) : _GLF_IDENTITY(false ? _GLF_FUZZED(15079) : 4, max(false ? _GLF_FUZZED(15079) : 4, _GLF_IDENTITY(false ? _GLF_FUZZED(15079) : 4, ~ (~ (false ? _GLF_FUZZED(15079) : 4)))))))))) ^ 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(15079, (15079) | (15079))) : 4, (false ? _GLF_FUZZED((- 34209)) : _GLF_IDENTITY(false ? _GLF_FUZZED(15079) : 4, max(false ? _GLF_FUZZED(15079) : 4, _GLF_IDENTITY(false ? _GLF_FUZZED(15079) : 4, ~ (~ (false ? _GLF_FUZZED(15079) : 4)))))))))) ^ 0))) ^ (0 << _GLF_IDENTITY(int(3), int(3))))))) : _GLF_FUZZED(72956))))))), int(ivec4(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0)) - 0)))), 4, 4)))), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2395) : _GLF_IDENTITY(4, (4) << 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2395) : _GLF_IDENTITY(4, (4) << 0)))), int(ivec3(~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(2395) : _GLF_IDENTITY(4, (4) << 0)))), 1, _GLF_IDENTITY(0, int(ivec2(0, 1)))))))), 4, 4)) : _GLF_FUZZED(72956))))))), 0, 0, 1))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, 1), (ivec3(4, 1, 1)) - ivec3(0, 0, 0)))))), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (true ? _GLF_IDENTITY(4, 1 * (4)) : _GLF_FUZZED(-7732)))))) | 0), clamp(4, 4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(72956, max(72956, 72956))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(4, 4)))), min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(72956))))))), (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(4, 4)))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(41964))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(4, 4, 4))))) : _GLF_FUZZED(72956)))))))) - 0))))), 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(34258))), _GLF_IDENTITY(0, int(ivec2(0, 0))), 0)));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u) + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(0u, 0u | (0u)) ^ (read_1 + 1))), 4, 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size, false || _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u) < subgroup_size)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), clamp(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) << 0u), read_2)), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) << 0u, ((read_2) << 0u) | 0u)), read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), (true ? _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)) : _GLF_FUZZED(next_virtual_gid)))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ 0u))), read_2, read_2))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), clamp(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u), read_2)), _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) << 0u, clamp((read_2) << 0u, (read_2) << 0u, (read_2) << 0u))), read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u), read_2)), (_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u))), _GLF_IDENTITY(read_2, (read_2) << 0u), read_2))) ^ 0u))), read_2, read_2)))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) + 0u), _GLF_IDENTITY(uint(5u), uint(5u)))))) + 1, _GLF_IDENTITY(4, (4) >> 0), 64, 4);
   subgroupAll(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(! _GLF_IDENTITY((false), false || ((false))), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), false, false, true))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), true), false)))))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.83)), bool(false))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) * 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), (true ? (read_2) : _GLF_FUZZED(read_2)))) | 0u))), read_2, read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
}
