#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat3 _f0;
 uvec2 _f1;
 bvec4 _f2;
 vec2 _f3;
 mat4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat3 _f1;
 mat4 _f2;
 ivec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.97))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(34.99)), bool(_GLF_IDENTITY(false, false || (false))))) > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))), false))))), true)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-85.53)), bool(false))))), true), false, false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))))))), false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), true), false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))), true), false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)), true, false))), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false))))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true), false, false))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), false, true)))))))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(39.99)), float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(-151.933)), bool(false))), 1.0, 0.0, sqrt(1.0))))), bool(true))), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)))))))) > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))), mix(vec2(_GLF_FUZZED(-572.391), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))))[0], _GLF_FUZZED(-32.45)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))))).y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), false, true)))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-2.1, -651.177, -2.9)) : vec3(1.0, 0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)))))))) > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), false, true)))) && true)))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0))))), min(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(61.19), max(_GLF_FUZZED(61.19), _GLF_FUZZED(61.19)))), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0))))), float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0) + (mat3x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(61.19)), bool(false)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0)))))))) > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), false, true))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), clamp(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), vec2(mat2(vec2(vec4(injectionSwitch, 0.0, sin(0.0))), 0.0, 1.0))), vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, sin(0.0))), vec2(vec4(injectionSwitch, 0.0, sin(0.0)))))).y)), false, true)))) && true)) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-600.864, -5.6)))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-600.864, -5.6)), clamp(_GLF_FUZZED(vec2(-600.864, -5.6)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-600.864, -5.6)), clamp(_GLF_FUZZED(vec2(-600.864, -5.6)), _GLF_FUZZED(vec2(-600.864, -5.6)), _GLF_FUZZED(vec2(-600.864, -5.6)))), _GLF_FUZZED(vec2(-600.864, -5.6)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-600.864, -5.6)))).y)))), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-600.864, -5.6)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-600.864, -5.6)))).y)))), true))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0)), transpose(transpose(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), cos(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0))))))))).y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : uint(gl_NumWorkGroups.x)))), 1u * (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : uint(gl_NumWorkGroups.x))))))), uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : uint(gl_NumWorkGroups.x)))), 1u * (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : uint(gl_NumWorkGroups.x)))))))))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)))))) : _GLF_FUZZED(subgroup_local_id)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), uint(uvec3(~ (gl_NumWorkGroups.x), 0u, 0u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))))))) / 1u)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id))), gl_NumWorkGroups.x)) >> 0u)), gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_local_id))))))) / 1u)) : _GLF_FUZZED(subgroup_local_id)))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))) - 0u))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)) ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), min(gl_NumWorkGroups, gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))))).x) : _GLF_FUZZED(subgroup_local_id)))))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_ZERO(0.0, injectionSwitch.x))))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x) : _GLF_FUZZED(subgroup_local_id)))) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))))))) >> 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id)), ((true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))) | ((true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(subgroup_local_id), 1u, 0u, 1u)), uint(uvec4(uint(uvec4(_GLF_FUZZED(subgroup_local_id), 1u, 0u, 1u)), 1u, 1u, 0u))))))) >> 0u))) + 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))).x) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (true ? ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x))) : _GLF_FUZZED(subgroup_local_id)))) >> 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))))).x) : _GLF_FUZZED(subgroup_local_id)), ((true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))))).x) : _GLF_FUZZED(subgroup_local_id))) << 0u)), (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), (gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), (0u) - 0u))), 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id)), (_GLF_IDENTITY((true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id)), ~ (~ ((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), clamp((gl_NumWorkGroups), (gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))))) >> uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), clamp(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY(0u, (0u) - 0u)))))) >> 0u), 0u, 0u)).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u)).x) * 1u)) : _GLF_FUZZED(subgroup_local_id)))))) - 0u))) >> 0u))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u + (gl_NumWorkGroups.x))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u)))), 0u + ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u), 0u + (gl_NumWorkGroups.x))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u)))))), (true ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_NumWorkGroups.x), ~ (_GLF_IDENTITY(~ (~ (gl_NumWorkGroups.x)), (~ (~ (gl_NumWorkGroups.x))) - 0u))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x) : _GLF_FUZZED(subgroup_local_id)))) >> 0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id ^ subgroup_size), (_GLF_IDENTITY((subgroup_local_id ^ subgroup_size), max((subgroup_local_id ^ subgroup_size), (subgroup_local_id ^ subgroup_size)))) << 0u)))), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), _GLF_IDENTITY(_GLF_IDENTITY((true ? ~ (gl_NumWorkGroups.x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id)))), min((true ? ~ (gl_NumWorkGroups.x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY((true ? ~ (gl_NumWorkGroups.x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id)))), min((true ? ~ (gl_NumWorkGroups.x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id)))), (true ? ~ (gl_NumWorkGroups.x) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id)))))))), (_GLF_IDENTITY((true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id)), min((_GLF_IDENTITY(true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id), uint(uvec3(true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id), 1u, 0u)))), (true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id))))) | (_GLF_IDENTITY((true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0u ^ ((true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id))), min(0u ^ ((true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id))), 0u ^ ((true ? ~ (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id)))))))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))) - 0u)) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) * 1.0)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(41.42, -8.3)) : injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(41.42, -8.3)) : injectionSwitch)).y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(! ((false)), true, true))))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))) && true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))) && true))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY((819.492 / 6854.0354), mix(float(_GLF_IDENTITY((819.492 / 6854.0354), (false ? _GLF_FUZZED(-3.7) : (819.492 / 6854.0354)))), float(_GLF_FUZZED(-98.54)), bool(false))))), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(11.23), _GLF_FUZZED(-204.236)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0)), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))))))))).y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(42.58), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, false))), injectionSwitch)).y))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat3(1.0), uvec2(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u)))))), bvec4(true), vec2(1.0), mat4(1.0), mat4x3(1.0)), mat3(1.0), mat4(1.0), ivec3(1), true), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), subgroup_size)), 0u, 1u)))))))) | (subgroup_size))) ^ 0u) + subgroup_local_id);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(! _GLF_IDENTITY((false), false || ((false)))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))) + vec2(0.0, 0.0)).x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))) + vec2(0.0, 0.0)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))) + vec2(0.0, 0.0)).x < injectionSwitch.y) || false)) && true)), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), bool(bvec4(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), true, false, true)))) || false))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true))))))))))), bool(bool(! (false)))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))))), false || (bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))))))))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)))), true))))))))) && true, ((! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)))), true))))))))) && true) || false)), bool(bool(! (false)))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)))))), true))))))))) && true), bool(bool(! (false))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))), true))))))))) && true), bool(bool(! (false)))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), false, true, true)))), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (bool(false)))))))))))), true)))))))))) && true), bool(bool(! (false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec4(bool(bool((false))), false, true, true)))), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true)))))))))) && true), bool(bool(! (false)))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true)))))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true))))))))))) && true), bool(bool(! (false))))))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))) && true), bool(bool(! (false)))))))) && true)), true, false, false)), true && (bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))) && true), bool(bool(! (false)))))))), true, false, false))))), false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec2(! (false), true))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false))))))))), bool(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), false, false, true)))), bool(bool(! (_GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), false, false, true)))))))))), true))), true, true)))))))))) && true), bool(bool(! (false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))))))) && true), bool(bool(! (false)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, true, true, true)))) || false))))))))))))) && true), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, true, true, true)))) || false), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, true, true, true)))) || false)))))))))))))))) && true), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false)))))))), true, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), bool(bvec2(! (false), true)))) && true, bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), true)))) && true, true, true, true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), bool(bvec2(! (false), true)))) && true, bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), true)))) && true, true, true, true)))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true), bool(bvec2(! (false), true)))) && true, bool(bvec4((_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), true)))) && true, true, true, true))))) || false), false, false, true))) || false))))))))))))) && true), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false)))))), true, true), false)))))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y) || false)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(4.2, -482.728, 1936.8991, 7.1).y)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))))))) || false)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), true, true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u))) - (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))), 0u, 0u)))), max(uint(uvec2(subgroup_id * subgroup_size, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) ^ 0u)))))), uint(uvec2(subgroup_id * subgroup_size, 0u))))), (subgroup_id * subgroup_size) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), max(uint(uvec2(subgroup_id * subgroup_size, 0u)), uint(uvec2(subgroup_id * subgroup_size, 0u))))), (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)) * subgroup_size) ^ 0u))) * (1u | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) >> _GLF_IDENTITY(0u, (0u) | (0u)))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 0))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (1u & 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u)))) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | _GLF_IDENTITY(0u, 1u * (0u))) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u) | ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) | 0u, ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1))) >> 0u)))) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_2.virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, int(ivec3(_GLF_IDENTITY((0) >> 0, (_GLF_IDENTITY((0), (0 >> _GLF_IDENTITY(int(2), int(2))) + ((0))) >> 0) | (_GLF_IDENTITY(_GLF_IDENTITY((0) >> 0, min((0) >> 0, (0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), int(ivec4((0), 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1))), _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ((0)) << 0))))) >> 0, (true ? _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (true ? (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(-89097)))), 1)), (int(ivec4((0), 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (true ? (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)) : _GLF_FUZZED(-89097)))), 1))) + 0)), _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ((0)) << 0))))) >> 0 : _GLF_FUZZED(-34225)))) | (_GLF_IDENTITY((0), ~ (~ ((0)))) >> 0)))), 1, 1)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY((false), ((false)) || false)))) && _GLF_IDENTITY(true, false || (true))) || false))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(4.0) : injectionSwitch[1])))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(4.0) : injectionSwitch[1])))))).y) - 0.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), true), false, _GLF_IDENTITY(true, ! (! (true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true), false, true)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-94610) : _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), 0 ^ (int(1)))))))), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_2.virtual_gid], _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, min(4, 4)), 1))), _GLF_IDENTITY(64, 0 | (64)), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! _GLF_IDENTITY((false), true && ((false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u) | (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u) | (subgroup_local_id)))))) + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(bool(bvec2((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), true)), bool(bvec3(bool(bvec2((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, (0 >> _GLF_IDENTITY(int(6), int(6)))))) < subgroup_size), true)), true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + _GLF_IDENTITY(0u, (0u) | (0u))) < subgroup_size)))), _GLF_IDENTITY(bool(bvec3(! (subgroup_local_id + 1 < subgroup_size), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), false || (bool(_GLF_IDENTITY(true, ! (! (true)))))), (bool(true)) || false))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false))) || false)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((true)), (! ((true))) || false)), false || ((_GLF_IDENTITY(! ((true)), (! ((true))) || false)))))))), _GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false)))))))) || false)))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)), bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)), false, true))))), false, false, false))) && (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY((bool(true)), ((bool(true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))) && true))), (bool(true)) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false))))) || false)), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), (bool(true)) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, ! (! (true))))), (! ((true))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false))))), (_GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false)))))) && true))))))), bool(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, ! (! (true))))), (! ((true))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false))))), (_GLF_IDENTITY((bool(true)) || false, ! (_GLF_IDENTITY(! ((bool(true)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(true)) || false)))))) && true))))))), false))) || false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)))), false, false, false))) && (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < subgroup_size), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (true ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(6.1, -1.4, -1056.3940, -36.62)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0)))))), mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), 0.0, exp(0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || ((! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (true ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(6.1, -1.4, -1056.3940, -36.62)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0)))))), mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), 0.0, exp(0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY((! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (true ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(6.1, -1.4, -1056.3940, -36.62)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0)))))), mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.5))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), exp(0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || ((! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (true ? normalize(vec4(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec4(6.1, -1.4, -1056.3940, -36.62)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0)))))), mix(float(_GLF_FUZZED(-2.0)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), max(float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, exp(0.0))), float(mat2x3(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), 0.0, exp(0.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true, false)))) || false)))))), (bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))) || false))), false, true))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) || false)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size, true, true, false)), (bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size, true, true, false))) && true)))))) || false))))))))), (false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false)))) && true)), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) || false)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? _GLF_FUZZED(read_2) : subgroup_local_id + _GLF_IDENTITY(1, (1) | 0))))))) < subgroup_size) || false))), (false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) || false)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.8)), bool(false))))) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false))), (false || (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false)), false || (! (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : subgroup_local_id + 1)))))) < subgroup_size) || false)))))) && true)))))), ! (! (! (subgroup_local_id + 1 < subgroup_size)))), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : 1u))))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, _GLF_IDENTITY(1u, 1u * (1u))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), uvec3(read_1, 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_1, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u | 0u), ((0u | 0u)) >> 0u) | (0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8552.7698)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), injectionSwitch.x)))))), min(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4(read_1, 1u, _GLF_IDENTITY(0u, (0u) * 1u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, sqrt(1.0), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(cos(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), dot(vec4(cos(0.0), length(vec2(0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 0.0, 0.0))).x) * 1.0)))))))))), uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(123784u, 136650u, 25962u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_FUZZED(uvec3(123784u, 136650u, 25962u)), (_GLF_FUZZED(uvec3(123784u, 136650u, 25962u))) | (_GLF_FUZZED(uvec3(123784u, 136650u, 25962u)))), 1u)), (uvec3(uvec4(_GLF_IDENTITY(_GLF_FUZZED(uvec3(123784u, 136650u, 25962u)), (_GLF_FUZZED(uvec3(123784u, 136650u, 25962u))) | (_GLF_FUZZED(uvec3(123784u, 136650u, 25962u)))), 1u))) | uvec3(0u, 0u, 0u))) : (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - 0u), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), ((_GLF_IDENTITY(0u, (0u) << 0u))) << 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(0u, (0u) << 0u))))))), 0u, 0u, 0u) | (uvec4(read_1, 1u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sin(0.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.6))))))))), (true ? uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sin(0.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.6))))))))) : _GLF_FUZZED(subgroup_local_id))))))), min(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u) | (uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, 1u * (read_1)), 1u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(97675u))))), (0u) / 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u) | (uvec4(read_1, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 1u, 1u), uvec3(read_1, 1u, _GLF_IDENTITY(1u, (1u) << 0u)), uvec3(read_1, 1u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), uvec3(uvec4(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), 1u))))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), uvec3(uvec4(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), 1u))))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))), 1u)), min(uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), uvec3(uvec4(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), 1u))))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))), 1u)), uvec3(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), uvec3(uvec4(((_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))))) >> uvec3(0u, 0u, 0u), 1u))))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))), 1u))))) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(94523u, 31612u, _GLF_IDENTITY(43315u, (true ? _GLF_IDENTITY(43315u, (43315u) / 1u) : _GLF_FUZZED(subgroup_size)))))))) << uvec3(0u, 0u, 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(94523u, 31612u, _GLF_IDENTITY(43315u, (true ? _GLF_IDENTITY(43315u, (43315u) / 1u) : _GLF_FUZZED(subgroup_size)))))))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(94523u, 31612u, _GLF_IDENTITY(43315u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(43315u, (_GLF_IDENTITY(43315u, 1u * (43315u))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(43315u, (_GLF_IDENTITY(43315u, 1u * (43315u))) / 1u), uint(uvec2(_GLF_IDENTITY(43315u, (_GLF_IDENTITY(43315u, 1u * (43315u))) / 1u), 1u))), _GLF_IDENTITY(43315u, (_GLF_IDENTITY(43315u, 1u * (43315u))) / 1u))) : _GLF_FUZZED(subgroup_size)))))))) << uvec3(0u, 0u, 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), (uvec3(read_1, 1u, 1u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))) | _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), 0u, 0u)) ^ uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(94523u, 31612u, _GLF_IDENTITY(43315u, (true ? _GLF_IDENTITY(43315u, (43315u) / 1u) : _GLF_FUZZED(subgroup_size)))))))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(41969u, 53477u, 120645u)) : uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_1) : read_1)), read_1)), 1u, 1u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))), (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_1))))))) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(94523u, 31612u, _GLF_IDENTITY(43315u, (true ? _GLF_IDENTITY(43315u, (43315u) / 1u) : _GLF_FUZZED(subgroup_size)))))))) << uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))) * (uvec3(read_1, 1u, 1u))), _GLF_IDENTITY(clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)), (clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) / 1u))), 1u)), 1u), uvec3(read_1, 1u, 1u))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (uvec3(5u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))), 1u), (uvec4(_GLF_IDENTITY(clamp(uvec3(read_1, 1u, 1u), _GLF_IDENTITY(uvec3(read_1, 1u, 1u), uvec3(uvec3(uvec3(read_1, 1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), min(uint(_GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) * 1u))))))))), uvec3(read_1, 1u, 1u)), (clamp(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), (_GLF_IDENTITY(uvec3(read_1, 1u, 1u), ~ (~ (uvec3(read_1, 1u, 1u))))) / uvec3(1u, 1u, 1u)), uvec3(read_1, _GLF_IDENTITY(1u, 0u | (1u)), 1u), uvec3(read_1, 1u, 1u))) ^ uvec3(0u, 0u, 0u)), 1u)) * uvec4(1u, 1u, 1u, 1u))))))), (0u | 0u) ^ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(read_1, 1u, 1u))), _GLF_IDENTITY(clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u), uvec3(_GLF_IDENTITY(read_1, (read_1) / 1u), 1u, 1u)), (clamp(uvec3(read_1, 1u, _GLF_IDENTITY(1u, 0u + (1u))), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (uvec3(5u)) << uvec3(0u, 0u, 0u)))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))), 1u), (uvec4(_GLF_IDENTITY(clamp(uvec3(read_1, 1u, 1u), _GLF_IDENTITY(uvec3(read_1, 1u, 1u), uvec3(uvec3(uvec3(read_1, 1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), min(uint(_GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) * 1u))))))))), _GLF_IDENTITY(uvec3(read_1, 1u, 1u), min(uvec3(read_1, 1u, 1u), _GLF_IDENTITY(uvec3(read_1, 1u, 1u), uvec3(0u, 0u, 0u) + (uvec3(read_1, 1u, 1u)))))), (clamp(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), (uvec3(read_1, 1u, 1u)) / uvec3(1u, 1u, 1u)), uvec3(read_1, _GLF_IDENTITY(1u, 0u | (1u)), 1u), uvec3(read_1, 1u, 1u))) ^ uvec3(0u, 0u, 0u)), 1u)) * uvec4(1u, 1u, 1u, 1u))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), uint(uvec4(1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(154748u)))))), 1u, 1u))))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u | (1u)), 1u, 1u)), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_id))))))) | _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((1u)), max(((1u)), ((1u)))), ~ (~ (~ ((1u)))))))), 1u, 1u))) - 0u), 1u), uvec3(read_1, _GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))), clamp(uint(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))), uvec3(read_1, 1u, 1u), uvec3(read_1, 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(read_1, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), max(0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (uint(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) << 0u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(clamp(0u, 0u, 0u), (_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) - 0u)) ^ 0u))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))), clamp(_GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), _GLF_IDENTITY(1u, uint(uvec2(1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))))))))), _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), (0u | (1u)) - 0u)) << 0u)))), 1u), uvec3(read_1, 1u, 1u)))), uint(_GLF_IDENTITY(uvec3(read_1, 1u, 1u), clamp(uvec3(read_1, 1u, 1u), uvec3(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(read_1, (read_1) | 0u))), 1u, 1u), uvec3(read_1, 1u, 1u))))))))) + 1 == read_2), uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (read_2))), (uint(read_1 + 1 == read_2)) | (uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2))), uint(read_1 + 1 == read_2))) + 1, _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64) | (64), min((64) | (64), (64) | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, int(ivec3(64, 0, 1))), 64))) << 0)))), (_GLF_IDENTITY((64) | (64), min((64) | (64), (64) | (64)))) ^ (0 << _GLF_IDENTITY(int(3), int(3))))), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((false)) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY((false), ((false)) || false)), false)), ! (! (bool(bvec2(bool(_GLF_IDENTITY((false), ((false)) || false)), false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ((false)) || false), false), false))))))), _GLF_IDENTITY(false, (false) && true))))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false) && (! (false)), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))) || false) && (! (false)))))))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, ! (! (true))), true))) && true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))) && true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-12.68, 436.029)))).y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))), max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6))))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(14.88), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(14.88)))), vec2(_GLF_FUZZED(1.2), (injectionSwitch)[1]), bvec2(false, true))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(tan(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec4(-4344.8174, -13.62, -55.08, -919.884).gr) : tan(vec2(0.0, 0.0)))) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))).x)) > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-2201.6922, 7.6)), (_GLF_FUZZED(vec2(-2201.6922, 7.6))) * vec2(1.0, 1.0)))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), false || (! (_GLF_IDENTITY(true, bool(bool(true))))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))) && (! (! (_GLF_IDENTITY(true, bool(bool(true)))))))) ? _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) : _GLF_FUZZED(vec2(-2201.6922, 7.6)))).x > injectionSwitch.y)))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * _GLF_IDENTITY(((injectionSwitch)[0]), float(mat3x2(((injectionSwitch)[0]), 1.0, 0.0, 1.0, 0.0, 1.0)))), _GLF_FUZZED(-45.68)), vec2(_GLF_FUZZED(86.37), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[0], round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * ((injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(-45.68, mix(float(-45.68), float(_GLF_FUZZED(3033.1306)), bool(false))))), vec2(_GLF_FUZZED(86.37), (injectionSwitch)[1]), bvec2(false, true))).y))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))) || false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, true, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), ! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || (bool(_GLF_DEAD(false)))))), true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(_GLF_DEAD(false)))))))))))), false || (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), ! (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(_GLF_DEAD(false))))))), bool(bvec2(true && ((bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (bool(_GLF_DEAD(false))))))), true)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1300.5826, 9378.3563)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false)))))))
    return;
   return;
  }
}
