#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-44.81)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-44.81)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))))))) && true))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 1u, 1u, (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec4(8u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uint(uint(uvec4(_GLF_IDENTITY(8u, 0u | (_GLF_IDENTITY(8u, (8u) | 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))))))), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(141624u, 172715u, 105291u))))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(1u, (1u) << (1u ^ 1u)), 1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), (false ? _GLF_FUZZED((packSnorm4x8(vec4(5938.2926, _GLF_IDENTITY(-3485.9765, mix(float(_GLF_FUZZED(1.5)), float(_GLF_IDENTITY(-3485.9765, max(-3485.9765, -3485.9765))), bool(true))), -2.0, _GLF_IDENTITY(1974.8964, max(1974.8964, 1974.8964)))) / subgroup_size)) : (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) | (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x)))) - 0u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), 0u + (_GLF_IDENTITY((1u), clamp((1u), (1u), (1u))))))) / 1u), max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), 0u ^ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), ((1u)) | ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(1u, (1u) << 0u))))))) >> 0u)), (~ (_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), ((1u)) | ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (1u)), _GLF_IDENTITY(1u, (1u) << 0u))))))) >> 0u))) << 0u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec4((1u), 0u, 1u, (1u & 1u)), (uvec4((1u), 0u, 1u, (1u & 1u))) | (uvec4((1u), 0u, 1u, (1u & 1u))))))) | ((1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u, 1u))))))) / 1u) : _GLF_FUZZED(subgroup_local_id))))), 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (false ? _GLF_FUZZED(subgroup_local_id) : 0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) : uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)).x, 1u, 1u, (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, _GLF_IDENTITY(uint(uvec4(8u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uint(uint(uvec4(_GLF_IDENTITY(8u, 0u | (_GLF_IDENTITY(8u, (8u) | 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (0u) * 1u))))))))))), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(1u, (1u) << (1u ^ 1u)), 1u, _GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(_GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u)))))), (true ? (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))) : _GLF_FUZZED(subgroup_id))), (false ? _GLF_FUZZED((packSnorm4x8(vec4(5938.2926, _GLF_IDENTITY(-3485.9765, mix(float(_GLF_FUZZED(1.5)), float(_GLF_IDENTITY(-3485.9765, max(-3485.9765, -3485.9765))), bool(true))), -2.0, 1974.8964)) / subgroup_size)) : (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))) | (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(gl_WorkGroupSize.x))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), ~ (_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), ((1u)) | _GLF_IDENTITY(((1u)), ~ (~ (_GLF_IDENTITY(((1u)), ~ (~ (((1u)))))))))) >> 0u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false)))))) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) * _GLF_IDENTITY(1u, (1u) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u, 1u))))))) / 1u) : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), ~ (_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), ((1u)) | _GLF_IDENTITY(((1u)), ~ (~ (_GLF_IDENTITY(((1u)), ~ (~ (((1u)))))))))) >> 0u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false)))))) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) * _GLF_IDENTITY(1u, (1u) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u, 1u))))))) / 1u) : _GLF_FUZZED(subgroup_local_id)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), ~ (_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), ((1u)) | _GLF_IDENTITY(((1u)), ~ (~ (_GLF_IDENTITY(((1u)), ~ (~ (((1u)))))))))) >> 0u)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false)))))) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), 1u * ((~ (1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) * _GLF_IDENTITY(1u, (1u) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 1u, 1u))))))) / 1u) : _GLF_FUZZED(subgroup_local_id))))))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED((150284u | uvec3(166707u, 197215u, 19616u))) : gl_WorkGroupID)), (gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), uint(3u)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) / 1u))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), 0u + ((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), uint(uvec2(~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((~ uvec2(85529u, 131327u).x)))))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), 0u + ((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), uint(uvec2(~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((~ uvec2(85529u, 131327u).x)))))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u))))), (~ ((_GLF_IDENTITY(~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), 0u + ((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), uint(uvec2(~ (~ (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED((~ uvec2(85529u, 131327u).x)))))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_local_id) : (0u))) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), 0u)))))) << 0u))))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), ((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u))) - 0u), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (1u))))), (_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), clamp(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) + (1u ^ 1u)), uint(3u)))))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u)))))))))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), clamp(_GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), _GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))), ~ (~ ((0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(workgroup_size) : 3u))))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) - 0u)), min((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))))))))))) | _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) >> 0u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), min((0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(workgroup_size))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))), ((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u)))))) | ((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))))))) | _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))).x) * _GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, 0u + (0u))), (false ? _GLF_FUZZED(83998u) : (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) >> 0u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), min((0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(workgroup_size))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))), ((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u)))))) | ((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))))), ((gl_WorkGroupID) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))), (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) >> 0u)))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), min((0u | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(workgroup_size))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))), ((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u)))))) | ((0u | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(3u), uint(3u))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 0u))))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u))))))))) ^ uvec3(0u, 0u, 0u)))) | _GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))).x) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u & 1u) * (1u)), (1u) ^ _GLF_IDENTITY(0u, 0u + (0u))))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(99756) : 0)) ^ (_GLF_IDENTITY(1, max(1, 1))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(99756) : 0)) ^ (_GLF_IDENTITY(1, max(1, 1))))) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false || (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u)))) << _GLF_IDENTITY(0u, (0u) - 0u)), 4, _GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(35018)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)), false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-8.6 - 5.9))), vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0))))))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0))], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), mix(float(_GLF_FUZZED(9.7)), float((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), bool(true))))), (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) - 0.0, (_GLF_IDENTITY((injectionSwitch.y) - 0.0, (false ? _GLF_FUZZED(-303.775) : _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0)))) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))) / sqrt(1.0)), (injectionSwitch.y) - 0.0))))))))), false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) - 0.0, _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0), (min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0)) / 1.0)), clamp(_GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x)) > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0)))), clamp(_GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (mat2x3(mat4(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min(_GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat2x3((injectionSwitch.y) - 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch.y) - 0.0))))))))))), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) - 0), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ (0u))) / 1u))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))) < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6u, min(6u, 6u))), (false ? _GLF_FUZZED(virtual_gid) : ~ (_GLF_IDENTITY(6u, min(6u, 6u)))))))), uint(6u))) ^ (0u))) / 1u))) | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))) < subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(66.72) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(41749u))), bool(false))), injectionSwitch.y)))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(subgroup_local_id))) == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u) == read_2, true, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u, ((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u) | ((_GLF_IDENTITY(read_2, min(read_2, read_2))) ^ 0u))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, false, true, true)), (bool(bvec4(read_1 + 1 == read_2, false, true, true))) && true))), false || ((read_1 + 1 == read_2)))), bool(bvec4(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (int(1)) ^ 0))) == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), false))), true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))), bool(bvec4(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), false))), true, false, false))), bool(bvec2((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))), bool(bvec4(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), false))), true, false, false))), true))))) || false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, min(read_2, read_2)))))), false || (_GLF_IDENTITY((! (read_1 + 1 == read_2)), true && ((! (read_1 + 1 == read_2)))))), ((! (read_1 + 1 == read_2))) && true))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(subgroup_local_id))) == read_2, _GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2)), bool(bvec4(read_1 + 1 == read_2, false, false, false))), true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) || false)), ! (! (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), ~ (~ (~ (read_2)))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u) + 1, (true ? _GLF_IDENTITY(read_1, (read_1) - 0u) + 1 : _GLF_FUZZED(read_1))), _GLF_IDENTITY((true ? read_1 + 1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - 0u)), ((true ? read_1 + 1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - 0u))) + 0u)) == read_2, _GLF_IDENTITY(bool(bvec4(read_1 + 1 == read_2, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))))), bool(bvec4(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))), false))), true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) || false) && ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, (1) | (1)) == _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))))), bool(bvec4(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))))))), false))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, (1) | (1)) == _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))))), bool(bvec4(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))))))), false))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, (1) | (1)) == _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))))), bool(bvec4(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, true))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))))))), false))), true, false, false))))) || false)))) || false)), ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(subgroup_local_id))) == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1, 0u | _GLF_IDENTITY((read_1 + 1), clamp((read_1 + 1), _GLF_IDENTITY((read_1 + 1), (7317u & 0u) | ((read_1 + 1))), (read_1 + 1)))) == _GLF_IDENTITY(read_2, (read_2) / 1u), true, _GLF_IDENTITY(false, (false) || false), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) || _GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))) && (read_1 + 1 == read_2)), bool(bvec4(read_1 + 1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), false, false, false))), true, false, false))) || false)), ! (! (read_1 + 1 == read_2))))) ^ 0u))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), false, true, true)))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7788.0504, 7.4)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2840.7744)), float(0.0), bool(true)))))), false, true, true)))) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))))) && true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6107.2778)), bool(false))) : _GLF_FUZZED(smoothstep(-7.5, 6634.3239, -1660.3172)))), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0)), 0.0 + (float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0))))) > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))) && ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), (true && (_GLF_IDENTITY(false, ! (! (false))))) && true), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.1))), injectionSwitch.x)) > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), abs(0.0), abs(1.0), 1.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(85.65)), float(float(mat4x2(injectionSwitch.x, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(1.0), 0.0, 0.0)), abs(0.0), abs(1.0), 1.0, 0.0, 0.0, 1.0))), bool(true)))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-112.514))), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true)))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true)))))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))) || false)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0], (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[1]), vec2(_GLF_FUZZED(6.9), _GLF_FUZZED(-15.96)), bvec2(false, false))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), bool(_GLF_IDENTITY(bvec2(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || false))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))), true))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-112.514))), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), mix(vec2(_GLF_FUZZED((- 4.4)), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), vec2(((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], _GLF_FUZZED(-3512.4785)), bvec2(true, false))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))) && (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))))), bool(_GLF_IDENTITY(bvec2(true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (true && ((injectionSwitch.x > injectionSwitch.y))), false, false)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), false, true), true))))))) || false))) && true)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4008.8933))), injectionSwitch.y)) : _GLF_FUZZED(cos(2462.8120))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-112.514))), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (false)))), false), true)))))))))) || false))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bool(bool(bvec2(true, true)))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bool(bool(bvec2(true, true)))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bool(bool(bvec2(true, true)))))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), bvec2(bvec3(bvec2(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (false) && true))))), false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))))))))) || false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true, true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true && (! (false)), _GLF_IDENTITY(bool(bvec4(true && (! (false)), true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(true && (! (false)), true, true, true))), bool(bool(! (bool(bvec4(true && (! (false)), true, true, true))))))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) || false))))) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-4409.5978, -4.9))))) / vec2(1.0, 1.0)), vec2(mat3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(cosh(mod(vec2(94.06, -55.59), 3.2))) : vec2(injectionSwitch[0], injectionSwitch[1])))), tan(0.0), tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-4.2, 5.3))))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) && true), false), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED((-9880.3134 + -2.8))), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (((injectionSwitch))[1]) - log(1.0))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))))) || false)) ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(0.0, max(0.0, 0.0))))), (_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-4409.5978, -4.9))))) / vec2(1.0, 1.0)), vec2(mat3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(vec2(-4.2, 5.3))))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))) && true), false), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))), true)))))))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (read_1))) / 1u), 0u, 0u)))) | (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), clamp(~ (read_1), _GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)))))), (~ (read_1)) >> 0u), ~ (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (_GLF_IDENTITY(true ? read_1 : _GLF_FUZZED(read_1), uint(uvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? read_1 : _GLF_FUZZED(read_1), 0u, 0u, 0u))))) + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, sqrt(1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(true && (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(true && (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec2(true && (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true && (true && (_GLF_DEAD(false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, bool(bool(true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))), true)), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)) || false))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)) || false))), true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2(false, true))))), (! (! (! (bool(bvec2(false, true)))))) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(log2(2.6)) : 0.0)), determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0))) < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), true, true), false)))))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), true)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, true)), true)), false, true)))))), false, false, true))), ! (! (bool(bvec2(false, true)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false))))), true))), ! (! (bool(bvec2(false, true)))))))) || false)), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true)))))), true, true), false))))))))))))))))), false, true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true))) || false), bool(bvec4(bool(bvec2(false, true)), false, false, true))), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))) || false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), false))))))))))) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, false || (true))), true, true)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true))))))), false, true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(bvec2(false, true)), false, false, true))), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), ! (! (! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false)), false, false)))))))))))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (_GLF_IDENTITY(false, ! (! (false))))), true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, true)), true, true))))), false, false, true))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(false, true)))), bool(bvec3((! (bool(bvec2(false, true)))), true, false))), (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), ! (! _GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), false, false))))))))), ! (! (_GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), false, false))))))))), bool(bvec3((! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false)), false, false))))))))), false, true))))))))) || false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (bool(bvec2(false, true))))))), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) || false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(bvec2(false, true))))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), (bool(bool((true)))) || false)) || false), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))) && true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), bool(bvec3(! _GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ! (! ((bool(bvec2(false, true)))))))), true, false))))))), false, true)))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY((! (bool(bvec2(false, true)))), true && ((! (bool(bvec2(false, true))))))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true))), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), false, false, true)))))), ! (! (bool(bvec2(false, true)))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! (! (false))), false, true))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec4(bool(bvec2(false, true)), false, false, true)))))), ! (! (bool(bvec2(false, true)))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! (! (false))), false, true))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec4(bool(bvec2(false, true)), false, false, true)))))), ! (! (bool(bvec2(false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), _GLF_IDENTITY(false, ! (! (false))), false, true))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec4(bool(bvec2(false, true)), false, false, true)))))), ! (! (bool(bvec2(false, true))))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))), (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mix(distance(vec4(5.3, 831.182, -26.74, 55.19), vec4(-73.79, -3454.6789, -20.24, -36.93)), -58.13, false)) : injectionSwitch.y)))))))))), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), bool(bvec4(bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))), _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))))), false, true)))), false, true, false)))))), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
