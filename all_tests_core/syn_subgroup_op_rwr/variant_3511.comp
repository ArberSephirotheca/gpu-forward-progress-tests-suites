#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y)), false))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (! (false)) && true)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ((! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(4465.9282), mix(float(_GLF_IDENTITY(_GLF_FUZZED(4465.9282), mix(float(_GLF_FUZZED(4465.9282)), float(_GLF_FUZZED(1.6)), bool(false)))), float(_GLF_FUZZED(655.132)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), sin(0.0))))), float(vec3(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3810.2415) : 0.0))))) - tan(0.0))))), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(min(sin(0.0), sin(0.0)), max(_GLF_IDENTITY(min(sin(0.0), _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))) - 0.0)), (min(sin(0.0), sin(0.0))) / 1.0), min(sin(0.0), sin(0.0))))), _GLF_IDENTITY(sin(0.0), float(mat4x3(sin(0.0), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(15.54)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))), round(length(normalize(exp(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.1)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))), 0.0, exp(0.0), 0.0, 1.0, tan(0.0), 0.0, 1.0))))))), sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), clamp(0.0 + (0.0), 0.0 + (0.0), 0.0 + (0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0))), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0))), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0)))) / 1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.0))))))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sin(0.0))), float(vec3(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(363.150)), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(363.150)), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0 + (mix(float(_GLF_FUZZED(363.150)), float(_GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(min(sin(0.0), sin(0.0)), float(_GLF_IDENTITY(mat2x3(min(sin(0.0), sin(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0), (mat2x3(min(sin(0.0), sin(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), mix(float(_GLF_FUZZED(363.150)), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(363.150)), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (mix(float(_GLF_FUZZED(363.150)), float(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0)))), clamp(sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), clamp(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))))), sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))))))), sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (0.0), (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.6) : 0.0)) + (0.0) : _GLF_FUZZED(-4.6))))), 0.0)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, false)))))), true, false))))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, false)))))), true, false))))), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), uint(uint(~ _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))) || false))) || false, (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)))) && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))) || false))) || false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))))) + 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) >> 0u), 1u))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (workgroup_base) ^ 0u))) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 1u), (uvec2(workgroup_base, 1u)) | (uvec2(workgroup_base, 1u))))), workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) ^ 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), max(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))))), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), (~ (clamp(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 1u))), workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ 0u, ((workgroup_base) ^ 0u) - 0u))))) / 1u)))) + 0u), 1u * (clamp(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(1u, (1u) - 0u)), (true ? uvec2(workgroup_base, 1u) : _GLF_FUZZED(uvec2(153460u, 137763u)))))), workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))), (workgroup_base) ^ 0u))))) + subgroup_id * subgroup_size))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id)), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(workgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))))) : _GLF_FUZZED((false ? workgroup_base : subgroup_local_id))))) - 0u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (workgroup_base) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : 0u)), 0u)), 1u, 0u)) | _GLF_IDENTITY((uvec4(0u, 0u, 1u, 0u)), (_GLF_IDENTITY((uvec4(0u, 0u, 1u, 0u)), ((uvec4(0u, 0u, 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 0u)), uint(uvec2(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 0u)), 0u))) : _GLF_FUZZED(virtual_gid)))) / 1u)))) << uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)))), min(uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u))), 0u)) | (uvec4(0u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 0u), (uvec4(0u, 0u, 1u, 0u)) | (uvec4(0u, 0u, 1u, 0u)))))))), 0u, (1u ^ 0u)), clamp(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u, (1u ^ 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))) | 0u), 0u, (1u ^ 0u)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))) | 0u), 0u, (1u ^ 0u)))), uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u, (1u ^ 0u)))))), 0u ^ (workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), false, true, false)), false))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true, false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), ! _GLF_IDENTITY((! (false || (false))), _GLF_IDENTITY(bool(bvec3((! (false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3((! (false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true)))) && true), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-363.075, 2.4, -6.3, 48.44).p)), bool(false))) > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2211.2749)), vec2(_GLF_FUZZED(-465.401), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true)))) && true), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec4(-363.075, 2.4, -6.3, 48.44).p, clamp(vec4(-363.075, 2.4, -6.3, 48.44).p, _GLF_IDENTITY(vec4(-363.075, 2.4, -6.3, 48.44).p, max(vec4(-363.075, 2.4, -6.3, 48.44).p, vec4(-363.075, 2.4, -6.3, 48.44).p)), vec4(-363.075, 2.4, -6.3, 48.44).p)))), bool(false))) > injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2211.2749)), vec2(_GLF_FUZZED(-465.401), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))))) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), true)))) && true), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(vec4(-363.075, 2.4, -6.3, 48.44).p, clamp(vec4(-363.075, 2.4, -6.3, 48.44).p, _GLF_IDENTITY(vec4(-363.075, 2.4, -6.3, 48.44).p, max(vec4(-363.075, 2.4, -6.3, 48.44).p, vec4(-363.075, 2.4, -6.3, 48.44).p)), vec4(-363.075, 2.4, -6.3, 48.44).p)))), bool(false))) > injectionSwitch.y))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-22.93) : injectionSwitch.x)) < injectionSwitch.y)), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5844.7162)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5844.7162)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5844.7162)), bool(false)))) - 0.0) : _GLF_FUZZED(-846.668))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))))], uint(read_1 + 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0)))))) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) - 0)), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0)))))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0)))))) >> 0)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0)))))) >> 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0)))))) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) | (0)))))) >> 0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), int(ivec3(_GLF_IDENTITY((4), ((4)) | 0), (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)) << 0)), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), 0)))))), (_GLF_IDENTITY((4), int(ivec3(_GLF_IDENTITY((4), ((4)) | 0), (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)) << 0)), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), 0))))))) | (_GLF_IDENTITY((4), int(ivec3(_GLF_IDENTITY((4), ((4)) | 0), (0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) / 1)) << 0)), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) << 0), 0)))))))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4)))))) / 1)) << 0), _GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0)))), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (_GLF_IDENTITY(0 | 0, clamp(0 | 0, _GLF_IDENTITY(0 | 0, ~ (~ (0 | 0))), 0 | 0))), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))) : _GLF_FUZZED(71973))) | (0))))), max(~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (4)))), int(ivec3((4), (_GLF_IDENTITY(0 | 0, (true ? 0 | 0 : _GLF_FUZZED(-15602)))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)), 0, 0))))) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << _GLF_IDENTITY(0, (0) | (0)), max((4) << _GLF_IDENTITY(0, (0) | (0)), (4) << _GLF_IDENTITY(0, (0) | (0))))))), ~ (min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) | (0))) - (0 ^ 0)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) / 1), 1, 1)), (int(ivec3(_GLF_IDENTITY(4, (4) / 1), 1, 1))) / 1))) << 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0)) - 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), max((4), (4))), int(ivec3((4), _GLF_IDENTITY((0 | 0), int(_GLF_IDENTITY(ivec3((0 | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(0, 0, 0) ^ (ivec3((0 | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(4, 1, 0, 0)))) ^ 0)) << _GLF_IDENTITY(0, (0) | (0))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | 0))) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), int(ivec3((4), (0 | 0), _GLF_IDENTITY(0, clamp(0, 0, 0))))) << 0, (_GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0) * 1)), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, ((4) << 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) | _GLF_IDENTITY((0), max((0), (0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)) | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, ((4) << 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) | _GLF_IDENTITY((0), max((0), (0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)) | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, ((4) << 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (0 | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) | _GLF_IDENTITY((0), max((0), (0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0), min(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec3((4), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0)) | 0), 0))) << 0), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))))))))))))))), _GLF_IDENTITY(64, 0 | (64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), true)))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, true)), bvec2(bvec3(bvec2(bvec2(true, true)), true)))))), true)))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, true, false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), false, true, true)), ! (! (bool(bvec4(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, ! (! (false))))))), false, true, true))))))) && _GLF_IDENTITY(true, true && (true))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9087.6276, 871.277)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), mix(vec2(((injectionSwitch) + vec2(0.0, 0.0))[0], _GLF_FUZZED(8.7)), vec2(_GLF_FUZZED(-7978.6521), ((injectionSwitch) + vec2(0.0, 0.0))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), (_GLF_IDENTITY((~ (64)), ((~ (64))) | 0)) | 0)), 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), 0 | (_GLF_IDENTITY(1, (1) << 0))) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (! (subgroup_local_id + 1 < subgroup_size))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), ((false)) && true))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-810.601))), injectionSwitch.y))), float(_GLF_FUZZED(float(true))), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])) : _GLF_FUZZED(-6.8))), mix(float(_GLF_FUZZED(6087.1279)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, 1.0, abs(round(length(normalize(1.0)))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0)))), vec2(injectionSwitch[0], injectionSwitch[1]))[1], (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1] : _GLF_FUZZED(310.176)))), bool(true))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-29.39, 1.4)) : injectionSwitch))[0], injectionSwitch[1])).y : _GLF_FUZZED(52.21)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bool(bool(_GLF_IDENTITY(false, (false) && true))))), (bool(_GLF_IDENTITY(false, (false) && true))) || false)), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))), _GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, true, true, false)))) || false))), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))), bool(bool(bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(729.061))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(729.061)))), (false ? _GLF_FUZZED(-239.483) : float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(729.061)))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), bool(bvec3(read_1 + 1 == read_2, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) ^ 0u, ((read_1) ^ 0u) - 0u)) + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2, false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), true))))), (bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), true)))))) && true))))), (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false)))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), bvec3(bvec3(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false))))))))) && true)) && true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))))) && true)))), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), bool(bvec3(read_1 + 1 == read_2, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) ^ 0u, ((read_1) ^ 0u) - 0u)) + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2, false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), true))))), (bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), true)))))) && true))))), (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false)))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), bvec3(bvec3(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false))))))))) && true)) && true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))))) && true)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), bool(bvec3(read_1 + 1 == read_2, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), bool(bvec2(false, true))), _GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) ^ 0u, ((read_1) ^ 0u) - 0u)) + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2, false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), true))))), (bool(_GLF_IDENTITY(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false)), false)), true)))))) && true))))), (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || false))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false)))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), bvec3(bvec3(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && ((_GLF_IDENTITY(false, (false) || false))))))))) && true)) && true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec3(read_1 + 1 == read_2, false, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))))) && true)))))) + 1, uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1 == read_2) + _GLF_IDENTITY(1, (1) / 1), uint(read_1 + 1 == read_2) + 1)), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), false, true, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))), false), true, true))), false)))))), true, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(2248.4301), _GLF_FUZZED(-460.383)), vec2(_GLF_IDENTITY((clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], 0.0 + ((clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))[0])), (clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (injectionSwitch) * mat2(1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(2248.4301), _GLF_FUZZED(-460.383)), vec2(_GLF_IDENTITY((clamp((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))), ! (! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), false, true))))), true && (true)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], 0.0 + ((clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(0, (0) | (0))])), (clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), determinant(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(349.134)), float(1.0), bool(true)))) - sqrt(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-207.164)), bool(false))), 0.0))), 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(2248.4301), _GLF_FUZZED(-460.383)), vec2(_GLF_IDENTITY((clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0)), min(_GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0)), max(vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0)), vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0)))), _GLF_IDENTITY(vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0)), min(vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0)), vec2(vec4((injectionSwitch) * mat2(1.0), 0.0, 1.0))))))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], 0.0 + ((clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-3.3, -94.63)))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[0])), (clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-80.54)))), (injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0)))) * mat2(1.0)))[1]), _GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-226.160) : injectionSwitch.y)))))), true, true))), false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-226.160) : injectionSwitch.y)))))), true, true))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-226.160) : injectionSwitch.y)))))), true, true))), false, false)))))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -534.234)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -534.234)))))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((+ -534.234)))))))), false, true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(bvec2(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))), false, false)))))), false)))))))), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 0.0, 1.0)), (true ? float(vec4(0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(1.6)))), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))))), (true ? vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec4((injectionSwitch) * mat2(1.0), 1.0, 1.0), clamp(vec4((injectionSwitch) * mat2(1.0), 1.0, 1.0), vec4((injectionSwitch) * mat2(1.0), 1.0, 1.0), vec4((injectionSwitch) * mat2(1.0), 1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(2248.4301), _GLF_FUZZED(-460.383)), vec2(_GLF_IDENTITY((clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0], 0.0 + ((clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-999.508)), vec2(_GLF_FUZZED(-2.4), _GLF_IDENTITY(((injectionSwitch))[1], mix(float(((injectionSwitch))[1]), float(_GLF_FUZZED(2.6)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(0.4), _GLF_FUZZED(1924.1528)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))))) * mat2(1.0)))[0])), (clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4(_GLF_FUZZED(4.5), _GLF_FUZZED(-9936.0855), (vec4(1.0, 0.0, 0.0, 0.0))[2], _GLF_FUZZED(float(99792u))), vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(-30.57), (vec4(1.0, 0.0, 0.0, 0.0))[3]), bvec4(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(-1.7, 2.4)) : (injectionSwitch))) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(2248.4301), _GLF_FUZZED(-460.383)), vec2(_GLF_IDENTITY((clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(90.22), _GLF_FUZZED(1.3)), bvec2(false, false)))) * vec2(1.0, 1.0)) * mat2(1.0)))[0], _GLF_IDENTITY(0.0, min(0.0, 0.0)) + ((clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp(((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(73.60), _GLF_FUZZED(2553.2700)), vec2((((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], (((injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[0])), (clamp((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(608.573, -4.2, 207.654, 18.34))))))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.6)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 1.0))), injectionSwitch.y)))))))), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), true && ((false))))), ! (! (! ((! _GLF_IDENTITY((false), true && ((false))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, _GLF_IDENTITY(true, true && (true)))))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)), ((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, _GLF_IDENTITY(true, true && (true)))))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7))) - 0.0), max((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))))), (! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))))) && true))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)))))) ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.7)))))))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), false, true, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), true, true, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))) || false, true && ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))) || false)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)))) << 0u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), 0u ^ (_GLF_IDENTITY(read_2, (read_2) / 1u)))) << 0u : _GLF_FUZZED(num_workgroup)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (read_2), clamp(_GLF_IDENTITY(0u ^ (read_2), min(0u ^ (read_2), 0u ^ (read_2))), 0u ^ (read_2), 0u ^ (read_2))))) << 0u), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (read_2), clamp(_GLF_IDENTITY(0u ^ (read_2), min(0u ^ (read_2), 0u ^ (read_2))), 0u ^ (read_2), 0u ^ (read_2))))) << 0u), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (read_2), clamp(_GLF_IDENTITY(0u ^ (read_2), min(0u ^ (read_2), 0u ^ (read_2))), 0u ^ (read_2), 0u ^ (read_2))))) << 0u), _GLF_IDENTITY(false, true && (false)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (read_2), clamp(_GLF_IDENTITY(0u ^ (read_2), min(0u ^ (read_2), 0u ^ (read_2))), 0u ^ (read_2), 0u ^ (read_2))))) << 0u), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u ^ (read_2), clamp(_GLF_IDENTITY(0u ^ (read_2), min(0u ^ (read_2), 0u ^ (read_2))), 0u ^ (read_2), 0u ^ (read_2))))) << 0u), _GLF_IDENTITY(false, true && (false)), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))) << 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)) && true)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))) << 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)) && true)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) : _GLF_FUZZED(subgroup_id))))) + _GLF_IDENTITY(1, (1) / 1) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))) << 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) : _GLF_FUZZED(subgroup_id))))) + _GLF_IDENTITY(1, (1) / 1) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_2))) << 0u), (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)) && true))))) || false))))))))))) + 1, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0)), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | 0))) >> 0))), 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))).x, (false ? _GLF_FUZZED(length(injectionSwitch)) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, mix(float(_GLF_FUZZED(-5272.6540)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(exp(-664.709))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0)), 0.0 + (float(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0))))))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(true);
  }
}
