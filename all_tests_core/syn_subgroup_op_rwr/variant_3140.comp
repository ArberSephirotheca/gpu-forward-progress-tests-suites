#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 uint subgroup_size;
 mat3 _f0;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4x2 _f1;
 uvec4 _f2;
 ivec2 _f3;
 uint virtual_gid;
 mat4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(8.9, mix(float(_GLF_FUZZED(-1.6)), float(8.9), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -3.8)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.0, -6.9)) : injectionSwitch)))[1], (false ? _GLF_FUZZED(-32.61) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.0, -6.9)) : injectionSwitch)))[1], float(mat3x4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.0, -6.9)) : injectionSwitch)))[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(-77.03)), bvec2(false, false))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(8.9, mix(float(_GLF_FUZZED(-1.6)), float(8.9), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -3.8)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.0, -6.9)) : injectionSwitch)))[1], (false ? _GLF_FUZZED(-32.61) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.0, -6.9)) : injectionSwitch)))[1], float(mat3x4((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.0, -6.9)) : injectionSwitch)))[1], 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(9.2), _GLF_FUZZED(-77.03)), bvec2(false, false))))).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, true)))))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(gl_SubgroupSize, _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.8, -88.52, -521.290, 446.305, -348.767, -7354.2065, -3.9, 54.39, 34.61))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.8, -88.52, -521.290, 446.305, -348.767, -7354.2065, -3.9, 54.39, 34.61))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(mat3x4((_GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(true ? mat3(1.0) : _GLF_FUZZED(mat3(0.8, -88.52, -521.290, 446.305, -348.767, -7354.2065, -3.9, 54.39, 34.61)), _GLF_IDENTITY(mat3(mat3x4(true ? mat3(1.0) : _GLF_FUZZED(mat3(0.8, -88.52, -521.290, 446.305, -348.767, -7354.2065, -3.9, 54.39, 34.61)))), (mat3(mat3x4(true ? mat3(1.0) : _GLF_FUZZED(mat3(0.8, -88.52, -521.290, 446.305, -348.767, -7354.2065, -3.9, 54.39, 34.61))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat3(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(548.354) : injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, bool(bool(false)))))), (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-9413.1743), _GLF_FUZZED(-58.70)), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mat2(1.0) * ((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y)) || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-9413.1743), _GLF_FUZZED(-58.70)), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mat2(1.0) * ((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-9413.1743), _GLF_FUZZED(-58.70)), vec2((vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true)), (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-9413.1743), float(mat3(_GLF_FUZZED(-9413.1743), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, 0.0, 0.0, 1.0))), _GLF_FUZZED(-58.70)), vec2((vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-276.706))), injectionSwitch.x)))[0], (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true))) / exp(vec2(0.0, 0.0)))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mat2(1.0) * ((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).y)) || (false)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(1u, mat4x2(1.0), uvec4(1u), ivec2(1), workgroup_base + _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)) * _GLF_struct_replacement_1.subgroup_size + subgroup_local_id, _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED((-1.6 + mat4(16.35, 524.483, 40.83, 224.781, 1864.2936, -66.04, -8.4, 84.77, -0.7, 1.0, 4.8, -875.221, 36.99, -1.3, -8.1, 27.13))) : mat4(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec2(true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0) / 1.0) > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * _GLF_struct_replacement_1.subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size)), (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size))) | (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size))))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_1.subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_1.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size)), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (false ? _GLF_FUZZED(103399u) : _GLF_struct_replacement_1.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (_GLF_struct_replacement_1.subgroup_size) - 0u))), _GLF_struct_replacement_1.subgroup_size)), _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size)))))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_1.subgroup_size))), 0u + ((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_1.subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size)), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, max(_GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (false ? _GLF_FUZZED(103399u) : _GLF_struct_replacement_1.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (_GLF_struct_replacement_1.subgroup_size) - 0u))), _GLF_struct_replacement_1.subgroup_size)), _GLF_struct_replacement_1.subgroup_size, _GLF_struct_replacement_1.subgroup_size)))))) | (workgroup_base + subgroup_id * _GLF_struct_replacement_1.subgroup_size))))) * 1u) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) << 0u) + 1) % _GLF_struct_replacement_1.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_0.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_0.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_0.virtual_gid), ((_GLF_struct_replacement_0.virtual_gid)) << (0u | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)))) >> 0u)) ^ (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(61550) : 4)), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(61550) : 4))) + 0), int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(1, (1) - 0), 1, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))), (_GLF_IDENTITY(0, max(0, 0))) ^ 0)), (_GLF_IDENTITY(ivec4(4, 1, 1, 0), _GLF_IDENTITY((ivec4(4, 1, 1, 0)) | (ivec4(_GLF_IDENTITY(4, (4) | 0), 1, _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)), ~ (~ ((ivec4(4, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 0)) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4))) ^ 0), (4) | 0)) ^ 0), 1, 1, 0))))))) + ivec4(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), ~ (~ (~ (0)))), 0 | (_GLF_IDENTITY(~ (0), ~ (~ (~ (0))))))) - 0))), 0)))), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u ^ (read_1), max(_GLF_IDENTITY(0u ^ (read_1), ~ (~ (0u ^ (read_1)))), _GLF_IDENTITY(0u ^ (read_1), (144625u & 0u) + (0u ^ (read_1)))))) + 1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_0.virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(34541) : 1)) * (0)));
 if(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < _GLF_IDENTITY(_GLF_struct_replacement_1.subgroup_size, (_GLF_struct_replacement_1.subgroup_size) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u)))))))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) << 0u), uint(read_1 + 1 == read_2))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) / 1u) == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), max((~ (uint(read_1 + 1 == read_2))), _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(_GLF_IDENTITY(uint((uint(read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))), max(uint((uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint((uint(read_1 + 1 == read_2))), min(uint((uint(read_1 + 1 == read_2))), uint((uint(read_1 + 1 == read_2))))))))))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), max((~ (uint(read_1 + 1 == read_2))), _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(_GLF_IDENTITY(uint((uint(read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))), max(uint((uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint((uint(read_1 + 1 == read_2))), min(uint((uint(read_1 + 1 == read_2))), uint((uint(read_1 + 1 == read_2))))))))))) / 1u))), (true ? _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), max((~ (uint(read_1 + 1 == read_2))), _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ _GLF_IDENTITY((uint(read_1 + 1 == read_2)), uint(_GLF_IDENTITY(uint((uint(read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))), max(uint((uint(read_1 + 1 == read_2))), _GLF_IDENTITY(uint((uint(read_1 + 1 == read_2))), min(uint((uint(read_1 + 1 == read_2))), uint((uint(read_1 + 1 == read_2))))))))))) / 1u))) : _GLF_FUZZED(next_virtual_gid)))) ^ 0u)) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ (uint(read_1 + 1 == read_2)))) << 0u)) >> _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))), min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))) / 1u)))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0), _GLF_IDENTITY(1, (1) | (1)))) == read_2), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u), 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), 1u * (_GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ (uint(read_1 + 1 == read_2)))) << 0u)))) >> _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, (1) + 0)) | 0), _GLF_IDENTITY(1, (1) | (1)))) == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))))) + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u)) >> 0u))))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 | ((1) | (1)))))) == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u)))) >> 0u)) ^ 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ (uint(read_1 + 1 == read_2)))) << 0u)) >> _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))), min(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))) / 1u)))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0), _GLF_IDENTITY(1, (1) | (1)))) == read_2), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec2(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) / 1u), 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), 1u * (_GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ (uint(read_1 + 1 == read_2)))) << 0u)))) >> _GLF_IDENTITY(0u, 0u | (0u))))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, (1) + 0)) | 0), _GLF_IDENTITY(1, (1) | (1)))) == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))), ((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))))) + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, true, false))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), max(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)))))))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u)) >> 0u))))) | (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), 0 | ((1) | (1)))))) == read_2), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (~ (~ (uint(read_1 + 1 == read_2)))) >> 0u)))) >> 0u)) ^ 0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, (false ? _GLF_FUZZED(workgroup_base) : (read_1) | 0u)))) | 0u, ((_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, (false ? _GLF_FUZZED(workgroup_base) : (read_1) | 0u)))) | 0u) ^ 0u)) + 1 == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) | (read_2)), read_2)), 0u, 1u))))) | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (1) ^ 0) == read_2))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2))), _GLF_IDENTITY((~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((read_1) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(42815u, 175482u, 155492u, 117166u)))) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), max(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u))))))), (_GLF_IDENTITY((read_1) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(42815u, 175482u, 155492u, 117166u)))) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), max(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))))))) >> 0u)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) - 0u)) + 0u))) + 1 == read_2)))) >> 0u, (_GLF_IDENTITY((~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((read_1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((read_1))) * 1u, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), (true ? _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ ((uvec4(0u, 0u, 0u, 0u)))) : _GLF_FUZZED(uvec4(64632u, 12346u, 13311u, 61166u)))) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(42815u, 175482u, 155492u, 117166u)))) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), max(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, _GLF_IDENTITY(1u, (1u) << 0u), 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))))))), read_1)) + 1 == read_2)))) >> 0u, ((~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((read_1) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), _GLF_IDENTITY(1u, max(1u, 1u)))), 0u, 1u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(42815u, 175482u, 155492u, 117166u)))) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), max(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED((workgroup_size ++))))) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))))))), read_1)) + 1 == read_2)))) >> 0u) | ((~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(42815u, 175482u, 155492u, 117166u)))) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), max(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))))))), read_1)), (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(42815u, 175482u, 155492u, 117166u)))) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), max(uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))), uint(_GLF_IDENTITY(uvec4((read_1) * 1u, 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4((read_1) * 1u, 0u, 1u, 0u)))))))), read_1))) ^ 0u) + 1 == read_2)))) >> 0u))) >> 0u))))), 1u))) + 1, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 | (4)), 0, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 | (4)), 0, 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 | (4)), 0, _GLF_IDENTITY(1, max(1, 1)))))), (~ (_GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), 0 | (4)), 0, 1))))) | 0)) + 0))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) | (64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(-99.07)), mix(float(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(-99.07)), (true ? (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(-99.07)) : _GLF_FUZZED(0.0)))), float(_GLF_FUZZED(float(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))), bool(false)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(9127.7818)), (true ? float(_GLF_FUZZED(9127.7818)) : _GLF_IDENTITY(_GLF_FUZZED(determinant(mat4(-78.01, 7.8, 62.57, -8578.2207, -749.726, -8639.0978, -7.0, 70.38, 527.060, 2.5, 42.37, -53.29, -238.746, 97.35, 455.950, 84.80))), (_GLF_FUZZED(determinant(mat4(-78.01, 7.8, 62.57, _GLF_IDENTITY(-8578.2207, min(-8578.2207, -8578.2207)), -749.726, -8639.0978, -7.0, 70.38, 527.060, 2.5, 42.37, -53.29, -238.746, 97.35, 455.950, 84.80)))) / abs(1.0)))), bool(false))))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true))))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ~ (~ ((read_1)))) << 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), (read_1) << 0u) + 1, _GLF_IDENTITY(read_1, (read_1) << 0u) + 1, _GLF_IDENTITY(read_1, (read_1) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), max(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY(read_1, (read_1) << 0u))) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1))))), (_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), _GLF_IDENTITY(((read_1)), min(_GLF_IDENTITY(((read_1)), (((read_1))) + 0u), _GLF_IDENTITY(((read_1)), (((read_1))) + 0u))) - 0u)) | 0u)) | 0u) << 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1)), (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1)), clamp(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1)), _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1)), _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1))))))) - 0u), (_GLF_IDENTITY(read_1, (read_1) << 0u)) << 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)), 0u, 1u, 0u), (true ? uvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)), 0u, 1u, 0u) : _GLF_FUZZED((next_virtual_gid | uvec4(44353u, 109353u, 106675u, 76775u))))))), (read_1) << 0u) + 1, _GLF_IDENTITY(read_1, (read_1) << 0u) + 1)), _GLF_IDENTITY(read_1, (read_1) << 0u) + 1))) / 1u) == read_2)), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, clamp(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) | 0u)) << 0u) + 1, _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (false ? _GLF_FUZZED(num_workgroup) : (read_1) << _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), max(_GLF_IDENTITY(read_1, (read_1) << 0u), _GLF_IDENTITY(read_1, (read_1) << 0u))) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, true, true)))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : read_1))))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(read_1, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))) : read_1))))), _GLF_IDENTITY((_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) - 0u)) | 0u)) | 0u, ((_GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) - 0u)) | 0u)) | 0u) ^ 0u)) << 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(packSnorm4x8(vec4(_GLF_IDENTITY(838.661, min(838.661, 838.661)), -6212.4591, -0.4, -2155.5024))) : read_1))) - 0u), (_GLF_IDENTITY(read_1, (read_1) << 0u)) << 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), (read_1) << 0u) + 1, _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << 0u, max((read_1) << 0u, (read_1) << 0u))) + 1)), _GLF_IDENTITY(read_1, (read_1) << 0u) + 1))) / 1u) == read_2)), false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0) == read_2)), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) << 0u, ((read_1) << 0u) / 1u)) + _GLF_IDENTITY(1, (1) - 0) == read_2)), true && ((! (_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (1) - 0) == read_2))))) || false)), true && (((! (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), 0u ^ (_GLF_IDENTITY((read_1), ((read_1)) ^ 0u))) << 0u) + _GLF_IDENTITY(1, (1) - 0) == read_2))))))))) + 1, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
}
