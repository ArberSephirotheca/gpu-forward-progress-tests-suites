#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 bool _f0;
 mat3x2 _f1;
 uint subgroup_size;
 uvec4 _f2;
 uvec3 _f3;
 ivec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 bool _f0;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat4 _f1;
 int _f2;
} ;

struct _GLF_struct_4 {
 int _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_4(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_struct_0(uvec2(1u), mat4(1.0), 1), _GLF_struct_1(true), _GLF_struct_2(ivec4(1)), _GLF_struct_3(true, mat3x2(1.0), gl_SubgroupSize, uvec4(1u), uvec3(1u), _GLF_IDENTITY(ivec2(1), ivec2(0, 0) | (ivec2(1))), mat4x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-7.1, 106.947)) : injectionSwitch)), injectionSwitch)))))).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), false))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), false, false), false))), false))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(8.6)), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))), (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && true)), bool(bvec2((_GLF_IDENTITY(false, (false) && true)), true))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f4.subgroup_size, (_GLF_struct_replacement_5._f0._f4.subgroup_size) | (_GLF_struct_replacement_5._f0._f4.subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), ~ (~ (atomicMax(subgroup_id, subgroup_id))))) >> 0u, ((_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), ~ (~ (atomicMax(subgroup_id, subgroup_id))))) >> 0u) | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), (atomicMax(subgroup_id, subgroup_id)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec4(_GLF_IDENTITY(uint(3u), uint(3u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), (atomicMax(subgroup_id, subgroup_id)) >> 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), ~ (~ (atomicMax(subgroup_id, subgroup_id))))) >> 0u, ((_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), ~ (~ (atomicMax(subgroup_id, subgroup_id))))) >> 0u) | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(atomicMax(subgroup_id, subgroup_id), (atomicMax(subgroup_id, subgroup_id)) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uvec4(_GLF_IDENTITY(uint(3u), uint(3u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))), (atomicMax(subgroup_id, subgroup_id)) >> 0u))))))) : _GLF_struct_replacement_5._f0._f4.subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((40344u % uvec3(23524u, 127622u, 157554u)[1])) : subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(mat3x2(-4.3, -5.4, 15.62, 288.122, 3689.3185, -83.60) * vec3(_GLF_IDENTITY(-3.9, clamp(-3.9, _GLF_IDENTITY(-3.9, clamp(-3.9, -3.9, -3.9)), _GLF_IDENTITY(-3.9, max(-3.9, _GLF_IDENTITY(-3.9, clamp(-3.9, -3.9, -3.9)))))), 1.8, -939.729), vec2(mat4x3(mat3x2(-4.3, _GLF_IDENTITY(-5.4, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(-5.4, clamp(-5.4, -5.4, -5.4)))), 15.62, 288.122, 3689.3185, -83.60) * vec3(-3.9, 1.8, -939.729), 0.0, 1.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), 1.0, 1.0))), min(mat3x2(-4.3, -5.4, 15.62, 288.122, 3689.3185, -83.60) * vec3(-3.9, 1.8, -939.729), mat3x2(-4.3, -5.4, 15.62, 288.122, 3689.3185, -83.60) * vec3(-3.9, 1.8, -939.729)))).y), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], _GLF_IDENTITY(max((injectionSwitch)[1], (injectionSwitch)[1]), max(max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))[1]), max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-28.79), _GLF_FUZZED(-210.076)), bvec2(false, false)))) / sqrt(abs(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(1.0), 0.0 + (float(1.0)))), clamp(float(_GLF_IDENTITY(float(1.0), 0.0 + (float(1.0)))), float(_GLF_IDENTITY(float(1.0), 0.0 + (float(1.0)))), float(_GLF_IDENTITY(float(1.0), 0.0 + (float(1.0))))))))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5._f0._f4.subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % _GLF_struct_replacement_5._f0._f4.subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, cos(0.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, exp(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)), 0.0)))))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid, virtual_gid))], 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), clamp(64, 64, 64)), 64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, false || (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))))).x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-541.785), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7577.3792)), bvec2(true, false))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY((vec2(-9.9, 1.1) * injectionSwitch), vec2(vec4((vec2(-9.9, 1.1) * injectionSwitch), 1.0, sin(0.0))))) : injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))), true))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(39.96)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(((injectionSwitch.x > injectionSwitch.y)), false)))), true))))) && true)))), false)))))), false))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), min(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0))))).y), max(_GLF_FUZZED(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), min(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0))))).y), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), min(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0))))).y), min(_GLF_FUZZED(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), min(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0))))).y), _GLF_FUZZED(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), min(vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0)), vec3(mat3x2(_GLF_IDENTITY(vec3(-189.963, -6.6, -0.5), min(vec3(-189.963, -6.6, -0.5), vec3(-189.963, -6.6, -0.5))), 1.0, 0.0, 0.0))))).y)))))), vec2(_GLF_FUZZED(-3881.1400), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), ((injectionSwitch)[1]) - 0.0)), bvec2(false, true)))) - vec2(0.0, 0.0)).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + abs(0.0)), (false ? _GLF_FUZZED(45.04) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + abs(0.0))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))) < injectionSwitch.y) && true), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))) || false))), false || (_GLF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), false || (! ((! (true)))))))), (injectionSwitch.x < injectionSwitch.y)))))))))))) || false), true, false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(floor(-663.900)))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (mat2(1.0, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-492.587)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) - 0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat2(mat3(mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / mat2(1.0, 1.0, 1.0, 1.0))))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat3(mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3171.7534), _GLF_FUZZED(478.608)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(-4.2)))), 1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3171.7534), _GLF_FUZZED(478.608)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) - _GLF_IDENTITY(sin(_GLF_IDENTITY(0.0, (0.0) - 0.0)), (true ? sin(0.0) : _GLF_FUZZED(-4.2)))), 1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), min(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-4.8, -1.8, -9.2)) : vec3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-31.89))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sqrt(-14.57)) : 1.0)), 1.0, 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(-342.642)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).y, (injectionSwitch.y) + 0.0))), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-923.612)), bool(false)))), float(_GLF_FUZZED(vec4(-801.916, 9.1, 6883.9789, -76.78).q)), bool(false))), injectionSwitch.y)))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat3x4(mat2(1.0, 1.0, 1.0, 1.0))))), (mat4x2(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat3x4(mat2(1.0, 1.0, 1.0, 1.0)))))) * mat4(1.0))), (true ? mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat3x4(mat2(1.0, 1.0, 1.0, 1.0))))), (mat4x2(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat3x4(mat2(1.0, 1.0, 1.0, 1.0)))))) * mat4(1.0))) : _GLF_FUZZED(mat2(-3.2, -852.390, 570.758, -8506.7504))))))))))))))).y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-785.158) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)), vec2(vec2(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))))).y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-22.46)), float(injectionSwitch.y), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-22.46)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(0.8))))), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), float(vec3(_GLF_ONE(_GLF_IDENTITY(1.0, float(float(1.0))), injectionSwitch.y), 0.0, 0.0)))), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(_GLF_IDENTITY(1.0, float(float(1.0))), injectionSwitch.y), 0.0, 0.0))))), transpose(transpose(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec3(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), clamp(_GLF_IDENTITY(float(float(1.0)), max(float(float(1.0)), float(float(1.0)))), _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) / 1.0), float(float(1.0))))), injectionSwitch.y), 0.0, 0.0))))), (mat2(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(vec3(_GLF_ONE(_GLF_IDENTITY(1.0, float(float(1.0))), injectionSwitch.y), 0.0, 0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (true ? mat2(1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2(9.1, 209.772, 3.3, -900.110))))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))))), transpose(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(mat2(-9.3, 1680.2610, 5.8, -7.0)) : _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(mat4(mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) / mat2(1.0, 1.0, 1.0, 1.0))))))))))).y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, sqrt(0.0), 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, sqrt(0.0), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(faceforward(vec2(81.69, 8.6), injectionSwitch, vec2(-6.2, 31.25))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(6.3)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.2))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.4, 88.48)))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8273.2215), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.1)), bvec2(true, false))).y))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(subgroup_local_id + 1 < _GLF_struct_replacement_5._f0._f4.subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))))))))), false, false)))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))), true)), false)), true)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false, false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2) + 1, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) >> 0), 4)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) | (4)))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)))), int(ivec3(4, 1, 1))))))))))), 4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(94.02)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), read_1 + 1)), read_1 + 1, read_1 + 1)), read_1 + 1))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1, (_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) + 1, _GLF_IDENTITY((read_1 + 1), (_GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) | ((read_1 + 1)))) << (168581u & 0u)) | _GLF_IDENTITY((0u & 123500u), ~ (~ ((0u & 123500u))))), read_1 + 1))) - 0u)), max((_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, (1) | 0), read_1 + 1))) - 0u)), (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, _GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) + 0u)) / 1u))) + 1))) - 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, min(1, 1)), (read_1 + 1) ^ (1u ^ 1u))))) - 0u), (false ? _GLF_FUZZED(atomicExchange(virtual_gid, read_2)) : _GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) ^ 0u)))), read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1)), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) ^ 0u)))), read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1)), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1)), (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) ^ 0u)))), read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1)))))) << 0u))) - 0u))))) == _GLF_IDENTITY(read_2, max(read_2, read_2))) + 1, (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) | (1)))) == read_2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))), clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(86552u) : 0u)))) | (uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), clamp(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), (0 | (_GLF_IDENTITY(1, 0 | (1)))) << 0), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), uint(uvec4(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (read_1 + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 ^ ((_GLF_IDENTITY(1, 0 | (1))))))) + 0u))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))) == read_2)), max(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), clamp(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), (0 | (_GLF_IDENTITY(1, 0 | (1)))) << 0), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), uint(uvec4(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (read_1 + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 ^ ((_GLF_IDENTITY(1, 0 | (1))))))) + 0u))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))) == read_2)), min(clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), clamp(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), (0 | (_GLF_IDENTITY(1, 0 | (1)))) << 0), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), uint(uvec4(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (read_1 + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 ^ ((_GLF_IDENTITY(1, 0 | (1))))))) + 0u))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))) == read_2)), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), clamp(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), (0 | (_GLF_IDENTITY(1, 0 | (1)))) << 0), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), uint(uvec4(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (read_1 + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 ^ ((_GLF_IDENTITY(1, 0 | (1))))))) + 0u))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))) == read_2)), 0u | (clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), clamp(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), (0 | (_GLF_IDENTITY(1, 0 | (1)))) << 0), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), uint(uvec4(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (read_1 + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 ^ ((_GLF_IDENTITY(1, 0 | (1))))))) + 0u))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))) == read_2)))))), clamp(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), clamp(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1)))))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), min(_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, 0 | (1))), (0 | (_GLF_IDENTITY(1, 0 | (1)))) << 0), 0 | (_GLF_IDENTITY(1, 0 | (1)))))), uint(uvec4(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, 1u))), _GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))), (read_1 + _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), 0 ^ ((_GLF_IDENTITY(1, 0 | (1))))))) + 0u))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 | (1)))) == read_2))))), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 | (1)))) == read_2), uint(read_1 + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))) == read_2))) + 1) | (uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))))) + 1 == read_2) + 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), bool(bvec3((! (! (false))), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) && _GLF_IDENTITY(true, true && (true))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
