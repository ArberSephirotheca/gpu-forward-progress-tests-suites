#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat2x3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 mat2x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 vec4 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat2 _f1;
 mat3 _f2;
 mat3x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 vec4 _f3;
 mat4 _f4;
 mat2x3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec2 _f1;
 bvec2 _f2;
 _GLF_struct_1 _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 uint workgroup_id;
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uint _f2;
 vec3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bool(false)))), true, true, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_IDENTITY(false, (false) && true)))), false), true, false))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-7230.0211 * -517.061)), _GLF_FUZZED(-692.860)), bvec2(false, false)))[0], injectionSwitch[1])).x < injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-6.5), mix(float(_GLF_FUZZED(-44.17)), float(_GLF_FUZZED(-6.5)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.5)), bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.6))), 1.0, round(length(normalize(1.0))), 1.0, exp(0.0), 1.0, 1.0, 0.0, exp(0.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-6.5)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.5)), bool(false)), 0.0 + (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.5)), bool(false))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.5)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.5)), bool(false)))))) - 0.0)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(true))), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-65.00)), vec2(_GLF_FUZZED((false ? 72.27 : -0.2)), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(19110u))), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-70.53) : injectionSwitch.y, (true ? false ? _GLF_FUZZED(-70.53) : injectionSwitch.y : _GLF_FUZZED(986.160))))))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec3(-2.7, 704.571, 3355.0422), refract(vec3(-76.73, -67.42, -761.189), vec3(8545.4657, 6.1, 108.424), -1742.7685))) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))))), true)))), true)))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true)), false))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))) && true)) && true)), false))))), bool(bvec3((bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true)), false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), false)))))))), true)))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(false, (false) || false))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))), true)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, true && (false))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) || false), false), false))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), bool(bool(true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))))))))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))))), false)))), false)))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))))), false)))), false)))))), true)), false))))), bvec3(bvec4(bvec3(false, false, false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), false), false)))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), true)))), bvec3(bvec4(bvec3(false, false, false), false))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), _GLF_IDENTITY(false, (false) || false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec4(bvec3(false, false, false), false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), bvec3(bvec4(bvec3(false, false, false), false))))))))))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0))) * mat2(1.0))) - vec2(0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(6389.1430), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), vec2((((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(2.3)), bvec2(true, false))) + vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0))) * mat2(1.0))) - vec2(0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(6389.1430), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), vec2((((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(2.3)), bvec2(true, false))) + vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x)) > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) + vec2(0.0, 0.0))) * mat2(1.0))) - vec2(0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mix(vec2(_GLF_FUZZED(6389.1430), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), vec2((((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(2.3)), bvec2(true, false))) + vec2(0.0, 0.0))) - vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) / vec2(1.0, 1.0)) + vec2(0.0, 0.0))) - vec2(0.0, 0.0))).x)) > injectionSwitch.y))), true, false, true)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY((bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(false)) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x < injectionSwitch.y))))))))), true && (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x)) ^ 0u)), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)).x), (clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))).x)) ^ 0u)), 1u, 0u, 0u)))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) | 0u, min(_GLF_IDENTITY((gl_WorkGroupID.x) | 0u, _GLF_IDENTITY(((gl_WorkGroupID.x) | 0u), _GLF_IDENTITY(uint(uint(((gl_WorkGroupID.x) | 0u))), max(uint(uint(((gl_WorkGroupID.x) | 0u))), uint(uint(((gl_WorkGroupID.x) | 0u)))))) - 0u), (gl_WorkGroupID.x) | 0u))))), _GLF_struct_2(_GLF_struct_0(uvec3(1u), mat2x3(1.0), bvec3(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-890.329) : 1.0)), clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-890.329) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-890.329) : 1.0)), mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-890.329) : 1.0))), float(_GLF_FUZZED(-6329.4336)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-890.329) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-890.329) : 1.0))) / 1.0)))) - 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-8812.8375)), mix(float(float(_GLF_FUZZED(-8812.8375))), float(_GLF_FUZZED(-4.3)), bool(false))), float(1.0), bool(true)))))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8812.8375)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, 1.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), injectionSwitch.x), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (true ? dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)) : _GLF_FUZZED(1.7))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(239.101)), bool(false))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(239.101)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(239.101)), bool(false))), mix(float(_GLF_FUZZED(-183.228)), float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), mix(_GLF_IDENTITY(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), min(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), _GLF_IDENTITY(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(float(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), float(_GLF_FUZZED(1.9)), bool(false))), _GLF_IDENTITY(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), mix(float(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), float(_GLF_FUZZED(68.17)), bool(false))))), float(_GLF_FUZZED(239.101)), bool(false)))), bool(true))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))))), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(tanh(vec3(47.75, 1553.5683, 1049.8373))) : vec3(1.0, 0.0, 0.0))))), float(_GLF_FUZZED(239.101)), bool(false)))))), 1.0, abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 0.0), mat4(1.0) * (mat2x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8094.3685)), bool(false))) : _GLF_FUZZED(tanh(7.7))))), vec3(1.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), float(_GLF_FUZZED(239.101)), bool(false)))), 1.0, abs(1.0), 1.0, 0.0)))))), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.9) : 1.0))), float(_GLF_FUZZED((9037.4246 - -5.2))), bool(false))), (true ? 1.0 : _GLF_FUZZED(7.4)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7.4), clamp(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(7.4), min(_GLF_FUZZED(7.4), _GLF_IDENTITY(_GLF_FUZZED(7.4), clamp(_GLF_FUZZED(7.4), _GLF_FUZZED(7.4), _GLF_FUZZED(7.4))))), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(7.4), 1.0 * (true ? 1.0 : _GLF_FUZZED(7.4))), true ? 1.0 : _GLF_FUZZED(7.4))))))))) * (vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(3.5)), float(mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (false ? _GLF_FUZZED(vec4(-946.119, -9191.9809, 2398.2319, 8.5)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.9) : 1.0))), float(_GLF_FUZZED((9037.4246 - -5.2))), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false || (false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))) || false))))), (true ? 1.0 : _GLF_FUZZED(7.4)))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(7.4)), max((true ? 1.0 : _GLF_FUZZED(7.4)), _GLF_IDENTITY((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(7.4), mix(float(_GLF_FUZZED(7.4)), float(_GLF_FUZZED(-4606.1276)), bool(false)))), 1.0 * ((true ? 1.0 : _GLF_FUZZED(7.4))))))))))) * (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true)))))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true)))), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true)))))))))), max(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0)))))))) * (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8812.8375)), float(1.0), bool(true))))), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8812.8375), clamp(_GLF_IDENTITY(_GLF_FUZZED(-8812.8375), (_GLF_FUZZED(-8812.8375)) / 1.0), _GLF_FUZZED(-8812.8375), _GLF_IDENTITY(_GLF_FUZZED(-8812.8375), (_GLF_FUZZED(-8812.8375)) - 0.0)))), float(1.0), bool(true)))))))))), mat4(1.0), mat2x3(1.0), vec3(1.0)), bvec2(true), bvec2(true), _GLF_struct_1(mat3x2(1.0), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(625.553, -5.0, 75.25, 0.5)) : _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-964.621, -643.031, -7.3, 224.712, -6238.8544, 8794.4359, -115.969, -3.2, -39.33)))), mat3(mat3(mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))))), mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.5))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(transpose(_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))))))))), _GLF_IDENTITY(mat4(1.0) * (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-9.2, 541.633, -13.98, -1505.2726, -757.887, -1.6, -5410.7511, -369.383, -4557.7517)) : mat3(1.0))), (_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-29.39, -8.0, -3.6, -15.22, _GLF_IDENTITY(3923.0227, (3923.0227) - 0.0), -462.703, 346.864, 15.93, 6.0)) : mat3(1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mat3(mat3(mat3(1.0))))))))), (false ? _GLF_FUZZED(mat3x4(6.2, _GLF_IDENTITY(-866.904, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) ? _GLF_IDENTITY(-866.904, clamp(-866.904, _GLF_IDENTITY(-866.904, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(-866.904, clamp(-866.904, -866.904, -866.904))), bool(true))), -866.904)) : _GLF_FUZZED(-384.677), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) ? _GLF_IDENTITY(-866.904, clamp(-866.904, _GLF_IDENTITY(-866.904, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(-866.904, clamp(-866.904, -866.904, -866.904))), bool(true))), -866.904)) : _GLF_FUZZED(-384.677)) / 1.0))), 7236.7057, _GLF_IDENTITY(3.0, (3.0) + abs(0.0)), 8.4, -1.1, 426.019, -7.8, -3.2, 6.6, -5.9, 8529.9220)) : mat4(1.0) * (mat3x4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, cos(0.0) * (1.0))))), transpose(transpose(_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0)))))))))))))), mat3x4(1.0), ivec3(1)), _GLF_IDENTITY(1u, max(1u, 1u))), _GLF_struct_5(_GLF_struct_3(bvec3(true), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0)))))) * vec4(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0)), _GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0))), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), vec4(1.0, 1.0, 1.0, 1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0))), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0))), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0))), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(_GLF_IDENTITY(vec4(1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec4(1.0))), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))) / vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_FUZZED(-6.2))))), ((_GLF_IDENTITY(max(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) / 1.0)), vec4(1.0)), (max(vec4(1.0), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))) / vec4(1.0, 1.0, 1.0, 1.0))[1], _GLF_FUZZED((-3.2 + 5449.5570)), ((_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(vec4(1.0), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))) / _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), min(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0))))[3]), vec4(((_GLF_IDENTITY(_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), clamp(max(vec4(1.0), vec4(1.0)), max(vec4(1.0), vec4(1.0)), max(vec4(1.0), vec4(1.0)))), (max(vec4(1.0), vec4(1.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))) / vec4(1.0, 1.0, 1.0, 1.0))[0], _GLF_FUZZED((-7.4 - _GLF_IDENTITY(-7.1, (-7.1) - 0.0))), ((_GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(vec4(1.0), vec4(1.0))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_ONE(1.0, injectionSwitch.y))))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED(99.31)), bvec4(true, false, _GLF_IDENTITY(true, (true) && true), false)))))), vec4(1.0), _GLF_struct_4(mat2x3(1.0), mat3x2(1.0))), 1u, vec3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * _GLF_struct_replacement_6.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_id * subgroup_size))), (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_id * subgroup_size)))) >> 0u)), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / (0u | 1u)))) / 1u) << _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(subgroup_size)))), 0u | (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_id * subgroup_size)))), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / 1u) << _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) : _GLF_FUZZED(subgroup_size)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), (false ? _GLF_FUZZED(-95.99) : injectionSwitch.x)) : _GLF_FUZZED(9.9)), (false ? _GLF_FUZZED(distance(5.9, -2.9)) : (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), (false ? _GLF_FUZZED(-95.99) : injectionSwitch.x)) : _GLF_FUZZED(9.9))))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-268.342)), float(injectionSwitch.y), bool(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-33.98) : injectionSwitch.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, injectionSwitch.x), float(mat4(max(injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, exp(0.0), 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(vec3(-6.2, 24.16, 9.6).z)), float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), bool(true))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5985.1652), _GLF_FUZZED(-4625.7140)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))))) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat3x4(float(injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))))) && true)) || false, ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false))) || false)) || false)))))))) && true)) || false) || false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat4x3(vec2(mat3(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(log(1.0)), tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat4x3(vec2(mat3(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(log(1.0)), tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0))) * (injectionSwitch)).y) / 1.0), (false ? _GLF_FUZZED(144.653) : injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), 0.0 + (float(vec2(1.0, 1.0))))), 0.0)), vec2(mat4x3(vec2(mat3(vec2(1.0, 1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, log(abs(1.0)), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, sin(0.0), log(1.0), 1.0)), min(float(mat3x4(1.0, 0.0, 0.0, log(abs(1.0)), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, sin(0.0), log(1.0), 1.0)), float(mat3x4(1.0, 0.0, 0.0, log(abs(1.0)), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, sin(0.0), log(1.0), 1.0))))), 0.0, _GLF_IDENTITY(0.0, (0.0) + log(1.0)), 1.0, 1.0, 0.0)), _GLF_IDENTITY(sin(log(1.0)), (_GLF_IDENTITY(sin(log(1.0)), float(mat2(sin(log(1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) / abs(1.0)), tan(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 0.0), mat2(mat2x3(mat2(0.0, 1.0, 1.0, 0.0))))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0)))), transpose(transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0))))))))))) * (injectionSwitch)).y) / 1.0), (false ? _GLF_FUZZED(144.653) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(15.04))))), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(15.04))))), 0.0, 1.0))), float(_GLF_FUZZED(-0.3)), bool(false)))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0))), 1.0, 1.0, 0.0)), vec2(mat4x3(vec2(mat3(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sin(log(1.0)), tan(_GLF_IDENTITY(0.0, float(mat2(0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 0.0, 0.0)), 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 1.0, abs(0.0), 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0)), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, exp(0.0), 1.0, abs(0.0), 0.0, 0.0, 0.0)))))), 1.0, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(494.638))), 0.0)), 1.0, 1.0, 0.0))) * (injectionSwitch)).y) / 1.0), (false ? _GLF_FUZZED(144.653) : injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(448.808), _GLF_IDENTITY(_GLF_FUZZED((false ? -7.1 : (6.0))), max(_GLF_FUZZED((false ? -7.1 : (6.0))), _GLF_IDENTITY(_GLF_FUZZED((false ? -7.1 : (6.0))), (_GLF_FUZZED((false ? -7.1 : (6.0)))) / 1.0)))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0]) + 0.0), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))).x)) > injectionSwitch.y) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, 0u)))))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u), (false ? _GLF_FUZZED((workgroup_base >> subgroup_local_id)) : (subgroup_local_id + 1))) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, _GLF_IDENTITY(0u, 0u | (0u)))))))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x + subgroup_id * subgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, _GLF_IDENTITY(0u, 0u | (0u)))))))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, _GLF_IDENTITY(0u, 0u | (0u)))))))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x + subgroup_id * subgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, _GLF_IDENTITY(0u, 0u | (0u)))))))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x + subgroup_id * subgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))) ^ (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)), (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size, (GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size) >> uvec2(0u, _GLF_IDENTITY(0u, 0u | (0u)))))))), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size)) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size))).x + subgroup_id * subgroup_size)))) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u), (false ? _GLF_FUZZED((workgroup_base >> subgroup_local_id)) : (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)))));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))], _GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))), _GLF_IDENTITY(64, max(64, 64)), 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], 1u * _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))), 0u + ((_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid]))))))) / 1u), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)) < subgroup_size)
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) * 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) * 1u, ~ (~ ((next_virtual_gid) * 1u))), (_GLF_IDENTITY((next_virtual_gid) * 1u, ~ (~ ((next_virtual_gid) * 1u)))) >> 0u), _GLF_IDENTITY((next_virtual_gid) * 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) * 1u, ((next_virtual_gid) * 1u) | ((next_virtual_gid) * 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) * 1u, ((next_virtual_gid) * 1u) | ((next_virtual_gid) * 1u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid) * 1u, ((next_virtual_gid) * 1u) | ((next_virtual_gid) * 1u)), uint(uvec2(_GLF_IDENTITY((next_virtual_gid) * 1u, ((next_virtual_gid) * 1u) | ((next_virtual_gid) * 1u)), 0u))), 0u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((next_virtual_gid) * 1u, (next_virtual_gid) * 1u)))), _GLF_IDENTITY((next_virtual_gid) * 1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((next_virtual_gid) * 1u, 0u | ((next_virtual_gid) * 1u)), 0u, 1u, 1u)), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | 0u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY((next_virtual_gid) * 1u, 0u | ((next_virtual_gid) * 1u)), 0u, 1u, 1u))), min((uint(uvec4(_GLF_IDENTITY((next_virtual_gid) * 1u, 0u | ((next_virtual_gid) * 1u)), 0u, 1u, 1u))), _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY((next_virtual_gid) * 1u, 0u | ((next_virtual_gid) * 1u)), 0u, 1u, 1u))), 0u | ((uint(uvec4(_GLF_IDENTITY((next_virtual_gid) * 1u, 0u | ((next_virtual_gid) * 1u)), 0u, 1u, 1u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), (next_virtual_gid) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)), ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u))) << 0u))) << 0u)], uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(1.7, -72.67, 66.97).t) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((1.4 / 9.4))), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(1.7, -72.67, 66.97).t) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((1.4 / 9.4))), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (false)))))) + 1, 4, _GLF_IDENTITY(64, (64) * 1), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), (bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-985.678) : dot(vec4(0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0))))), vec4(0.0, 0.0, 0.0, 1.0))))) * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0), float(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(809.012)), bvec2(false, false))).x) / 1.0)) + 0.0), 0.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))) || false) && true))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (injectionSwitch.x > injectionSwitch.y) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float((injectionSwitch.y) - 0.0), float(_GLF_FUZZED(2235.6592)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.7) : injectionSwitch.y))))), float(_GLF_FUZZED(3366.8515)), bool(false))))), false))), _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), false || (false || (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(-49.46) : injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), false || (((false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(-90.62, _GLF_IDENTITY(6.1, clamp(6.1, _GLF_IDENTITY(6.1, 1.0 * (_GLF_IDENTITY(6.1, float(mat3x2(6.1, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), 6.1))))), clamp(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(-90.62, _GLF_IDENTITY(6.1, clamp(6.1, _GLF_IDENTITY(6.1, 1.0 * (_GLF_IDENTITY(6.1, float(mat3x2(6.1, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), 6.1))))), true ? injectionSwitch : _GLF_FUZZED(exp(vec2(-90.62, _GLF_IDENTITY(6.1, clamp(6.1, _GLF_IDENTITY(6.1, 1.0 * (_GLF_IDENTITY(6.1, float(mat3x2(6.1, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), 6.1))))), _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(exp(vec2(-90.62, _GLF_IDENTITY(6.1, clamp(6.1, _GLF_IDENTITY(6.1, 1.0 * (_GLF_IDENTITY(6.1, float(mat3x2(6.1, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), 6.1))))), (false ? _GLF_FUZZED(vec2(-7.2, 4.0)) : true ? injectionSwitch : _GLF_FUZZED(exp(vec2(-90.62, _GLF_IDENTITY(6.1, clamp(6.1, _GLF_IDENTITY(6.1, 1.0 * (_GLF_IDENTITY(6.1, float(mat3x2(6.1, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 1.0))))), 6.1))))))))))).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), min(vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(vec3(-9135.3708, -8630.7721, -0.8).z)), vec2(_GLF_FUZZED(-0.9), ((injectionSwitch))[1]), bvec2(false, true))), 1.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, cos(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))) / vec2(1.0, 1.0)).x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, 6.1))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(_GLF_IDENTITY(mat4(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, 6.1))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (dot(vec2(0.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))) - 0.0)), 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0), transpose(transpose(mat4(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, 6.1))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), (dot(vec2(0.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))) - 0.0)), 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0)))))))), mix(vec2((_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, _GLF_IDENTITY(6.1, float(float(6.1)))))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(31.42)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))), mix(vec2(_GLF_FUZZED(-95.28), _GLF_IDENTITY(((true ? injectionSwitch : _GLF_FUZZED(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, _GLF_IDENTITY(6.1, float(float(6.1)))))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(31.42)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))[1], (true ? ((true ? injectionSwitch : _GLF_FUZZED(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, _GLF_IDENTITY(6.1, float(float(6.1)))))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(31.42)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))[1] : _GLF_FUZZED(848.923)))), vec2(((true ? injectionSwitch : _GLF_FUZZED(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_FUZZED(3.4), (vec2(-90.62, _GLF_IDENTITY(6.1, float(float(6.1)))))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(31.42)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))[0], _GLF_FUZZED(-3.8)), bvec2(true, false))))[0], ((true ? injectionSwitch : _GLF_FUZZED(exp(_GLF_IDENTITY(vec2(-90.62, 6.1), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.4), cos(0.0) * (_GLF_FUZZED(3.4))), (vec2(-90.62, 6.1))[1]), vec2((vec2(-90.62, 6.1))[0], _GLF_FUZZED(6.5)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false))))))))[1]), vec2(_GLF_FUZZED(97.45), _GLF_FUZZED(8757.8886)), bvec2(false, false)))).y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && (true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))), false, true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
