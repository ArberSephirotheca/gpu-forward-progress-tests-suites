#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0))))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(1.0))), 1.0, 0.0))))).x))) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((+ -22.98))), bvec2(true, false))) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)), 0.0, sin(0.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))), max(_GLF_IDENTITY((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))), ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))) | ((uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) ^ (max(gl_NumWorkGroups, gl_NumWorkGroups)))).x));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      continue;
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y) || false))), true && (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(_GLF_IDENTITY(vec2(68.18, 7.5), mix(vec2((vec2(68.18, 7.5))[0], _GLF_FUZZED(-7644.0818)), vec2(_GLF_FUZZED(187.246), (vec2(68.18, 7.5))[1]), bvec2(false, true))))) : injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(68.18, 7.5))) : injectionSwitch.x))), float(_GLF_FUZZED(4.6)), bool(false))))), 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))))), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (false ? _GLF_FUZZED(173.826) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])))))), injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | 0) ^ 0))], (false ? _GLF_FUZZED(173.826) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))])))))), injectionSwitch)))).y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (false ? _GLF_FUZZED(_GLF_IDENTITY(173.826, clamp(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(1.8)), bool(false))), 173.826, _GLF_IDENTITY(173.826, float(vec2(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(572.961)), bool(false))), 0.0)))))) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)]))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (false ? _GLF_FUZZED(_GLF_IDENTITY(173.826, clamp(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(1.8)), bool(false))), 173.826, _GLF_IDENTITY(173.826, float(vec2(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(572.961)), bool(false))), 0.0)))))) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)]))))))), clamp(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (false ? _GLF_FUZZED(_GLF_IDENTITY(173.826, clamp(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(1.8)), bool(false))), 173.826, _GLF_IDENTITY(173.826, float(vec2(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(572.961)), bool(false))), 0.0)))))) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)]))))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (false ? _GLF_FUZZED(_GLF_IDENTITY(173.826, clamp(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(1.8)), bool(false))), 173.826, _GLF_IDENTITY(173.826, float(vec2(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(572.961)), bool(false))), 0.0)))))) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)]))))))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (false ? _GLF_FUZZED(_GLF_IDENTITY(173.826, clamp(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(1.8)), bool(false))), 173.826, _GLF_IDENTITY(173.826, float(vec2(_GLF_IDENTITY(173.826, mix(float(173.826), float(_GLF_FUZZED(572.961)), bool(false))), 0.0)))))) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (~ (0))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[_GLF_IDENTITY(1, (1) | 0)])))))))))))), injectionSwitch)))).y, float(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], (_GLF_IDENTITY(false ? _GLF_FUZZED(173.826) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])), mix(float(_GLF_FUZZED(7207.7302)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(173.826) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])), (false ? _GLF_FUZZED(58.56) : false ? _GLF_FUZZED(173.826) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], min(injectionSwitch[_GLF_IDENTITY(1, (1) | 0)], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)]))))), bool(true))))))), injectionSwitch)))).y, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0)))) + 0.0)))))
      return;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-56.24) : _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.5))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-4060.7516))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(1.0))), clamp(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-13.05)), bool(false))))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0))), 0.0)), min(_GLF_IDENTITY(float(mat2x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0))), 0.0)), (float(mat2x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0))), 0.0))) - 0.0), float(mat2x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec2(1.0, 0.0))), 0.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(1.0))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, abs(0.0), 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(1.0))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))), clamp(_GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))), max(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))), _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))), (true ? float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))) : _GLF_FUZZED(-78.44))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.6))), 0.0)), 0.0, 1.0)), 0.0, 1.0, 0.0))), 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-760.612)), float(1.0), bool(true)))))))))), float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0), clamp(vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0), mix(vec4((vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))[0], (vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))[1], _GLF_FUZZED((-52.81 * -0.3)), (vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))[3]), vec4(_GLF_FUZZED(-172.072), _GLF_FUZZED(72.38), (vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0))[2], _GLF_FUZZED(7.2)), bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.0) : 0.0))))), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 1.0))))).y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))));
      }
    }
   return;
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) || false), _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), true, _GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false), false)))), true, true, false)))) || (_GLF_IDENTITY(false, true && (false))))))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false)))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), (((false))) && true))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false))) || false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, true && (false))) || false))), (bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(false, true && (false))) || false)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), ((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, true && (false))) || false))), (bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(false, true && (false))) || false)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true)))))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false)))))))), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true)))))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false)))))))), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true)))))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false)))))))), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))), true, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))), true && (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec3(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true, true)))))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (false) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false)))))))), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))) && true) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true)))))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, false || ((false) || false)), ! (_GLF_IDENTITY(! ((false) || false), true && (! ((false) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, (false) || false)))), (bool(bool((_GLF_IDENTITY(false, (false) || false))))) || false)) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true)))))))), ! (! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true)))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true, bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))))) && true)))))))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)), (bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false))))))), false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))), mix(vec2(_GLF_FUZZED(744.857), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))[1]), vec2((vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2x4(mat2x4(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))[0], _GLF_FUZZED(vec2(-5.5, 17.64).y)), bvec2(true, false)))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))), true && (! (injectionSwitch.x > injectionSwitch.y))))))), false))) || false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false)), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (false) || false))))), _GLF_IDENTITY(true, (true) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(-6069.7968)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), false))) || false), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! _GLF_IDENTITY(((false)), ! (! (((false))))))))) || false), true && _GLF_IDENTITY((! ((false) || false)), (_GLF_IDENTITY((! ((false) || false)), false || ((! ((false) || false))))) || false)))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-89.02, -31.69)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + sin(0.0)), 1.0, 0.0), (mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0)) > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3982.9113)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3982.9113)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (mat4(float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0), (mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3982.9113)), bool(false))), 0.0, 1.0, 1.0, 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) / 1.0)) > injectionSwitch.y)))) || false), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))))), false))) || false))))))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false || ((! (false))), ! (! (false || ((! (false))))))))), ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)))))))))) || false) && true))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), false)))), ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))) || false) && true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false))) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))) || false, bool(bvec4(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))) || false, ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))) || false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * workgroup_id) - 0u)) / 1u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) * 1u), (~ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : subgroup_id)))))) | 0u))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)) | 0u, ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))))) | 0u) / 1u));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | (0 >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
            {
             return;
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4824.3801) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.9)), bool(false))), injectionSwitch.y))))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4005.8635), _GLF_FUZZED(93.03)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (93841 & 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(-935.169, -633.952, 77.61, 99.03)))) * (injectionSwitch)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(_GLF_IDENTITY(bvec2((! (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false)))), false), true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1))), 4, 64, 4);
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(-191.409)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(-191.409)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(-191.409)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.4), _GLF_FUZZED(-191.409)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))))), false, false, false)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) / 1), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(14.41), _GLF_FUZZED(float(179270u))), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.7)), bool(false))) < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), max(int(int(0)), int(int(0)))), (int(int(0))) | (int(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(91082) : 0)))))))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != (1 ^ _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) << 0))))); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     continue;
                    }
                   break;
                  }
                }
              }
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) * (float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))) > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                }
               else
                {
                 return;
                }
              }
             return;
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(793.896)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + 0), uint(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), (false ? _GLF_FUZZED(uvec2(101350u, 122133u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), clamp(uvec2(subgroup_local_id + 1, 1u), uvec2(subgroup_local_id + 1, 1u), uvec2(subgroup_local_id + 1, 1u))), (_GLF_IDENTITY(uvec2(subgroup_local_id + 1, 1u), clamp(uvec2(subgroup_local_id + 1, 1u), uvec2(subgroup_local_id + 1, 1u), uvec2(subgroup_local_id + 1, 1u)))) << uvec2(0u, 0u)))))) < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), (! (! (! (_GLF_DEAD(false))))) || false))))))))
          break;
         return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || ((! (false))))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.3)), vec2(_GLF_FUZZED(-0.7), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]), max(clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]), clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))))), bvec2(false, true))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
        continue;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true)) && (_GLF_DEAD(false)))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false))))), false, true))))))) && (_GLF_DEAD(false))), true, true, true))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) > 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(vec2(2275.3384, 934.670)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(bool(bvec3((! (! (false))), true, false)), ! (! (bool(bvec3((! (! (false))), true, false)))))))))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), true))))))))))), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || false))), (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) || false))))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))))), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(1 * (int(7)), (1 * (int(7))) / 1))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(_GLF_IDENTITY(7, (7) - 0))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), sqrt(0.0), 0.0, 0.0, 1.0))))), false)))), true && (bool(bool(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(_GLF_IDENTITY(7, (7) - 0))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), sqrt(0.0), 0.0, 0.0, 1.0))))), false)))))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))), true, false, false)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), true, false, false)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, int(int(1))), min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), 1 * (~ (int(1)))))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1 * (~ (int(1))))))))) / 1), read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(1, int(int(1)))))) / 1)) >> (_GLF_IDENTITY(0 | _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0))).y)))) / 1), (true ? 0 | _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), ((0)) | ((0)))))) / int(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(_injected_loop_counter))))))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(6.3)) : 1.0)), injectionSwitch.y)), clamp(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(6.3)) : 1.0)), injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(6.3)) : 1.0)), injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(6.3)) : 1.0)), injectionSwitch.y)))), 1u, 1u)))))) ^ (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)), clamp((_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), _GLF_IDENTITY((uint(5u)), 0u | ((uint(5u)))), (uint(5u)))) | (uint(5u)))))), bool(bool(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY((_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) | (1)))), (int(int(1))) / 1)), max((_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) | (1)))), (int(int(1))) / 1)), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) | (1)))), (int(int(1))) / 1)))) ^ 0)) == read_2)))) + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(min(ivec2(1, _GLF_IDENTITY(1, 0 ^ (1))), _GLF_IDENTITY(ivec2(1, 1), (ivec2(_GLF_IDENTITY(1, (1) - 0), 1)) | (ivec2(1, 1)))), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY((min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) >> ivec2(0, 0), clamp(_GLF_IDENTITY((min(ivec2(1, 1), ivec2(1, 1))) >> _GLF_IDENTITY(ivec2(0, 0), ivec2(1, 1) * (ivec2(0, 0))), ~ (~ ((min(ivec2(1, 1), ivec2(1, 1))) >> ivec2(0, 0)))), (min(ivec2(1, 1), ivec2(1, 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0), clamp(ivec2(0, 0), _GLF_IDENTITY(ivec2(0, 0), ivec2(1, 1) * (ivec2(0, 0))), ivec2(0, 0))), (ivec2(0, 0)) - ivec2(0, 0)), (min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-5193))), 1))) >> ivec2(0, 0))))) | _GLF_IDENTITY((min(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), 0 | (_GLF_IDENTITY(1, (1) << 0))) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_injected_loop_counter))), clamp(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))))))))), ivec2(1, 1))), ((min(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, (1) * 1)), (max(1, _GLF_IDENTITY(1, (1) * 1))) | 0)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_injected_loop_counter)))), ivec2(1, 1)))) | ((min(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) << 0) : _GLF_FUZZED(_injected_loop_counter)))), ivec2(1, 1))))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | ivec2(0, 0)), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), ((1)) * 1)), ((_GLF_IDENTITY((1), ((1)) * 1))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), int(5)))) >> 0)))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1))))))))), min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY((_GLF_IDENTITY((1), ((1)) * 1)) >> 0, ((_GLF_IDENTITY((1), ((1)) * 1)) >> 0) | ((_GLF_IDENTITY((1), ((1)) * 1)) >> 0)))))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) >> 0)))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1))))))))), int(ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) >> 0)))), (~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) * 1)) >> 0))))) + 0), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1))))))))), 0, 1))))), 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), ivec2(ivec3(min(ivec2(1, 1), ivec2(1, 1)), 1))), clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(_GLF_IDENTITY(ivec3(1, 0, 1), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(0), ivec3(0))) >> _GLF_IDENTITY(ivec3(0), ivec3(0))) * (ivec3(1, 0, 1))))))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))), 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(1, 1)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (31597 & int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1))), (ivec2(1, 1)) | ivec2(0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (31597 & int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1))), (ivec2(1, 1)) | ivec2(0, 0))), (~ (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (31597 & int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1))), (ivec2(1, 1)) | ivec2(0, 0)))) ^ ivec2(0, 0)))), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1)))))))), ((1 ^ 0) & 1) * (~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), 1)), int(ivec2(~ (_GLF_IDENTITY(1, ~ (~ (1)))), 1))))), int(ivec4(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), 1)), int(ivec2(~ (_GLF_IDENTITY(1, ~ (~ (1)))), 1))))), 1, (0 | 0), 0))))))))), 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, max(1, 1)))))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (true ? min(ivec2(1, 1), ivec2(1, 1)) : _GLF_FUZZED(ivec2(-11363, -74692))))) / ivec2(1, 1))))), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))))))), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))))))), clamp(min(_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), (ivec4((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))), ivec2(0, 0) ^ ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(int(-797.390)) : 1)))), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))))))))))) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(1, 1)))))), (false ? _GLF_FUZZED(ivec2(-66683, _GLF_IDENTITY(-98672, (-98672) | (-98672)))) : (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))), ~ (~ (ivec2(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))), (false ? _GLF_FUZZED(ivec2(79426, 21901)) : ivec2(_GLF_IDENTITY(ivec2(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))), ~ (~ (ivec2(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)))))))))))) >> ivec2(0, 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(31597, (31597) | 0) & int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1))), (ivec2(1, 1)) | ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((1), ~ (~ ((1)))), (~ (1)) + 0), min(~ (_GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(37307) : 1))), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(_GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1)))), int(ivec2(~ (1), 1)))))))), ((1 ^ 0) & 1) * (~ (_GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(ivec2(~ (1), 1)), int(ivec2(~ (1), 1))))))))))), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (true ? min(ivec2(1, 1), ivec2(1, 1)) : _GLF_FUZZED(bitfieldReverse(ivec2(39161, 50495))))), (_GLF_IDENTITY(min(ivec2(1, _GLF_IDENTITY(1, (1) | (1))), ivec2(1, 1)), clamp(_GLF_IDENTITY(min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))), ivec2(1, 1) * ((_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) >> ivec2(0, 0)), 1)))))) >> ivec2(0, 0))), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38091) : 1)), 1)))), min(ivec2(_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1), ((1)) | 0)), _GLF_IDENTITY(int(ivec3(~ (_GLF_IDENTITY((1), ((1)) | 0)), 0, 1)), (true ? int(ivec3(~ (_GLF_IDENTITY((1), ((1)) | 0)), 0, 1)) : _GLF_FUZZED(_injected_loop_counter)))))) | 0)))))), _GLF_IDENTITY(1, (1) << 0)), ivec2(1, 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (false ? _GLF_FUZZED(ivec2(-31380, 20425)) : ivec2(1, 1)))) - ivec2(0, 0)))), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))))) >> ivec2(0, 0))) | (min(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-98156))), 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-98156)))))) >> (0 & 37420)), 1), ivec2(1, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), 1, 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((ivec2(1, 1)), (_GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) | (_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1)))))) | ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(_GLF_IDENTITY(ivec2(~ (1), 1), (ivec2(~ (1), 1)) / ivec2(1, 1))), int(ivec2(~ (1), 1))))))), max(_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(_GLF_IDENTITY(ivec2(~ (1), 1), (ivec2(~ (1), 1)) / ivec2(1, 1))), int(ivec2(~ (1), 1))))))), _GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(_GLF_IDENTITY(ivec2(~ (1), 1), (ivec2(~ (1), 1)) / ivec2(1, 1))), int(ivec2(~ (1), 1))))))))))), 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(_GLF_IDENTITY(1, (1) | (1)), 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))), (clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)), 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))) | (ivec2(_GLF_IDENTITY(0, (0) >> 0), 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5)))))) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(1, 1))))), min(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((ivec2(1, 1)), _GLF_IDENTITY((ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) | (_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1))))), ((ivec2(_GLF_IDENTITY(0, (0) | 0), 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5))) | (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (ivec2(1, 1)))), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1)))))) / ivec2(1, 1))) | ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(_GLF_IDENTITY(ivec2(~ (1), 1), (ivec2(~ (1), 1)) / ivec2(1, 1))), int(ivec2(~ (1), 1))))))))), 1)), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))), (clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5)))))) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(1, 1))), (_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))), (clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5)))))) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(1, 1))), ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))), (clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5)))))) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(1, 1)))) ^ ivec2(0, 0))) + ivec2(0, 0)))), _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))), ~ (~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY((ivec2(1, 1)), (ivec2(0, 0) >> _GLF_IDENTITY(_GLF_IDENTITY(ivec2(5), ivec2(5)), (_GLF_IDENTITY(ivec2(5), ivec2(5))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(3), ivec2(3))))) | _GLF_IDENTITY((_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1))))), clamp((_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1))))), (_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1))))), ~ (~ ((_GLF_IDENTITY((ivec2(1, 1)), clamp((ivec2(1, 1)), _GLF_IDENTITY((ivec2(1, 1)), ivec2(0, 0) + ((ivec2(1, 1)))), (ivec2(1, 1))))))))))) | ivec2(0, 0)), ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), min(int(_GLF_IDENTITY(ivec2(~ (1), 1), (ivec2(~ (1), 1)) / ivec2(1, 1))), int(ivec2(~ (1), 1))))))))), 1)), (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))), (clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), ivec2(5)))))) >> ivec2(0, 0), ((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1))), (clamp(_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1))), (min(min(ivec2(1, 1), ivec2(1, 1)), min(ivec2(1, 1), ivec2(1, 1)))) - (ivec2(0, 0) << _GLF_IDENTITY(ivec2(4), ivec2(4))))), min(ivec2(1, 1), ivec2(1, 1)), _GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) / ivec2(1, 1)))) | (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(5), _GLF_IDENTITY(ivec2(5), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(5), 0, 1), min(ivec4(ivec2(5), 0, 1), ivec4(ivec2(5), 0, 1)))), (ivec2(_GLF_IDENTITY(ivec4(ivec2(5), 0, 1), min(ivec4(ivec2(5), 0, 1), ivec4(ivec2(5), 0, 1))))) >> (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(2), ivec2(2)))))))))) >> ivec2(0, 0)) - ivec2(0, 0)))) | (min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), ~ (~ (ivec2(1, 1))))))))))))) - (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), 0)), 0 + (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), 0)))), 0), _GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(_injected_loop_counter))), 0)))), 0), (true ? ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), 0)), 0) : _GLF_FUZZED(ivec2(57337, -5994))))), max(ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(_injected_loop_counter))), 0)))), 0), (true ? ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), 0)), 0) : _GLF_FUZZED(ivec2(57337, -5994))))), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | (0)) : _GLF_FUZZED(_injected_loop_counter))), 0)))), 0), (true ? ivec2(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-53836) : 0)), 0)), 0) : _GLF_FUZZED(ivec2(57337, -5994)))))))) ^ ivec2(0, 0)))), int(ivec3(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(min(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1)), _GLF_IDENTITY(1, ~ (~ (1)))), ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((1) << 0, int(_GLF_IDENTITY(int((1) << 0), 0 + (int((1) << 0)))))))), 1)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(ivec2(1, 1), ivec2(1, 1))) >> ivec2(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))) | (min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))), (false ? _GLF_FUZZED(ivec2(4091, 12989)) : (_GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1))), ivec2(1, 1)), _GLF_IDENTITY((min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(-34500, 69287))))) | ivec2(0, 0)))), ((min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(-34500, 69287))))) | ivec2(0, 0))))) | ivec2(0, 0)) >> ivec2(0, 0))) | (min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))), ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(min(ivec2(1, 1), ivec2(1, 1)), (min(_GLF_IDENTITY(ivec2(1, 1), max(_GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) - ivec2(0, 0)), ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, 1), ~ (_GLF_IDENTITY(~ (ivec2(1, 1)), (false ? _GLF_FUZZED(ivec2(98144, 71277)) : ~ (ivec2(1, 1)))))))), ivec2(1, 1))) >> _GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0), (ivec2(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)) / ivec2(1, 1))) >> ivec2(0, 0)))) | (min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))), (false ? _GLF_FUZZED(ivec2(4091, 12989)) : (_GLF_IDENTITY(min(_GLF_IDENTITY(ivec2(1, 1), min(ivec2(1, 1), ivec2(1, 1))), _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))), ~ (~ (ivec2(1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1)))))))) | ivec2(0, 0))) / ivec2(1, 1))), _GLF_IDENTITY((min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(-34500, 69287))))) | ivec2(0, 0)))), _GLF_IDENTITY(((min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(-34500, 69287))))) | ivec2(0, 0))))), (((min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(ivec2(-34500, 69287))))) | ivec2(0, 0)))))) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | ivec2(0, 0)) >> ivec2(0, 0))) | (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), ivec2(0, 0) + (min(ivec2(1, 1), ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))))))))))), (_GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(min(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1), ivec2(1, 1)), (_GLF_IDENTITY(min(ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), 0 + ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))), (1), _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), min((1), (1)))))))), (_GLF_IDENTITY((1), (true ? (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) - (0 & 75552)))))) - 0))) - _GLF_IDENTITY(0, (0) | 0))))) >> 0)), ivec2(1, 1)), (min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))))) >> ivec2(0, _GLF_IDENTITY(0, (0) | (0 ^ 0))))) | (min(ivec2(1, 1), _GLF_IDENTITY(ivec2(1, 1), max(ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) + 0))))))))))) >> (ivec2(0, 0) | ivec2(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) ^ 0)))))))), _GLF_IDENTITY(1, (1) ^ 0), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), 4, 64, 4);
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (false), true))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, false)), (bool(bvec4(! (false), false, false, false))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(bool(bvec4((! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, true, true)), false || (bool(bvec4((! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))), false, true, true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((! (false)), true && ((! (false))))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))))), true && (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))))), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))))), (! (_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true)))))))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))))), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true))))))))))), (! (_GLF_IDENTITY(! (! ((! (false)))), ! (_GLF_IDENTITY(! (! (! ((! (false))))), bool(bool(! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true)))))))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))), (true && ((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || (! (! (false)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), bool(bvec2(_GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) || false), true)))))), bool(bvec3((bool(_GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), bool(bvec2(_GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) || false), true)))))), false, true))) || false))))))) || false)))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0))), (vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))), (true ? vec2(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0))), (vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))), clamp(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))), _GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))), _GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0))), (vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(5426.8812, -784.219, -783.091, -191.258).s)), bool(false)))), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))), (true ? vec2(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0))), (vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, sqrt(0.0), 1.0)), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(0.0), 1.0), clamp(vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0), vec4(injectionSwitch, sqrt(0.0), 1.0))))) + vec2(0.0, 0.0)))) + sqrt(vec2(0.0, 0.0)))) + vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))))).y))))))
        continue;
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (true)), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       return;
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && _GLF_IDENTITY(true, (true) && true)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true)))) || false), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(32.31, 7.0)) : _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0))))).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     do
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          break;
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             continue;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           subgroupAll(false);
          }
         while(_GLF_WRAPPED_LOOP(false));
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(949.928)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))), bool(bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bool(! (! (true))))))))), bool(bvec2(true, false)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), false, true))), (bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), (injectionSwitch.x < injectionSwitch.y)), false, true)))))), false, true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, true))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.y))))))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-9.7, -502.602)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))).y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bool(! ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (! (false))), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))), bvec2(bvec2(bvec2(bool(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))) || false)))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false))), false || (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))), injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-790.610))) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), ! (! (bool(bvec2(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false), (false) && true), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), _GLF_IDENTITY(false, true && (false)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), false, true))), false, false))))), true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false), (false) && true), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), _GLF_IDENTITY(false, true && (false)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), false, true))), false, false))))), true))), bool(_GLF_IDENTITY(bvec3(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false), (false) && true), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), _GLF_IDENTITY(false, true && (false)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), false, true))), false, false))))), true))), false, false), bvec3(bvec3(bvec3(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || false), (false) && true), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))), _GLF_IDENTITY(false, true && (false)), false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec4(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (true))), false))), false, true))), false, false))))), true))), false, false))))))))) && true))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 ^ 0))); _injected_loop_counter --)
              {
               return;
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, 0u ^ (read_1)))) + 1 == read_2) + 1, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))))))
  return;
}
