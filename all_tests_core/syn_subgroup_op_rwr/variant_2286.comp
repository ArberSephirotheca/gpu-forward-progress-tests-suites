#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false || (bool(_GLF_DEAD(false))), false || (false || (bool(_GLF_DEAD(false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (bool(_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false)))))))))) || false)), bool(bvec2(false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false))))))), false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-56.48, clamp(_GLF_IDENTITY(-56.48, (_GLF_IDENTITY(-56.48, mix(float(_GLF_FUZZED(vec2(-1.1, -8.9).x)), float(-56.48), bool(true)))) - 0.0), _GLF_IDENTITY(-56.48, float(mat2x3(-56.48, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(-56.48, float(mat4x2(-56.48, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0))))), -8.7)) : injectionSwitch)).x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false)))))))))) || false)), bool(bvec2(false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false))))))), false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-56.48, clamp(_GLF_IDENTITY(-56.48, (_GLF_IDENTITY(-56.48, mix(float(_GLF_FUZZED(vec2(-1.1, -8.9).x)), float(-56.48), bool(true)))) - 0.0), _GLF_IDENTITY(-56.48, float(mat2x3(-56.48, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(-56.48, float(mat4x2(-56.48, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0))))), -8.7)) : injectionSwitch)).x > injectionSwitch.y))), true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (float(mat4x2(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0)))))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false)))))))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false))))))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false))))))), false, true), true))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))))))), ! (! (bool(bvec3(false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y))), false, false)), false, true))))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (bool(_GLF_DEAD(false))))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) && ((bool(_GLF_DEAD(false))))))), bool(bvec2(false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_DEAD(false))))))), false)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-56.48, -8.7)) : injectionSwitch)).x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), true)))) && true), false || (bool(_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), false, true))))))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true), false || (bool(_GLF_DEAD(false)))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || ((! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec2(bvec2(false || (_GLF_IDENTITY(false, ! (! (false)))), true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false, _GLF_IDENTITY(false, false || (false)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false, false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (false) && true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-461.315)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(867.717), _GLF_FUZZED(5.5)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && true)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) && true)), true))))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, false))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, (true ? (injectionSwitch.y) - 0.0 : _GLF_FUZZED(-1.0))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0, clamp((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0)))))))) && true))), _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))))))) && true)), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)) + (1.0)), 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, abs(0.0), 1.0))))), vec2(_GLF_IDENTITY(vec4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(_GLF_IDENTITY(1.0, tan(0.0) + (1.0)), injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y), mix(float((_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(65.96)), bool(false)))), 1.0, 1.0, 0.0, abs(0.0), 1.0))))), 0.0, 1.0), (false ? _GLF_FUZZED(vec4(8.5, -5.8, -7729.3280, -950.083)) : _GLF_IDENTITY(vec4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-281.596), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9091.0554)), bvec2(true, false))).y)), 1.0, 1.0, 0.0, abs(0.0), 1.0))))), 0.0, 1.0), (vec4(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, abs(0.0), 1.0), mat4x2(mat4x3(mat4x2(injectionSwitch, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) / _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) * 1.0))), 1.0, 1.0, 0.0, abs(0.0), 1.0))))), 0.0, 1.0)) * mat4(1.0))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).y) - 0.0))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(112161u))), bool(false))), (injectionSwitch.y) - 0.0)) / 1.0)))))))) && true))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(round(injectionSwitch)))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))) && true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), _GLF_IDENTITY(true, (true) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))), _GLF_IDENTITY(true, (true) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -9.5)))) : _GLF_FUZZED(vec2(-4.8, 809.510)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(32214))), vec2(_GLF_FUZZED(-71.76), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec4(injectionSwitch, 0.0, 0.0))))) - vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))[1]) | (gl_WorkGroupID[1])), gl_WorkGroupID[2])).x, (gl_WorkGroupID.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0))))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))).x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(min(3u, 3u), (min(3u, 3u)) ^ 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u)) << _GLF_IDENTITY(uint(8u), uint(8u))) + (0u))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (0u) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))), 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))), ~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))), max((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))))))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))))))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u ^ _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) * 1u)), max(_GLF_IDENTITY((subgroup_id), 0u ^ _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) * 1u)), _GLF_IDENTITY((subgroup_id), 0u ^ _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) * 1u)))) | (subgroup_id), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u ^ _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) * 1u)), max(_GLF_IDENTITY((subgroup_id), 0u ^ _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) * 1u)), _GLF_IDENTITY((subgroup_id), 0u ^ _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) * 1u)))) | (subgroup_id))))))) * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (mat2(injectionSwitch.x, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.40), _GLF_FUZZED(-2533.2317)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(57.40), _GLF_FUZZED(-2533.2317)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y) / 1.0), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, true))), false || (bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), true, true))), false || (bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), true, true))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))), injectionSwitch)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / (_GLF_IDENTITY(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))), clamp(clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))), _GLF_IDENTITY(clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))), clamp(_GLF_IDENTITY(clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))))), _GLF_IDENTITY(clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u)))), (clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u))))) << 0u), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / 1u), 7u, 7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u), (((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(true, ! (! (true))) ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)), 1u * ((uint(2u)))) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / 1u), 7u, 7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u)) | (_GLF_IDENTITY(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) ^ (0u | 0u)), uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))) / 1u), _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u | (2u))) << (1u ^ 1u)))))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), abs(1.0))), mix(float(float(mat3x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), abs(1.0)))), float(_GLF_FUZZED(vec2(970.933, -3683.5418).t)), bool(false))))), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / 1u), 7u, 7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u), clamp(((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (7u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base))))), uvec2(0u, 0u) ^ (uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u, (((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u) | 0u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uvec3(165386u, 92147u, 116286u).t)))), 7u, 7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u))), uint(7u))))) | 0u), ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec4(2u, 0u, 0u, 0u)), (uint(uvec4(2u, 0u, 0u, 0u))) - 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-921.042)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u | (2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-921.042)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u | (2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), min((_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-921.042)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u | (2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))), (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(-921.042)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, 0u | (2u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, 2u))))))))))))) / 1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / 1u), 7u, 7u))), uint(7u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / 1u), 7u, 7u))), uint(7u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, (7u) / 1u), 7u, 7u))), uint(7u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u), ((1u ^ 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(_GLF_IDENTITY(7u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))))))))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), (uint(uint(2u))) | 0u))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u)), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) << 0u, ((uint(2u)) << 0u) | ((uint(2u)) << 0u))))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, uint(uvec4(2u, 0u, 0u, 0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) >> (1u ^ 1u)), _GLF_IDENTITY(min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))) | (min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), max(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(uvec2(7u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(-540.592, -2.5, 8.3, -4.2)) : mat2(injectionSwitch, 1.0, 1.0)))))) / vec2(1.0, 1.0)).x))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY((uint(2u)) << 0u, ((uint(2u)) << 0u) - 0u)))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(7u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))) / uvec2(1u, 1u))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))))), (_GLF_IDENTITY(7u, uint(uvec2(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(workgroup_base)))))))) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) / 1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (7u) ^ 0u), 7u)), (7u) / 1u), 7u, 7u))), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u)))))))], _GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(ivec3(-63223, -57823, -78137)[1]) : _GLF_IDENTITY(64, max(64, 64)))), _GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 ^ (~ (0)))))))))))), 0)), clamp(_GLF_IDENTITY(0, (0) >> 0), 0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(151.361)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) | (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), 0u ^ (0u ^ (next_virtual_gid))))) ^ 0u)), max(uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), 0u ^ (0u ^ (next_virtual_gid))))) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), 0u ^ (0u ^ (next_virtual_gid))))) ^ 0u)), (uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), 0u ^ (0u ^ (next_virtual_gid))))) ^ 0u))) | (uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u ^ (next_virtual_gid), 0u ^ (0u ^ (next_virtual_gid))))) ^ 0u)))))), (uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), max(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) ^ _GLF_IDENTITY((next_virtual_gid), uint(uvec4((next_virtual_gid), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) ^ 0u)), (true ? uint(5u) : _GLF_FUZZED(workgroup_size))), uint(5u))), 0u, 0u)))), _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))))))) ^ 0u))) | 0u)))))], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(0u), uint(0u))), 1u))), (_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), 1u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u))))), (1u & 1u), 1u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))) | (buf[virtual_gid])), clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))), false, false)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(73.64)), vec2(_GLF_FUZZED(8.6), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-403.568 * 7524.2478)), _GLF_FUZZED(5949.6386)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, abs(1.0), 1.0), mat2(_GLF_IDENTITY(mat2(mat2(injectionSwitch.y, 0.0, abs(1.0), 1.0)), (mat2(mat2(injectionSwitch.y, 0.0, abs(1.0), 1.0))) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))))), (true ? float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, abs(1.0), 1.0), mat2(_GLF_IDENTITY(mat2(mat2(injectionSwitch.y, 0.0, abs(1.0), 1.0)), (mat2(mat2(injectionSwitch.y, 0.0, abs(1.0), 1.0))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) : _GLF_FUZZED(-6792.6016)))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id))) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id) >> 0u, (_GLF_IDENTITY((subgroup_local_id) >> 0u, uint(uvec4((subgroup_local_id) >> 0u, 1u, 0u, (1u & 1u))))) / 1u)) + 1 < subgroup_size) || _GLF_IDENTITY(false, ! (! (false)))), false), false, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id))), (subgroup_local_id), (subgroup_local_id))) >> 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1))))) < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))), max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY((subgroup_local_id) >> 0u, (_GLF_IDENTITY((subgroup_local_id) >> 0u, uint(uvec4((subgroup_local_id) >> 0u, 1u, 0u, (1u & 1u))))) / 1u)) + 1 < subgroup_size) || _GLF_IDENTITY(false, ! (! (false)))), false), false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))), false, true, false)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))))), (! (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5922.4374)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, 1.0)), (float(vec3(injectionSwitch.x, 1.0, 1.0))) / 1.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, (true ? uint(read_1 + 1 == read_2) + 1 : _GLF_FUZZED(subgroup_local_id))), 4, 64, _GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(6), int(6))) ^ (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_DEAD(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, determinant(mat2(1.0, sin(0.0), 0.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, abs(1.0)), vec2(length(vec2(0.0, 0.0)), 0.0)), dot(vec2(1.0, abs(1.0)), vec2(length(vec2(0.0, 0.0)), 0.0))), 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) * 1) == read_2, true && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 | (1)))) == read_2, (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid)))) | (_GLF_IDENTITY(read_1, 0u | (read_1)))) + 1, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (read_1 + 1)), min(read_1 + 1, read_1 + 1))))) / 1u, ((_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((read_1 + 1), ((read_1 + 1)) >> 0u) | (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))))) / 1u) | ((_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (1))) | (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(min(read_1 + 1, read_1 + 1), ~ (_GLF_IDENTITY(~ (min(read_1 + 1, read_1 + 1)), clamp(~ (min(read_1 + 1, read_1 + 1)), ~ (min(_GLF_IDENTITY(read_1 + 1, 0u | (read_1 + 1)), read_1 + 1)), ~ (min(read_1 + 1, read_1 + 1)))))))))) / 1u))) == read_2) || false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true && (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1, (_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1))) | (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))))) / 1u) == read_2) || false))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3868.9172, 5.5)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
