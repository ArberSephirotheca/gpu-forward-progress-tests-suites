#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))), false)))), true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) : _GLF_FUZZED(-43.71), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) : _GLF_FUZZED(-43.71)) / 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) : _GLF_FUZZED(-43.71))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))) && true)) && true), true))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (true && (false)) && true))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-161.816) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8219.6827)), _GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))))), bool(true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(412.923, -83.52, 253.201, -757.464).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8.4)), bvec2(true, false))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (false ? _GLF_FUZZED(98141u) : _GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), 0u ^ (~ (workgroup_size)))))) - 0u))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((subgroup_id * subgroup_size) ^ 0u, ((subgroup_id * subgroup_size) ^ 0u) << 0u))))) | (subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))))), (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id))))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) << 0u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u * (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec2(_GLF_IDENTITY(uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), clamp(uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))))) + uvec2(0u, 0u)))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec2(_GLF_IDENTITY(uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), clamp(uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))))) + uvec2(0u, 0u)))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), min(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uvec2(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), uvec2(_GLF_IDENTITY(uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), clamp(uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), uvec2(uvec2(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))))) + uvec2(0u, 0u))))))))) + subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u, 0u)))))))) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_FUZZED(uint(-7.2)) : (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) << 0u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 1u, (84421u & (1u ^ 1u)))), min(uint(uvec3(subgroup_local_id, 1u, (84421u & (1u ^ 1u)))), uint(uvec3(subgroup_local_id, 1u, (84421u & (1u ^ 1u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) << 0u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1], (injectionSwitch[1]) - 0.0))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1], (injectionSwitch[1]) - 0.0))))).y) * sqrt(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1], (injectionSwitch[1]) - 0.0))))).y), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1], (injectionSwitch[1]) - 0.0))))).y), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1], (injectionSwitch[1]) - 0.0))))).y))) * sqrt(1.0)) + 0.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, true, false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))), (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1)), (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 + (1)), 1))) + 0))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(subgroup_size, _GLF_IDENTITY(0u, (0u) >> 0u))), (~ (uvec2(subgroup_size, 0u))) | (~ (uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(subgroup_size, 0u)), (~ (_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) + uvec2(0u, 0u)))) | (~ (uvec2(subgroup_size, 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 1u)))) ^ 0u))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)))), 0u)), (~ (uvec2(subgroup_size, 0u))) | (~ (uvec2(subgroup_size, 0u)))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(~ (uvec2(subgroup_size, 0u)), (~ (_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u))))) | _GLF_IDENTITY((~ (uvec2(subgroup_size, 0u))), max((~ (uvec2(subgroup_size, 0u))), (~ (uvec2(subgroup_size, 0u))))))))))) : _GLF_FUZZED(uvec2(41004u, 196151u)))))))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u))))))), 0u)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) - 0u), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) - 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) - 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) - 0u)) - 0u))), 0u))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), uvec2(0u, 0u) ^ (uvec2(subgroup_size, 0u)))), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), (true ? ~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec3(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), 0u, 1u))), uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)))), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))) : _GLF_FUZZED((subgroup_id --))))))))), clamp(~ _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))))))))))), 0u ^ (_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))))))))))) + 0u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ _GLF_IDENTITY((~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))), clamp(_GLF_IDENTITY((~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))), min((~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))), (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), _GLF_IDENTITY((~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) - (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u))))), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), 0u))))), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)), 0u))))), 0u))))) | 0u), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, 0u))), 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(subgroup_size, _GLF_IDENTITY(0u, (0u) | (0u))) : _GLF_FUZZED(uvec2(100200u, 55726u))))), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))), clamp(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))), max(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))) >> 0u))), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(uint(uvec3(uint(uvec2(subgroup_size, 0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(uint(uvec2(subgroup_size, 0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), (68647u & 0u) + (_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))) + 0u))))))))))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))) >> 0u)), clamp((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))) >> 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))) >> 0u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))), (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))) >> 0u))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), ~ (~ (uvec2(subgroup_size, 0u))))), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) ^ 0u), 0u)), uint(uvec2(subgroup_size, _GLF_IDENTITY(0u, 0u | (0u))))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : uint(uvec2(subgroup_size, 0u))))), 0u)), uint(uvec2(subgroup_size, 0u))))))))))))))))), ~ (~ (~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), 0u)))))), ~ (~ (((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), clamp(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) / uvec2(1u, 1u)))), _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), max(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u)))), uint(uvec2(subgroup_size, 0u)))), _GLF_IDENTITY((uint(uvec2(subgroup_size, 0u))) ^ 0u, ((uint(uvec2(subgroup_size, 0u))) ^ 0u) / 1u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))))))))), 1u * ((~ _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u))), (_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))) | (_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), uint(uvec2(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(subgroup_size, 0u)), uint(uvec2(subgroup_size, 0u))))), 0u)))), uint(uvec2(subgroup_size, 0u))), 0u)))))))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((virtual_gid + workgroup_size)) : subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))), clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), (true ? min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))) : _GLF_FUZZED(subgroup_id)))) | (min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) << 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), _GLF_IDENTITY(min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))), ~ (~ _GLF_IDENTITY((min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((min(uint(uvec2(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), 0u)), uint(uvec2(subgroup_size, 0u))))))))))))))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(883.205)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(883.205)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(883.205), mix(float(_GLF_IDENTITY(_GLF_FUZZED(883.205), clamp(_GLF_IDENTITY(_GLF_FUZZED(883.205), clamp(_GLF_FUZZED(883.205), _GLF_FUZZED(883.205), _GLF_FUZZED(883.205))), _GLF_FUZZED(883.205), _GLF_FUZZED(883.205)))), float(_GLF_FUZZED(-5.6)), bool(false)))), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(883.205), mix(float(_GLF_IDENTITY(_GLF_FUZZED(883.205), clamp(_GLF_IDENTITY(_GLF_FUZZED(883.205), clamp(_GLF_FUZZED(883.205), _GLF_FUZZED(883.205), _GLF_FUZZED(883.205))), _GLF_FUZZED(883.205), _GLF_FUZZED(883.205)))), float(_GLF_FUZZED(-5.6)), bool(false)))), float(injectionSwitch.x), bool(true))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(883.205)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) || false)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) | (4))) + 0), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, (64) + 0), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(float(76203u)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[0], ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))[0]) / 1.0), _GLF_FUZZED(2.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-253.553)), float(injectionSwitch.y), bool(true))), 0.0, 1.0, 1.0, 1.0, 1.0)), mix(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-253.553), mix(float(_GLF_FUZZED(-253.553)), float(_GLF_FUZZED(398.876)), bool(false)))), _GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-6092.8373)), float(float(injectionSwitch.y)), bool(true))), float(injectionSwitch.y))), bool(true))), 0.0, 1.0, 1.0, 1.0, 1.0))), float(_GLF_FUZZED(-643.352)), bool(false)))))) && _GLF_IDENTITY((false), false || ((false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))), bool(bvec4(! (false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) && true)), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (false)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((false), bool(bvec3((false), true, true))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + tan(vec2(0.0, 0.0))).y))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid))), read_1)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) << 0), 0, 0)) ^ (1)) == read_2) + 1, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(383.024, -6.2, 14.39, -711.850, 610.360, 9.8, 9053.1840, -9.0, 7572.5884, 7.9, 80.97, 359.488))))), mix(float(_GLF_FUZZED(5487.8731)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(383.024, -6.2, 14.39, -711.850, 610.360, 9.8, 9053.1840, -9.0, 7572.5884, 7.9, 80.97, 359.488)))))), bool(true)))))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, _GLF_IDENTITY(true, (true) || false))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-408.491)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-9139.3241, -396.759, -2.5).g)), float(injectionSwitch.y), bool(true)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-9139.3241, -396.759, -2.5).g)), float(injectionSwitch.y), bool(true)))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-9139.3241, -396.759, -2.5).g)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), bool(true)))), (true ? min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(-9139.3241, -396.759, -2.5).g)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat2x4(false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), false ? _GLF_FUZZED(vec2(-3.2, -48.06)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).y), bool(true)))) : _GLF_FUZZED(-739.173)))))))) && true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(atan(vec2(95.22, 1.8)))))).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(atan(vec2(95.22, 1.8)))))).y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(atan(vec2(95.22, 1.8)))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(atan(vec2(95.22, 1.8)))))).y)))) && true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(atan(vec2(95.22, 1.8)))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(atan(vec2(95.22, 1.8)))))).y)))) && true), true), false, false)))))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-608.289) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.4, -768.833)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y) + 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) + 0.0)), float(_GLF_FUZZED(-4267.9072)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), false, true, false))))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), false, false, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), false, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, float(mat2x4((injectionSwitch.y) + 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), (round(length(normalize(vec3(1.0, 1.0, 1.0))))) * 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + 0.0), false, true, _GLF_IDENTITY(false, ! (! (false))))))))), false, false, false)))))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) && true))) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(9.9, clamp(_GLF_IDENTITY(9.9, (_GLF_IDENTITY(9.9, max(9.9, 9.9))) / 1.0), _GLF_IDENTITY(9.9, min(9.9, 9.9)), 9.9))))), 0.0, 1.0, 1.0, 0.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0))))).y, (injectionSwitch.y) + 0.0)) - sin(0.0))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], injectionSwitch[1])), cos(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4485.3966) : 1.0)))), max(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 0.0)), max(_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], injectionSwitch[1])), cos(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4485.3966) : 1.0)))), max(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 0.0)), (false ? _GLF_FUZZED((mat4x2(-4562.0862, -6129.0743, -95.50, 52.09, 26.97, 17.24, -2742.1082, -799.165) * vec4(-24.08, 52.49, 1119.7469, -8.5))) : vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], injectionSwitch[1])), cos(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4485.3966) : 1.0)))), max(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 0.0)))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], injectionSwitch[1])), cos(_GLF_ZERO(0.0, injectionSwitch.x)), determinant(mat4(1.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4485.3966) : 1.0)))), max(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 1.0, 0.0))))).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))), false, false), true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(5.6, max(5.6, _GLF_IDENTITY(5.6, (true ? 5.6 : _GLF_FUZZED(log2(6.6)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - determinant(mat4(0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), false, true))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, false)), true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))))))))))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec2(false, false))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false))))), false, true))))))), false)), true)))))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), true && (bool(bvec2(bool(bvec2(false, false)), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), true && (bool(bvec2(bool(bvec2(false, false)), false))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(bool(bvec2(false, false)), false)), true && (bool(bvec2(bool(bvec2(false, false)), false))))), true)))))), (bool(bvec2(false, false))) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), true)))))))))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false))))))))), false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true))))))), false)), true)))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false || ((! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))))) || false), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true)))))), false || (bool(bool(false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (bool(bool(false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)) && true), ! (! (_GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), false), bvec2(bvec3(bvec2(false, false), true)))))))), false || (bool(bool(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))))))))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)) || (false)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false, false))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false))))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false))))), false, true))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), true, false, false))) || false))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (false)))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), false || (! (false)))))), bool(_GLF_IDENTITY(bool((! ((_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bvec2(bool((! ((_GLF_IDENTITY(! (false), false || (! (false))))))), false))))))), bool(bvec2(false, false))), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), false, true))))), false)))))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true)))))), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), false)))), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true)))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), false)), true)))))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) || false)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(60.08)), vec2(_GLF_FUZZED(-2897.6566), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) && true))), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, true, true)))), false || (false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (float(_GLF_FUZZED(48.07))) * 1.0)) - 0.0), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (float(_GLF_FUZZED(48.07))) * 1.0)) - 0.0), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (float(_GLF_FUZZED(48.07))) * 1.0)) - 0.0), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (_GLF_IDENTITY(float(_GLF_FUZZED(48.07)), (float(_GLF_FUZZED(48.07))) * 1.0)) - 0.0), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
