#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), uint(uvec4(~ (gl_NumWorkGroups.x), 1u, 1u, 0u)))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))), 0u ^ ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))))), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec2(gl_WorkGroupID.x, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))))))))), clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), _GLF_IDENTITY(0u ^ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)))), clamp(0u ^ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))), 0u ^ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)))), 0u ^ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x))), (false ? _GLF_FUZZED(uint(-127.829)) : (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x))), (false ? _GLF_FUZZED(uint(-127.829)) : (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x)))))) << 0u), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x))), (false ? _GLF_FUZZED(uint(-127.829)) : (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x))), (false ? _GLF_FUZZED(uint(-127.829)) : (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (1u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | _GLF_IDENTITY((gl_WorkGroupID.x), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (~ ((gl_WorkGroupID.x))) << 0u)))), gl_WorkGroupID.x)))))) << 0u)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (gl_WorkGroupID.x)), gl_WorkGroupID.x))))) >> 0u));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)), _GLF_IDENTITY((clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) - (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), (~ (uint(7u))) | (~ (uint(7u)))))))), ((clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) - (_GLF_IDENTITY(0u, min(0u, 0u)) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (_GLF_IDENTITY(~ (uint(7u)), (~ (uint(7u))) | (~ (uint(7u))))))))) / 1u)) ^ 0u))), ~ (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY((clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u, ((subgroup_local_id) + 0u) ^ 0u)))), min((clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u, ((subgroup_local_id) + 0u) ^ 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u, ((subgroup_local_id) + 0u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u, ((subgroup_local_id) + 0u) ^ 0u)))))), (clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) + 0u, (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))) + 0u) ^ 0u)))))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(((clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, false, true, false)), true && (bool(bvec4(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), false, true, false)))))) && true)))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) * _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) : subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), ~ (_GLF_IDENTITY(~ (((clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9546.1992))))))) || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, max((subgroup_local_id) + 0u, (subgroup_local_id) + 0u))))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), (false ? _GLF_FUZZED(workgroup_size) : ~ (((clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9546.1992))), (false ? _GLF_FUZZED(8.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9546.1992))), (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-9546.1992)))) / 1.0))))))) || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, max((subgroup_local_id) + 0u, (subgroup_local_id) + 0u))))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))))) ^ 0u))))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(0u + (workgroup_base), (0u + (workgroup_base)) | (0u + (workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) | (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), max(uint(_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) | (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), uint(_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u), (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)) | (uvec3(workgroup_base, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))))))), (0u + (workgroup_base)) | (0u + (workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), _GLF_IDENTITY(0u + _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), _GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))))), (0u + (workgroup_base)) | (0u + (workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u ^ (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))) << 0u), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))) ^ (56430u & 0u))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)) + _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-24167) : _GLF_IDENTITY((4), ((4)) - 0)))), (4) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(4, max(4, 4)))), (4) + 0)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(64, 0 | (64))) << 0)) << 0), 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (1) << 0)), 4, 64, 4);
  }
 else
  {
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << 0))) < subgroup_size)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, (4) << 0), 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), (read_2) | 0u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u))))))), (bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u)))))))) || false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))) || false)), ! (! (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))) | ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))))) == read_2, bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (bool(bool(read_1 + 1 == read_2))), true && (! (bool(bool(read_1 + 1 == read_2))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))) | (read_1 + 1)) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) || false, _GLF_IDENTITY(bool(bvec2((read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) || false, true)), (bool(bvec2((read_1 + 1 == read_2) || false, true))) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))) || false)))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bvec3(bool(bool(read_1 + 1 == read_2)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bvec3(bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))))))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))), bool(bvec3(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, _GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u))) + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_IDENTITY(false, false || (false)), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), false))))))), (read_1 + 1 == read_2) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))) && true), _GLF_IDENTITY(true, ! (! (true))), true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! _GLF_IDENTITY((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))), ! (! ((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) >> 0u) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), min(max(read_1, read_1), max(read_1, read_1)))) + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, true)))))))), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), ! (! (bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)))))) || false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0))))), 0 | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0)))))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false)))))), (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, max(1, 1))) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)) == read_2) || false))), false, true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)), _GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), false || (bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true && (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))))), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, int(int(1))) == read_2)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), false, false, true))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), true && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(8), int(8)))) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2)), bool(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(-56.10)))) > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u)))) ^ 0u), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))), bool(_GLF_IDENTITY(bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))))), (bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false))))))) && true))), false || (! (bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), bool(bvec2(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), true))), false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), bool(bvec4(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), true, true, true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) / 1u))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))), ~ (_GLF_IDENTITY(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid)))), (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))))) / 1u)))) + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u)) | 0u) == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false)), (bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (bool(read_1 + 1 == read_2))))))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))) && true)), false)))))))))))))))) && true))) + _GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), (read_2) | 0u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u))))))), (bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u)))))))) || false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))) || false)), ! (! (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))) | ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))))) == read_2, bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (bool(bool(read_1 + 1 == read_2))), true && (! (bool(bool(read_1 + 1 == read_2))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))) | (read_1 + 1)) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) || false, _GLF_IDENTITY(bool(bvec2((read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) || false, true)), (bool(bvec2((read_1 + 1 == read_2) || false, true))) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))) || false)))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bvec3(bool(bool(read_1 + 1 == read_2)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bvec3(bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))))))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))), bool(bvec3(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, _GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u))) + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_IDENTITY(false, false || (false)), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), false))))))), (read_1 + 1 == read_2) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))) && true), _GLF_IDENTITY(true, ! (! (true))), true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! _GLF_IDENTITY((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))), ! (! ((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) >> 0u) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), min(max(read_1, read_1), max(read_1, read_1)))) + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, true)))))))), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), ! (! (bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)))))) || false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0))))), 0 | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0)))))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false)))))), (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, max(1, 1))) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)) == read_2) || false))), false, true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)), _GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), false || (bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true && (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))))), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, int(int(1))) == read_2)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), false, false, true))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), true && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(8), int(8)))) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2)), bool(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(-56.10)))) > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u)))) ^ 0u), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))), bool(_GLF_IDENTITY(bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))))), (bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false))))))) && true))), false || (! (bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), bool(bvec2(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), true))), false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), bool(bvec4(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), true, true, true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) / 1u))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))), ~ (_GLF_IDENTITY(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid)))), (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))))) / 1u)))) + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u)) | 0u) == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false)), (bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (bool(read_1 + 1 == read_2))))))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))) && true)), false)))))))))))))))) && true))) + _GLF_IDENTITY(1, (1) + 0), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), (read_2) | 0u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u))))))), (bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u)))))))) || false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))) || false)), ! (! (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))) | ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))))) == read_2, bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (bool(bool(read_1 + 1 == read_2))), true && (! (bool(bool(read_1 + 1 == read_2))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))) | (read_1 + 1)) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) || false, _GLF_IDENTITY(bool(bvec2((read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) || false, true)), (bool(bvec2((read_1 + 1 == read_2) || false, true))) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))) || false)))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bvec3(bool(bool(read_1 + 1 == read_2)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bvec3(bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))))))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))), bool(bvec3(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, _GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u))) + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_IDENTITY(false, false || (false)), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), false))))))), (read_1 + 1 == read_2) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))) && true), _GLF_IDENTITY(true, ! (! (true))), true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! _GLF_IDENTITY((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))), ! (! ((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) >> 0u) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), min(max(read_1, read_1), max(read_1, read_1)))) + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, true)))))))), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), ! (! (bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)))))) || false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0))))), 0 | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0)))))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false)))))), (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, max(1, 1))) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)) == read_2) || false))), false, true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)), _GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), false || (bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true && (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))))), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, int(int(1))) == read_2)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), false, false, true))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), true && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(8), int(8)))) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2)), bool(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(-56.10)))) > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u)))) ^ 0u), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))), bool(_GLF_IDENTITY(bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))))), (bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false))))))) && true))), false || (! (bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), bool(bvec2(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), true))), false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), bool(bvec4(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), true, true, true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) / 1u))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))), ~ (_GLF_IDENTITY(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid)))), (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))))) / 1u)))) + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u)) | 0u) == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false)), (bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (bool(read_1 + 1 == read_2))))))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))) && true)), false)))))))))))))))) && true))) + _GLF_IDENTITY(1, (1) + 0)) | (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) - 0u), (read_2) | 0u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u))))))), (bool(bool(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), _GLF_IDENTITY(~ (read_2), (~ (read_2)) | 0u)))))))) || false)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) / 1u), bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))) == read_2) || false)))), bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2)))))))))) || false)), ! (! (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))) | ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1))))))) == read_2, bool(bool(read_1 + 1 == read_2))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1)), (read_1 + 1) | (read_1 + 1))))) == read_2, bool(bool(read_1 + 1 == read_2))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (bool(bool(read_1 + 1 == read_2))), true && (! (bool(bool(read_1 + 1 == read_2))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))) | (read_1 + 1)) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2) || false, _GLF_IDENTITY(bool(bvec2((read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) || false, true)), (bool(bvec2((read_1 + 1 == read_2) || false, true))) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))) || false)))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bvec3(bool(bool(read_1 + 1 == read_2)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bvec3(bvec3(bvec3(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true))))))))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))), bool(bvec3(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, _GLF_IDENTITY(read_1, (read_1) >> 0u))) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), false || ((_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) / 1u))) + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_IDENTITY(false, false || (false)), true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))))), false))))))), (read_1 + 1 == read_2) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))) && true), _GLF_IDENTITY(true, ! (! (true))), true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, true))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), ! (! _GLF_IDENTITY((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))), ! (! ((((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), bool(bvec3(_GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! ((read_1 + 1 == read_2))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, ~ (~ (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)))))) >> 0u) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) - 0) == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), min(max(read_1, read_1), max(read_1, read_1)))) + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bvec3(! (read_1 + 1 == read_2), true, true)))))))), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), (_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)), ! (! (bool(bvec4((! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))), (_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2))))))) && true))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))), false, false, true)))))) || false)))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0))))), 0 | ((~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-91967), (true ? 1 : _GLF_FUZZED(-91967)) ^ 0)))))))))))) == read_2)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false)))))), (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, max(1, 1))) >> 0u) == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), (read_1 + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)) == read_2) || false))), false, true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) + 1 == read_2)), _GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)), false || (bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true && (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))))), false, true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))))))), (! (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(read_2)), (_GLF_IDENTITY(uint(uint(read_2)), max(uint(uint(read_2)), uint(uint(read_2))))) ^ 0u))) && true), true, true), true))))), (read_1 + 1 == read_2) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + _GLF_IDENTITY(1, int(int(1))) == read_2)), _GLF_IDENTITY(false, ! (! (false))), true))))))), ! (! (((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), true, true), true))))), (read_1 + 1 == read_2) || false)))), false, false, true))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))) && true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), true && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(8), int(8)))) == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, (read_1 + 1 == read_2) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), false || (_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))), true && ((_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec2(bool(read_1 + 1 == read_2), true)))))))))))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true)))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) * 1u) == read_2)), bool(_GLF_IDENTITY(bool(bool(bool(read_1 + 1 == read_2))), ! (! (bool(bool(bool(read_1 + 1 == read_2)))))))), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) : _GLF_FUZZED(-56.10)))) > injectionSwitch.y)))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u))), (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) * 1u)))) ^ 0u), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, (read_1) ^ 0u) + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))), bool(_GLF_IDENTITY(bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2))))))), (bool(! (bool(bool(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))) == read_2, ! (! (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967))))) + 0), ~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))), 0 | (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-91967)))))))))))) == read_2)))))))) && true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)), false))))))) && true))), false || (! (bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(_GLF_IDENTITY(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), bool(bvec2(bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), true))), false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), bool(bvec4(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (! (bool(bvec4(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), true, true, true))), true && (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, true))))))), false || (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) / 1u))) + 1 == read_2) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))), ~ (_GLF_IDENTITY(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid)))), (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED((num_workgroup >> virtual_gid))))) / 1u)))) + 1 == read_2)), bool(bvec3(bool(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u)) | 0u) == read_2)), false, true)))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false)), (bool(bvec2(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) | (read_2))))))))))), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(bool(read_1 + 1 == read_2)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), ! (! (bool(read_1 + 1 == read_2))))))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (! (! (_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bool(read_1 + 1 == read_2)), bool(bvec3(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), true && (bool(read_1 + 1 == read_2)))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))))) && true)), false)))))))))))))))) && true))) + _GLF_IDENTITY(1, (1) + 0)))) / 1u), 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY(0, 0 ^ (0)) | _GLF_IDENTITY((4), ((4)) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) * 1), 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-25576))), _GLF_IDENTITY(0, (0) << 0)))) ^ (4))) * 1))))));
   subgroupAll(true);
  }
}
