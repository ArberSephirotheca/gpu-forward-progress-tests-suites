#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 51:
     case 14:
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
     subgroupAll(false);
     break;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) * 1)))
    {
     case 63:
     if(false)
      {
       if(true)
        {
         {
          mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
          (ivec4(41896, -92149, 66302, 55642) , _GLF_SWITCH_1_0v);
          ((uvec3(63615u, 95618u, 81328u) - uvec3(37192u, 74074u, 172892u)));
          mat4x3(-32.55, 6.2, 2.4, 32.55, -4.0, -55.78, -6.6, -4.4, 969.227, 8.3, -9611.5009, -13.38);
          ;
          mat2(-8228.8033, -2.7, -5709.9910, 8.8);
         }
         for(mat2 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v; true; workgroup_base)
          {
           inversesqrt(vec4(-290.427, 2156.2672, -2843.1816, -6408.2166));
           -6.8;
           ivec2 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v;
          }
         {
          (smoothstep(9136.4302, -94.40, 0.1) - mat4x3(-2495.1990, 59.41, -846.667, 12.83, -185.448, -1.2, -4654.8851, -32.76, -4341.5282, 67.45, 849.994, 95.36));
         }
         mat4x3 _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v;
        }
       else
        {
         for(vec4 _GLF_SWITCH_1_10v[48], _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v; (ivec2(-93663, 56918) != ivec2(14026, -42318)); (- mat3(-7.7, -4.5, -7307.3013, 7148.6723, 6234.8412, -63.90, 9.5, -4.5, 30.27)))
          {
           mat3x2 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v[95], _GLF_SWITCH_1_15v[70];
           lessThanEqual(vec4(-5.0, -7.0, -79.18, -16.09), _GLF_SWITCH_1_11v);
           ;
           mat4(mat3x4(69.39, -4.7, -7450.4036, 88.30, 3385.4207, -12.31, -4797.8835, 2.0, 1.4, -534.004, -5218.2859, 4.0));
           ;
           ivec3 _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v[26];
           mat3 _GLF_SWITCH_1_19v[19], _GLF_SWITCH_1_20v;
           ;
          }
         ;
         ivec3 _GLF_SWITCH_1_21v, _GLF_SWITCH_1_22v;
         while(any(greaterThanEqual(vec4(92.29, -35.86, 38.27, 660.841), vec4(857.539, 7.9, -9.3, 2.6))))
          {
           virtual_gid;
           mat3x2 _GLF_SWITCH_1_23v;
           max(_GLF_SWITCH_1_22v, ivec3(10632, -84689, 12489));
          }
         if((num_workgroup != subgroup_size))
          {
           vec3(650.183, 6228.1784, -2.6);
           bvec4 _GLF_SWITCH_1_24v;
           mat4x3(mat2(3.0, 725.710, -26.03, 2.1));
           -59711;
           bvec4(bvec2(true, false), bvec2(true, true));
           mat2x4(mat3(mat2(-5363.6091, 12.66, 7.5, -170.343)));
           ivec4(9340, -49214, 72681, -41118);
           ;
           mat3(vec3(-6.7, -2.7, -1088.0388), vec3(-11.98, 0.8, -145.787), vec3(96.25, 515.835, -3.0));
          }
         {
          mat3(-628.256, -55.69, 1.2, -6.8, -1.2, 0.5, -9546.4891, -43.57, 5.4);
          float _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v[94];
          mat3 _GLF_SWITCH_1_27v;
          bvec2(false, true);
          bool _GLF_SWITCH_1_28v[8], _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v;
          10308;
          mat2x3 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v;
         }
         if(true)
          {
           mat2x3(-2.1, -8.1, 66.09, -693.350, -2.8, 4.5);
           mat4x3 _GLF_SWITCH_1_33v[13];
           mat3x4 _GLF_SWITCH_1_34v;
           mat2x4(-7.9, -8630.0265, 78.54, 352.723, -5.8, 8642.8148, -4.5, -4.5);
           mat3 _GLF_SWITCH_1_35v[4], _GLF_SWITCH_1_36v[2];
           transpose(mat2(-1.0, 2321.8150, -46.65, 7.3));
          }
         else
          {
           mat3x2 _GLF_SWITCH_1_37v, _GLF_SWITCH_1_38v;
           bvec2(true, false);
           (40464 << 54106);
           mat2x4(98.54, -5915.9193, -30.24, -5967.6582, -550.349, -3.7, 2.7, -8.1);
           mat2 _GLF_SWITCH_1_39v[20], _GLF_SWITCH_1_40v[60], _GLF_SWITCH_1_41v[98];
           (ivec2(-65011, -72302) % findLSB(sign(17754)));
          }
         ivec4(85419, 80439, 24965, 17326);
        }
       ;
       ;
       while((mat2x4(221.746, -9.6, 6.1, -2636.4338, -27.45, 2.2, -1.7, -97.95) != mat2x4(-88.47, 2.8, -8796.9821, -691.856, -6959.0577, -4739.4739, 884.521, 1955.6214)))
        {
         mat2x4 _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v;
         while(false)
          {
           vec3(98.79, -698.163, -902.660);
           ivec4 _GLF_SWITCH_1_44v, _GLF_SWITCH_1_45v, _GLF_SWITCH_1_46v[59];
           bvec3 _GLF_SWITCH_1_47v[47], _GLF_SWITCH_1_48v;
           bvec3 _GLF_SWITCH_1_49v[20], _GLF_SWITCH_1_50v, _GLF_SWITCH_1_51v;
           mat3(-264.946, 38.32, 598.186, 53.67, -6.4, -3613.6853, -2717.7132, 23.34, -4.4);
           (- (ivec2(-25548, 12401) ^ ivec2(-63390, 48511)));
           bvec2 _GLF_SWITCH_1_52v[37], _GLF_SWITCH_1_53v;
           greaterThan(ivec3(-58400, -44183, -47180), ivec3(-85819, -24972, -47619));
          }
        }
       min(uvec4(10972u, 32232u, 165995u, 84453u), clamp(uvec4(198653u, 137841u, 176143u, 117159u), workgroup_id, read_1));
      }
     else
      {
       {
        (workgroup_size + uvec2(176316u, 38909u));
        while((mat4(-2.8, -100.643, -152.532, 14.51, -5.3, -39.05, -51.85, -7028.9062, -879.413, -2239.5883, -28.65, -3.5, 4.4, -5.6, -4.2, 3069.7506) == mat4(3.3, -4.5, 6.8, 782.808, -2.5, -4.4, 749.351, -2.4, 79.10, 92.41, -846.300, -3.7, -6.6, 4.6, -28.93, -50.37)))
         {
          ;
          vec3 _GLF_SWITCH_1_54v, _GLF_SWITCH_1_55v, _GLF_SWITCH_1_56v;
          mat3(-2.7, 5503.6975, -0.5, -22.96, 1.2, -160.400, -72.90, 7.7, -7.7);
         }
       }
       while(bool(clamp(-4.2, 2.2, 1464.8911)))
        {
        }
       bvec4 _GLF_SWITCH_1_57v[37], _GLF_SWITCH_1_58v[80], _GLF_SWITCH_1_59v;
       (vec4(-47.65, -7019.6413, -43.49, -853.725) * mat4(5366.1832, 7050.6081, 6.5, -60.83, 5000.2590, 453.709, -535.966, 43.70, 225.444, -34.75, -144.790, -2.6, 1.9, 549.603, -4.8, 3.4));
       {
        ivec3(-71595, -65935, 97826);
        ;
        subgroup_size;
       }
      }
     case 0:
     case 90:
     case 51:
     case 27:
     case 19:
     case 75:
     case 12:
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
     case 10:
     case 65:
     subgroupAll(true);
     break;
     case 33:
     uvec3(107614u, 75510u, 75433u);
     default:
     1;
    }
  }
}
